{"version":3,"file":"index.js","sources":["../webpack://aws-lambda-update-action/./build/action.js","../webpack://aws-lambda-update-action/./node_modules/@actions/core/lib/command.js","../webpack://aws-lambda-update-action/./node_modules/@actions/core/lib/core.js","../webpack://aws-lambda-update-action/./node_modules/@actions/core/lib/file-command.js","../webpack://aws-lambda-update-action/./node_modules/@actions/core/lib/utils.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-lambda/dist/cjs/Lambda.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-lambda/dist/cjs/LambdaClient.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-lambda/dist/cjs/commands/AddLayerVersionPermissionCommand.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-lambda/dist/cjs/commands/AddPermissionCommand.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-lambda/dist/cjs/commands/CreateAliasCommand.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-lambda/dist/cjs/commands/CreateCodeSigningConfigCommand.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-lambda/dist/cjs/commands/CreateEventSourceMappingCommand.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-lambda/dist/cjs/commands/CreateFunctionCommand.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-lambda/dist/cjs/commands/DeleteAliasCommand.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-lambda/dist/cjs/commands/DeleteCodeSigningConfigCommand.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-lambda/dist/cjs/commands/DeleteEventSourceMappingCommand.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-lambda/dist/cjs/commands/DeleteFunctionCodeSigningConfigCommand.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-lambda/dist/cjs/commands/DeleteFunctionCommand.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-lambda/dist/cjs/commands/DeleteFunctionConcurrencyCommand.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-lambda/dist/cjs/commands/DeleteFunctionEventInvokeConfigCommand.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-lambda/dist/cjs/commands/DeleteLayerVersionCommand.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-lambda/dist/cjs/commands/DeleteProvisionedConcurrencyConfigCommand.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-lambda/dist/cjs/commands/GetAccountSettingsCommand.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-lambda/dist/cjs/commands/GetAliasCommand.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-lambda/dist/cjs/commands/GetCodeSigningConfigCommand.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-lambda/dist/cjs/commands/GetEventSourceMappingCommand.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-lambda/dist/cjs/commands/GetFunctionCodeSigningConfigCommand.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-lambda/dist/cjs/commands/GetFunctionCommand.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-lambda/dist/cjs/commands/GetFunctionConcurrencyCommand.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-lambda/dist/cjs/commands/GetFunctionConfigurationCommand.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-lambda/dist/cjs/commands/GetFunctionEventInvokeConfigCommand.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-lambda/dist/cjs/commands/GetLayerVersionByArnCommand.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-lambda/dist/cjs/commands/GetLayerVersionCommand.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-lambda/dist/cjs/commands/GetLayerVersionPolicyCommand.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-lambda/dist/cjs/commands/GetPolicyCommand.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-lambda/dist/cjs/commands/GetProvisionedConcurrencyConfigCommand.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-lambda/dist/cjs/commands/InvokeAsyncCommand.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-lambda/dist/cjs/commands/InvokeCommand.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-lambda/dist/cjs/commands/ListAliasesCommand.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-lambda/dist/cjs/commands/ListCodeSigningConfigsCommand.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-lambda/dist/cjs/commands/ListEventSourceMappingsCommand.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-lambda/dist/cjs/commands/ListFunctionEventInvokeConfigsCommand.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-lambda/dist/cjs/commands/ListFunctionsByCodeSigningConfigCommand.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-lambda/dist/cjs/commands/ListFunctionsCommand.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-lambda/dist/cjs/commands/ListLayerVersionsCommand.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-lambda/dist/cjs/commands/ListLayersCommand.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-lambda/dist/cjs/commands/ListProvisionedConcurrencyConfigsCommand.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-lambda/dist/cjs/commands/ListTagsCommand.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-lambda/dist/cjs/commands/ListVersionsByFunctionCommand.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-lambda/dist/cjs/commands/PublishLayerVersionCommand.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-lambda/dist/cjs/commands/PublishVersionCommand.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-lambda/dist/cjs/commands/PutFunctionCodeSigningConfigCommand.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-lambda/dist/cjs/commands/PutFunctionConcurrencyCommand.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-lambda/dist/cjs/commands/PutFunctionEventInvokeConfigCommand.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-lambda/dist/cjs/commands/PutProvisionedConcurrencyConfigCommand.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-lambda/dist/cjs/commands/RemoveLayerVersionPermissionCommand.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-lambda/dist/cjs/commands/RemovePermissionCommand.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-lambda/dist/cjs/commands/TagResourceCommand.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-lambda/dist/cjs/commands/UntagResourceCommand.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-lambda/dist/cjs/commands/UpdateAliasCommand.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-lambda/dist/cjs/commands/UpdateCodeSigningConfigCommand.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-lambda/dist/cjs/commands/UpdateEventSourceMappingCommand.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-lambda/dist/cjs/commands/UpdateFunctionCodeCommand.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-lambda/dist/cjs/commands/UpdateFunctionConfigurationCommand.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-lambda/dist/cjs/commands/UpdateFunctionEventInvokeConfigCommand.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-lambda/dist/cjs/endpoints.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-lambda/dist/cjs/index.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-lambda/dist/cjs/models/index.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-lambda/dist/cjs/models/models_0.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-lambda/dist/cjs/pagination/Interfaces.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-lambda/dist/cjs/pagination/ListAliasesPaginator.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-lambda/dist/cjs/pagination/ListCodeSigningConfigsPaginator.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-lambda/dist/cjs/pagination/ListEventSourceMappingsPaginator.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-lambda/dist/cjs/pagination/ListFunctionEventInvokeConfigsPaginator.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-lambda/dist/cjs/pagination/ListFunctionsByCodeSigningConfigPaginator.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-lambda/dist/cjs/pagination/ListFunctionsPaginator.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-lambda/dist/cjs/pagination/ListLayerVersionsPaginator.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-lambda/dist/cjs/pagination/ListLayersPaginator.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-lambda/dist/cjs/pagination/ListProvisionedConcurrencyConfigsPaginator.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-lambda/dist/cjs/pagination/ListVersionsByFunctionPaginator.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-lambda/dist/cjs/protocols/Aws_restJson1.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-lambda/dist/cjs/runtimeConfig.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-lambda/dist/cjs/runtimeConfig.shared.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-lambda/dist/cjs/waiters/waitForFunctionActive.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-lambda/dist/cjs/waiters/waitForFunctionExists.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-lambda/dist/cjs/waiters/waitForFunctionUpdated.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-sso/dist/cjs/SSO.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-sso/dist/cjs/SSOClient.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-sso/dist/cjs/commands/GetRoleCredentialsCommand.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-sso/dist/cjs/commands/ListAccountRolesCommand.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-sso/dist/cjs/commands/ListAccountsCommand.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-sso/dist/cjs/commands/LogoutCommand.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-sso/dist/cjs/endpoints.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-sso/dist/cjs/index.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-sso/dist/cjs/models/index.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-sso/dist/cjs/models/models_0.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-sso/dist/cjs/pagination/Interfaces.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-sso/dist/cjs/pagination/ListAccountRolesPaginator.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-sso/dist/cjs/pagination/ListAccountsPaginator.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-sso/dist/cjs/protocols/Aws_restJson1.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-sso/dist/cjs/runtimeConfig.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-sso/dist/cjs/runtimeConfig.shared.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-sts/dist/cjs/STS.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-sts/dist/cjs/STSClient.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-sts/dist/cjs/commands/AssumeRoleCommand.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-sts/dist/cjs/commands/AssumeRoleWithSAMLCommand.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-sts/dist/cjs/commands/AssumeRoleWithWebIdentityCommand.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-sts/dist/cjs/commands/DecodeAuthorizationMessageCommand.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-sts/dist/cjs/commands/GetAccessKeyInfoCommand.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-sts/dist/cjs/commands/GetCallerIdentityCommand.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-sts/dist/cjs/commands/GetFederationTokenCommand.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-sts/dist/cjs/commands/GetSessionTokenCommand.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-sts/dist/cjs/defaultRoleAssumers.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-sts/dist/cjs/defaultStsRoleAssumers.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-sts/dist/cjs/endpoints.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-sts/dist/cjs/index.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-sts/dist/cjs/models/index.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-sts/dist/cjs/models/models_0.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-sts/dist/cjs/protocols/Aws_query.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-sts/dist/cjs/runtimeConfig.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/client-sts/dist/cjs/runtimeConfig.shared.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/config-resolver/dist/cjs/endpointsConfig/index.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/config-resolver/dist/cjs/endpointsConfig/resolveCustomEndpointsConfig.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/config-resolver/dist/cjs/endpointsConfig/resolveEndpointsConfig.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/config-resolver/dist/cjs/endpointsConfig/utils/getEndpointFromRegion.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/config-resolver/dist/cjs/endpointsConfig/utils/normalizeEndpoint.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/config-resolver/dist/cjs/index.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/config-resolver/dist/cjs/regionConfig/config.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/config-resolver/dist/cjs/regionConfig/index.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/config-resolver/dist/cjs/regionConfig/normalizeRegion.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/config-resolver/dist/cjs/regionConfig/resolveRegionConfig.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/config-resolver/dist/cjs/regionInfo/getHostnameTemplate.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/config-resolver/dist/cjs/regionInfo/getRegionInfo.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/config-resolver/dist/cjs/regionInfo/getResolvedHostname.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/config-resolver/dist/cjs/regionInfo/getResolvedPartition.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/config-resolver/dist/cjs/regionInfo/index.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/credential-provider-env/dist/cjs/index.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/credential-provider-imds/dist/cjs/config/Endpoint.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/credential-provider-imds/dist/cjs/config/EndpointConfigOptions.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/credential-provider-imds/dist/cjs/config/EndpointMode.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/credential-provider-imds/dist/cjs/config/EndpointModeConfigOptions.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/credential-provider-imds/dist/cjs/fromContainerMetadata.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/credential-provider-imds/dist/cjs/fromInstanceMetadata.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/credential-provider-imds/dist/cjs/index.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/credential-provider-imds/dist/cjs/remoteProvider/ImdsCredentials.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/credential-provider-imds/dist/cjs/remoteProvider/RemoteProviderInit.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/credential-provider-imds/dist/cjs/remoteProvider/httpRequest.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/credential-provider-imds/dist/cjs/remoteProvider/retry.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/credential-provider-imds/dist/cjs/utils/getInstanceMetadataEndpoint.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/credential-provider-ini/dist/cjs/index.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/credential-provider-node/dist/cjs/index.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/credential-provider-process/dist/cjs/index.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/credential-provider-sso/dist/cjs/index.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/credential-provider-web-identity/dist/cjs/fromTokenFile.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/credential-provider-web-identity/dist/cjs/fromWebToken.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/credential-provider-web-identity/dist/cjs/index.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/hash-node/dist/cjs/index.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/is-array-buffer/dist/cjs/index.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/middleware-content-length/dist/cjs/index.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/middleware-host-header/dist/cjs/index.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/middleware-logger/dist/cjs/index.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/middleware-logger/dist/cjs/loggerMiddleware.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/middleware-retry/dist/cjs/AdaptiveRetryStrategy.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/middleware-retry/dist/cjs/DefaultRateLimiter.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/middleware-retry/dist/cjs/StandardRetryStrategy.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/middleware-retry/dist/cjs/config.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/middleware-retry/dist/cjs/configurations.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/middleware-retry/dist/cjs/constants.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/middleware-retry/dist/cjs/defaultRetryQuota.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/middleware-retry/dist/cjs/delayDecider.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/middleware-retry/dist/cjs/index.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/middleware-retry/dist/cjs/omitRetryHeadersMiddleware.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/middleware-retry/dist/cjs/retryDecider.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/middleware-retry/dist/cjs/retryMiddleware.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/middleware-retry/dist/cjs/types.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/middleware-sdk-sts/dist/cjs/index.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/middleware-serde/dist/cjs/deserializerMiddleware.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/middleware-serde/dist/cjs/index.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/middleware-serde/dist/cjs/serdePlugin.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/middleware-serde/dist/cjs/serializerMiddleware.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/middleware-signing/dist/cjs/configurations.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/middleware-signing/dist/cjs/index.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/middleware-signing/dist/cjs/middleware.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/middleware-signing/dist/cjs/utils/getSkewCorrectedDate.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/middleware-signing/dist/cjs/utils/getUpdatedSystemClockOffset.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/middleware-signing/dist/cjs/utils/isClockSkewed.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/middleware-stack/dist/cjs/MiddlewareStack.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/middleware-stack/dist/cjs/index.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/middleware-user-agent/dist/cjs/configurations.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/middleware-user-agent/dist/cjs/constants.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/middleware-user-agent/dist/cjs/index.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/middleware-user-agent/dist/cjs/user-agent-middleware.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/node-config-provider/dist/cjs/configLoader.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/node-config-provider/dist/cjs/fromEnv.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/node-config-provider/dist/cjs/fromSharedConfigFiles.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/node-config-provider/dist/cjs/fromStatic.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/node-config-provider/dist/cjs/index.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/node-http-handler/dist/cjs/constants.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/node-http-handler/dist/cjs/get-transformed-headers.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/node-http-handler/dist/cjs/index.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/node-http-handler/dist/cjs/node-http-handler.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/node-http-handler/dist/cjs/node-http2-handler.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/node-http-handler/dist/cjs/set-connection-timeout.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/node-http-handler/dist/cjs/set-socket-timeout.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/node-http-handler/dist/cjs/stream-collector/collector.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/node-http-handler/dist/cjs/stream-collector/index.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/node-http-handler/dist/cjs/write-request-body.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/property-provider/dist/cjs/ProviderError.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/property-provider/dist/cjs/chain.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/property-provider/dist/cjs/fromStatic.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/property-provider/dist/cjs/index.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/property-provider/dist/cjs/memoize.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/protocol-http/dist/cjs/httpHandler.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/protocol-http/dist/cjs/httpRequest.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/protocol-http/dist/cjs/httpResponse.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/protocol-http/dist/cjs/index.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/protocol-http/dist/cjs/isValidHostname.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/querystring-builder/dist/cjs/index.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/querystring-parser/dist/cjs/index.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/service-error-classification/dist/cjs/constants.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/service-error-classification/dist/cjs/index.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/shared-ini-file-loader/dist/cjs/index.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/signature-v4/dist/cjs/SignatureV4.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/signature-v4/dist/cjs/cloneRequest.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/signature-v4/dist/cjs/constants.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/signature-v4/dist/cjs/credentialDerivation.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/signature-v4/dist/cjs/getCanonicalHeaders.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/signature-v4/dist/cjs/getCanonicalQuery.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/signature-v4/dist/cjs/getPayloadHash.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/signature-v4/dist/cjs/headerUtil.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/signature-v4/dist/cjs/index.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/signature-v4/dist/cjs/moveHeadersToQuery.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/signature-v4/dist/cjs/normalizeProvider.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/signature-v4/dist/cjs/prepareRequest.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/signature-v4/dist/cjs/utilDate.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/smithy-client/dist/cjs/client.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/smithy-client/dist/cjs/command.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/smithy-client/dist/cjs/constants.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/smithy-client/dist/cjs/date-utils.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/smithy-client/dist/cjs/emitWarningIfUnsupportedVersion.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/smithy-client/dist/cjs/extended-encode-uri-component.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/smithy-client/dist/cjs/get-array-if-single-item.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/smithy-client/dist/cjs/get-value-from-text-node.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/smithy-client/dist/cjs/index.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/smithy-client/dist/cjs/lazy-json.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/smithy-client/dist/cjs/parse-utils.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/smithy-client/dist/cjs/ser-utils.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/smithy-client/dist/cjs/split-every.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/url-parser/dist/cjs/index.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/util-base64-node/dist/cjs/index.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/util-body-length-node/dist/cjs/index.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/util-buffer-from/dist/cjs/index.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/util-credentials/dist/cjs/index.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/util-hex-encoding/dist/cjs/index.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/util-uri-escape/dist/cjs/escape-uri-path.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/util-uri-escape/dist/cjs/escape-uri.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/util-uri-escape/dist/cjs/index.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/util-user-agent-node/dist/cjs/index.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/util-utf8-node/dist/cjs/index.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/util-waiter/dist/cjs/createWaiter.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/util-waiter/dist/cjs/index.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/util-waiter/dist/cjs/poller.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/util-waiter/dist/cjs/utils/index.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/util-waiter/dist/cjs/utils/sleep.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/util-waiter/dist/cjs/utils/validate.js","../webpack://aws-lambda-update-action/./node_modules/@aws-sdk/util-waiter/dist/cjs/waiter.js","../webpack://aws-lambda-update-action/./node_modules/entities/lib/decode.js","../webpack://aws-lambda-update-action/./node_modules/entities/lib/decode_codepoint.js","../webpack://aws-lambda-update-action/./node_modules/entities/lib/encode.js","../webpack://aws-lambda-update-action/./node_modules/entities/lib/index.js","../webpack://aws-lambda-update-action/./node_modules/fast-xml-parser/src/json2xml.js","../webpack://aws-lambda-update-action/./node_modules/fast-xml-parser/src/nimndata.js","../webpack://aws-lambda-update-action/./node_modules/fast-xml-parser/src/node2json.js","../webpack://aws-lambda-update-action/./node_modules/fast-xml-parser/src/node2json_str.js","../webpack://aws-lambda-update-action/./node_modules/fast-xml-parser/src/parser.js","../webpack://aws-lambda-update-action/./node_modules/fast-xml-parser/src/util.js","../webpack://aws-lambda-update-action/./node_modules/fast-xml-parser/src/validator.js","../webpack://aws-lambda-update-action/./node_modules/fast-xml-parser/src/xmlNode.js","../webpack://aws-lambda-update-action/./node_modules/fast-xml-parser/src/xmlstr2xmlnode.js","../webpack://aws-lambda-update-action/./node_modules/tslib/tslib.js","../webpack://aws-lambda-update-action/./node_modules/uuid/dist/index.js","../webpack://aws-lambda-update-action/./node_modules/uuid/dist/md5.js","../webpack://aws-lambda-update-action/./node_modules/uuid/dist/nil.js","../webpack://aws-lambda-update-action/./node_modules/uuid/dist/parse.js","../webpack://aws-lambda-update-action/./node_modules/uuid/dist/regex.js","../webpack://aws-lambda-update-action/./node_modules/uuid/dist/rng.js","../webpack://aws-lambda-update-action/./node_modules/uuid/dist/sha1.js","../webpack://aws-lambda-update-action/./node_modules/uuid/dist/stringify.js","../webpack://aws-lambda-update-action/./node_modules/uuid/dist/v1.js","../webpack://aws-lambda-update-action/./node_modules/uuid/dist/v3.js","../webpack://aws-lambda-update-action/./node_modules/uuid/dist/v35.js","../webpack://aws-lambda-update-action/./node_modules/uuid/dist/v4.js","../webpack://aws-lambda-update-action/./node_modules/uuid/dist/v5.js","../webpack://aws-lambda-update-action/./node_modules/uuid/dist/validate.js","../webpack://aws-lambda-update-action/./node_modules/uuid/dist/version.js","../webpack://aws-lambda-update-action/external \"buffer\"","../webpack://aws-lambda-update-action/external \"child_process\"","../webpack://aws-lambda-update-action/external \"crypto\"","../webpack://aws-lambda-update-action/external \"fs\"","../webpack://aws-lambda-update-action/external \"http\"","../webpack://aws-lambda-update-action/external \"http2\"","../webpack://aws-lambda-update-action/external \"https\"","../webpack://aws-lambda-update-action/external \"os\"","../webpack://aws-lambda-update-action/external \"path\"","../webpack://aws-lambda-update-action/external \"process\"","../webpack://aws-lambda-update-action/external \"stream\"","../webpack://aws-lambda-update-action/external \"url\"","../webpack://aws-lambda-update-action/external \"util\"","../webpack://aws-lambda-update-action/webpack/bootstrap","../webpack://aws-lambda-update-action/webpack/runtime/compat","../webpack://aws-lambda-update-action/./build/index.js"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Action = void 0;\r\nconst client_lambda_1 = require(\"@aws-sdk/client-lambda\");\r\nclass Action {\r\n    constructor(readFile, updateFunctionCode, log) {\r\n        this.readFile = readFile;\r\n        this.updateFunctionCode = updateFunctionCode;\r\n        this.log = log;\r\n    }\r\n    async run(input) {\r\n        this.log(`Updating ${input.lambdaName}`);\r\n        const zipFile = await this.readFile(input.zipFileLocation);\r\n        const cmd = new client_lambda_1.UpdateFunctionCodeCommand({\r\n            FunctionName: input.lambdaName,\r\n            Publish: input.publish,\r\n            ZipFile: zipFile\r\n        });\r\n        await this.updateFunctionCode(cmd);\r\n        this.log(`Updated ${input.lambdaName}`);\r\n    }\r\n}\r\nexports.Action = Action;\r\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.issue = exports.issueCommand = void 0;\nconst os = __importStar(require(\"os\"));\nconst utils_1 = require(\"./utils\");\n/**\n * Commands\n *\n * Command Format:\n *   ::name key=value,key=value::message\n *\n * Examples:\n *   ::warning::This is the message\n *   ::set-env name=MY_VAR::some value\n */\nfunction issueCommand(command, properties, message) {\n    const cmd = new Command(command, properties, message);\n    process.stdout.write(cmd.toString() + os.EOL);\n}\nexports.issueCommand = issueCommand;\nfunction issue(name, message = '') {\n    issueCommand(name, {}, message);\n}\nexports.issue = issue;\nconst CMD_STRING = '::';\nclass Command {\n    constructor(command, properties, message) {\n        if (!command) {\n            command = 'missing.command';\n        }\n        this.command = command;\n        this.properties = properties;\n        this.message = message;\n    }\n    toString() {\n        let cmdStr = CMD_STRING + this.command;\n        if (this.properties && Object.keys(this.properties).length > 0) {\n            cmdStr += ' ';\n            let first = true;\n            for (const key in this.properties) {\n                if (this.properties.hasOwnProperty(key)) {\n                    const val = this.properties[key];\n                    if (val) {\n                        if (first) {\n                            first = false;\n                        }\n                        else {\n                            cmdStr += ',';\n                        }\n                        cmdStr += `${key}=${escapeProperty(val)}`;\n                    }\n                }\n            }\n        }\n        cmdStr += `${CMD_STRING}${escapeData(this.message)}`;\n        return cmdStr;\n    }\n}\nfunction escapeData(s) {\n    return utils_1.toCommandValue(s)\n        .replace(/%/g, '%25')\n        .replace(/\\r/g, '%0D')\n        .replace(/\\n/g, '%0A');\n}\nfunction escapeProperty(s) {\n    return utils_1.toCommandValue(s)\n        .replace(/%/g, '%25')\n        .replace(/\\r/g, '%0D')\n        .replace(/\\n/g, '%0A')\n        .replace(/:/g, '%3A')\n        .replace(/,/g, '%2C');\n}\n//# sourceMappingURL=command.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getState = exports.saveState = exports.group = exports.endGroup = exports.startGroup = exports.info = exports.notice = exports.warning = exports.error = exports.debug = exports.isDebug = exports.setFailed = exports.setCommandEcho = exports.setOutput = exports.getBooleanInput = exports.getMultilineInput = exports.getInput = exports.addPath = exports.setSecret = exports.exportVariable = exports.ExitCode = void 0;\nconst command_1 = require(\"./command\");\nconst file_command_1 = require(\"./file-command\");\nconst utils_1 = require(\"./utils\");\nconst os = __importStar(require(\"os\"));\nconst path = __importStar(require(\"path\"));\n/**\n * The code to exit an action\n */\nvar ExitCode;\n(function (ExitCode) {\n    /**\n     * A code indicating that the action was successful\n     */\n    ExitCode[ExitCode[\"Success\"] = 0] = \"Success\";\n    /**\n     * A code indicating that the action was a failure\n     */\n    ExitCode[ExitCode[\"Failure\"] = 1] = \"Failure\";\n})(ExitCode = exports.ExitCode || (exports.ExitCode = {}));\n//-----------------------------------------------------------------------\n// Variables\n//-----------------------------------------------------------------------\n/**\n * Sets env variable for this action and future actions in the job\n * @param name the name of the variable to set\n * @param val the value of the variable. Non-string values will be converted to a string via JSON.stringify\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction exportVariable(name, val) {\n    const convertedVal = utils_1.toCommandValue(val);\n    process.env[name] = convertedVal;\n    const filePath = process.env['GITHUB_ENV'] || '';\n    if (filePath) {\n        const delimiter = '_GitHubActionsFileCommandDelimeter_';\n        const commandValue = `${name}<<${delimiter}${os.EOL}${convertedVal}${os.EOL}${delimiter}`;\n        file_command_1.issueCommand('ENV', commandValue);\n    }\n    else {\n        command_1.issueCommand('set-env', { name }, convertedVal);\n    }\n}\nexports.exportVariable = exportVariable;\n/**\n * Registers a secret which will get masked from logs\n * @param secret value of the secret\n */\nfunction setSecret(secret) {\n    command_1.issueCommand('add-mask', {}, secret);\n}\nexports.setSecret = setSecret;\n/**\n * Prepends inputPath to the PATH (for this action and future actions)\n * @param inputPath\n */\nfunction addPath(inputPath) {\n    const filePath = process.env['GITHUB_PATH'] || '';\n    if (filePath) {\n        file_command_1.issueCommand('PATH', inputPath);\n    }\n    else {\n        command_1.issueCommand('add-path', {}, inputPath);\n    }\n    process.env['PATH'] = `${inputPath}${path.delimiter}${process.env['PATH']}`;\n}\nexports.addPath = addPath;\n/**\n * Gets the value of an input.\n * Unless trimWhitespace is set to false in InputOptions, the value is also trimmed.\n * Returns an empty string if the value is not defined.\n *\n * @param     name     name of the input to get\n * @param     options  optional. See InputOptions.\n * @returns   string\n */\nfunction getInput(name, options) {\n    const val = process.env[`INPUT_${name.replace(/ /g, '_').toUpperCase()}`] || '';\n    if (options && options.required && !val) {\n        throw new Error(`Input required and not supplied: ${name}`);\n    }\n    if (options && options.trimWhitespace === false) {\n        return val;\n    }\n    return val.trim();\n}\nexports.getInput = getInput;\n/**\n * Gets the values of an multiline input.  Each value is also trimmed.\n *\n * @param     name     name of the input to get\n * @param     options  optional. See InputOptions.\n * @returns   string[]\n *\n */\nfunction getMultilineInput(name, options) {\n    const inputs = getInput(name, options)\n        .split('\\n')\n        .filter(x => x !== '');\n    return inputs;\n}\nexports.getMultilineInput = getMultilineInput;\n/**\n * Gets the input value of the boolean type in the YAML 1.2 \"core schema\" specification.\n * Support boolean input list: `true | True | TRUE | false | False | FALSE` .\n * The return value is also in boolean type.\n * ref: https://yaml.org/spec/1.2/spec.html#id2804923\n *\n * @param     name     name of the input to get\n * @param     options  optional. See InputOptions.\n * @returns   boolean\n */\nfunction getBooleanInput(name, options) {\n    const trueValue = ['true', 'True', 'TRUE'];\n    const falseValue = ['false', 'False', 'FALSE'];\n    const val = getInput(name, options);\n    if (trueValue.includes(val))\n        return true;\n    if (falseValue.includes(val))\n        return false;\n    throw new TypeError(`Input does not meet YAML 1.2 \"Core Schema\" specification: ${name}\\n` +\n        `Support boolean input list: \\`true | True | TRUE | false | False | FALSE\\``);\n}\nexports.getBooleanInput = getBooleanInput;\n/**\n * Sets the value of an output.\n *\n * @param     name     name of the output to set\n * @param     value    value to store. Non-string values will be converted to a string via JSON.stringify\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction setOutput(name, value) {\n    process.stdout.write(os.EOL);\n    command_1.issueCommand('set-output', { name }, value);\n}\nexports.setOutput = setOutput;\n/**\n * Enables or disables the echoing of commands into stdout for the rest of the step.\n * Echoing is disabled by default if ACTIONS_STEP_DEBUG is not set.\n *\n */\nfunction setCommandEcho(enabled) {\n    command_1.issue('echo', enabled ? 'on' : 'off');\n}\nexports.setCommandEcho = setCommandEcho;\n//-----------------------------------------------------------------------\n// Results\n//-----------------------------------------------------------------------\n/**\n * Sets the action status to failed.\n * When the action exits it will be with an exit code of 1\n * @param message add error issue message\n */\nfunction setFailed(message) {\n    process.exitCode = ExitCode.Failure;\n    error(message);\n}\nexports.setFailed = setFailed;\n//-----------------------------------------------------------------------\n// Logging Commands\n//-----------------------------------------------------------------------\n/**\n * Gets whether Actions Step Debug is on or not\n */\nfunction isDebug() {\n    return process.env['RUNNER_DEBUG'] === '1';\n}\nexports.isDebug = isDebug;\n/**\n * Writes debug message to user log\n * @param message debug message\n */\nfunction debug(message) {\n    command_1.issueCommand('debug', {}, message);\n}\nexports.debug = debug;\n/**\n * Adds an error issue\n * @param message error issue message. Errors will be converted to string via toString()\n * @param properties optional properties to add to the annotation.\n */\nfunction error(message, properties = {}) {\n    command_1.issueCommand('error', utils_1.toCommandProperties(properties), message instanceof Error ? message.toString() : message);\n}\nexports.error = error;\n/**\n * Adds a warning issue\n * @param message warning issue message. Errors will be converted to string via toString()\n * @param properties optional properties to add to the annotation.\n */\nfunction warning(message, properties = {}) {\n    command_1.issueCommand('warning', utils_1.toCommandProperties(properties), message instanceof Error ? message.toString() : message);\n}\nexports.warning = warning;\n/**\n * Adds a notice issue\n * @param message notice issue message. Errors will be converted to string via toString()\n * @param properties optional properties to add to the annotation.\n */\nfunction notice(message, properties = {}) {\n    command_1.issueCommand('notice', utils_1.toCommandProperties(properties), message instanceof Error ? message.toString() : message);\n}\nexports.notice = notice;\n/**\n * Writes info to log with console.log.\n * @param message info message\n */\nfunction info(message) {\n    process.stdout.write(message + os.EOL);\n}\nexports.info = info;\n/**\n * Begin an output group.\n *\n * Output until the next `groupEnd` will be foldable in this group\n *\n * @param name The name of the output group\n */\nfunction startGroup(name) {\n    command_1.issue('group', name);\n}\nexports.startGroup = startGroup;\n/**\n * End an output group.\n */\nfunction endGroup() {\n    command_1.issue('endgroup');\n}\nexports.endGroup = endGroup;\n/**\n * Wrap an asynchronous function call in a group.\n *\n * Returns the same type as the function itself.\n *\n * @param name The name of the group\n * @param fn The function to wrap in the group\n */\nfunction group(name, fn) {\n    return __awaiter(this, void 0, void 0, function* () {\n        startGroup(name);\n        let result;\n        try {\n            result = yield fn();\n        }\n        finally {\n            endGroup();\n        }\n        return result;\n    });\n}\nexports.group = group;\n//-----------------------------------------------------------------------\n// Wrapper action state\n//-----------------------------------------------------------------------\n/**\n * Saves state for current action, the state can only be retrieved by this action's post job execution.\n *\n * @param     name     name of the state to store\n * @param     value    value to store. Non-string values will be converted to a string via JSON.stringify\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction saveState(name, value) {\n    command_1.issueCommand('save-state', { name }, value);\n}\nexports.saveState = saveState;\n/**\n * Gets the value of an state set by this action's main execution.\n *\n * @param     name     name of the state to get\n * @returns   string\n */\nfunction getState(name) {\n    return process.env[`STATE_${name}`] || '';\n}\nexports.getState = getState;\n//# sourceMappingURL=core.js.map","\"use strict\";\n// For internal use, subject to change.\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.issueCommand = void 0;\n// We use any as a valid input type\n/* eslint-disable @typescript-eslint/no-explicit-any */\nconst fs = __importStar(require(\"fs\"));\nconst os = __importStar(require(\"os\"));\nconst utils_1 = require(\"./utils\");\nfunction issueCommand(command, message) {\n    const filePath = process.env[`GITHUB_${command}`];\n    if (!filePath) {\n        throw new Error(`Unable to find environment variable for file command ${command}`);\n    }\n    if (!fs.existsSync(filePath)) {\n        throw new Error(`Missing file at path: ${filePath}`);\n    }\n    fs.appendFileSync(filePath, `${utils_1.toCommandValue(message)}${os.EOL}`, {\n        encoding: 'utf8'\n    });\n}\nexports.issueCommand = issueCommand;\n//# sourceMappingURL=file-command.js.map","\"use strict\";\n// We use any as a valid input type\n/* eslint-disable @typescript-eslint/no-explicit-any */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toCommandProperties = exports.toCommandValue = void 0;\n/**\n * Sanitizes an input into a string so it can be passed into issueCommand safely\n * @param input input to sanitize into a string\n */\nfunction toCommandValue(input) {\n    if (input === null || input === undefined) {\n        return '';\n    }\n    else if (typeof input === 'string' || input instanceof String) {\n        return input;\n    }\n    return JSON.stringify(input);\n}\nexports.toCommandValue = toCommandValue;\n/**\n *\n * @param annotationProperties\n * @returns The command properties to send with the actual annotation command\n * See IssueCommandProperties: https://github.com/actions/runner/blob/main/src/Runner.Worker/ActionCommandManager.cs#L646\n */\nfunction toCommandProperties(annotationProperties) {\n    if (!Object.keys(annotationProperties).length) {\n        return {};\n    }\n    return {\n        title: annotationProperties.title,\n        line: annotationProperties.startLine,\n        endLine: annotationProperties.endLine,\n        col: annotationProperties.startColumn,\n        endColumn: annotationProperties.endColumn\n    };\n}\nexports.toCommandProperties = toCommandProperties;\n//# sourceMappingURL=utils.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Lambda = void 0;\nconst LambdaClient_1 = require(\"./LambdaClient\");\nconst AddLayerVersionPermissionCommand_1 = require(\"./commands/AddLayerVersionPermissionCommand\");\nconst AddPermissionCommand_1 = require(\"./commands/AddPermissionCommand\");\nconst CreateAliasCommand_1 = require(\"./commands/CreateAliasCommand\");\nconst CreateCodeSigningConfigCommand_1 = require(\"./commands/CreateCodeSigningConfigCommand\");\nconst CreateEventSourceMappingCommand_1 = require(\"./commands/CreateEventSourceMappingCommand\");\nconst CreateFunctionCommand_1 = require(\"./commands/CreateFunctionCommand\");\nconst DeleteAliasCommand_1 = require(\"./commands/DeleteAliasCommand\");\nconst DeleteCodeSigningConfigCommand_1 = require(\"./commands/DeleteCodeSigningConfigCommand\");\nconst DeleteEventSourceMappingCommand_1 = require(\"./commands/DeleteEventSourceMappingCommand\");\nconst DeleteFunctionCodeSigningConfigCommand_1 = require(\"./commands/DeleteFunctionCodeSigningConfigCommand\");\nconst DeleteFunctionCommand_1 = require(\"./commands/DeleteFunctionCommand\");\nconst DeleteFunctionConcurrencyCommand_1 = require(\"./commands/DeleteFunctionConcurrencyCommand\");\nconst DeleteFunctionEventInvokeConfigCommand_1 = require(\"./commands/DeleteFunctionEventInvokeConfigCommand\");\nconst DeleteLayerVersionCommand_1 = require(\"./commands/DeleteLayerVersionCommand\");\nconst DeleteProvisionedConcurrencyConfigCommand_1 = require(\"./commands/DeleteProvisionedConcurrencyConfigCommand\");\nconst GetAccountSettingsCommand_1 = require(\"./commands/GetAccountSettingsCommand\");\nconst GetAliasCommand_1 = require(\"./commands/GetAliasCommand\");\nconst GetCodeSigningConfigCommand_1 = require(\"./commands/GetCodeSigningConfigCommand\");\nconst GetEventSourceMappingCommand_1 = require(\"./commands/GetEventSourceMappingCommand\");\nconst GetFunctionCodeSigningConfigCommand_1 = require(\"./commands/GetFunctionCodeSigningConfigCommand\");\nconst GetFunctionCommand_1 = require(\"./commands/GetFunctionCommand\");\nconst GetFunctionConcurrencyCommand_1 = require(\"./commands/GetFunctionConcurrencyCommand\");\nconst GetFunctionConfigurationCommand_1 = require(\"./commands/GetFunctionConfigurationCommand\");\nconst GetFunctionEventInvokeConfigCommand_1 = require(\"./commands/GetFunctionEventInvokeConfigCommand\");\nconst GetLayerVersionByArnCommand_1 = require(\"./commands/GetLayerVersionByArnCommand\");\nconst GetLayerVersionCommand_1 = require(\"./commands/GetLayerVersionCommand\");\nconst GetLayerVersionPolicyCommand_1 = require(\"./commands/GetLayerVersionPolicyCommand\");\nconst GetPolicyCommand_1 = require(\"./commands/GetPolicyCommand\");\nconst GetProvisionedConcurrencyConfigCommand_1 = require(\"./commands/GetProvisionedConcurrencyConfigCommand\");\nconst InvokeAsyncCommand_1 = require(\"./commands/InvokeAsyncCommand\");\nconst InvokeCommand_1 = require(\"./commands/InvokeCommand\");\nconst ListAliasesCommand_1 = require(\"./commands/ListAliasesCommand\");\nconst ListCodeSigningConfigsCommand_1 = require(\"./commands/ListCodeSigningConfigsCommand\");\nconst ListEventSourceMappingsCommand_1 = require(\"./commands/ListEventSourceMappingsCommand\");\nconst ListFunctionEventInvokeConfigsCommand_1 = require(\"./commands/ListFunctionEventInvokeConfigsCommand\");\nconst ListFunctionsByCodeSigningConfigCommand_1 = require(\"./commands/ListFunctionsByCodeSigningConfigCommand\");\nconst ListFunctionsCommand_1 = require(\"./commands/ListFunctionsCommand\");\nconst ListLayerVersionsCommand_1 = require(\"./commands/ListLayerVersionsCommand\");\nconst ListLayersCommand_1 = require(\"./commands/ListLayersCommand\");\nconst ListProvisionedConcurrencyConfigsCommand_1 = require(\"./commands/ListProvisionedConcurrencyConfigsCommand\");\nconst ListTagsCommand_1 = require(\"./commands/ListTagsCommand\");\nconst ListVersionsByFunctionCommand_1 = require(\"./commands/ListVersionsByFunctionCommand\");\nconst PublishLayerVersionCommand_1 = require(\"./commands/PublishLayerVersionCommand\");\nconst PublishVersionCommand_1 = require(\"./commands/PublishVersionCommand\");\nconst PutFunctionCodeSigningConfigCommand_1 = require(\"./commands/PutFunctionCodeSigningConfigCommand\");\nconst PutFunctionConcurrencyCommand_1 = require(\"./commands/PutFunctionConcurrencyCommand\");\nconst PutFunctionEventInvokeConfigCommand_1 = require(\"./commands/PutFunctionEventInvokeConfigCommand\");\nconst PutProvisionedConcurrencyConfigCommand_1 = require(\"./commands/PutProvisionedConcurrencyConfigCommand\");\nconst RemoveLayerVersionPermissionCommand_1 = require(\"./commands/RemoveLayerVersionPermissionCommand\");\nconst RemovePermissionCommand_1 = require(\"./commands/RemovePermissionCommand\");\nconst TagResourceCommand_1 = require(\"./commands/TagResourceCommand\");\nconst UntagResourceCommand_1 = require(\"./commands/UntagResourceCommand\");\nconst UpdateAliasCommand_1 = require(\"./commands/UpdateAliasCommand\");\nconst UpdateCodeSigningConfigCommand_1 = require(\"./commands/UpdateCodeSigningConfigCommand\");\nconst UpdateEventSourceMappingCommand_1 = require(\"./commands/UpdateEventSourceMappingCommand\");\nconst UpdateFunctionCodeCommand_1 = require(\"./commands/UpdateFunctionCodeCommand\");\nconst UpdateFunctionConfigurationCommand_1 = require(\"./commands/UpdateFunctionConfigurationCommand\");\nconst UpdateFunctionEventInvokeConfigCommand_1 = require(\"./commands/UpdateFunctionEventInvokeConfigCommand\");\n/**\n * <fullname>Lambda</fullname>\n *          <p>\n *             <b>Overview</b>\n *          </p>\n *          <p>This is the <i>Lambda API Reference</i>. The Lambda Developer Guide provides additional\n *       information. For the service overview, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/welcome.html\">What is\n *         Lambda</a>, and for information about how the service works, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-introduction.html\">Lambda: How it Works</a> in the <b>Lambda Developer Guide</b>.</p>\n */\nclass Lambda extends LambdaClient_1.LambdaClient {\n    addLayerVersionPermission(args, optionsOrCb, cb) {\n        const command = new AddLayerVersionPermissionCommand_1.AddLayerVersionPermissionCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    addPermission(args, optionsOrCb, cb) {\n        const command = new AddPermissionCommand_1.AddPermissionCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    createAlias(args, optionsOrCb, cb) {\n        const command = new CreateAliasCommand_1.CreateAliasCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    createCodeSigningConfig(args, optionsOrCb, cb) {\n        const command = new CreateCodeSigningConfigCommand_1.CreateCodeSigningConfigCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    createEventSourceMapping(args, optionsOrCb, cb) {\n        const command = new CreateEventSourceMappingCommand_1.CreateEventSourceMappingCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    createFunction(args, optionsOrCb, cb) {\n        const command = new CreateFunctionCommand_1.CreateFunctionCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    deleteAlias(args, optionsOrCb, cb) {\n        const command = new DeleteAliasCommand_1.DeleteAliasCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    deleteCodeSigningConfig(args, optionsOrCb, cb) {\n        const command = new DeleteCodeSigningConfigCommand_1.DeleteCodeSigningConfigCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    deleteEventSourceMapping(args, optionsOrCb, cb) {\n        const command = new DeleteEventSourceMappingCommand_1.DeleteEventSourceMappingCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    deleteFunction(args, optionsOrCb, cb) {\n        const command = new DeleteFunctionCommand_1.DeleteFunctionCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    deleteFunctionCodeSigningConfig(args, optionsOrCb, cb) {\n        const command = new DeleteFunctionCodeSigningConfigCommand_1.DeleteFunctionCodeSigningConfigCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    deleteFunctionConcurrency(args, optionsOrCb, cb) {\n        const command = new DeleteFunctionConcurrencyCommand_1.DeleteFunctionConcurrencyCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    deleteFunctionEventInvokeConfig(args, optionsOrCb, cb) {\n        const command = new DeleteFunctionEventInvokeConfigCommand_1.DeleteFunctionEventInvokeConfigCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    deleteLayerVersion(args, optionsOrCb, cb) {\n        const command = new DeleteLayerVersionCommand_1.DeleteLayerVersionCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    deleteProvisionedConcurrencyConfig(args, optionsOrCb, cb) {\n        const command = new DeleteProvisionedConcurrencyConfigCommand_1.DeleteProvisionedConcurrencyConfigCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    getAccountSettings(args, optionsOrCb, cb) {\n        const command = new GetAccountSettingsCommand_1.GetAccountSettingsCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    getAlias(args, optionsOrCb, cb) {\n        const command = new GetAliasCommand_1.GetAliasCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    getCodeSigningConfig(args, optionsOrCb, cb) {\n        const command = new GetCodeSigningConfigCommand_1.GetCodeSigningConfigCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    getEventSourceMapping(args, optionsOrCb, cb) {\n        const command = new GetEventSourceMappingCommand_1.GetEventSourceMappingCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    getFunction(args, optionsOrCb, cb) {\n        const command = new GetFunctionCommand_1.GetFunctionCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    getFunctionCodeSigningConfig(args, optionsOrCb, cb) {\n        const command = new GetFunctionCodeSigningConfigCommand_1.GetFunctionCodeSigningConfigCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    getFunctionConcurrency(args, optionsOrCb, cb) {\n        const command = new GetFunctionConcurrencyCommand_1.GetFunctionConcurrencyCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    getFunctionConfiguration(args, optionsOrCb, cb) {\n        const command = new GetFunctionConfigurationCommand_1.GetFunctionConfigurationCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    getFunctionEventInvokeConfig(args, optionsOrCb, cb) {\n        const command = new GetFunctionEventInvokeConfigCommand_1.GetFunctionEventInvokeConfigCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    getLayerVersion(args, optionsOrCb, cb) {\n        const command = new GetLayerVersionCommand_1.GetLayerVersionCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    getLayerVersionByArn(args, optionsOrCb, cb) {\n        const command = new GetLayerVersionByArnCommand_1.GetLayerVersionByArnCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    getLayerVersionPolicy(args, optionsOrCb, cb) {\n        const command = new GetLayerVersionPolicyCommand_1.GetLayerVersionPolicyCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    getPolicy(args, optionsOrCb, cb) {\n        const command = new GetPolicyCommand_1.GetPolicyCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    getProvisionedConcurrencyConfig(args, optionsOrCb, cb) {\n        const command = new GetProvisionedConcurrencyConfigCommand_1.GetProvisionedConcurrencyConfigCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    invoke(args, optionsOrCb, cb) {\n        const command = new InvokeCommand_1.InvokeCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    invokeAsync(args, optionsOrCb, cb) {\n        const command = new InvokeAsyncCommand_1.InvokeAsyncCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    listAliases(args, optionsOrCb, cb) {\n        const command = new ListAliasesCommand_1.ListAliasesCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    listCodeSigningConfigs(args, optionsOrCb, cb) {\n        const command = new ListCodeSigningConfigsCommand_1.ListCodeSigningConfigsCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    listEventSourceMappings(args, optionsOrCb, cb) {\n        const command = new ListEventSourceMappingsCommand_1.ListEventSourceMappingsCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    listFunctionEventInvokeConfigs(args, optionsOrCb, cb) {\n        const command = new ListFunctionEventInvokeConfigsCommand_1.ListFunctionEventInvokeConfigsCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    listFunctions(args, optionsOrCb, cb) {\n        const command = new ListFunctionsCommand_1.ListFunctionsCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    listFunctionsByCodeSigningConfig(args, optionsOrCb, cb) {\n        const command = new ListFunctionsByCodeSigningConfigCommand_1.ListFunctionsByCodeSigningConfigCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    listLayers(args, optionsOrCb, cb) {\n        const command = new ListLayersCommand_1.ListLayersCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    listLayerVersions(args, optionsOrCb, cb) {\n        const command = new ListLayerVersionsCommand_1.ListLayerVersionsCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    listProvisionedConcurrencyConfigs(args, optionsOrCb, cb) {\n        const command = new ListProvisionedConcurrencyConfigsCommand_1.ListProvisionedConcurrencyConfigsCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    listTags(args, optionsOrCb, cb) {\n        const command = new ListTagsCommand_1.ListTagsCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    listVersionsByFunction(args, optionsOrCb, cb) {\n        const command = new ListVersionsByFunctionCommand_1.ListVersionsByFunctionCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    publishLayerVersion(args, optionsOrCb, cb) {\n        const command = new PublishLayerVersionCommand_1.PublishLayerVersionCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    publishVersion(args, optionsOrCb, cb) {\n        const command = new PublishVersionCommand_1.PublishVersionCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    putFunctionCodeSigningConfig(args, optionsOrCb, cb) {\n        const command = new PutFunctionCodeSigningConfigCommand_1.PutFunctionCodeSigningConfigCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    putFunctionConcurrency(args, optionsOrCb, cb) {\n        const command = new PutFunctionConcurrencyCommand_1.PutFunctionConcurrencyCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    putFunctionEventInvokeConfig(args, optionsOrCb, cb) {\n        const command = new PutFunctionEventInvokeConfigCommand_1.PutFunctionEventInvokeConfigCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    putProvisionedConcurrencyConfig(args, optionsOrCb, cb) {\n        const command = new PutProvisionedConcurrencyConfigCommand_1.PutProvisionedConcurrencyConfigCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    removeLayerVersionPermission(args, optionsOrCb, cb) {\n        const command = new RemoveLayerVersionPermissionCommand_1.RemoveLayerVersionPermissionCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    removePermission(args, optionsOrCb, cb) {\n        const command = new RemovePermissionCommand_1.RemovePermissionCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    tagResource(args, optionsOrCb, cb) {\n        const command = new TagResourceCommand_1.TagResourceCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    untagResource(args, optionsOrCb, cb) {\n        const command = new UntagResourceCommand_1.UntagResourceCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    updateAlias(args, optionsOrCb, cb) {\n        const command = new UpdateAliasCommand_1.UpdateAliasCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    updateCodeSigningConfig(args, optionsOrCb, cb) {\n        const command = new UpdateCodeSigningConfigCommand_1.UpdateCodeSigningConfigCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    updateEventSourceMapping(args, optionsOrCb, cb) {\n        const command = new UpdateEventSourceMappingCommand_1.UpdateEventSourceMappingCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    updateFunctionCode(args, optionsOrCb, cb) {\n        const command = new UpdateFunctionCodeCommand_1.UpdateFunctionCodeCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    updateFunctionConfiguration(args, optionsOrCb, cb) {\n        const command = new UpdateFunctionConfigurationCommand_1.UpdateFunctionConfigurationCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    updateFunctionEventInvokeConfig(args, optionsOrCb, cb) {\n        const command = new UpdateFunctionEventInvokeConfigCommand_1.UpdateFunctionEventInvokeConfigCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n}\nexports.Lambda = Lambda;\n//# sourceMappingURL=Lambda.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LambdaClient = void 0;\nconst runtimeConfig_1 = require(\"./runtimeConfig\");\nconst config_resolver_1 = require(\"@aws-sdk/config-resolver\");\nconst middleware_content_length_1 = require(\"@aws-sdk/middleware-content-length\");\nconst middleware_host_header_1 = require(\"@aws-sdk/middleware-host-header\");\nconst middleware_logger_1 = require(\"@aws-sdk/middleware-logger\");\nconst middleware_retry_1 = require(\"@aws-sdk/middleware-retry\");\nconst middleware_signing_1 = require(\"@aws-sdk/middleware-signing\");\nconst middleware_user_agent_1 = require(\"@aws-sdk/middleware-user-agent\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <fullname>Lambda</fullname>\n *          <p>\n *             <b>Overview</b>\n *          </p>\n *          <p>This is the <i>Lambda API Reference</i>. The Lambda Developer Guide provides additional\n *       information. For the service overview, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/welcome.html\">What is\n *         Lambda</a>, and for information about how the service works, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-introduction.html\">Lambda: How it Works</a> in the <b>Lambda Developer Guide</b>.</p>\n */\nclass LambdaClient extends smithy_client_1.Client {\n    constructor(configuration) {\n        let _config_0 = (0, runtimeConfig_1.getRuntimeConfig)(configuration);\n        let _config_1 = (0, config_resolver_1.resolveRegionConfig)(_config_0);\n        let _config_2 = (0, config_resolver_1.resolveEndpointsConfig)(_config_1);\n        let _config_3 = (0, middleware_retry_1.resolveRetryConfig)(_config_2);\n        let _config_4 = (0, middleware_host_header_1.resolveHostHeaderConfig)(_config_3);\n        let _config_5 = (0, middleware_signing_1.resolveAwsAuthConfig)(_config_4);\n        let _config_6 = (0, middleware_user_agent_1.resolveUserAgentConfig)(_config_5);\n        super(_config_6);\n        this.config = _config_6;\n        this.middlewareStack.use((0, middleware_retry_1.getRetryPlugin)(this.config));\n        this.middlewareStack.use((0, middleware_content_length_1.getContentLengthPlugin)(this.config));\n        this.middlewareStack.use((0, middleware_host_header_1.getHostHeaderPlugin)(this.config));\n        this.middlewareStack.use((0, middleware_logger_1.getLoggerPlugin)(this.config));\n        this.middlewareStack.use((0, middleware_signing_1.getAwsAuthPlugin)(this.config));\n        this.middlewareStack.use((0, middleware_user_agent_1.getUserAgentPlugin)(this.config));\n    }\n    /**\n     * Destroy underlying resources, like sockets. It's usually not necessary to do this.\n     * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.\n     * Otherwise, sockets might stay open for quite a long time before the server terminates them.\n     */\n    destroy() {\n        super.destroy();\n    }\n}\nexports.LambdaClient = LambdaClient;\n//# sourceMappingURL=LambdaClient.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AddLayerVersionPermissionCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restJson1_1 = require(\"../protocols/Aws_restJson1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Adds permissions to the resource-based policy of a version of an <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html\">Lambda\n *         layer</a>. Use this action to grant layer\n *       usage permission to other accounts. You can grant permission to a single account, all accounts in an organization,\n *       or all Amazon Web Services accounts.  </p>\n *          <p>To revoke permission, call <a>RemoveLayerVersionPermission</a> with the statement ID that you\n *       specified when you added it.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { LambdaClient, AddLayerVersionPermissionCommand } from \"@aws-sdk/client-lambda\"; // ES Modules import\n * // const { LambdaClient, AddLayerVersionPermissionCommand } = require(\"@aws-sdk/client-lambda\"); // CommonJS import\n * const client = new LambdaClient(config);\n * const command = new AddLayerVersionPermissionCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link AddLayerVersionPermissionCommandInput} for command's `input` shape.\n * @see {@link AddLayerVersionPermissionCommandOutput} for command's `response` shape.\n * @see {@link LambdaClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass AddLayerVersionPermissionCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"LambdaClient\";\n        const commandName = \"AddLayerVersionPermissionCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.AddLayerVersionPermissionRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.AddLayerVersionPermissionResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restJson1_1.serializeAws_restJson1AddLayerVersionPermissionCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restJson1_1.deserializeAws_restJson1AddLayerVersionPermissionCommand)(output, context);\n    }\n}\nexports.AddLayerVersionPermissionCommand = AddLayerVersionPermissionCommand;\n//# sourceMappingURL=AddLayerVersionPermissionCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AddPermissionCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restJson1_1 = require(\"../protocols/Aws_restJson1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Grants an Amazon Web Services service or another account permission to use a function. You can apply the policy at the\n *       function level, or specify a qualifier to restrict access to a single version or alias. If you use a qualifier,\n *       the invoker must use the full Amazon Resource Name (ARN) of that version or alias to invoke the function.</p>\n *\n *          <p>To grant permission to another account, specify the account ID as the <code>Principal</code>. For Amazon Web Services\n *       services, the principal is a domain-style identifier defined by the service, like <code>s3.amazonaws.com</code> or\n *         <code>sns.amazonaws.com</code>. For Amazon Web Services services, you can also specify the ARN of the associated resource as the\n *         <code>SourceArn</code>. If you grant permission to a service principal without specifying the source, other\n *       accounts could potentially configure resources in their account to invoke your Lambda function.</p>\n *\n *          <p>This action adds a statement to a resource-based permissions policy for the function. For more information\n *       about function policies, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/access-control-resource-based.html\">Lambda Function Policies</a>. </p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { LambdaClient, AddPermissionCommand } from \"@aws-sdk/client-lambda\"; // ES Modules import\n * // const { LambdaClient, AddPermissionCommand } = require(\"@aws-sdk/client-lambda\"); // CommonJS import\n * const client = new LambdaClient(config);\n * const command = new AddPermissionCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link AddPermissionCommandInput} for command's `input` shape.\n * @see {@link AddPermissionCommandOutput} for command's `response` shape.\n * @see {@link LambdaClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass AddPermissionCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"LambdaClient\";\n        const commandName = \"AddPermissionCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.AddPermissionRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.AddPermissionResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restJson1_1.serializeAws_restJson1AddPermissionCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restJson1_1.deserializeAws_restJson1AddPermissionCommand)(output, context);\n    }\n}\nexports.AddPermissionCommand = AddPermissionCommand;\n//# sourceMappingURL=AddPermissionCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CreateAliasCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restJson1_1 = require(\"../protocols/Aws_restJson1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Creates an <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/versioning-aliases.html\">alias</a> for a\n *       Lambda function version. Use aliases to provide clients with a function identifier that you can update to invoke a\n *       different version.</p>\n *          <p>You can also map an alias to split invocation requests between two versions. Use the\n *         <code>RoutingConfig</code> parameter to specify a second version and the percentage of invocation requests that\n *       it receives.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { LambdaClient, CreateAliasCommand } from \"@aws-sdk/client-lambda\"; // ES Modules import\n * // const { LambdaClient, CreateAliasCommand } = require(\"@aws-sdk/client-lambda\"); // CommonJS import\n * const client = new LambdaClient(config);\n * const command = new CreateAliasCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link CreateAliasCommandInput} for command's `input` shape.\n * @see {@link CreateAliasCommandOutput} for command's `response` shape.\n * @see {@link LambdaClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass CreateAliasCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"LambdaClient\";\n        const commandName = \"CreateAliasCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.CreateAliasRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.AliasConfiguration.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restJson1_1.serializeAws_restJson1CreateAliasCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restJson1_1.deserializeAws_restJson1CreateAliasCommand)(output, context);\n    }\n}\nexports.CreateAliasCommand = CreateAliasCommand;\n//# sourceMappingURL=CreateAliasCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CreateCodeSigningConfigCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restJson1_1 = require(\"../protocols/Aws_restJson1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Creates a code signing configuration. A <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-trustedcode.html\">code signing configuration</a> defines a list of\n *       allowed signing profiles and defines the code-signing validation policy (action to be taken if deployment\n *       validation checks fail). </p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { LambdaClient, CreateCodeSigningConfigCommand } from \"@aws-sdk/client-lambda\"; // ES Modules import\n * // const { LambdaClient, CreateCodeSigningConfigCommand } = require(\"@aws-sdk/client-lambda\"); // CommonJS import\n * const client = new LambdaClient(config);\n * const command = new CreateCodeSigningConfigCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link CreateCodeSigningConfigCommandInput} for command's `input` shape.\n * @see {@link CreateCodeSigningConfigCommandOutput} for command's `response` shape.\n * @see {@link LambdaClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass CreateCodeSigningConfigCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"LambdaClient\";\n        const commandName = \"CreateCodeSigningConfigCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.CreateCodeSigningConfigRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.CreateCodeSigningConfigResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restJson1_1.serializeAws_restJson1CreateCodeSigningConfigCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restJson1_1.deserializeAws_restJson1CreateCodeSigningConfigCommand)(output, context);\n    }\n}\nexports.CreateCodeSigningConfigCommand = CreateCodeSigningConfigCommand;\n//# sourceMappingURL=CreateCodeSigningConfigCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CreateEventSourceMappingCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restJson1_1 = require(\"../protocols/Aws_restJson1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Creates a mapping between an event source and an Lambda function. Lambda reads items from the event source\n *       and triggers the function.</p>\n *          <p>For details about each event source type, see the following topics. In particular, each of the topics\n *       describes the required and optional parameters for the specific event source. </p>\n *          <ul>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/with-ddb.html#services-dynamodb-eventsourcemapping\">\n *           Configuring a Dynamo DB stream as an event source</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/with-kinesis.html#services-kinesis-eventsourcemapping\">\n *           Configuring a Kinesis stream as an event source</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/with-sqs.html#events-sqs-eventsource\">\n *           Configuring an SQS queue as an event source</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/with-mq.html#services-mq-eventsourcemapping\">\n *           Configuring an MQ broker as an event source</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/with-msk.html\">\n *           Configuring MSK as an event source</a>\n *                </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/kafka-smaa.html\">\n *           Configuring Self-Managed Apache Kafka as an event source</a>\n *                </p>\n *             </li>\n *          </ul>\n *          <p>The following error handling options are only available for stream sources (DynamoDB and Kinesis):</p>\n *          <ul>\n *             <li>\n *                <p>\n *                   <code>BisectBatchOnFunctionError</code> - If the function returns an error, split the batch in two and retry.</p>\n *             </li>\n *             <li>\n *                <p>\n *                   <code>DestinationConfig</code> - Send discarded records to an Amazon SQS queue or Amazon SNS topic.</p>\n *             </li>\n *             <li>\n *                <p>\n *                   <code>MaximumRecordAgeInSeconds</code> - Discard records older than the specified age. The default value is infinite (-1). When set to infinite (-1), failed records are retried until the record expires</p>\n *             </li>\n *             <li>\n *                <p>\n *                   <code>MaximumRetryAttempts</code> - Discard records after the specified number of retries. The default value is infinite (-1). When set to infinite (-1), failed records are retried until the record expires.</p>\n *             </li>\n *             <li>\n *                <p>\n *                   <code>ParallelizationFactor</code> - Process multiple batches from each shard concurrently.</p>\n *             </li>\n *          </ul>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { LambdaClient, CreateEventSourceMappingCommand } from \"@aws-sdk/client-lambda\"; // ES Modules import\n * // const { LambdaClient, CreateEventSourceMappingCommand } = require(\"@aws-sdk/client-lambda\"); // CommonJS import\n * const client = new LambdaClient(config);\n * const command = new CreateEventSourceMappingCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link CreateEventSourceMappingCommandInput} for command's `input` shape.\n * @see {@link CreateEventSourceMappingCommandOutput} for command's `response` shape.\n * @see {@link LambdaClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass CreateEventSourceMappingCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"LambdaClient\";\n        const commandName = \"CreateEventSourceMappingCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.CreateEventSourceMappingRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.EventSourceMappingConfiguration.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restJson1_1.serializeAws_restJson1CreateEventSourceMappingCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restJson1_1.deserializeAws_restJson1CreateEventSourceMappingCommand)(output, context);\n    }\n}\nexports.CreateEventSourceMappingCommand = CreateEventSourceMappingCommand;\n//# sourceMappingURL=CreateEventSourceMappingCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CreateFunctionCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restJson1_1 = require(\"../protocols/Aws_restJson1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Creates a Lambda function. To create a function, you need a <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/gettingstarted-package.html\">deployment package</a> and an <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/intro-permission-model.html#lambda-intro-execution-role\">execution role</a>. The\n *       deployment package is a .zip file  archive or container image that contains your function code. The execution role grants the function permission to use Amazon Web Services\n *       services, such as Amazon CloudWatch Logs for log streaming and X-Ray for request tracing.</p>\n *\n *          <p>You set the package type to <code>Image</code> if the deployment package is a\n *       <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-images.html\">container image</a>. For a container image,\n *       the code property must include the URI of a container image in the Amazon ECR registry.\n *       You do not need to specify the handler and runtime properties. </p>\n *\n *          <p>You set the package type to <code>Zip</code> if the deployment package is a\n *       <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/gettingstarted-package.html#gettingstarted-package-zip\">.zip file archive</a>.\n *       For a .zip file archive, the code property specifies the location of the .zip file. You must also specify the handler and\n *       runtime properties.</p>\n *\n *          <p>When you create a function, Lambda provisions an instance of the function and its supporting resources. If\n *       your function connects to a VPC, this process can take a minute or so. During this time, you can't invoke or\n *       modify the function. The <code>State</code>, <code>StateReason</code>, and <code>StateReasonCode</code> fields in\n *       the response from <a>GetFunctionConfiguration</a> indicate when the function is ready to invoke. For\n *       more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/functions-states.html\">Function\n *         States</a>.</p>\n *\n *          <p>A function has an unpublished version, and can have published versions and aliases. The unpublished version\n *       changes when you update your function's code and configuration. A published version is a snapshot of your function\n *       code and configuration that can't be changed. An alias is a named resource that maps to a version, and can be\n *       changed to map to a different version. Use the <code>Publish</code> parameter to create version <code>1</code> of\n *       your function from its initial configuration.</p>\n *\n *          <p>The other parameters let you configure version-specific and function-level settings. You can modify\n *       version-specific settings later with <a>UpdateFunctionConfiguration</a>. Function-level settings apply\n *       to both the unpublished and published versions of the function, and include tags (<a>TagResource</a>)\n *       and per-function concurrency limits (<a>PutFunctionConcurrency</a>).</p>\n *\n *          <p>You can use code signing if your deployment package is a .zip file archive. To enable code signing for this function,\n *       specify the ARN of a code-signing configuration. When a user\n *       attempts to deploy a code package with <a>UpdateFunctionCode</a>, Lambda checks that the code\n *       package has a valid signature from a trusted publisher. The code-signing configuration\n *       includes set set of signing profiles, which define the trusted publishers for this function.</p>\n *\n *          <p>If another account or an Amazon Web Services service invokes your function, use <a>AddPermission</a> to grant\n *       permission by creating a resource-based IAM policy. You can grant permissions at the function level, on a version,\n *       or on an alias.</p>\n *\n *          <p>To invoke your function directly, use <a>Invoke</a>. To invoke your function in response to events\n *       in other Amazon Web Services services, create an event source mapping (<a>CreateEventSourceMapping</a>), or configure a\n *       function trigger in the other service. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-invocation.html\">Invoking Functions</a>.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { LambdaClient, CreateFunctionCommand } from \"@aws-sdk/client-lambda\"; // ES Modules import\n * // const { LambdaClient, CreateFunctionCommand } = require(\"@aws-sdk/client-lambda\"); // CommonJS import\n * const client = new LambdaClient(config);\n * const command = new CreateFunctionCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link CreateFunctionCommandInput} for command's `input` shape.\n * @see {@link CreateFunctionCommandOutput} for command's `response` shape.\n * @see {@link LambdaClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass CreateFunctionCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"LambdaClient\";\n        const commandName = \"CreateFunctionCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.CreateFunctionRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.FunctionConfiguration.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restJson1_1.serializeAws_restJson1CreateFunctionCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restJson1_1.deserializeAws_restJson1CreateFunctionCommand)(output, context);\n    }\n}\nexports.CreateFunctionCommand = CreateFunctionCommand;\n//# sourceMappingURL=CreateFunctionCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeleteAliasCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restJson1_1 = require(\"../protocols/Aws_restJson1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Deletes a Lambda function <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/versioning-aliases.html\">alias</a>.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { LambdaClient, DeleteAliasCommand } from \"@aws-sdk/client-lambda\"; // ES Modules import\n * // const { LambdaClient, DeleteAliasCommand } = require(\"@aws-sdk/client-lambda\"); // CommonJS import\n * const client = new LambdaClient(config);\n * const command = new DeleteAliasCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link DeleteAliasCommandInput} for command's `input` shape.\n * @see {@link DeleteAliasCommandOutput} for command's `response` shape.\n * @see {@link LambdaClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass DeleteAliasCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"LambdaClient\";\n        const commandName = \"DeleteAliasCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.DeleteAliasRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: (output) => output,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restJson1_1.serializeAws_restJson1DeleteAliasCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restJson1_1.deserializeAws_restJson1DeleteAliasCommand)(output, context);\n    }\n}\nexports.DeleteAliasCommand = DeleteAliasCommand;\n//# sourceMappingURL=DeleteAliasCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeleteCodeSigningConfigCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restJson1_1 = require(\"../protocols/Aws_restJson1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Deletes the code signing configuration. You can delete the code signing configuration only if no function is\n *       using it. </p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { LambdaClient, DeleteCodeSigningConfigCommand } from \"@aws-sdk/client-lambda\"; // ES Modules import\n * // const { LambdaClient, DeleteCodeSigningConfigCommand } = require(\"@aws-sdk/client-lambda\"); // CommonJS import\n * const client = new LambdaClient(config);\n * const command = new DeleteCodeSigningConfigCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link DeleteCodeSigningConfigCommandInput} for command's `input` shape.\n * @see {@link DeleteCodeSigningConfigCommandOutput} for command's `response` shape.\n * @see {@link LambdaClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass DeleteCodeSigningConfigCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"LambdaClient\";\n        const commandName = \"DeleteCodeSigningConfigCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.DeleteCodeSigningConfigRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.DeleteCodeSigningConfigResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restJson1_1.serializeAws_restJson1DeleteCodeSigningConfigCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restJson1_1.deserializeAws_restJson1DeleteCodeSigningConfigCommand)(output, context);\n    }\n}\nexports.DeleteCodeSigningConfigCommand = DeleteCodeSigningConfigCommand;\n//# sourceMappingURL=DeleteCodeSigningConfigCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeleteEventSourceMappingCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restJson1_1 = require(\"../protocols/Aws_restJson1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Deletes an <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/intro-invocation-modes.html\">event source\n *       mapping</a>. You can get the identifier of a mapping from the output of <a>ListEventSourceMappings</a>.</p>\n *          <p>When you delete an event source mapping, it enters a <code>Deleting</code> state and might not be completely deleted for several seconds.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { LambdaClient, DeleteEventSourceMappingCommand } from \"@aws-sdk/client-lambda\"; // ES Modules import\n * // const { LambdaClient, DeleteEventSourceMappingCommand } = require(\"@aws-sdk/client-lambda\"); // CommonJS import\n * const client = new LambdaClient(config);\n * const command = new DeleteEventSourceMappingCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link DeleteEventSourceMappingCommandInput} for command's `input` shape.\n * @see {@link DeleteEventSourceMappingCommandOutput} for command's `response` shape.\n * @see {@link LambdaClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass DeleteEventSourceMappingCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"LambdaClient\";\n        const commandName = \"DeleteEventSourceMappingCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.DeleteEventSourceMappingRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.EventSourceMappingConfiguration.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restJson1_1.serializeAws_restJson1DeleteEventSourceMappingCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restJson1_1.deserializeAws_restJson1DeleteEventSourceMappingCommand)(output, context);\n    }\n}\nexports.DeleteEventSourceMappingCommand = DeleteEventSourceMappingCommand;\n//# sourceMappingURL=DeleteEventSourceMappingCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeleteFunctionCodeSigningConfigCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restJson1_1 = require(\"../protocols/Aws_restJson1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Removes the code signing configuration from the function.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { LambdaClient, DeleteFunctionCodeSigningConfigCommand } from \"@aws-sdk/client-lambda\"; // ES Modules import\n * // const { LambdaClient, DeleteFunctionCodeSigningConfigCommand } = require(\"@aws-sdk/client-lambda\"); // CommonJS import\n * const client = new LambdaClient(config);\n * const command = new DeleteFunctionCodeSigningConfigCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link DeleteFunctionCodeSigningConfigCommandInput} for command's `input` shape.\n * @see {@link DeleteFunctionCodeSigningConfigCommandOutput} for command's `response` shape.\n * @see {@link LambdaClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass DeleteFunctionCodeSigningConfigCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"LambdaClient\";\n        const commandName = \"DeleteFunctionCodeSigningConfigCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.DeleteFunctionCodeSigningConfigRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: (output) => output,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restJson1_1.serializeAws_restJson1DeleteFunctionCodeSigningConfigCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restJson1_1.deserializeAws_restJson1DeleteFunctionCodeSigningConfigCommand)(output, context);\n    }\n}\nexports.DeleteFunctionCodeSigningConfigCommand = DeleteFunctionCodeSigningConfigCommand;\n//# sourceMappingURL=DeleteFunctionCodeSigningConfigCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeleteFunctionCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restJson1_1 = require(\"../protocols/Aws_restJson1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Deletes a Lambda function. To delete a specific function version, use the <code>Qualifier</code> parameter.\n *       Otherwise, all versions and aliases are deleted.</p>\n *\n *          <p>To delete Lambda event source mappings that invoke a function, use <a>DeleteEventSourceMapping</a>.\n *       For Amazon Web Services services and resources that invoke your function directly, delete the trigger in the service where you\n *       originally configured it.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { LambdaClient, DeleteFunctionCommand } from \"@aws-sdk/client-lambda\"; // ES Modules import\n * // const { LambdaClient, DeleteFunctionCommand } = require(\"@aws-sdk/client-lambda\"); // CommonJS import\n * const client = new LambdaClient(config);\n * const command = new DeleteFunctionCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link DeleteFunctionCommandInput} for command's `input` shape.\n * @see {@link DeleteFunctionCommandOutput} for command's `response` shape.\n * @see {@link LambdaClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass DeleteFunctionCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"LambdaClient\";\n        const commandName = \"DeleteFunctionCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.DeleteFunctionRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: (output) => output,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restJson1_1.serializeAws_restJson1DeleteFunctionCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restJson1_1.deserializeAws_restJson1DeleteFunctionCommand)(output, context);\n    }\n}\nexports.DeleteFunctionCommand = DeleteFunctionCommand;\n//# sourceMappingURL=DeleteFunctionCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeleteFunctionConcurrencyCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restJson1_1 = require(\"../protocols/Aws_restJson1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Removes a concurrent execution limit from a function.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { LambdaClient, DeleteFunctionConcurrencyCommand } from \"@aws-sdk/client-lambda\"; // ES Modules import\n * // const { LambdaClient, DeleteFunctionConcurrencyCommand } = require(\"@aws-sdk/client-lambda\"); // CommonJS import\n * const client = new LambdaClient(config);\n * const command = new DeleteFunctionConcurrencyCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link DeleteFunctionConcurrencyCommandInput} for command's `input` shape.\n * @see {@link DeleteFunctionConcurrencyCommandOutput} for command's `response` shape.\n * @see {@link LambdaClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass DeleteFunctionConcurrencyCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"LambdaClient\";\n        const commandName = \"DeleteFunctionConcurrencyCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.DeleteFunctionConcurrencyRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: (output) => output,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restJson1_1.serializeAws_restJson1DeleteFunctionConcurrencyCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restJson1_1.deserializeAws_restJson1DeleteFunctionConcurrencyCommand)(output, context);\n    }\n}\nexports.DeleteFunctionConcurrencyCommand = DeleteFunctionConcurrencyCommand;\n//# sourceMappingURL=DeleteFunctionConcurrencyCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeleteFunctionEventInvokeConfigCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restJson1_1 = require(\"../protocols/Aws_restJson1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Deletes the configuration for asynchronous invocation for a function, version, or alias.</p>\n *          <p>To configure options for asynchronous invocation, use <a>PutFunctionEventInvokeConfig</a>.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { LambdaClient, DeleteFunctionEventInvokeConfigCommand } from \"@aws-sdk/client-lambda\"; // ES Modules import\n * // const { LambdaClient, DeleteFunctionEventInvokeConfigCommand } = require(\"@aws-sdk/client-lambda\"); // CommonJS import\n * const client = new LambdaClient(config);\n * const command = new DeleteFunctionEventInvokeConfigCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link DeleteFunctionEventInvokeConfigCommandInput} for command's `input` shape.\n * @see {@link DeleteFunctionEventInvokeConfigCommandOutput} for command's `response` shape.\n * @see {@link LambdaClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass DeleteFunctionEventInvokeConfigCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"LambdaClient\";\n        const commandName = \"DeleteFunctionEventInvokeConfigCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.DeleteFunctionEventInvokeConfigRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: (output) => output,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restJson1_1.serializeAws_restJson1DeleteFunctionEventInvokeConfigCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restJson1_1.deserializeAws_restJson1DeleteFunctionEventInvokeConfigCommand)(output, context);\n    }\n}\nexports.DeleteFunctionEventInvokeConfigCommand = DeleteFunctionEventInvokeConfigCommand;\n//# sourceMappingURL=DeleteFunctionEventInvokeConfigCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeleteLayerVersionCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restJson1_1 = require(\"../protocols/Aws_restJson1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Deletes a version of an <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html\">Lambda\n *         layer</a>. Deleted versions can no longer be viewed or added to functions. To avoid\n *       breaking functions, a copy of the version remains in Lambda until no functions refer to it.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { LambdaClient, DeleteLayerVersionCommand } from \"@aws-sdk/client-lambda\"; // ES Modules import\n * // const { LambdaClient, DeleteLayerVersionCommand } = require(\"@aws-sdk/client-lambda\"); // CommonJS import\n * const client = new LambdaClient(config);\n * const command = new DeleteLayerVersionCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link DeleteLayerVersionCommandInput} for command's `input` shape.\n * @see {@link DeleteLayerVersionCommandOutput} for command's `response` shape.\n * @see {@link LambdaClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass DeleteLayerVersionCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"LambdaClient\";\n        const commandName = \"DeleteLayerVersionCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.DeleteLayerVersionRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: (output) => output,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restJson1_1.serializeAws_restJson1DeleteLayerVersionCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restJson1_1.deserializeAws_restJson1DeleteLayerVersionCommand)(output, context);\n    }\n}\nexports.DeleteLayerVersionCommand = DeleteLayerVersionCommand;\n//# sourceMappingURL=DeleteLayerVersionCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DeleteProvisionedConcurrencyConfigCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restJson1_1 = require(\"../protocols/Aws_restJson1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Deletes the provisioned concurrency configuration for a function.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { LambdaClient, DeleteProvisionedConcurrencyConfigCommand } from \"@aws-sdk/client-lambda\"; // ES Modules import\n * // const { LambdaClient, DeleteProvisionedConcurrencyConfigCommand } = require(\"@aws-sdk/client-lambda\"); // CommonJS import\n * const client = new LambdaClient(config);\n * const command = new DeleteProvisionedConcurrencyConfigCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link DeleteProvisionedConcurrencyConfigCommandInput} for command's `input` shape.\n * @see {@link DeleteProvisionedConcurrencyConfigCommandOutput} for command's `response` shape.\n * @see {@link LambdaClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass DeleteProvisionedConcurrencyConfigCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"LambdaClient\";\n        const commandName = \"DeleteProvisionedConcurrencyConfigCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.DeleteProvisionedConcurrencyConfigRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: (output) => output,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restJson1_1.serializeAws_restJson1DeleteProvisionedConcurrencyConfigCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restJson1_1.deserializeAws_restJson1DeleteProvisionedConcurrencyConfigCommand)(output, context);\n    }\n}\nexports.DeleteProvisionedConcurrencyConfigCommand = DeleteProvisionedConcurrencyConfigCommand;\n//# sourceMappingURL=DeleteProvisionedConcurrencyConfigCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetAccountSettingsCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restJson1_1 = require(\"../protocols/Aws_restJson1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Retrieves details about your account's <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/limits.html\">limits</a> and usage in an Amazon Web Services Region.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { LambdaClient, GetAccountSettingsCommand } from \"@aws-sdk/client-lambda\"; // ES Modules import\n * // const { LambdaClient, GetAccountSettingsCommand } = require(\"@aws-sdk/client-lambda\"); // CommonJS import\n * const client = new LambdaClient(config);\n * const command = new GetAccountSettingsCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link GetAccountSettingsCommandInput} for command's `input` shape.\n * @see {@link GetAccountSettingsCommandOutput} for command's `response` shape.\n * @see {@link LambdaClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass GetAccountSettingsCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"LambdaClient\";\n        const commandName = \"GetAccountSettingsCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.GetAccountSettingsRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.GetAccountSettingsResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restJson1_1.serializeAws_restJson1GetAccountSettingsCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restJson1_1.deserializeAws_restJson1GetAccountSettingsCommand)(output, context);\n    }\n}\nexports.GetAccountSettingsCommand = GetAccountSettingsCommand;\n//# sourceMappingURL=GetAccountSettingsCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetAliasCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restJson1_1 = require(\"../protocols/Aws_restJson1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Returns details about a Lambda function <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/versioning-aliases.html\">alias</a>.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { LambdaClient, GetAliasCommand } from \"@aws-sdk/client-lambda\"; // ES Modules import\n * // const { LambdaClient, GetAliasCommand } = require(\"@aws-sdk/client-lambda\"); // CommonJS import\n * const client = new LambdaClient(config);\n * const command = new GetAliasCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link GetAliasCommandInput} for command's `input` shape.\n * @see {@link GetAliasCommandOutput} for command's `response` shape.\n * @see {@link LambdaClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass GetAliasCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"LambdaClient\";\n        const commandName = \"GetAliasCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.GetAliasRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.AliasConfiguration.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restJson1_1.serializeAws_restJson1GetAliasCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restJson1_1.deserializeAws_restJson1GetAliasCommand)(output, context);\n    }\n}\nexports.GetAliasCommand = GetAliasCommand;\n//# sourceMappingURL=GetAliasCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetCodeSigningConfigCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restJson1_1 = require(\"../protocols/Aws_restJson1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Returns information about the specified code signing configuration.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { LambdaClient, GetCodeSigningConfigCommand } from \"@aws-sdk/client-lambda\"; // ES Modules import\n * // const { LambdaClient, GetCodeSigningConfigCommand } = require(\"@aws-sdk/client-lambda\"); // CommonJS import\n * const client = new LambdaClient(config);\n * const command = new GetCodeSigningConfigCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link GetCodeSigningConfigCommandInput} for command's `input` shape.\n * @see {@link GetCodeSigningConfigCommandOutput} for command's `response` shape.\n * @see {@link LambdaClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass GetCodeSigningConfigCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"LambdaClient\";\n        const commandName = \"GetCodeSigningConfigCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.GetCodeSigningConfigRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.GetCodeSigningConfigResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restJson1_1.serializeAws_restJson1GetCodeSigningConfigCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restJson1_1.deserializeAws_restJson1GetCodeSigningConfigCommand)(output, context);\n    }\n}\nexports.GetCodeSigningConfigCommand = GetCodeSigningConfigCommand;\n//# sourceMappingURL=GetCodeSigningConfigCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetEventSourceMappingCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restJson1_1 = require(\"../protocols/Aws_restJson1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Returns details about an event source mapping. You can get the identifier of a mapping from the output of <a>ListEventSourceMappings</a>.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { LambdaClient, GetEventSourceMappingCommand } from \"@aws-sdk/client-lambda\"; // ES Modules import\n * // const { LambdaClient, GetEventSourceMappingCommand } = require(\"@aws-sdk/client-lambda\"); // CommonJS import\n * const client = new LambdaClient(config);\n * const command = new GetEventSourceMappingCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link GetEventSourceMappingCommandInput} for command's `input` shape.\n * @see {@link GetEventSourceMappingCommandOutput} for command's `response` shape.\n * @see {@link LambdaClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass GetEventSourceMappingCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"LambdaClient\";\n        const commandName = \"GetEventSourceMappingCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.GetEventSourceMappingRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.EventSourceMappingConfiguration.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restJson1_1.serializeAws_restJson1GetEventSourceMappingCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restJson1_1.deserializeAws_restJson1GetEventSourceMappingCommand)(output, context);\n    }\n}\nexports.GetEventSourceMappingCommand = GetEventSourceMappingCommand;\n//# sourceMappingURL=GetEventSourceMappingCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetFunctionCodeSigningConfigCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restJson1_1 = require(\"../protocols/Aws_restJson1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Returns the code signing configuration for the specified function.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { LambdaClient, GetFunctionCodeSigningConfigCommand } from \"@aws-sdk/client-lambda\"; // ES Modules import\n * // const { LambdaClient, GetFunctionCodeSigningConfigCommand } = require(\"@aws-sdk/client-lambda\"); // CommonJS import\n * const client = new LambdaClient(config);\n * const command = new GetFunctionCodeSigningConfigCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link GetFunctionCodeSigningConfigCommandInput} for command's `input` shape.\n * @see {@link GetFunctionCodeSigningConfigCommandOutput} for command's `response` shape.\n * @see {@link LambdaClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass GetFunctionCodeSigningConfigCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"LambdaClient\";\n        const commandName = \"GetFunctionCodeSigningConfigCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.GetFunctionCodeSigningConfigRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.GetFunctionCodeSigningConfigResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restJson1_1.serializeAws_restJson1GetFunctionCodeSigningConfigCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restJson1_1.deserializeAws_restJson1GetFunctionCodeSigningConfigCommand)(output, context);\n    }\n}\nexports.GetFunctionCodeSigningConfigCommand = GetFunctionCodeSigningConfigCommand;\n//# sourceMappingURL=GetFunctionCodeSigningConfigCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetFunctionCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restJson1_1 = require(\"../protocols/Aws_restJson1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Returns information about the function or function version, with a link to download the deployment package\n *       that's valid for 10 minutes. If you specify a function version, only details that are specific to that version are\n *       returned.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { LambdaClient, GetFunctionCommand } from \"@aws-sdk/client-lambda\"; // ES Modules import\n * // const { LambdaClient, GetFunctionCommand } = require(\"@aws-sdk/client-lambda\"); // CommonJS import\n * const client = new LambdaClient(config);\n * const command = new GetFunctionCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link GetFunctionCommandInput} for command's `input` shape.\n * @see {@link GetFunctionCommandOutput} for command's `response` shape.\n * @see {@link LambdaClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass GetFunctionCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"LambdaClient\";\n        const commandName = \"GetFunctionCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.GetFunctionRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.GetFunctionResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restJson1_1.serializeAws_restJson1GetFunctionCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restJson1_1.deserializeAws_restJson1GetFunctionCommand)(output, context);\n    }\n}\nexports.GetFunctionCommand = GetFunctionCommand;\n//# sourceMappingURL=GetFunctionCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetFunctionConcurrencyCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restJson1_1 = require(\"../protocols/Aws_restJson1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Returns details about the reserved concurrency configuration for a function. To set a concurrency limit for a\n *       function, use <a>PutFunctionConcurrency</a>.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { LambdaClient, GetFunctionConcurrencyCommand } from \"@aws-sdk/client-lambda\"; // ES Modules import\n * // const { LambdaClient, GetFunctionConcurrencyCommand } = require(\"@aws-sdk/client-lambda\"); // CommonJS import\n * const client = new LambdaClient(config);\n * const command = new GetFunctionConcurrencyCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link GetFunctionConcurrencyCommandInput} for command's `input` shape.\n * @see {@link GetFunctionConcurrencyCommandOutput} for command's `response` shape.\n * @see {@link LambdaClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass GetFunctionConcurrencyCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"LambdaClient\";\n        const commandName = \"GetFunctionConcurrencyCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.GetFunctionConcurrencyRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.GetFunctionConcurrencyResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restJson1_1.serializeAws_restJson1GetFunctionConcurrencyCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restJson1_1.deserializeAws_restJson1GetFunctionConcurrencyCommand)(output, context);\n    }\n}\nexports.GetFunctionConcurrencyCommand = GetFunctionConcurrencyCommand;\n//# sourceMappingURL=GetFunctionConcurrencyCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetFunctionConfigurationCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restJson1_1 = require(\"../protocols/Aws_restJson1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Returns the version-specific settings of a Lambda function or version. The output includes only options that\n *       can vary between versions of a function. To modify these settings, use <a>UpdateFunctionConfiguration</a>.</p>\n *          <p>To get all of a function's details, including function-level settings, use <a>GetFunction</a>.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { LambdaClient, GetFunctionConfigurationCommand } from \"@aws-sdk/client-lambda\"; // ES Modules import\n * // const { LambdaClient, GetFunctionConfigurationCommand } = require(\"@aws-sdk/client-lambda\"); // CommonJS import\n * const client = new LambdaClient(config);\n * const command = new GetFunctionConfigurationCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link GetFunctionConfigurationCommandInput} for command's `input` shape.\n * @see {@link GetFunctionConfigurationCommandOutput} for command's `response` shape.\n * @see {@link LambdaClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass GetFunctionConfigurationCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"LambdaClient\";\n        const commandName = \"GetFunctionConfigurationCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.GetFunctionConfigurationRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.FunctionConfiguration.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restJson1_1.serializeAws_restJson1GetFunctionConfigurationCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restJson1_1.deserializeAws_restJson1GetFunctionConfigurationCommand)(output, context);\n    }\n}\nexports.GetFunctionConfigurationCommand = GetFunctionConfigurationCommand;\n//# sourceMappingURL=GetFunctionConfigurationCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetFunctionEventInvokeConfigCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restJson1_1 = require(\"../protocols/Aws_restJson1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Retrieves the configuration for asynchronous invocation for a function, version, or alias.</p>\n *          <p>To configure options for asynchronous invocation, use <a>PutFunctionEventInvokeConfig</a>.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { LambdaClient, GetFunctionEventInvokeConfigCommand } from \"@aws-sdk/client-lambda\"; // ES Modules import\n * // const { LambdaClient, GetFunctionEventInvokeConfigCommand } = require(\"@aws-sdk/client-lambda\"); // CommonJS import\n * const client = new LambdaClient(config);\n * const command = new GetFunctionEventInvokeConfigCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link GetFunctionEventInvokeConfigCommandInput} for command's `input` shape.\n * @see {@link GetFunctionEventInvokeConfigCommandOutput} for command's `response` shape.\n * @see {@link LambdaClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass GetFunctionEventInvokeConfigCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"LambdaClient\";\n        const commandName = \"GetFunctionEventInvokeConfigCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.GetFunctionEventInvokeConfigRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.FunctionEventInvokeConfig.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restJson1_1.serializeAws_restJson1GetFunctionEventInvokeConfigCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restJson1_1.deserializeAws_restJson1GetFunctionEventInvokeConfigCommand)(output, context);\n    }\n}\nexports.GetFunctionEventInvokeConfigCommand = GetFunctionEventInvokeConfigCommand;\n//# sourceMappingURL=GetFunctionEventInvokeConfigCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetLayerVersionByArnCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restJson1_1 = require(\"../protocols/Aws_restJson1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Returns information about a version of an <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html\">Lambda\n *         layer</a>, with a link to download the layer archive\n *         that's valid for 10 minutes.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { LambdaClient, GetLayerVersionByArnCommand } from \"@aws-sdk/client-lambda\"; // ES Modules import\n * // const { LambdaClient, GetLayerVersionByArnCommand } = require(\"@aws-sdk/client-lambda\"); // CommonJS import\n * const client = new LambdaClient(config);\n * const command = new GetLayerVersionByArnCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link GetLayerVersionByArnCommandInput} for command's `input` shape.\n * @see {@link GetLayerVersionByArnCommandOutput} for command's `response` shape.\n * @see {@link LambdaClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass GetLayerVersionByArnCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"LambdaClient\";\n        const commandName = \"GetLayerVersionByArnCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.GetLayerVersionByArnRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.GetLayerVersionResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restJson1_1.serializeAws_restJson1GetLayerVersionByArnCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restJson1_1.deserializeAws_restJson1GetLayerVersionByArnCommand)(output, context);\n    }\n}\nexports.GetLayerVersionByArnCommand = GetLayerVersionByArnCommand;\n//# sourceMappingURL=GetLayerVersionByArnCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetLayerVersionCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restJson1_1 = require(\"../protocols/Aws_restJson1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Returns information about a version of an <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html\">Lambda\n *         layer</a>, with a link to download the layer archive\n *         that's valid for 10 minutes.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { LambdaClient, GetLayerVersionCommand } from \"@aws-sdk/client-lambda\"; // ES Modules import\n * // const { LambdaClient, GetLayerVersionCommand } = require(\"@aws-sdk/client-lambda\"); // CommonJS import\n * const client = new LambdaClient(config);\n * const command = new GetLayerVersionCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link GetLayerVersionCommandInput} for command's `input` shape.\n * @see {@link GetLayerVersionCommandOutput} for command's `response` shape.\n * @see {@link LambdaClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass GetLayerVersionCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"LambdaClient\";\n        const commandName = \"GetLayerVersionCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.GetLayerVersionRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.GetLayerVersionResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restJson1_1.serializeAws_restJson1GetLayerVersionCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restJson1_1.deserializeAws_restJson1GetLayerVersionCommand)(output, context);\n    }\n}\nexports.GetLayerVersionCommand = GetLayerVersionCommand;\n//# sourceMappingURL=GetLayerVersionCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetLayerVersionPolicyCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restJson1_1 = require(\"../protocols/Aws_restJson1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Returns the permission policy for a version of an <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html\">Lambda\n *         layer</a>. For more information, see <a>AddLayerVersionPermission</a>.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { LambdaClient, GetLayerVersionPolicyCommand } from \"@aws-sdk/client-lambda\"; // ES Modules import\n * // const { LambdaClient, GetLayerVersionPolicyCommand } = require(\"@aws-sdk/client-lambda\"); // CommonJS import\n * const client = new LambdaClient(config);\n * const command = new GetLayerVersionPolicyCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link GetLayerVersionPolicyCommandInput} for command's `input` shape.\n * @see {@link GetLayerVersionPolicyCommandOutput} for command's `response` shape.\n * @see {@link LambdaClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass GetLayerVersionPolicyCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"LambdaClient\";\n        const commandName = \"GetLayerVersionPolicyCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.GetLayerVersionPolicyRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.GetLayerVersionPolicyResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restJson1_1.serializeAws_restJson1GetLayerVersionPolicyCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restJson1_1.deserializeAws_restJson1GetLayerVersionPolicyCommand)(output, context);\n    }\n}\nexports.GetLayerVersionPolicyCommand = GetLayerVersionPolicyCommand;\n//# sourceMappingURL=GetLayerVersionPolicyCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetPolicyCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restJson1_1 = require(\"../protocols/Aws_restJson1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Returns the <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/access-control-resource-based.html\">resource-based IAM policy</a> for a function, version, or alias.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { LambdaClient, GetPolicyCommand } from \"@aws-sdk/client-lambda\"; // ES Modules import\n * // const { LambdaClient, GetPolicyCommand } = require(\"@aws-sdk/client-lambda\"); // CommonJS import\n * const client = new LambdaClient(config);\n * const command = new GetPolicyCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link GetPolicyCommandInput} for command's `input` shape.\n * @see {@link GetPolicyCommandOutput} for command's `response` shape.\n * @see {@link LambdaClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass GetPolicyCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"LambdaClient\";\n        const commandName = \"GetPolicyCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.GetPolicyRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.GetPolicyResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restJson1_1.serializeAws_restJson1GetPolicyCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restJson1_1.deserializeAws_restJson1GetPolicyCommand)(output, context);\n    }\n}\nexports.GetPolicyCommand = GetPolicyCommand;\n//# sourceMappingURL=GetPolicyCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetProvisionedConcurrencyConfigCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restJson1_1 = require(\"../protocols/Aws_restJson1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Retrieves the provisioned concurrency configuration for a function's alias or version.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { LambdaClient, GetProvisionedConcurrencyConfigCommand } from \"@aws-sdk/client-lambda\"; // ES Modules import\n * // const { LambdaClient, GetProvisionedConcurrencyConfigCommand } = require(\"@aws-sdk/client-lambda\"); // CommonJS import\n * const client = new LambdaClient(config);\n * const command = new GetProvisionedConcurrencyConfigCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link GetProvisionedConcurrencyConfigCommandInput} for command's `input` shape.\n * @see {@link GetProvisionedConcurrencyConfigCommandOutput} for command's `response` shape.\n * @see {@link LambdaClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass GetProvisionedConcurrencyConfigCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"LambdaClient\";\n        const commandName = \"GetProvisionedConcurrencyConfigCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.GetProvisionedConcurrencyConfigRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.GetProvisionedConcurrencyConfigResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restJson1_1.serializeAws_restJson1GetProvisionedConcurrencyConfigCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restJson1_1.deserializeAws_restJson1GetProvisionedConcurrencyConfigCommand)(output, context);\n    }\n}\nexports.GetProvisionedConcurrencyConfigCommand = GetProvisionedConcurrencyConfigCommand;\n//# sourceMappingURL=GetProvisionedConcurrencyConfigCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InvokeAsyncCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restJson1_1 = require(\"../protocols/Aws_restJson1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * @deprecated\n *\n * <important>\n *             <p>For asynchronous function invocation, use <a>Invoke</a>.</p>\n *          </important>\n *          <p>Invokes a function asynchronously.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { LambdaClient, InvokeAsyncCommand } from \"@aws-sdk/client-lambda\"; // ES Modules import\n * // const { LambdaClient, InvokeAsyncCommand } = require(\"@aws-sdk/client-lambda\"); // CommonJS import\n * const client = new LambdaClient(config);\n * const command = new InvokeAsyncCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link InvokeAsyncCommandInput} for command's `input` shape.\n * @see {@link InvokeAsyncCommandOutput} for command's `response` shape.\n * @see {@link LambdaClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass InvokeAsyncCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"LambdaClient\";\n        const commandName = \"InvokeAsyncCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.InvokeAsyncRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.InvokeAsyncResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restJson1_1.serializeAws_restJson1InvokeAsyncCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restJson1_1.deserializeAws_restJson1InvokeAsyncCommand)(output, context);\n    }\n}\nexports.InvokeAsyncCommand = InvokeAsyncCommand;\n//# sourceMappingURL=InvokeAsyncCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InvokeCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restJson1_1 = require(\"../protocols/Aws_restJson1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Invokes a Lambda function. You can invoke a function synchronously (and wait for the response), or\n *       asynchronously. To invoke a function asynchronously, set <code>InvocationType</code> to <code>Event</code>.</p>\n *\n *          <p>For <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/invocation-sync.html\">synchronous invocation</a>,\n *       details about the function response, including errors, are included in the response body and headers. For either\n *       invocation type, you can find more information in the <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/monitoring-functions.html\">execution log</a> and <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-x-ray.html\">trace</a>.</p>\n *\n *          <p>When an error occurs, your function may be invoked multiple times. Retry behavior varies by error type,\n *       client, event source, and invocation type. For example, if you invoke a function asynchronously and it returns an\n *       error, Lambda executes the function up to two more times. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/retries-on-errors.html\">Retry Behavior</a>.</p>\n *\n *          <p>For <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html\">asynchronous invocation</a>,\n *       Lambda adds events to a queue before sending them to your function. If your function does not have enough capacity\n *       to keep up with the queue, events may be lost. Occasionally, your function may receive the same event multiple\n *       times, even if no error occurs. To retain events that were not processed, configure your function with a <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html#dlq\">dead-letter queue</a>.</p>\n *\n *          <p>The status code in the API response doesn't reflect function errors. Error codes are reserved for errors that\n *       prevent your function from executing, such as permissions errors, <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/limits.html\">limit errors</a>, or issues with your function's code and configuration.\n *       For example, Lambda returns <code>TooManyRequestsException</code> if executing the function would cause you to\n *       exceed a concurrency limit at either the account level (<code>ConcurrentInvocationLimitExceeded</code>) or\n *       function level (<code>ReservedFunctionConcurrentInvocationLimitExceeded</code>).</p>\n *\n *          <p>For functions with a long timeout, your client might be disconnected during synchronous invocation while it\n *       waits for a response. Configure your HTTP client, SDK, firewall, proxy, or operating system to allow for long\n *       connections with timeout or keep-alive settings.</p>\n *\n *          <p>This operation requires permission for the <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/list_awslambda.html\">lambda:InvokeFunction</a> action.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { LambdaClient, InvokeCommand } from \"@aws-sdk/client-lambda\"; // ES Modules import\n * // const { LambdaClient, InvokeCommand } = require(\"@aws-sdk/client-lambda\"); // CommonJS import\n * const client = new LambdaClient(config);\n * const command = new InvokeCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link InvokeCommandInput} for command's `input` shape.\n * @see {@link InvokeCommandOutput} for command's `response` shape.\n * @see {@link LambdaClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass InvokeCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"LambdaClient\";\n        const commandName = \"InvokeCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.InvocationRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.InvocationResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restJson1_1.serializeAws_restJson1InvokeCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restJson1_1.deserializeAws_restJson1InvokeCommand)(output, context);\n    }\n}\nexports.InvokeCommand = InvokeCommand;\n//# sourceMappingURL=InvokeCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListAliasesCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restJson1_1 = require(\"../protocols/Aws_restJson1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Returns a list of <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/versioning-aliases.html\">aliases</a>\n *       for a Lambda function.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { LambdaClient, ListAliasesCommand } from \"@aws-sdk/client-lambda\"; // ES Modules import\n * // const { LambdaClient, ListAliasesCommand } = require(\"@aws-sdk/client-lambda\"); // CommonJS import\n * const client = new LambdaClient(config);\n * const command = new ListAliasesCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link ListAliasesCommandInput} for command's `input` shape.\n * @see {@link ListAliasesCommandOutput} for command's `response` shape.\n * @see {@link LambdaClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass ListAliasesCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"LambdaClient\";\n        const commandName = \"ListAliasesCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.ListAliasesRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.ListAliasesResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restJson1_1.serializeAws_restJson1ListAliasesCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restJson1_1.deserializeAws_restJson1ListAliasesCommand)(output, context);\n    }\n}\nexports.ListAliasesCommand = ListAliasesCommand;\n//# sourceMappingURL=ListAliasesCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListCodeSigningConfigsCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restJson1_1 = require(\"../protocols/Aws_restJson1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Returns a list of <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuring-codesigning.html\">code\n *         signing configurations</a>. A request returns up to 10,000 configurations per\n *       call. You can use the <code>MaxItems</code> parameter to return fewer configurations per call. </p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { LambdaClient, ListCodeSigningConfigsCommand } from \"@aws-sdk/client-lambda\"; // ES Modules import\n * // const { LambdaClient, ListCodeSigningConfigsCommand } = require(\"@aws-sdk/client-lambda\"); // CommonJS import\n * const client = new LambdaClient(config);\n * const command = new ListCodeSigningConfigsCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link ListCodeSigningConfigsCommandInput} for command's `input` shape.\n * @see {@link ListCodeSigningConfigsCommandOutput} for command's `response` shape.\n * @see {@link LambdaClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass ListCodeSigningConfigsCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"LambdaClient\";\n        const commandName = \"ListCodeSigningConfigsCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.ListCodeSigningConfigsRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.ListCodeSigningConfigsResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restJson1_1.serializeAws_restJson1ListCodeSigningConfigsCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restJson1_1.deserializeAws_restJson1ListCodeSigningConfigsCommand)(output, context);\n    }\n}\nexports.ListCodeSigningConfigsCommand = ListCodeSigningConfigsCommand;\n//# sourceMappingURL=ListCodeSigningConfigsCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListEventSourceMappingsCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restJson1_1 = require(\"../protocols/Aws_restJson1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Lists event source mappings. Specify an <code>EventSourceArn</code> to only show event source mappings for a\n *       single event source.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { LambdaClient, ListEventSourceMappingsCommand } from \"@aws-sdk/client-lambda\"; // ES Modules import\n * // const { LambdaClient, ListEventSourceMappingsCommand } = require(\"@aws-sdk/client-lambda\"); // CommonJS import\n * const client = new LambdaClient(config);\n * const command = new ListEventSourceMappingsCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link ListEventSourceMappingsCommandInput} for command's `input` shape.\n * @see {@link ListEventSourceMappingsCommandOutput} for command's `response` shape.\n * @see {@link LambdaClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass ListEventSourceMappingsCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"LambdaClient\";\n        const commandName = \"ListEventSourceMappingsCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.ListEventSourceMappingsRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.ListEventSourceMappingsResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restJson1_1.serializeAws_restJson1ListEventSourceMappingsCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restJson1_1.deserializeAws_restJson1ListEventSourceMappingsCommand)(output, context);\n    }\n}\nexports.ListEventSourceMappingsCommand = ListEventSourceMappingsCommand;\n//# sourceMappingURL=ListEventSourceMappingsCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListFunctionEventInvokeConfigsCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restJson1_1 = require(\"../protocols/Aws_restJson1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Retrieves a list of configurations for asynchronous invocation for a function.</p>\n *          <p>To configure options for asynchronous invocation, use <a>PutFunctionEventInvokeConfig</a>.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { LambdaClient, ListFunctionEventInvokeConfigsCommand } from \"@aws-sdk/client-lambda\"; // ES Modules import\n * // const { LambdaClient, ListFunctionEventInvokeConfigsCommand } = require(\"@aws-sdk/client-lambda\"); // CommonJS import\n * const client = new LambdaClient(config);\n * const command = new ListFunctionEventInvokeConfigsCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link ListFunctionEventInvokeConfigsCommandInput} for command's `input` shape.\n * @see {@link ListFunctionEventInvokeConfigsCommandOutput} for command's `response` shape.\n * @see {@link LambdaClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass ListFunctionEventInvokeConfigsCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"LambdaClient\";\n        const commandName = \"ListFunctionEventInvokeConfigsCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.ListFunctionEventInvokeConfigsRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.ListFunctionEventInvokeConfigsResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restJson1_1.serializeAws_restJson1ListFunctionEventInvokeConfigsCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restJson1_1.deserializeAws_restJson1ListFunctionEventInvokeConfigsCommand)(output, context);\n    }\n}\nexports.ListFunctionEventInvokeConfigsCommand = ListFunctionEventInvokeConfigsCommand;\n//# sourceMappingURL=ListFunctionEventInvokeConfigsCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListFunctionsByCodeSigningConfigCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restJson1_1 = require(\"../protocols/Aws_restJson1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>List the functions that use the specified code signing configuration. You can use this method prior to deleting a\n *       code signing configuration, to verify that no functions are using it.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { LambdaClient, ListFunctionsByCodeSigningConfigCommand } from \"@aws-sdk/client-lambda\"; // ES Modules import\n * // const { LambdaClient, ListFunctionsByCodeSigningConfigCommand } = require(\"@aws-sdk/client-lambda\"); // CommonJS import\n * const client = new LambdaClient(config);\n * const command = new ListFunctionsByCodeSigningConfigCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link ListFunctionsByCodeSigningConfigCommandInput} for command's `input` shape.\n * @see {@link ListFunctionsByCodeSigningConfigCommandOutput} for command's `response` shape.\n * @see {@link LambdaClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass ListFunctionsByCodeSigningConfigCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"LambdaClient\";\n        const commandName = \"ListFunctionsByCodeSigningConfigCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.ListFunctionsByCodeSigningConfigRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.ListFunctionsByCodeSigningConfigResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restJson1_1.serializeAws_restJson1ListFunctionsByCodeSigningConfigCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restJson1_1.deserializeAws_restJson1ListFunctionsByCodeSigningConfigCommand)(output, context);\n    }\n}\nexports.ListFunctionsByCodeSigningConfigCommand = ListFunctionsByCodeSigningConfigCommand;\n//# sourceMappingURL=ListFunctionsByCodeSigningConfigCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListFunctionsCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restJson1_1 = require(\"../protocols/Aws_restJson1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Returns a list of Lambda functions, with the version-specific configuration of each. Lambda returns up to 50\n *       functions per call.</p>\n *          <p>Set <code>FunctionVersion</code> to <code>ALL</code> to include all published versions of each function in\n *       addition to the unpublished version. </p>\n *          <note>\n *             <p>The <code>ListFunctions</code> action returns a subset of the <a>FunctionConfiguration</a> fields.\n *       To get the additional fields (State, StateReasonCode, StateReason, LastUpdateStatus, LastUpdateStatusReason, LastUpdateStatusReasonCode)\n *       for a function or version, use <a>GetFunction</a>.</p>\n *          </note>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { LambdaClient, ListFunctionsCommand } from \"@aws-sdk/client-lambda\"; // ES Modules import\n * // const { LambdaClient, ListFunctionsCommand } = require(\"@aws-sdk/client-lambda\"); // CommonJS import\n * const client = new LambdaClient(config);\n * const command = new ListFunctionsCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link ListFunctionsCommandInput} for command's `input` shape.\n * @see {@link ListFunctionsCommandOutput} for command's `response` shape.\n * @see {@link LambdaClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass ListFunctionsCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"LambdaClient\";\n        const commandName = \"ListFunctionsCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.ListFunctionsRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.ListFunctionsResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restJson1_1.serializeAws_restJson1ListFunctionsCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restJson1_1.deserializeAws_restJson1ListFunctionsCommand)(output, context);\n    }\n}\nexports.ListFunctionsCommand = ListFunctionsCommand;\n//# sourceMappingURL=ListFunctionsCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListLayerVersionsCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restJson1_1 = require(\"../protocols/Aws_restJson1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Lists the versions of an <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html\">Lambda\n *         layer</a>. Versions that have been deleted aren't listed. Specify a <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html\">runtime identifier</a> to list only\n *       versions that indicate that they're compatible with that runtime.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { LambdaClient, ListLayerVersionsCommand } from \"@aws-sdk/client-lambda\"; // ES Modules import\n * // const { LambdaClient, ListLayerVersionsCommand } = require(\"@aws-sdk/client-lambda\"); // CommonJS import\n * const client = new LambdaClient(config);\n * const command = new ListLayerVersionsCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link ListLayerVersionsCommandInput} for command's `input` shape.\n * @see {@link ListLayerVersionsCommandOutput} for command's `response` shape.\n * @see {@link LambdaClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass ListLayerVersionsCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"LambdaClient\";\n        const commandName = \"ListLayerVersionsCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.ListLayerVersionsRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.ListLayerVersionsResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restJson1_1.serializeAws_restJson1ListLayerVersionsCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restJson1_1.deserializeAws_restJson1ListLayerVersionsCommand)(output, context);\n    }\n}\nexports.ListLayerVersionsCommand = ListLayerVersionsCommand;\n//# sourceMappingURL=ListLayerVersionsCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListLayersCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restJson1_1 = require(\"../protocols/Aws_restJson1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Lists <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html\">Lambda\n *         layers</a> and shows information about the latest version of each. Specify a <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html\">runtime identifier</a> to list only layers\n *       that indicate that they're compatible with that runtime.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { LambdaClient, ListLayersCommand } from \"@aws-sdk/client-lambda\"; // ES Modules import\n * // const { LambdaClient, ListLayersCommand } = require(\"@aws-sdk/client-lambda\"); // CommonJS import\n * const client = new LambdaClient(config);\n * const command = new ListLayersCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link ListLayersCommandInput} for command's `input` shape.\n * @see {@link ListLayersCommandOutput} for command's `response` shape.\n * @see {@link LambdaClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass ListLayersCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"LambdaClient\";\n        const commandName = \"ListLayersCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.ListLayersRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.ListLayersResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restJson1_1.serializeAws_restJson1ListLayersCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restJson1_1.deserializeAws_restJson1ListLayersCommand)(output, context);\n    }\n}\nexports.ListLayersCommand = ListLayersCommand;\n//# sourceMappingURL=ListLayersCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListProvisionedConcurrencyConfigsCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restJson1_1 = require(\"../protocols/Aws_restJson1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Retrieves a list of provisioned concurrency configurations for a function.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { LambdaClient, ListProvisionedConcurrencyConfigsCommand } from \"@aws-sdk/client-lambda\"; // ES Modules import\n * // const { LambdaClient, ListProvisionedConcurrencyConfigsCommand } = require(\"@aws-sdk/client-lambda\"); // CommonJS import\n * const client = new LambdaClient(config);\n * const command = new ListProvisionedConcurrencyConfigsCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link ListProvisionedConcurrencyConfigsCommandInput} for command's `input` shape.\n * @see {@link ListProvisionedConcurrencyConfigsCommandOutput} for command's `response` shape.\n * @see {@link LambdaClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass ListProvisionedConcurrencyConfigsCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"LambdaClient\";\n        const commandName = \"ListProvisionedConcurrencyConfigsCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.ListProvisionedConcurrencyConfigsRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.ListProvisionedConcurrencyConfigsResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restJson1_1.serializeAws_restJson1ListProvisionedConcurrencyConfigsCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restJson1_1.deserializeAws_restJson1ListProvisionedConcurrencyConfigsCommand)(output, context);\n    }\n}\nexports.ListProvisionedConcurrencyConfigsCommand = ListProvisionedConcurrencyConfigsCommand;\n//# sourceMappingURL=ListProvisionedConcurrencyConfigsCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListTagsCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restJson1_1 = require(\"../protocols/Aws_restJson1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Returns a function's <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/tagging.html\">tags</a>. You can\n *       also view tags with <a>GetFunction</a>.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { LambdaClient, ListTagsCommand } from \"@aws-sdk/client-lambda\"; // ES Modules import\n * // const { LambdaClient, ListTagsCommand } = require(\"@aws-sdk/client-lambda\"); // CommonJS import\n * const client = new LambdaClient(config);\n * const command = new ListTagsCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link ListTagsCommandInput} for command's `input` shape.\n * @see {@link ListTagsCommandOutput} for command's `response` shape.\n * @see {@link LambdaClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass ListTagsCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"LambdaClient\";\n        const commandName = \"ListTagsCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.ListTagsRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.ListTagsResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restJson1_1.serializeAws_restJson1ListTagsCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restJson1_1.deserializeAws_restJson1ListTagsCommand)(output, context);\n    }\n}\nexports.ListTagsCommand = ListTagsCommand;\n//# sourceMappingURL=ListTagsCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListVersionsByFunctionCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restJson1_1 = require(\"../protocols/Aws_restJson1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Returns a list of <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/versioning-aliases.html\">versions</a>,\n *       with the version-specific configuration of each. Lambda returns up to 50 versions per call.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { LambdaClient, ListVersionsByFunctionCommand } from \"@aws-sdk/client-lambda\"; // ES Modules import\n * // const { LambdaClient, ListVersionsByFunctionCommand } = require(\"@aws-sdk/client-lambda\"); // CommonJS import\n * const client = new LambdaClient(config);\n * const command = new ListVersionsByFunctionCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link ListVersionsByFunctionCommandInput} for command's `input` shape.\n * @see {@link ListVersionsByFunctionCommandOutput} for command's `response` shape.\n * @see {@link LambdaClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass ListVersionsByFunctionCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"LambdaClient\";\n        const commandName = \"ListVersionsByFunctionCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.ListVersionsByFunctionRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.ListVersionsByFunctionResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restJson1_1.serializeAws_restJson1ListVersionsByFunctionCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restJson1_1.deserializeAws_restJson1ListVersionsByFunctionCommand)(output, context);\n    }\n}\nexports.ListVersionsByFunctionCommand = ListVersionsByFunctionCommand;\n//# sourceMappingURL=ListVersionsByFunctionCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PublishLayerVersionCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restJson1_1 = require(\"../protocols/Aws_restJson1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Creates an <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html\">Lambda\n *         layer</a> from a ZIP archive. Each time you call <code>PublishLayerVersion</code> with the same\n *       layer name, a new version is created.</p>\n *          <p>Add layers to your function with <a>CreateFunction</a> or <a>UpdateFunctionConfiguration</a>.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { LambdaClient, PublishLayerVersionCommand } from \"@aws-sdk/client-lambda\"; // ES Modules import\n * // const { LambdaClient, PublishLayerVersionCommand } = require(\"@aws-sdk/client-lambda\"); // CommonJS import\n * const client = new LambdaClient(config);\n * const command = new PublishLayerVersionCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link PublishLayerVersionCommandInput} for command's `input` shape.\n * @see {@link PublishLayerVersionCommandOutput} for command's `response` shape.\n * @see {@link LambdaClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass PublishLayerVersionCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"LambdaClient\";\n        const commandName = \"PublishLayerVersionCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.PublishLayerVersionRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.PublishLayerVersionResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restJson1_1.serializeAws_restJson1PublishLayerVersionCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restJson1_1.deserializeAws_restJson1PublishLayerVersionCommand)(output, context);\n    }\n}\nexports.PublishLayerVersionCommand = PublishLayerVersionCommand;\n//# sourceMappingURL=PublishLayerVersionCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PublishVersionCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restJson1_1 = require(\"../protocols/Aws_restJson1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Creates a <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/versioning-aliases.html\">version</a> from the\n *       current code and configuration of a function. Use versions to create a snapshot of your function code and\n *       configuration that doesn't change.</p>\n *\n *          <p>Lambda doesn't publish a version if the function's configuration and code haven't changed since the last\n *       version. Use <a>UpdateFunctionCode</a> or <a>UpdateFunctionConfiguration</a> to update the\n *       function before publishing a version.</p>\n *\n *          <p>Clients can invoke versions directly or with an alias. To create an alias, use <a>CreateAlias</a>.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { LambdaClient, PublishVersionCommand } from \"@aws-sdk/client-lambda\"; // ES Modules import\n * // const { LambdaClient, PublishVersionCommand } = require(\"@aws-sdk/client-lambda\"); // CommonJS import\n * const client = new LambdaClient(config);\n * const command = new PublishVersionCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link PublishVersionCommandInput} for command's `input` shape.\n * @see {@link PublishVersionCommandOutput} for command's `response` shape.\n * @see {@link LambdaClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass PublishVersionCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"LambdaClient\";\n        const commandName = \"PublishVersionCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.PublishVersionRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.FunctionConfiguration.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restJson1_1.serializeAws_restJson1PublishVersionCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restJson1_1.deserializeAws_restJson1PublishVersionCommand)(output, context);\n    }\n}\nexports.PublishVersionCommand = PublishVersionCommand;\n//# sourceMappingURL=PublishVersionCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PutFunctionCodeSigningConfigCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restJson1_1 = require(\"../protocols/Aws_restJson1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Update the code signing configuration for the function. Changes to the code signing configuration take effect the\n *       next time a user tries to deploy a code package to the function. </p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { LambdaClient, PutFunctionCodeSigningConfigCommand } from \"@aws-sdk/client-lambda\"; // ES Modules import\n * // const { LambdaClient, PutFunctionCodeSigningConfigCommand } = require(\"@aws-sdk/client-lambda\"); // CommonJS import\n * const client = new LambdaClient(config);\n * const command = new PutFunctionCodeSigningConfigCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link PutFunctionCodeSigningConfigCommandInput} for command's `input` shape.\n * @see {@link PutFunctionCodeSigningConfigCommandOutput} for command's `response` shape.\n * @see {@link LambdaClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass PutFunctionCodeSigningConfigCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"LambdaClient\";\n        const commandName = \"PutFunctionCodeSigningConfigCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.PutFunctionCodeSigningConfigRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.PutFunctionCodeSigningConfigResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restJson1_1.serializeAws_restJson1PutFunctionCodeSigningConfigCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restJson1_1.deserializeAws_restJson1PutFunctionCodeSigningConfigCommand)(output, context);\n    }\n}\nexports.PutFunctionCodeSigningConfigCommand = PutFunctionCodeSigningConfigCommand;\n//# sourceMappingURL=PutFunctionCodeSigningConfigCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PutFunctionConcurrencyCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restJson1_1 = require(\"../protocols/Aws_restJson1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Sets the maximum number of simultaneous executions for a function, and reserves capacity for that concurrency\n *       level.</p>\n *          <p>Concurrency settings apply to the function as a whole, including all published versions and the unpublished\n *       version. Reserving concurrency both ensures that your function has capacity to process the specified number of\n *       events simultaneously, and prevents it from scaling beyond that level. Use <a>GetFunction</a> to see\n *       the current setting for a function.</p>\n *          <p>Use <a>GetAccountSettings</a> to see your Regional concurrency limit. You can reserve concurrency\n *       for as many functions as you like, as long as you leave at least 100 simultaneous executions unreserved for\n *       functions that aren't configured with a per-function limit. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/concurrent-executions.html\">Managing Concurrency</a>.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { LambdaClient, PutFunctionConcurrencyCommand } from \"@aws-sdk/client-lambda\"; // ES Modules import\n * // const { LambdaClient, PutFunctionConcurrencyCommand } = require(\"@aws-sdk/client-lambda\"); // CommonJS import\n * const client = new LambdaClient(config);\n * const command = new PutFunctionConcurrencyCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link PutFunctionConcurrencyCommandInput} for command's `input` shape.\n * @see {@link PutFunctionConcurrencyCommandOutput} for command's `response` shape.\n * @see {@link LambdaClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass PutFunctionConcurrencyCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"LambdaClient\";\n        const commandName = \"PutFunctionConcurrencyCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.PutFunctionConcurrencyRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.Concurrency.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restJson1_1.serializeAws_restJson1PutFunctionConcurrencyCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restJson1_1.deserializeAws_restJson1PutFunctionConcurrencyCommand)(output, context);\n    }\n}\nexports.PutFunctionConcurrencyCommand = PutFunctionConcurrencyCommand;\n//# sourceMappingURL=PutFunctionConcurrencyCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PutFunctionEventInvokeConfigCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restJson1_1 = require(\"../protocols/Aws_restJson1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Configures options for <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html\">asynchronous\n *         invocation</a> on a function, version, or alias. If a configuration already exists for a function, version,\n *       or alias, this operation overwrites it. If you exclude any settings, they are removed. To set one option without\n *       affecting existing settings for other options, use <a>UpdateFunctionEventInvokeConfig</a>.</p>\n *          <p>By default, Lambda retries an asynchronous invocation twice if the function returns an error. It retains\n *       events in a queue for up to six hours. When an event fails all processing attempts or stays in the asynchronous\n *       invocation queue for too long, Lambda discards it. To retain discarded events, configure a dead-letter queue with\n *         <a>UpdateFunctionConfiguration</a>.</p>\n *          <p>To send an invocation record to a queue, topic, function, or event bus, specify a <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/invocation-async.html#invocation-async-destinations\">destination</a>. You can configure separate destinations for successful invocations (on-success) and events\n *       that fail all processing attempts (on-failure). You can configure destinations in addition to or instead of a\n *       dead-letter queue.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { LambdaClient, PutFunctionEventInvokeConfigCommand } from \"@aws-sdk/client-lambda\"; // ES Modules import\n * // const { LambdaClient, PutFunctionEventInvokeConfigCommand } = require(\"@aws-sdk/client-lambda\"); // CommonJS import\n * const client = new LambdaClient(config);\n * const command = new PutFunctionEventInvokeConfigCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link PutFunctionEventInvokeConfigCommandInput} for command's `input` shape.\n * @see {@link PutFunctionEventInvokeConfigCommandOutput} for command's `response` shape.\n * @see {@link LambdaClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass PutFunctionEventInvokeConfigCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"LambdaClient\";\n        const commandName = \"PutFunctionEventInvokeConfigCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.PutFunctionEventInvokeConfigRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.FunctionEventInvokeConfig.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restJson1_1.serializeAws_restJson1PutFunctionEventInvokeConfigCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restJson1_1.deserializeAws_restJson1PutFunctionEventInvokeConfigCommand)(output, context);\n    }\n}\nexports.PutFunctionEventInvokeConfigCommand = PutFunctionEventInvokeConfigCommand;\n//# sourceMappingURL=PutFunctionEventInvokeConfigCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PutProvisionedConcurrencyConfigCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restJson1_1 = require(\"../protocols/Aws_restJson1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Adds a provisioned concurrency configuration to a function's alias or version.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { LambdaClient, PutProvisionedConcurrencyConfigCommand } from \"@aws-sdk/client-lambda\"; // ES Modules import\n * // const { LambdaClient, PutProvisionedConcurrencyConfigCommand } = require(\"@aws-sdk/client-lambda\"); // CommonJS import\n * const client = new LambdaClient(config);\n * const command = new PutProvisionedConcurrencyConfigCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link PutProvisionedConcurrencyConfigCommandInput} for command's `input` shape.\n * @see {@link PutProvisionedConcurrencyConfigCommandOutput} for command's `response` shape.\n * @see {@link LambdaClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass PutProvisionedConcurrencyConfigCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"LambdaClient\";\n        const commandName = \"PutProvisionedConcurrencyConfigCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.PutProvisionedConcurrencyConfigRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.PutProvisionedConcurrencyConfigResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restJson1_1.serializeAws_restJson1PutProvisionedConcurrencyConfigCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restJson1_1.deserializeAws_restJson1PutProvisionedConcurrencyConfigCommand)(output, context);\n    }\n}\nexports.PutProvisionedConcurrencyConfigCommand = PutProvisionedConcurrencyConfigCommand;\n//# sourceMappingURL=PutProvisionedConcurrencyConfigCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RemoveLayerVersionPermissionCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restJson1_1 = require(\"../protocols/Aws_restJson1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Removes a statement from the permissions policy for a version of an <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html\">Lambda\n *         layer</a>. For more information, see\n *         <a>AddLayerVersionPermission</a>.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { LambdaClient, RemoveLayerVersionPermissionCommand } from \"@aws-sdk/client-lambda\"; // ES Modules import\n * // const { LambdaClient, RemoveLayerVersionPermissionCommand } = require(\"@aws-sdk/client-lambda\"); // CommonJS import\n * const client = new LambdaClient(config);\n * const command = new RemoveLayerVersionPermissionCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link RemoveLayerVersionPermissionCommandInput} for command's `input` shape.\n * @see {@link RemoveLayerVersionPermissionCommandOutput} for command's `response` shape.\n * @see {@link LambdaClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass RemoveLayerVersionPermissionCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"LambdaClient\";\n        const commandName = \"RemoveLayerVersionPermissionCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.RemoveLayerVersionPermissionRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: (output) => output,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restJson1_1.serializeAws_restJson1RemoveLayerVersionPermissionCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restJson1_1.deserializeAws_restJson1RemoveLayerVersionPermissionCommand)(output, context);\n    }\n}\nexports.RemoveLayerVersionPermissionCommand = RemoveLayerVersionPermissionCommand;\n//# sourceMappingURL=RemoveLayerVersionPermissionCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RemovePermissionCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restJson1_1 = require(\"../protocols/Aws_restJson1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Revokes function-use permission from an Amazon Web Services service or another account. You can get the ID of the statement\n *       from the output of <a>GetPolicy</a>.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { LambdaClient, RemovePermissionCommand } from \"@aws-sdk/client-lambda\"; // ES Modules import\n * // const { LambdaClient, RemovePermissionCommand } = require(\"@aws-sdk/client-lambda\"); // CommonJS import\n * const client = new LambdaClient(config);\n * const command = new RemovePermissionCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link RemovePermissionCommandInput} for command's `input` shape.\n * @see {@link RemovePermissionCommandOutput} for command's `response` shape.\n * @see {@link LambdaClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass RemovePermissionCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"LambdaClient\";\n        const commandName = \"RemovePermissionCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.RemovePermissionRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: (output) => output,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restJson1_1.serializeAws_restJson1RemovePermissionCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restJson1_1.deserializeAws_restJson1RemovePermissionCommand)(output, context);\n    }\n}\nexports.RemovePermissionCommand = RemovePermissionCommand;\n//# sourceMappingURL=RemovePermissionCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TagResourceCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restJson1_1 = require(\"../protocols/Aws_restJson1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Adds <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/tagging.html\">tags</a> to a function.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { LambdaClient, TagResourceCommand } from \"@aws-sdk/client-lambda\"; // ES Modules import\n * // const { LambdaClient, TagResourceCommand } = require(\"@aws-sdk/client-lambda\"); // CommonJS import\n * const client = new LambdaClient(config);\n * const command = new TagResourceCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link TagResourceCommandInput} for command's `input` shape.\n * @see {@link TagResourceCommandOutput} for command's `response` shape.\n * @see {@link LambdaClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass TagResourceCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"LambdaClient\";\n        const commandName = \"TagResourceCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.TagResourceRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: (output) => output,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restJson1_1.serializeAws_restJson1TagResourceCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restJson1_1.deserializeAws_restJson1TagResourceCommand)(output, context);\n    }\n}\nexports.TagResourceCommand = TagResourceCommand;\n//# sourceMappingURL=TagResourceCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UntagResourceCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restJson1_1 = require(\"../protocols/Aws_restJson1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Removes <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/tagging.html\">tags</a> from a function.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { LambdaClient, UntagResourceCommand } from \"@aws-sdk/client-lambda\"; // ES Modules import\n * // const { LambdaClient, UntagResourceCommand } = require(\"@aws-sdk/client-lambda\"); // CommonJS import\n * const client = new LambdaClient(config);\n * const command = new UntagResourceCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link UntagResourceCommandInput} for command's `input` shape.\n * @see {@link UntagResourceCommandOutput} for command's `response` shape.\n * @see {@link LambdaClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass UntagResourceCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"LambdaClient\";\n        const commandName = \"UntagResourceCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.UntagResourceRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: (output) => output,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restJson1_1.serializeAws_restJson1UntagResourceCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restJson1_1.deserializeAws_restJson1UntagResourceCommand)(output, context);\n    }\n}\nexports.UntagResourceCommand = UntagResourceCommand;\n//# sourceMappingURL=UntagResourceCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UpdateAliasCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restJson1_1 = require(\"../protocols/Aws_restJson1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Updates the configuration of a Lambda function <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/versioning-aliases.html\">alias</a>.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { LambdaClient, UpdateAliasCommand } from \"@aws-sdk/client-lambda\"; // ES Modules import\n * // const { LambdaClient, UpdateAliasCommand } = require(\"@aws-sdk/client-lambda\"); // CommonJS import\n * const client = new LambdaClient(config);\n * const command = new UpdateAliasCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link UpdateAliasCommandInput} for command's `input` shape.\n * @see {@link UpdateAliasCommandOutput} for command's `response` shape.\n * @see {@link LambdaClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass UpdateAliasCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"LambdaClient\";\n        const commandName = \"UpdateAliasCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.UpdateAliasRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.AliasConfiguration.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restJson1_1.serializeAws_restJson1UpdateAliasCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restJson1_1.deserializeAws_restJson1UpdateAliasCommand)(output, context);\n    }\n}\nexports.UpdateAliasCommand = UpdateAliasCommand;\n//# sourceMappingURL=UpdateAliasCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UpdateCodeSigningConfigCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restJson1_1 = require(\"../protocols/Aws_restJson1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Update the code signing configuration. Changes to the code signing configuration take effect the next time a\n *       user tries to deploy a code package to the function. </p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { LambdaClient, UpdateCodeSigningConfigCommand } from \"@aws-sdk/client-lambda\"; // ES Modules import\n * // const { LambdaClient, UpdateCodeSigningConfigCommand } = require(\"@aws-sdk/client-lambda\"); // CommonJS import\n * const client = new LambdaClient(config);\n * const command = new UpdateCodeSigningConfigCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link UpdateCodeSigningConfigCommandInput} for command's `input` shape.\n * @see {@link UpdateCodeSigningConfigCommandOutput} for command's `response` shape.\n * @see {@link LambdaClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass UpdateCodeSigningConfigCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"LambdaClient\";\n        const commandName = \"UpdateCodeSigningConfigCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.UpdateCodeSigningConfigRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.UpdateCodeSigningConfigResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restJson1_1.serializeAws_restJson1UpdateCodeSigningConfigCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restJson1_1.deserializeAws_restJson1UpdateCodeSigningConfigCommand)(output, context);\n    }\n}\nexports.UpdateCodeSigningConfigCommand = UpdateCodeSigningConfigCommand;\n//# sourceMappingURL=UpdateCodeSigningConfigCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UpdateEventSourceMappingCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restJson1_1 = require(\"../protocols/Aws_restJson1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Updates an event source mapping. You can change the function that Lambda invokes, or pause invocation and resume later from the same location.</p>\n *          <p>The following error handling options are only available for stream sources (DynamoDB and Kinesis):</p>\n *          <ul>\n *             <li>\n *                <p>\n *                   <code>BisectBatchOnFunctionError</code> - If the function returns an error, split the batch in two and retry.</p>\n *             </li>\n *             <li>\n *                <p>\n *                   <code>DestinationConfig</code> - Send discarded records to an Amazon SQS queue or Amazon SNS topic.</p>\n *             </li>\n *             <li>\n *                <p>\n *                   <code>MaximumRecordAgeInSeconds</code> - Discard records older than the specified age. The default value is infinite (-1). When set to infinite (-1), failed records are retried until the record expires</p>\n *             </li>\n *             <li>\n *                <p>\n *                   <code>MaximumRetryAttempts</code> - Discard records after the specified number of retries. The default value is infinite (-1). When set to infinite (-1), failed records are retried until the record expires.</p>\n *             </li>\n *             <li>\n *                <p>\n *                   <code>ParallelizationFactor</code> - Process multiple batches from each shard concurrently.</p>\n *             </li>\n *          </ul>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { LambdaClient, UpdateEventSourceMappingCommand } from \"@aws-sdk/client-lambda\"; // ES Modules import\n * // const { LambdaClient, UpdateEventSourceMappingCommand } = require(\"@aws-sdk/client-lambda\"); // CommonJS import\n * const client = new LambdaClient(config);\n * const command = new UpdateEventSourceMappingCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link UpdateEventSourceMappingCommandInput} for command's `input` shape.\n * @see {@link UpdateEventSourceMappingCommandOutput} for command's `response` shape.\n * @see {@link LambdaClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass UpdateEventSourceMappingCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"LambdaClient\";\n        const commandName = \"UpdateEventSourceMappingCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.UpdateEventSourceMappingRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.EventSourceMappingConfiguration.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restJson1_1.serializeAws_restJson1UpdateEventSourceMappingCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restJson1_1.deserializeAws_restJson1UpdateEventSourceMappingCommand)(output, context);\n    }\n}\nexports.UpdateEventSourceMappingCommand = UpdateEventSourceMappingCommand;\n//# sourceMappingURL=UpdateEventSourceMappingCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UpdateFunctionCodeCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restJson1_1 = require(\"../protocols/Aws_restJson1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Updates a Lambda function's code. If code signing is enabled for the function, the code package must be signed\n *       by a trusted publisher. For more information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/configuration-trustedcode.html\">Configuring code signing</a>.</p>\n *\n *          <p>The function's code is locked when you publish a version. You can't modify the code of a published version,\n *       only the unpublished version.</p>\n *          <note>\n *             <p>For a function defined as a container image, Lambda resolves the image tag to an image digest. In Amazon ECR, if\n *         you update the image tag to a new image, Lambda does not automatically update the function.</p>\n *          </note>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { LambdaClient, UpdateFunctionCodeCommand } from \"@aws-sdk/client-lambda\"; // ES Modules import\n * // const { LambdaClient, UpdateFunctionCodeCommand } = require(\"@aws-sdk/client-lambda\"); // CommonJS import\n * const client = new LambdaClient(config);\n * const command = new UpdateFunctionCodeCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link UpdateFunctionCodeCommandInput} for command's `input` shape.\n * @see {@link UpdateFunctionCodeCommandOutput} for command's `response` shape.\n * @see {@link LambdaClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass UpdateFunctionCodeCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"LambdaClient\";\n        const commandName = \"UpdateFunctionCodeCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.UpdateFunctionCodeRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.FunctionConfiguration.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restJson1_1.serializeAws_restJson1UpdateFunctionCodeCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restJson1_1.deserializeAws_restJson1UpdateFunctionCodeCommand)(output, context);\n    }\n}\nexports.UpdateFunctionCodeCommand = UpdateFunctionCodeCommand;\n//# sourceMappingURL=UpdateFunctionCodeCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UpdateFunctionConfigurationCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restJson1_1 = require(\"../protocols/Aws_restJson1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Modify the version-specific settings of a Lambda function.</p>\n *\n *          <p>When you update a function, Lambda provisions an instance of the function and its supporting resources. If\n *       your function connects to a VPC, this process can take a minute. During this time, you can't modify the function,\n *       but you can still invoke it. The <code>LastUpdateStatus</code>, <code>LastUpdateStatusReason</code>, and\n *         <code>LastUpdateStatusReasonCode</code> fields in the response from <a>GetFunctionConfiguration</a>\n *       indicate when the update is complete and the function is processing events with the new configuration. For more\n *       information, see <a href=\"https://docs.aws.amazon.com/lambda/latest/dg/functions-states.html\">Function\n *       States</a>.</p>\n *\n *          <p>These settings can vary between versions of a function and are locked when you publish a version. You can't\n *       modify the configuration of a published version, only the unpublished version.</p>\n *\n *          <p>To configure function concurrency, use <a>PutFunctionConcurrency</a>. To grant invoke permissions\n *       to an account or Amazon Web Services service, use <a>AddPermission</a>.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { LambdaClient, UpdateFunctionConfigurationCommand } from \"@aws-sdk/client-lambda\"; // ES Modules import\n * // const { LambdaClient, UpdateFunctionConfigurationCommand } = require(\"@aws-sdk/client-lambda\"); // CommonJS import\n * const client = new LambdaClient(config);\n * const command = new UpdateFunctionConfigurationCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link UpdateFunctionConfigurationCommandInput} for command's `input` shape.\n * @see {@link UpdateFunctionConfigurationCommandOutput} for command's `response` shape.\n * @see {@link LambdaClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass UpdateFunctionConfigurationCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"LambdaClient\";\n        const commandName = \"UpdateFunctionConfigurationCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.UpdateFunctionConfigurationRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.FunctionConfiguration.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restJson1_1.serializeAws_restJson1UpdateFunctionConfigurationCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restJson1_1.deserializeAws_restJson1UpdateFunctionConfigurationCommand)(output, context);\n    }\n}\nexports.UpdateFunctionConfigurationCommand = UpdateFunctionConfigurationCommand;\n//# sourceMappingURL=UpdateFunctionConfigurationCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UpdateFunctionEventInvokeConfigCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restJson1_1 = require(\"../protocols/Aws_restJson1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Updates the configuration for asynchronous invocation for a function, version, or alias.</p>\n *          <p>To configure options for asynchronous invocation, use <a>PutFunctionEventInvokeConfig</a>.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { LambdaClient, UpdateFunctionEventInvokeConfigCommand } from \"@aws-sdk/client-lambda\"; // ES Modules import\n * // const { LambdaClient, UpdateFunctionEventInvokeConfigCommand } = require(\"@aws-sdk/client-lambda\"); // CommonJS import\n * const client = new LambdaClient(config);\n * const command = new UpdateFunctionEventInvokeConfigCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link UpdateFunctionEventInvokeConfigCommandInput} for command's `input` shape.\n * @see {@link UpdateFunctionEventInvokeConfigCommandOutput} for command's `response` shape.\n * @see {@link LambdaClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass UpdateFunctionEventInvokeConfigCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"LambdaClient\";\n        const commandName = \"UpdateFunctionEventInvokeConfigCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.UpdateFunctionEventInvokeConfigRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.FunctionEventInvokeConfig.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restJson1_1.serializeAws_restJson1UpdateFunctionEventInvokeConfigCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restJson1_1.deserializeAws_restJson1UpdateFunctionEventInvokeConfigCommand)(output, context);\n    }\n}\nexports.UpdateFunctionEventInvokeConfigCommand = UpdateFunctionEventInvokeConfigCommand;\n//# sourceMappingURL=UpdateFunctionEventInvokeConfigCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultRegionInfoProvider = void 0;\nconst config_resolver_1 = require(\"@aws-sdk/config-resolver\");\nconst regionHash = {\n    \"fips-us-east-1\": {\n        hostname: \"lambda-fips.us-east-1.amazonaws.com\",\n        signingRegion: \"us-east-1\",\n    },\n    \"fips-us-east-2\": {\n        hostname: \"lambda-fips.us-east-2.amazonaws.com\",\n        signingRegion: \"us-east-2\",\n    },\n    \"fips-us-gov-east-1\": {\n        hostname: \"lambda-fips.us-gov-east-1.amazonaws.com\",\n        signingRegion: \"us-gov-east-1\",\n    },\n    \"fips-us-gov-west-1\": {\n        hostname: \"lambda-fips.us-gov-west-1.amazonaws.com\",\n        signingRegion: \"us-gov-west-1\",\n    },\n    \"fips-us-west-1\": {\n        hostname: \"lambda-fips.us-west-1.amazonaws.com\",\n        signingRegion: \"us-west-1\",\n    },\n    \"fips-us-west-2\": {\n        hostname: \"lambda-fips.us-west-2.amazonaws.com\",\n        signingRegion: \"us-west-2\",\n    },\n};\nconst partitionHash = {\n    aws: {\n        regions: [\n            \"af-south-1\",\n            \"ap-east-1\",\n            \"ap-northeast-1\",\n            \"ap-northeast-2\",\n            \"ap-northeast-3\",\n            \"ap-south-1\",\n            \"ap-southeast-1\",\n            \"ap-southeast-2\",\n            \"ca-central-1\",\n            \"eu-central-1\",\n            \"eu-north-1\",\n            \"eu-south-1\",\n            \"eu-west-1\",\n            \"eu-west-2\",\n            \"eu-west-3\",\n            \"fips-us-east-1\",\n            \"fips-us-east-2\",\n            \"fips-us-west-1\",\n            \"fips-us-west-2\",\n            \"me-south-1\",\n            \"sa-east-1\",\n            \"us-east-1\",\n            \"us-east-2\",\n            \"us-west-1\",\n            \"us-west-2\",\n        ],\n        hostname: \"lambda.{region}.amazonaws.com\",\n    },\n    \"aws-cn\": {\n        regions: [\"cn-north-1\", \"cn-northwest-1\"],\n        hostname: \"lambda.{region}.amazonaws.com.cn\",\n    },\n    \"aws-iso\": {\n        regions: [\"us-iso-east-1\"],\n        hostname: \"lambda.{region}.c2s.ic.gov\",\n    },\n    \"aws-iso-b\": {\n        regions: [\"us-isob-east-1\"],\n        hostname: \"lambda.{region}.sc2s.sgov.gov\",\n    },\n    \"aws-us-gov\": {\n        regions: [\"fips-us-gov-east-1\", \"fips-us-gov-west-1\", \"us-gov-east-1\", \"us-gov-west-1\"],\n        hostname: \"lambda.{region}.amazonaws.com\",\n    },\n};\nconst defaultRegionInfoProvider = async (region, options) => (0, config_resolver_1.getRegionInfo)(region, {\n    ...options,\n    signingService: \"lambda\",\n    regionHash,\n    partitionHash,\n});\nexports.defaultRegionInfoProvider = defaultRegionInfoProvider;\n//# sourceMappingURL=endpoints.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\n(0, tslib_1.__exportStar)(require(\"./LambdaClient\"), exports);\n(0, tslib_1.__exportStar)(require(\"./Lambda\"), exports);\n(0, tslib_1.__exportStar)(require(\"./commands/AddLayerVersionPermissionCommand\"), exports);\n(0, tslib_1.__exportStar)(require(\"./commands/AddPermissionCommand\"), exports);\n(0, tslib_1.__exportStar)(require(\"./commands/CreateAliasCommand\"), exports);\n(0, tslib_1.__exportStar)(require(\"./commands/CreateCodeSigningConfigCommand\"), exports);\n(0, tslib_1.__exportStar)(require(\"./commands/CreateEventSourceMappingCommand\"), exports);\n(0, tslib_1.__exportStar)(require(\"./commands/CreateFunctionCommand\"), exports);\n(0, tslib_1.__exportStar)(require(\"./commands/DeleteAliasCommand\"), exports);\n(0, tslib_1.__exportStar)(require(\"./commands/DeleteCodeSigningConfigCommand\"), exports);\n(0, tslib_1.__exportStar)(require(\"./commands/DeleteEventSourceMappingCommand\"), exports);\n(0, tslib_1.__exportStar)(require(\"./commands/DeleteFunctionCommand\"), exports);\n(0, tslib_1.__exportStar)(require(\"./commands/DeleteFunctionCodeSigningConfigCommand\"), exports);\n(0, tslib_1.__exportStar)(require(\"./commands/DeleteFunctionConcurrencyCommand\"), exports);\n(0, tslib_1.__exportStar)(require(\"./commands/DeleteFunctionEventInvokeConfigCommand\"), exports);\n(0, tslib_1.__exportStar)(require(\"./commands/DeleteLayerVersionCommand\"), exports);\n(0, tslib_1.__exportStar)(require(\"./commands/DeleteProvisionedConcurrencyConfigCommand\"), exports);\n(0, tslib_1.__exportStar)(require(\"./commands/GetAccountSettingsCommand\"), exports);\n(0, tslib_1.__exportStar)(require(\"./commands/GetAliasCommand\"), exports);\n(0, tslib_1.__exportStar)(require(\"./commands/GetCodeSigningConfigCommand\"), exports);\n(0, tslib_1.__exportStar)(require(\"./commands/GetEventSourceMappingCommand\"), exports);\n(0, tslib_1.__exportStar)(require(\"./commands/GetFunctionCommand\"), exports);\n(0, tslib_1.__exportStar)(require(\"./waiters/waitForFunctionExists\"), exports);\n(0, tslib_1.__exportStar)(require(\"./commands/GetFunctionCodeSigningConfigCommand\"), exports);\n(0, tslib_1.__exportStar)(require(\"./commands/GetFunctionConcurrencyCommand\"), exports);\n(0, tslib_1.__exportStar)(require(\"./commands/GetFunctionConfigurationCommand\"), exports);\n(0, tslib_1.__exportStar)(require(\"./waiters/waitForFunctionActive\"), exports);\n(0, tslib_1.__exportStar)(require(\"./waiters/waitForFunctionUpdated\"), exports);\n(0, tslib_1.__exportStar)(require(\"./commands/GetFunctionEventInvokeConfigCommand\"), exports);\n(0, tslib_1.__exportStar)(require(\"./commands/GetLayerVersionCommand\"), exports);\n(0, tslib_1.__exportStar)(require(\"./commands/GetLayerVersionByArnCommand\"), exports);\n(0, tslib_1.__exportStar)(require(\"./commands/GetLayerVersionPolicyCommand\"), exports);\n(0, tslib_1.__exportStar)(require(\"./commands/GetPolicyCommand\"), exports);\n(0, tslib_1.__exportStar)(require(\"./commands/GetProvisionedConcurrencyConfigCommand\"), exports);\n(0, tslib_1.__exportStar)(require(\"./commands/InvokeCommand\"), exports);\n(0, tslib_1.__exportStar)(require(\"./commands/InvokeAsyncCommand\"), exports);\n(0, tslib_1.__exportStar)(require(\"./commands/ListAliasesCommand\"), exports);\n(0, tslib_1.__exportStar)(require(\"./pagination/ListAliasesPaginator\"), exports);\n(0, tslib_1.__exportStar)(require(\"./commands/ListCodeSigningConfigsCommand\"), exports);\n(0, tslib_1.__exportStar)(require(\"./pagination/ListCodeSigningConfigsPaginator\"), exports);\n(0, tslib_1.__exportStar)(require(\"./commands/ListEventSourceMappingsCommand\"), exports);\n(0, tslib_1.__exportStar)(require(\"./pagination/ListEventSourceMappingsPaginator\"), exports);\n(0, tslib_1.__exportStar)(require(\"./commands/ListFunctionEventInvokeConfigsCommand\"), exports);\n(0, tslib_1.__exportStar)(require(\"./pagination/ListFunctionEventInvokeConfigsPaginator\"), exports);\n(0, tslib_1.__exportStar)(require(\"./commands/ListFunctionsCommand\"), exports);\n(0, tslib_1.__exportStar)(require(\"./pagination/ListFunctionsPaginator\"), exports);\n(0, tslib_1.__exportStar)(require(\"./commands/ListFunctionsByCodeSigningConfigCommand\"), exports);\n(0, tslib_1.__exportStar)(require(\"./pagination/ListFunctionsByCodeSigningConfigPaginator\"), exports);\n(0, tslib_1.__exportStar)(require(\"./commands/ListLayersCommand\"), exports);\n(0, tslib_1.__exportStar)(require(\"./pagination/ListLayersPaginator\"), exports);\n(0, tslib_1.__exportStar)(require(\"./commands/ListLayerVersionsCommand\"), exports);\n(0, tslib_1.__exportStar)(require(\"./pagination/ListLayerVersionsPaginator\"), exports);\n(0, tslib_1.__exportStar)(require(\"./commands/ListProvisionedConcurrencyConfigsCommand\"), exports);\n(0, tslib_1.__exportStar)(require(\"./pagination/ListProvisionedConcurrencyConfigsPaginator\"), exports);\n(0, tslib_1.__exportStar)(require(\"./commands/ListTagsCommand\"), exports);\n(0, tslib_1.__exportStar)(require(\"./commands/ListVersionsByFunctionCommand\"), exports);\n(0, tslib_1.__exportStar)(require(\"./pagination/ListVersionsByFunctionPaginator\"), exports);\n(0, tslib_1.__exportStar)(require(\"./commands/PublishLayerVersionCommand\"), exports);\n(0, tslib_1.__exportStar)(require(\"./commands/PublishVersionCommand\"), exports);\n(0, tslib_1.__exportStar)(require(\"./commands/PutFunctionCodeSigningConfigCommand\"), exports);\n(0, tslib_1.__exportStar)(require(\"./commands/PutFunctionConcurrencyCommand\"), exports);\n(0, tslib_1.__exportStar)(require(\"./commands/PutFunctionEventInvokeConfigCommand\"), exports);\n(0, tslib_1.__exportStar)(require(\"./commands/PutProvisionedConcurrencyConfigCommand\"), exports);\n(0, tslib_1.__exportStar)(require(\"./commands/RemoveLayerVersionPermissionCommand\"), exports);\n(0, tslib_1.__exportStar)(require(\"./commands/RemovePermissionCommand\"), exports);\n(0, tslib_1.__exportStar)(require(\"./commands/TagResourceCommand\"), exports);\n(0, tslib_1.__exportStar)(require(\"./commands/UntagResourceCommand\"), exports);\n(0, tslib_1.__exportStar)(require(\"./commands/UpdateAliasCommand\"), exports);\n(0, tslib_1.__exportStar)(require(\"./commands/UpdateCodeSigningConfigCommand\"), exports);\n(0, tslib_1.__exportStar)(require(\"./commands/UpdateEventSourceMappingCommand\"), exports);\n(0, tslib_1.__exportStar)(require(\"./commands/UpdateFunctionCodeCommand\"), exports);\n(0, tslib_1.__exportStar)(require(\"./commands/UpdateFunctionConfigurationCommand\"), exports);\n(0, tslib_1.__exportStar)(require(\"./commands/UpdateFunctionEventInvokeConfigCommand\"), exports);\n(0, tslib_1.__exportStar)(require(\"./pagination/Interfaces\"), exports);\n(0, tslib_1.__exportStar)(require(\"./models/index\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\n(0, tslib_1.__exportStar)(require(\"./models_0\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EnvironmentResponse = exports.EnvironmentError = exports.CreateFunctionRequest = exports.VpcConfig = exports.TracingConfig = exports.TracingMode = exports.Runtime = exports.PackageType = exports.ImageConfig = exports.FileSystemConfig = exports.Environment = exports.DeadLetterConfig = exports.FunctionCode = exports.CodeVerificationFailedException = exports.CodeStorageExceededException = exports.CodeSigningConfigNotFoundException = exports.EventSourceMappingConfiguration = exports.CreateEventSourceMappingRequest = exports.EventSourcePosition = exports.SourceAccessConfiguration = exports.SourceAccessType = exports.SelfManagedEventSource = exports.EndPointType = exports.FunctionResponseType = exports.DestinationConfig = exports.OnSuccess = exports.OnFailure = exports.CreateCodeSigningConfigResponse = exports.CodeSigningConfig = exports.CreateCodeSigningConfigRequest = exports.CodeSigningPolicies = exports.CodeSigningPolicy = exports.CreateAliasRequest = exports.AllowedPublishers = exports.AliasConfiguration = exports.AliasRoutingConfiguration = exports.AddPermissionResponse = exports.AddPermissionRequest = exports.TooManyRequestsException = exports.ThrottleReason = exports.ServiceException = exports.ResourceNotFoundException = exports.ResourceConflictException = exports.PreconditionFailedException = exports.PolicyLengthExceededException = exports.InvalidParameterValueException = exports.AddLayerVersionPermissionResponse = exports.AddLayerVersionPermissionRequest = exports.AccountUsage = exports.AccountLimit = void 0;\nexports.GetProvisionedConcurrencyConfigResponse = exports.ProvisionedConcurrencyStatusEnum = exports.GetProvisionedConcurrencyConfigRequest = exports.GetPolicyResponse = exports.GetPolicyRequest = exports.GetLayerVersionPolicyResponse = exports.GetLayerVersionPolicyRequest = exports.GetLayerVersionByArnRequest = exports.GetLayerVersionResponse = exports.LayerVersionContentOutput = exports.GetLayerVersionRequest = exports.GetFunctionEventInvokeConfigRequest = exports.FunctionEventInvokeConfig = exports.GetFunctionConfigurationRequest = exports.GetFunctionConcurrencyResponse = exports.GetFunctionConcurrencyRequest = exports.GetFunctionCodeSigningConfigResponse = exports.GetFunctionCodeSigningConfigRequest = exports.GetFunctionResponse = exports.Concurrency = exports.FunctionCodeLocation = exports.GetFunctionRequest = exports.GetEventSourceMappingRequest = exports.GetCodeSigningConfigResponse = exports.GetCodeSigningConfigRequest = exports.GetAliasRequest = exports.GetAccountSettingsResponse = exports.GetAccountSettingsRequest = exports.DeleteProvisionedConcurrencyConfigRequest = exports.DeleteLayerVersionRequest = exports.DeleteFunctionEventInvokeConfigRequest = exports.DeleteFunctionConcurrencyRequest = exports.DeleteFunctionCodeSigningConfigRequest = exports.DeleteFunctionRequest = exports.ResourceInUseException = exports.DeleteEventSourceMappingRequest = exports.DeleteCodeSigningConfigResponse = exports.DeleteCodeSigningConfigRequest = exports.DeleteAliasRequest = exports.InvalidCodeSignatureException = exports.FunctionConfiguration = exports.VpcConfigResponse = exports.TracingConfigResponse = exports.StateReasonCode = exports.State = exports.Layer = exports.LastUpdateStatusReasonCode = exports.LastUpdateStatus = exports.ImageConfigResponse = exports.ImageConfigError = void 0;\nexports.ListProvisionedConcurrencyConfigsResponse = exports.ProvisionedConcurrencyConfigListItem = exports.ListProvisionedConcurrencyConfigsRequest = exports.ListLayerVersionsResponse = exports.ListLayerVersionsRequest = exports.ListLayersResponse = exports.LayersListItem = exports.LayerVersionsListItem = exports.ListLayersRequest = exports.ListFunctionsByCodeSigningConfigResponse = exports.ListFunctionsByCodeSigningConfigRequest = exports.ListFunctionsResponse = exports.ListFunctionsRequest = exports.FunctionVersion = exports.ListFunctionEventInvokeConfigsResponse = exports.ListFunctionEventInvokeConfigsRequest = exports.ListEventSourceMappingsResponse = exports.ListEventSourceMappingsRequest = exports.ListCodeSigningConfigsResponse = exports.ListCodeSigningConfigsRequest = exports.ListAliasesResponse = exports.ListAliasesRequest = exports.InvokeAsyncResponse = exports.InvokeAsyncRequest = exports.UnsupportedMediaTypeException = exports.SubnetIPAddressLimitReachedException = exports.ResourceNotReadyException = exports.RequestTooLargeException = exports.KMSNotFoundException = exports.KMSInvalidStateException = exports.KMSDisabledException = exports.KMSAccessDeniedException = exports.InvocationResponse = exports.InvocationRequest = exports.LogType = exports.InvocationType = exports.InvalidZipFileException = exports.InvalidSubnetIDException = exports.InvalidSecurityGroupIDException = exports.InvalidRuntimeException = exports.InvalidRequestContentException = exports.ENILimitReachedException = exports.EFSMountTimeoutException = exports.EFSMountFailureException = exports.EFSMountConnectivityException = exports.EFSIOException = exports.EC2UnexpectedException = exports.EC2ThrottledException = exports.EC2AccessDeniedException = exports.ProvisionedConcurrencyConfigNotFoundException = void 0;\nexports.UpdateFunctionEventInvokeConfigRequest = exports.UpdateFunctionConfigurationRequest = exports.UpdateFunctionCodeRequest = exports.UpdateEventSourceMappingRequest = exports.UpdateCodeSigningConfigResponse = exports.UpdateCodeSigningConfigRequest = exports.UpdateAliasRequest = exports.UntagResourceRequest = exports.TagResourceRequest = exports.RemovePermissionRequest = exports.RemoveLayerVersionPermissionRequest = exports.PutProvisionedConcurrencyConfigResponse = exports.PutProvisionedConcurrencyConfigRequest = exports.PutFunctionEventInvokeConfigRequest = exports.PutFunctionConcurrencyRequest = exports.PutFunctionCodeSigningConfigResponse = exports.PutFunctionCodeSigningConfigRequest = exports.PublishVersionRequest = exports.PublishLayerVersionResponse = exports.PublishLayerVersionRequest = exports.LayerVersionContentInput = exports.ListVersionsByFunctionResponse = exports.ListVersionsByFunctionRequest = exports.ListTagsResponse = exports.ListTagsRequest = void 0;\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nvar AccountLimit;\n(function (AccountLimit) {\n    /**\n     * @internal\n     */\n    AccountLimit.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(AccountLimit = exports.AccountLimit || (exports.AccountLimit = {}));\nvar AccountUsage;\n(function (AccountUsage) {\n    /**\n     * @internal\n     */\n    AccountUsage.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(AccountUsage = exports.AccountUsage || (exports.AccountUsage = {}));\nvar AddLayerVersionPermissionRequest;\n(function (AddLayerVersionPermissionRequest) {\n    /**\n     * @internal\n     */\n    AddLayerVersionPermissionRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(AddLayerVersionPermissionRequest = exports.AddLayerVersionPermissionRequest || (exports.AddLayerVersionPermissionRequest = {}));\nvar AddLayerVersionPermissionResponse;\n(function (AddLayerVersionPermissionResponse) {\n    /**\n     * @internal\n     */\n    AddLayerVersionPermissionResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(AddLayerVersionPermissionResponse = exports.AddLayerVersionPermissionResponse || (exports.AddLayerVersionPermissionResponse = {}));\nvar InvalidParameterValueException;\n(function (InvalidParameterValueException) {\n    /**\n     * @internal\n     */\n    InvalidParameterValueException.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(InvalidParameterValueException = exports.InvalidParameterValueException || (exports.InvalidParameterValueException = {}));\nvar PolicyLengthExceededException;\n(function (PolicyLengthExceededException) {\n    /**\n     * @internal\n     */\n    PolicyLengthExceededException.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(PolicyLengthExceededException = exports.PolicyLengthExceededException || (exports.PolicyLengthExceededException = {}));\nvar PreconditionFailedException;\n(function (PreconditionFailedException) {\n    /**\n     * @internal\n     */\n    PreconditionFailedException.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(PreconditionFailedException = exports.PreconditionFailedException || (exports.PreconditionFailedException = {}));\nvar ResourceConflictException;\n(function (ResourceConflictException) {\n    /**\n     * @internal\n     */\n    ResourceConflictException.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ResourceConflictException = exports.ResourceConflictException || (exports.ResourceConflictException = {}));\nvar ResourceNotFoundException;\n(function (ResourceNotFoundException) {\n    /**\n     * @internal\n     */\n    ResourceNotFoundException.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ResourceNotFoundException = exports.ResourceNotFoundException || (exports.ResourceNotFoundException = {}));\nvar ServiceException;\n(function (ServiceException) {\n    /**\n     * @internal\n     */\n    ServiceException.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ServiceException = exports.ServiceException || (exports.ServiceException = {}));\nvar ThrottleReason;\n(function (ThrottleReason) {\n    ThrottleReason[\"CallerRateLimitExceeded\"] = \"CallerRateLimitExceeded\";\n    ThrottleReason[\"ConcurrentInvocationLimitExceeded\"] = \"ConcurrentInvocationLimitExceeded\";\n    ThrottleReason[\"FunctionInvocationRateLimitExceeded\"] = \"FunctionInvocationRateLimitExceeded\";\n    ThrottleReason[\"ReservedFunctionConcurrentInvocationLimitExceeded\"] = \"ReservedFunctionConcurrentInvocationLimitExceeded\";\n    ThrottleReason[\"ReservedFunctionInvocationRateLimitExceeded\"] = \"ReservedFunctionInvocationRateLimitExceeded\";\n})(ThrottleReason = exports.ThrottleReason || (exports.ThrottleReason = {}));\nvar TooManyRequestsException;\n(function (TooManyRequestsException) {\n    /**\n     * @internal\n     */\n    TooManyRequestsException.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(TooManyRequestsException = exports.TooManyRequestsException || (exports.TooManyRequestsException = {}));\nvar AddPermissionRequest;\n(function (AddPermissionRequest) {\n    /**\n     * @internal\n     */\n    AddPermissionRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(AddPermissionRequest = exports.AddPermissionRequest || (exports.AddPermissionRequest = {}));\nvar AddPermissionResponse;\n(function (AddPermissionResponse) {\n    /**\n     * @internal\n     */\n    AddPermissionResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(AddPermissionResponse = exports.AddPermissionResponse || (exports.AddPermissionResponse = {}));\nvar AliasRoutingConfiguration;\n(function (AliasRoutingConfiguration) {\n    /**\n     * @internal\n     */\n    AliasRoutingConfiguration.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(AliasRoutingConfiguration = exports.AliasRoutingConfiguration || (exports.AliasRoutingConfiguration = {}));\nvar AliasConfiguration;\n(function (AliasConfiguration) {\n    /**\n     * @internal\n     */\n    AliasConfiguration.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(AliasConfiguration = exports.AliasConfiguration || (exports.AliasConfiguration = {}));\nvar AllowedPublishers;\n(function (AllowedPublishers) {\n    /**\n     * @internal\n     */\n    AllowedPublishers.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(AllowedPublishers = exports.AllowedPublishers || (exports.AllowedPublishers = {}));\nvar CreateAliasRequest;\n(function (CreateAliasRequest) {\n    /**\n     * @internal\n     */\n    CreateAliasRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(CreateAliasRequest = exports.CreateAliasRequest || (exports.CreateAliasRequest = {}));\nvar CodeSigningPolicy;\n(function (CodeSigningPolicy) {\n    CodeSigningPolicy[\"Enforce\"] = \"Enforce\";\n    CodeSigningPolicy[\"Warn\"] = \"Warn\";\n})(CodeSigningPolicy = exports.CodeSigningPolicy || (exports.CodeSigningPolicy = {}));\nvar CodeSigningPolicies;\n(function (CodeSigningPolicies) {\n    /**\n     * @internal\n     */\n    CodeSigningPolicies.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(CodeSigningPolicies = exports.CodeSigningPolicies || (exports.CodeSigningPolicies = {}));\nvar CreateCodeSigningConfigRequest;\n(function (CreateCodeSigningConfigRequest) {\n    /**\n     * @internal\n     */\n    CreateCodeSigningConfigRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(CreateCodeSigningConfigRequest = exports.CreateCodeSigningConfigRequest || (exports.CreateCodeSigningConfigRequest = {}));\nvar CodeSigningConfig;\n(function (CodeSigningConfig) {\n    /**\n     * @internal\n     */\n    CodeSigningConfig.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(CodeSigningConfig = exports.CodeSigningConfig || (exports.CodeSigningConfig = {}));\nvar CreateCodeSigningConfigResponse;\n(function (CreateCodeSigningConfigResponse) {\n    /**\n     * @internal\n     */\n    CreateCodeSigningConfigResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(CreateCodeSigningConfigResponse = exports.CreateCodeSigningConfigResponse || (exports.CreateCodeSigningConfigResponse = {}));\nvar OnFailure;\n(function (OnFailure) {\n    /**\n     * @internal\n     */\n    OnFailure.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(OnFailure = exports.OnFailure || (exports.OnFailure = {}));\nvar OnSuccess;\n(function (OnSuccess) {\n    /**\n     * @internal\n     */\n    OnSuccess.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(OnSuccess = exports.OnSuccess || (exports.OnSuccess = {}));\nvar DestinationConfig;\n(function (DestinationConfig) {\n    /**\n     * @internal\n     */\n    DestinationConfig.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DestinationConfig = exports.DestinationConfig || (exports.DestinationConfig = {}));\nvar FunctionResponseType;\n(function (FunctionResponseType) {\n    FunctionResponseType[\"ReportBatchItemFailures\"] = \"ReportBatchItemFailures\";\n})(FunctionResponseType = exports.FunctionResponseType || (exports.FunctionResponseType = {}));\nvar EndPointType;\n(function (EndPointType) {\n    EndPointType[\"KAFKA_BOOTSTRAP_SERVERS\"] = \"KAFKA_BOOTSTRAP_SERVERS\";\n})(EndPointType = exports.EndPointType || (exports.EndPointType = {}));\nvar SelfManagedEventSource;\n(function (SelfManagedEventSource) {\n    /**\n     * @internal\n     */\n    SelfManagedEventSource.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(SelfManagedEventSource = exports.SelfManagedEventSource || (exports.SelfManagedEventSource = {}));\nvar SourceAccessType;\n(function (SourceAccessType) {\n    SourceAccessType[\"BASIC_AUTH\"] = \"BASIC_AUTH\";\n    SourceAccessType[\"SASL_SCRAM_256_AUTH\"] = \"SASL_SCRAM_256_AUTH\";\n    SourceAccessType[\"SASL_SCRAM_512_AUTH\"] = \"SASL_SCRAM_512_AUTH\";\n    SourceAccessType[\"VIRTUAL_HOST\"] = \"VIRTUAL_HOST\";\n    SourceAccessType[\"VPC_SECURITY_GROUP\"] = \"VPC_SECURITY_GROUP\";\n    SourceAccessType[\"VPC_SUBNET\"] = \"VPC_SUBNET\";\n})(SourceAccessType = exports.SourceAccessType || (exports.SourceAccessType = {}));\nvar SourceAccessConfiguration;\n(function (SourceAccessConfiguration) {\n    /**\n     * @internal\n     */\n    SourceAccessConfiguration.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(SourceAccessConfiguration = exports.SourceAccessConfiguration || (exports.SourceAccessConfiguration = {}));\nvar EventSourcePosition;\n(function (EventSourcePosition) {\n    EventSourcePosition[\"AT_TIMESTAMP\"] = \"AT_TIMESTAMP\";\n    EventSourcePosition[\"LATEST\"] = \"LATEST\";\n    EventSourcePosition[\"TRIM_HORIZON\"] = \"TRIM_HORIZON\";\n})(EventSourcePosition = exports.EventSourcePosition || (exports.EventSourcePosition = {}));\nvar CreateEventSourceMappingRequest;\n(function (CreateEventSourceMappingRequest) {\n    /**\n     * @internal\n     */\n    CreateEventSourceMappingRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(CreateEventSourceMappingRequest = exports.CreateEventSourceMappingRequest || (exports.CreateEventSourceMappingRequest = {}));\nvar EventSourceMappingConfiguration;\n(function (EventSourceMappingConfiguration) {\n    /**\n     * @internal\n     */\n    EventSourceMappingConfiguration.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(EventSourceMappingConfiguration = exports.EventSourceMappingConfiguration || (exports.EventSourceMappingConfiguration = {}));\nvar CodeSigningConfigNotFoundException;\n(function (CodeSigningConfigNotFoundException) {\n    /**\n     * @internal\n     */\n    CodeSigningConfigNotFoundException.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(CodeSigningConfigNotFoundException = exports.CodeSigningConfigNotFoundException || (exports.CodeSigningConfigNotFoundException = {}));\nvar CodeStorageExceededException;\n(function (CodeStorageExceededException) {\n    /**\n     * @internal\n     */\n    CodeStorageExceededException.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(CodeStorageExceededException = exports.CodeStorageExceededException || (exports.CodeStorageExceededException = {}));\nvar CodeVerificationFailedException;\n(function (CodeVerificationFailedException) {\n    /**\n     * @internal\n     */\n    CodeVerificationFailedException.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(CodeVerificationFailedException = exports.CodeVerificationFailedException || (exports.CodeVerificationFailedException = {}));\nvar FunctionCode;\n(function (FunctionCode) {\n    /**\n     * @internal\n     */\n    FunctionCode.filterSensitiveLog = (obj) => ({\n        ...obj,\n        ...(obj.ZipFile && { ZipFile: smithy_client_1.SENSITIVE_STRING }),\n    });\n})(FunctionCode = exports.FunctionCode || (exports.FunctionCode = {}));\nvar DeadLetterConfig;\n(function (DeadLetterConfig) {\n    /**\n     * @internal\n     */\n    DeadLetterConfig.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DeadLetterConfig = exports.DeadLetterConfig || (exports.DeadLetterConfig = {}));\nvar Environment;\n(function (Environment) {\n    /**\n     * @internal\n     */\n    Environment.filterSensitiveLog = (obj) => ({\n        ...obj,\n        ...(obj.Variables && { Variables: smithy_client_1.SENSITIVE_STRING }),\n    });\n})(Environment = exports.Environment || (exports.Environment = {}));\nvar FileSystemConfig;\n(function (FileSystemConfig) {\n    /**\n     * @internal\n     */\n    FileSystemConfig.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(FileSystemConfig = exports.FileSystemConfig || (exports.FileSystemConfig = {}));\nvar ImageConfig;\n(function (ImageConfig) {\n    /**\n     * @internal\n     */\n    ImageConfig.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ImageConfig = exports.ImageConfig || (exports.ImageConfig = {}));\nvar PackageType;\n(function (PackageType) {\n    PackageType[\"Image\"] = \"Image\";\n    PackageType[\"Zip\"] = \"Zip\";\n})(PackageType = exports.PackageType || (exports.PackageType = {}));\nvar Runtime;\n(function (Runtime) {\n    Runtime[\"dotnetcore10\"] = \"dotnetcore1.0\";\n    Runtime[\"dotnetcore20\"] = \"dotnetcore2.0\";\n    Runtime[\"dotnetcore21\"] = \"dotnetcore2.1\";\n    Runtime[\"dotnetcore31\"] = \"dotnetcore3.1\";\n    Runtime[\"go1x\"] = \"go1.x\";\n    Runtime[\"java11\"] = \"java11\";\n    Runtime[\"java8\"] = \"java8\";\n    Runtime[\"java8al2\"] = \"java8.al2\";\n    Runtime[\"nodejs\"] = \"nodejs\";\n    Runtime[\"nodejs10x\"] = \"nodejs10.x\";\n    Runtime[\"nodejs12x\"] = \"nodejs12.x\";\n    Runtime[\"nodejs14x\"] = \"nodejs14.x\";\n    Runtime[\"nodejs43\"] = \"nodejs4.3\";\n    Runtime[\"nodejs43edge\"] = \"nodejs4.3-edge\";\n    Runtime[\"nodejs610\"] = \"nodejs6.10\";\n    Runtime[\"nodejs810\"] = \"nodejs8.10\";\n    Runtime[\"provided\"] = \"provided\";\n    Runtime[\"providedal2\"] = \"provided.al2\";\n    Runtime[\"python27\"] = \"python2.7\";\n    Runtime[\"python36\"] = \"python3.6\";\n    Runtime[\"python37\"] = \"python3.7\";\n    Runtime[\"python38\"] = \"python3.8\";\n    Runtime[\"python39\"] = \"python3.9\";\n    Runtime[\"ruby25\"] = \"ruby2.5\";\n    Runtime[\"ruby27\"] = \"ruby2.7\";\n})(Runtime = exports.Runtime || (exports.Runtime = {}));\nvar TracingMode;\n(function (TracingMode) {\n    TracingMode[\"Active\"] = \"Active\";\n    TracingMode[\"PassThrough\"] = \"PassThrough\";\n})(TracingMode = exports.TracingMode || (exports.TracingMode = {}));\nvar TracingConfig;\n(function (TracingConfig) {\n    /**\n     * @internal\n     */\n    TracingConfig.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(TracingConfig = exports.TracingConfig || (exports.TracingConfig = {}));\nvar VpcConfig;\n(function (VpcConfig) {\n    /**\n     * @internal\n     */\n    VpcConfig.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(VpcConfig = exports.VpcConfig || (exports.VpcConfig = {}));\nvar CreateFunctionRequest;\n(function (CreateFunctionRequest) {\n    /**\n     * @internal\n     */\n    CreateFunctionRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n        ...(obj.Code && { Code: FunctionCode.filterSensitiveLog(obj.Code) }),\n        ...(obj.Environment && { Environment: Environment.filterSensitiveLog(obj.Environment) }),\n    });\n})(CreateFunctionRequest = exports.CreateFunctionRequest || (exports.CreateFunctionRequest = {}));\nvar EnvironmentError;\n(function (EnvironmentError) {\n    /**\n     * @internal\n     */\n    EnvironmentError.filterSensitiveLog = (obj) => ({\n        ...obj,\n        ...(obj.Message && { Message: smithy_client_1.SENSITIVE_STRING }),\n    });\n})(EnvironmentError = exports.EnvironmentError || (exports.EnvironmentError = {}));\nvar EnvironmentResponse;\n(function (EnvironmentResponse) {\n    /**\n     * @internal\n     */\n    EnvironmentResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n        ...(obj.Variables && { Variables: smithy_client_1.SENSITIVE_STRING }),\n        ...(obj.Error && { Error: EnvironmentError.filterSensitiveLog(obj.Error) }),\n    });\n})(EnvironmentResponse = exports.EnvironmentResponse || (exports.EnvironmentResponse = {}));\nvar ImageConfigError;\n(function (ImageConfigError) {\n    /**\n     * @internal\n     */\n    ImageConfigError.filterSensitiveLog = (obj) => ({\n        ...obj,\n        ...(obj.Message && { Message: smithy_client_1.SENSITIVE_STRING }),\n    });\n})(ImageConfigError = exports.ImageConfigError || (exports.ImageConfigError = {}));\nvar ImageConfigResponse;\n(function (ImageConfigResponse) {\n    /**\n     * @internal\n     */\n    ImageConfigResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n        ...(obj.Error && { Error: ImageConfigError.filterSensitiveLog(obj.Error) }),\n    });\n})(ImageConfigResponse = exports.ImageConfigResponse || (exports.ImageConfigResponse = {}));\nvar LastUpdateStatus;\n(function (LastUpdateStatus) {\n    LastUpdateStatus[\"Failed\"] = \"Failed\";\n    LastUpdateStatus[\"InProgress\"] = \"InProgress\";\n    LastUpdateStatus[\"Successful\"] = \"Successful\";\n})(LastUpdateStatus = exports.LastUpdateStatus || (exports.LastUpdateStatus = {}));\nvar LastUpdateStatusReasonCode;\n(function (LastUpdateStatusReasonCode) {\n    LastUpdateStatusReasonCode[\"EniLimitExceeded\"] = \"EniLimitExceeded\";\n    LastUpdateStatusReasonCode[\"ImageAccessDenied\"] = \"ImageAccessDenied\";\n    LastUpdateStatusReasonCode[\"ImageDeleted\"] = \"ImageDeleted\";\n    LastUpdateStatusReasonCode[\"InsufficientRolePermissions\"] = \"InsufficientRolePermissions\";\n    LastUpdateStatusReasonCode[\"InternalError\"] = \"InternalError\";\n    LastUpdateStatusReasonCode[\"InvalidConfiguration\"] = \"InvalidConfiguration\";\n    LastUpdateStatusReasonCode[\"InvalidImage\"] = \"InvalidImage\";\n    LastUpdateStatusReasonCode[\"InvalidSecurityGroup\"] = \"InvalidSecurityGroup\";\n    LastUpdateStatusReasonCode[\"InvalidSubnet\"] = \"InvalidSubnet\";\n    LastUpdateStatusReasonCode[\"SubnetOutOfIPAddresses\"] = \"SubnetOutOfIPAddresses\";\n})(LastUpdateStatusReasonCode = exports.LastUpdateStatusReasonCode || (exports.LastUpdateStatusReasonCode = {}));\nvar Layer;\n(function (Layer) {\n    /**\n     * @internal\n     */\n    Layer.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(Layer = exports.Layer || (exports.Layer = {}));\nvar State;\n(function (State) {\n    State[\"Active\"] = \"Active\";\n    State[\"Failed\"] = \"Failed\";\n    State[\"Inactive\"] = \"Inactive\";\n    State[\"Pending\"] = \"Pending\";\n})(State = exports.State || (exports.State = {}));\nvar StateReasonCode;\n(function (StateReasonCode) {\n    StateReasonCode[\"Creating\"] = \"Creating\";\n    StateReasonCode[\"EniLimitExceeded\"] = \"EniLimitExceeded\";\n    StateReasonCode[\"Idle\"] = \"Idle\";\n    StateReasonCode[\"ImageAccessDenied\"] = \"ImageAccessDenied\";\n    StateReasonCode[\"ImageDeleted\"] = \"ImageDeleted\";\n    StateReasonCode[\"InsufficientRolePermissions\"] = \"InsufficientRolePermissions\";\n    StateReasonCode[\"InternalError\"] = \"InternalError\";\n    StateReasonCode[\"InvalidConfiguration\"] = \"InvalidConfiguration\";\n    StateReasonCode[\"InvalidImage\"] = \"InvalidImage\";\n    StateReasonCode[\"InvalidSecurityGroup\"] = \"InvalidSecurityGroup\";\n    StateReasonCode[\"InvalidSubnet\"] = \"InvalidSubnet\";\n    StateReasonCode[\"Restoring\"] = \"Restoring\";\n    StateReasonCode[\"SubnetOutOfIPAddresses\"] = \"SubnetOutOfIPAddresses\";\n})(StateReasonCode = exports.StateReasonCode || (exports.StateReasonCode = {}));\nvar TracingConfigResponse;\n(function (TracingConfigResponse) {\n    /**\n     * @internal\n     */\n    TracingConfigResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(TracingConfigResponse = exports.TracingConfigResponse || (exports.TracingConfigResponse = {}));\nvar VpcConfigResponse;\n(function (VpcConfigResponse) {\n    /**\n     * @internal\n     */\n    VpcConfigResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(VpcConfigResponse = exports.VpcConfigResponse || (exports.VpcConfigResponse = {}));\nvar FunctionConfiguration;\n(function (FunctionConfiguration) {\n    /**\n     * @internal\n     */\n    FunctionConfiguration.filterSensitiveLog = (obj) => ({\n        ...obj,\n        ...(obj.Environment && { Environment: EnvironmentResponse.filterSensitiveLog(obj.Environment) }),\n        ...(obj.ImageConfigResponse && {\n            ImageConfigResponse: ImageConfigResponse.filterSensitiveLog(obj.ImageConfigResponse),\n        }),\n    });\n})(FunctionConfiguration = exports.FunctionConfiguration || (exports.FunctionConfiguration = {}));\nvar InvalidCodeSignatureException;\n(function (InvalidCodeSignatureException) {\n    /**\n     * @internal\n     */\n    InvalidCodeSignatureException.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(InvalidCodeSignatureException = exports.InvalidCodeSignatureException || (exports.InvalidCodeSignatureException = {}));\nvar DeleteAliasRequest;\n(function (DeleteAliasRequest) {\n    /**\n     * @internal\n     */\n    DeleteAliasRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DeleteAliasRequest = exports.DeleteAliasRequest || (exports.DeleteAliasRequest = {}));\nvar DeleteCodeSigningConfigRequest;\n(function (DeleteCodeSigningConfigRequest) {\n    /**\n     * @internal\n     */\n    DeleteCodeSigningConfigRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DeleteCodeSigningConfigRequest = exports.DeleteCodeSigningConfigRequest || (exports.DeleteCodeSigningConfigRequest = {}));\nvar DeleteCodeSigningConfigResponse;\n(function (DeleteCodeSigningConfigResponse) {\n    /**\n     * @internal\n     */\n    DeleteCodeSigningConfigResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DeleteCodeSigningConfigResponse = exports.DeleteCodeSigningConfigResponse || (exports.DeleteCodeSigningConfigResponse = {}));\nvar DeleteEventSourceMappingRequest;\n(function (DeleteEventSourceMappingRequest) {\n    /**\n     * @internal\n     */\n    DeleteEventSourceMappingRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DeleteEventSourceMappingRequest = exports.DeleteEventSourceMappingRequest || (exports.DeleteEventSourceMappingRequest = {}));\nvar ResourceInUseException;\n(function (ResourceInUseException) {\n    /**\n     * @internal\n     */\n    ResourceInUseException.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ResourceInUseException = exports.ResourceInUseException || (exports.ResourceInUseException = {}));\nvar DeleteFunctionRequest;\n(function (DeleteFunctionRequest) {\n    /**\n     * @internal\n     */\n    DeleteFunctionRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DeleteFunctionRequest = exports.DeleteFunctionRequest || (exports.DeleteFunctionRequest = {}));\nvar DeleteFunctionCodeSigningConfigRequest;\n(function (DeleteFunctionCodeSigningConfigRequest) {\n    /**\n     * @internal\n     */\n    DeleteFunctionCodeSigningConfigRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DeleteFunctionCodeSigningConfigRequest = exports.DeleteFunctionCodeSigningConfigRequest || (exports.DeleteFunctionCodeSigningConfigRequest = {}));\nvar DeleteFunctionConcurrencyRequest;\n(function (DeleteFunctionConcurrencyRequest) {\n    /**\n     * @internal\n     */\n    DeleteFunctionConcurrencyRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DeleteFunctionConcurrencyRequest = exports.DeleteFunctionConcurrencyRequest || (exports.DeleteFunctionConcurrencyRequest = {}));\nvar DeleteFunctionEventInvokeConfigRequest;\n(function (DeleteFunctionEventInvokeConfigRequest) {\n    /**\n     * @internal\n     */\n    DeleteFunctionEventInvokeConfigRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DeleteFunctionEventInvokeConfigRequest = exports.DeleteFunctionEventInvokeConfigRequest || (exports.DeleteFunctionEventInvokeConfigRequest = {}));\nvar DeleteLayerVersionRequest;\n(function (DeleteLayerVersionRequest) {\n    /**\n     * @internal\n     */\n    DeleteLayerVersionRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DeleteLayerVersionRequest = exports.DeleteLayerVersionRequest || (exports.DeleteLayerVersionRequest = {}));\nvar DeleteProvisionedConcurrencyConfigRequest;\n(function (DeleteProvisionedConcurrencyConfigRequest) {\n    /**\n     * @internal\n     */\n    DeleteProvisionedConcurrencyConfigRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DeleteProvisionedConcurrencyConfigRequest = exports.DeleteProvisionedConcurrencyConfigRequest || (exports.DeleteProvisionedConcurrencyConfigRequest = {}));\nvar GetAccountSettingsRequest;\n(function (GetAccountSettingsRequest) {\n    /**\n     * @internal\n     */\n    GetAccountSettingsRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(GetAccountSettingsRequest = exports.GetAccountSettingsRequest || (exports.GetAccountSettingsRequest = {}));\nvar GetAccountSettingsResponse;\n(function (GetAccountSettingsResponse) {\n    /**\n     * @internal\n     */\n    GetAccountSettingsResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(GetAccountSettingsResponse = exports.GetAccountSettingsResponse || (exports.GetAccountSettingsResponse = {}));\nvar GetAliasRequest;\n(function (GetAliasRequest) {\n    /**\n     * @internal\n     */\n    GetAliasRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(GetAliasRequest = exports.GetAliasRequest || (exports.GetAliasRequest = {}));\nvar GetCodeSigningConfigRequest;\n(function (GetCodeSigningConfigRequest) {\n    /**\n     * @internal\n     */\n    GetCodeSigningConfigRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(GetCodeSigningConfigRequest = exports.GetCodeSigningConfigRequest || (exports.GetCodeSigningConfigRequest = {}));\nvar GetCodeSigningConfigResponse;\n(function (GetCodeSigningConfigResponse) {\n    /**\n     * @internal\n     */\n    GetCodeSigningConfigResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(GetCodeSigningConfigResponse = exports.GetCodeSigningConfigResponse || (exports.GetCodeSigningConfigResponse = {}));\nvar GetEventSourceMappingRequest;\n(function (GetEventSourceMappingRequest) {\n    /**\n     * @internal\n     */\n    GetEventSourceMappingRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(GetEventSourceMappingRequest = exports.GetEventSourceMappingRequest || (exports.GetEventSourceMappingRequest = {}));\nvar GetFunctionRequest;\n(function (GetFunctionRequest) {\n    /**\n     * @internal\n     */\n    GetFunctionRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(GetFunctionRequest = exports.GetFunctionRequest || (exports.GetFunctionRequest = {}));\nvar FunctionCodeLocation;\n(function (FunctionCodeLocation) {\n    /**\n     * @internal\n     */\n    FunctionCodeLocation.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(FunctionCodeLocation = exports.FunctionCodeLocation || (exports.FunctionCodeLocation = {}));\nvar Concurrency;\n(function (Concurrency) {\n    /**\n     * @internal\n     */\n    Concurrency.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(Concurrency = exports.Concurrency || (exports.Concurrency = {}));\nvar GetFunctionResponse;\n(function (GetFunctionResponse) {\n    /**\n     * @internal\n     */\n    GetFunctionResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n        ...(obj.Configuration && { Configuration: FunctionConfiguration.filterSensitiveLog(obj.Configuration) }),\n    });\n})(GetFunctionResponse = exports.GetFunctionResponse || (exports.GetFunctionResponse = {}));\nvar GetFunctionCodeSigningConfigRequest;\n(function (GetFunctionCodeSigningConfigRequest) {\n    /**\n     * @internal\n     */\n    GetFunctionCodeSigningConfigRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(GetFunctionCodeSigningConfigRequest = exports.GetFunctionCodeSigningConfigRequest || (exports.GetFunctionCodeSigningConfigRequest = {}));\nvar GetFunctionCodeSigningConfigResponse;\n(function (GetFunctionCodeSigningConfigResponse) {\n    /**\n     * @internal\n     */\n    GetFunctionCodeSigningConfigResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(GetFunctionCodeSigningConfigResponse = exports.GetFunctionCodeSigningConfigResponse || (exports.GetFunctionCodeSigningConfigResponse = {}));\nvar GetFunctionConcurrencyRequest;\n(function (GetFunctionConcurrencyRequest) {\n    /**\n     * @internal\n     */\n    GetFunctionConcurrencyRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(GetFunctionConcurrencyRequest = exports.GetFunctionConcurrencyRequest || (exports.GetFunctionConcurrencyRequest = {}));\nvar GetFunctionConcurrencyResponse;\n(function (GetFunctionConcurrencyResponse) {\n    /**\n     * @internal\n     */\n    GetFunctionConcurrencyResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(GetFunctionConcurrencyResponse = exports.GetFunctionConcurrencyResponse || (exports.GetFunctionConcurrencyResponse = {}));\nvar GetFunctionConfigurationRequest;\n(function (GetFunctionConfigurationRequest) {\n    /**\n     * @internal\n     */\n    GetFunctionConfigurationRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(GetFunctionConfigurationRequest = exports.GetFunctionConfigurationRequest || (exports.GetFunctionConfigurationRequest = {}));\nvar FunctionEventInvokeConfig;\n(function (FunctionEventInvokeConfig) {\n    /**\n     * @internal\n     */\n    FunctionEventInvokeConfig.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(FunctionEventInvokeConfig = exports.FunctionEventInvokeConfig || (exports.FunctionEventInvokeConfig = {}));\nvar GetFunctionEventInvokeConfigRequest;\n(function (GetFunctionEventInvokeConfigRequest) {\n    /**\n     * @internal\n     */\n    GetFunctionEventInvokeConfigRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(GetFunctionEventInvokeConfigRequest = exports.GetFunctionEventInvokeConfigRequest || (exports.GetFunctionEventInvokeConfigRequest = {}));\nvar GetLayerVersionRequest;\n(function (GetLayerVersionRequest) {\n    /**\n     * @internal\n     */\n    GetLayerVersionRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(GetLayerVersionRequest = exports.GetLayerVersionRequest || (exports.GetLayerVersionRequest = {}));\nvar LayerVersionContentOutput;\n(function (LayerVersionContentOutput) {\n    /**\n     * @internal\n     */\n    LayerVersionContentOutput.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(LayerVersionContentOutput = exports.LayerVersionContentOutput || (exports.LayerVersionContentOutput = {}));\nvar GetLayerVersionResponse;\n(function (GetLayerVersionResponse) {\n    /**\n     * @internal\n     */\n    GetLayerVersionResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(GetLayerVersionResponse = exports.GetLayerVersionResponse || (exports.GetLayerVersionResponse = {}));\nvar GetLayerVersionByArnRequest;\n(function (GetLayerVersionByArnRequest) {\n    /**\n     * @internal\n     */\n    GetLayerVersionByArnRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(GetLayerVersionByArnRequest = exports.GetLayerVersionByArnRequest || (exports.GetLayerVersionByArnRequest = {}));\nvar GetLayerVersionPolicyRequest;\n(function (GetLayerVersionPolicyRequest) {\n    /**\n     * @internal\n     */\n    GetLayerVersionPolicyRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(GetLayerVersionPolicyRequest = exports.GetLayerVersionPolicyRequest || (exports.GetLayerVersionPolicyRequest = {}));\nvar GetLayerVersionPolicyResponse;\n(function (GetLayerVersionPolicyResponse) {\n    /**\n     * @internal\n     */\n    GetLayerVersionPolicyResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(GetLayerVersionPolicyResponse = exports.GetLayerVersionPolicyResponse || (exports.GetLayerVersionPolicyResponse = {}));\nvar GetPolicyRequest;\n(function (GetPolicyRequest) {\n    /**\n     * @internal\n     */\n    GetPolicyRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(GetPolicyRequest = exports.GetPolicyRequest || (exports.GetPolicyRequest = {}));\nvar GetPolicyResponse;\n(function (GetPolicyResponse) {\n    /**\n     * @internal\n     */\n    GetPolicyResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(GetPolicyResponse = exports.GetPolicyResponse || (exports.GetPolicyResponse = {}));\nvar GetProvisionedConcurrencyConfigRequest;\n(function (GetProvisionedConcurrencyConfigRequest) {\n    /**\n     * @internal\n     */\n    GetProvisionedConcurrencyConfigRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(GetProvisionedConcurrencyConfigRequest = exports.GetProvisionedConcurrencyConfigRequest || (exports.GetProvisionedConcurrencyConfigRequest = {}));\nvar ProvisionedConcurrencyStatusEnum;\n(function (ProvisionedConcurrencyStatusEnum) {\n    ProvisionedConcurrencyStatusEnum[\"FAILED\"] = \"FAILED\";\n    ProvisionedConcurrencyStatusEnum[\"IN_PROGRESS\"] = \"IN_PROGRESS\";\n    ProvisionedConcurrencyStatusEnum[\"READY\"] = \"READY\";\n})(ProvisionedConcurrencyStatusEnum = exports.ProvisionedConcurrencyStatusEnum || (exports.ProvisionedConcurrencyStatusEnum = {}));\nvar GetProvisionedConcurrencyConfigResponse;\n(function (GetProvisionedConcurrencyConfigResponse) {\n    /**\n     * @internal\n     */\n    GetProvisionedConcurrencyConfigResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(GetProvisionedConcurrencyConfigResponse = exports.GetProvisionedConcurrencyConfigResponse || (exports.GetProvisionedConcurrencyConfigResponse = {}));\nvar ProvisionedConcurrencyConfigNotFoundException;\n(function (ProvisionedConcurrencyConfigNotFoundException) {\n    /**\n     * @internal\n     */\n    ProvisionedConcurrencyConfigNotFoundException.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ProvisionedConcurrencyConfigNotFoundException = exports.ProvisionedConcurrencyConfigNotFoundException || (exports.ProvisionedConcurrencyConfigNotFoundException = {}));\nvar EC2AccessDeniedException;\n(function (EC2AccessDeniedException) {\n    /**\n     * @internal\n     */\n    EC2AccessDeniedException.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(EC2AccessDeniedException = exports.EC2AccessDeniedException || (exports.EC2AccessDeniedException = {}));\nvar EC2ThrottledException;\n(function (EC2ThrottledException) {\n    /**\n     * @internal\n     */\n    EC2ThrottledException.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(EC2ThrottledException = exports.EC2ThrottledException || (exports.EC2ThrottledException = {}));\nvar EC2UnexpectedException;\n(function (EC2UnexpectedException) {\n    /**\n     * @internal\n     */\n    EC2UnexpectedException.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(EC2UnexpectedException = exports.EC2UnexpectedException || (exports.EC2UnexpectedException = {}));\nvar EFSIOException;\n(function (EFSIOException) {\n    /**\n     * @internal\n     */\n    EFSIOException.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(EFSIOException = exports.EFSIOException || (exports.EFSIOException = {}));\nvar EFSMountConnectivityException;\n(function (EFSMountConnectivityException) {\n    /**\n     * @internal\n     */\n    EFSMountConnectivityException.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(EFSMountConnectivityException = exports.EFSMountConnectivityException || (exports.EFSMountConnectivityException = {}));\nvar EFSMountFailureException;\n(function (EFSMountFailureException) {\n    /**\n     * @internal\n     */\n    EFSMountFailureException.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(EFSMountFailureException = exports.EFSMountFailureException || (exports.EFSMountFailureException = {}));\nvar EFSMountTimeoutException;\n(function (EFSMountTimeoutException) {\n    /**\n     * @internal\n     */\n    EFSMountTimeoutException.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(EFSMountTimeoutException = exports.EFSMountTimeoutException || (exports.EFSMountTimeoutException = {}));\nvar ENILimitReachedException;\n(function (ENILimitReachedException) {\n    /**\n     * @internal\n     */\n    ENILimitReachedException.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ENILimitReachedException = exports.ENILimitReachedException || (exports.ENILimitReachedException = {}));\nvar InvalidRequestContentException;\n(function (InvalidRequestContentException) {\n    /**\n     * @internal\n     */\n    InvalidRequestContentException.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(InvalidRequestContentException = exports.InvalidRequestContentException || (exports.InvalidRequestContentException = {}));\nvar InvalidRuntimeException;\n(function (InvalidRuntimeException) {\n    /**\n     * @internal\n     */\n    InvalidRuntimeException.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(InvalidRuntimeException = exports.InvalidRuntimeException || (exports.InvalidRuntimeException = {}));\nvar InvalidSecurityGroupIDException;\n(function (InvalidSecurityGroupIDException) {\n    /**\n     * @internal\n     */\n    InvalidSecurityGroupIDException.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(InvalidSecurityGroupIDException = exports.InvalidSecurityGroupIDException || (exports.InvalidSecurityGroupIDException = {}));\nvar InvalidSubnetIDException;\n(function (InvalidSubnetIDException) {\n    /**\n     * @internal\n     */\n    InvalidSubnetIDException.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(InvalidSubnetIDException = exports.InvalidSubnetIDException || (exports.InvalidSubnetIDException = {}));\nvar InvalidZipFileException;\n(function (InvalidZipFileException) {\n    /**\n     * @internal\n     */\n    InvalidZipFileException.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(InvalidZipFileException = exports.InvalidZipFileException || (exports.InvalidZipFileException = {}));\nvar InvocationType;\n(function (InvocationType) {\n    InvocationType[\"DryRun\"] = \"DryRun\";\n    InvocationType[\"Event\"] = \"Event\";\n    InvocationType[\"RequestResponse\"] = \"RequestResponse\";\n})(InvocationType = exports.InvocationType || (exports.InvocationType = {}));\nvar LogType;\n(function (LogType) {\n    LogType[\"None\"] = \"None\";\n    LogType[\"Tail\"] = \"Tail\";\n})(LogType = exports.LogType || (exports.LogType = {}));\nvar InvocationRequest;\n(function (InvocationRequest) {\n    /**\n     * @internal\n     */\n    InvocationRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n        ...(obj.Payload && { Payload: smithy_client_1.SENSITIVE_STRING }),\n    });\n})(InvocationRequest = exports.InvocationRequest || (exports.InvocationRequest = {}));\nvar InvocationResponse;\n(function (InvocationResponse) {\n    /**\n     * @internal\n     */\n    InvocationResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n        ...(obj.Payload && { Payload: smithy_client_1.SENSITIVE_STRING }),\n    });\n})(InvocationResponse = exports.InvocationResponse || (exports.InvocationResponse = {}));\nvar KMSAccessDeniedException;\n(function (KMSAccessDeniedException) {\n    /**\n     * @internal\n     */\n    KMSAccessDeniedException.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(KMSAccessDeniedException = exports.KMSAccessDeniedException || (exports.KMSAccessDeniedException = {}));\nvar KMSDisabledException;\n(function (KMSDisabledException) {\n    /**\n     * @internal\n     */\n    KMSDisabledException.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(KMSDisabledException = exports.KMSDisabledException || (exports.KMSDisabledException = {}));\nvar KMSInvalidStateException;\n(function (KMSInvalidStateException) {\n    /**\n     * @internal\n     */\n    KMSInvalidStateException.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(KMSInvalidStateException = exports.KMSInvalidStateException || (exports.KMSInvalidStateException = {}));\nvar KMSNotFoundException;\n(function (KMSNotFoundException) {\n    /**\n     * @internal\n     */\n    KMSNotFoundException.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(KMSNotFoundException = exports.KMSNotFoundException || (exports.KMSNotFoundException = {}));\nvar RequestTooLargeException;\n(function (RequestTooLargeException) {\n    /**\n     * @internal\n     */\n    RequestTooLargeException.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(RequestTooLargeException = exports.RequestTooLargeException || (exports.RequestTooLargeException = {}));\nvar ResourceNotReadyException;\n(function (ResourceNotReadyException) {\n    /**\n     * @internal\n     */\n    ResourceNotReadyException.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ResourceNotReadyException = exports.ResourceNotReadyException || (exports.ResourceNotReadyException = {}));\nvar SubnetIPAddressLimitReachedException;\n(function (SubnetIPAddressLimitReachedException) {\n    /**\n     * @internal\n     */\n    SubnetIPAddressLimitReachedException.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(SubnetIPAddressLimitReachedException = exports.SubnetIPAddressLimitReachedException || (exports.SubnetIPAddressLimitReachedException = {}));\nvar UnsupportedMediaTypeException;\n(function (UnsupportedMediaTypeException) {\n    /**\n     * @internal\n     */\n    UnsupportedMediaTypeException.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(UnsupportedMediaTypeException = exports.UnsupportedMediaTypeException || (exports.UnsupportedMediaTypeException = {}));\nvar InvokeAsyncRequest;\n(function (InvokeAsyncRequest) {\n    /**\n     * @internal\n     */\n    InvokeAsyncRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(InvokeAsyncRequest = exports.InvokeAsyncRequest || (exports.InvokeAsyncRequest = {}));\nvar InvokeAsyncResponse;\n(function (InvokeAsyncResponse) {\n    /**\n     * @internal\n     */\n    InvokeAsyncResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(InvokeAsyncResponse = exports.InvokeAsyncResponse || (exports.InvokeAsyncResponse = {}));\nvar ListAliasesRequest;\n(function (ListAliasesRequest) {\n    /**\n     * @internal\n     */\n    ListAliasesRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ListAliasesRequest = exports.ListAliasesRequest || (exports.ListAliasesRequest = {}));\nvar ListAliasesResponse;\n(function (ListAliasesResponse) {\n    /**\n     * @internal\n     */\n    ListAliasesResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ListAliasesResponse = exports.ListAliasesResponse || (exports.ListAliasesResponse = {}));\nvar ListCodeSigningConfigsRequest;\n(function (ListCodeSigningConfigsRequest) {\n    /**\n     * @internal\n     */\n    ListCodeSigningConfigsRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ListCodeSigningConfigsRequest = exports.ListCodeSigningConfigsRequest || (exports.ListCodeSigningConfigsRequest = {}));\nvar ListCodeSigningConfigsResponse;\n(function (ListCodeSigningConfigsResponse) {\n    /**\n     * @internal\n     */\n    ListCodeSigningConfigsResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ListCodeSigningConfigsResponse = exports.ListCodeSigningConfigsResponse || (exports.ListCodeSigningConfigsResponse = {}));\nvar ListEventSourceMappingsRequest;\n(function (ListEventSourceMappingsRequest) {\n    /**\n     * @internal\n     */\n    ListEventSourceMappingsRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ListEventSourceMappingsRequest = exports.ListEventSourceMappingsRequest || (exports.ListEventSourceMappingsRequest = {}));\nvar ListEventSourceMappingsResponse;\n(function (ListEventSourceMappingsResponse) {\n    /**\n     * @internal\n     */\n    ListEventSourceMappingsResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ListEventSourceMappingsResponse = exports.ListEventSourceMappingsResponse || (exports.ListEventSourceMappingsResponse = {}));\nvar ListFunctionEventInvokeConfigsRequest;\n(function (ListFunctionEventInvokeConfigsRequest) {\n    /**\n     * @internal\n     */\n    ListFunctionEventInvokeConfigsRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ListFunctionEventInvokeConfigsRequest = exports.ListFunctionEventInvokeConfigsRequest || (exports.ListFunctionEventInvokeConfigsRequest = {}));\nvar ListFunctionEventInvokeConfigsResponse;\n(function (ListFunctionEventInvokeConfigsResponse) {\n    /**\n     * @internal\n     */\n    ListFunctionEventInvokeConfigsResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ListFunctionEventInvokeConfigsResponse = exports.ListFunctionEventInvokeConfigsResponse || (exports.ListFunctionEventInvokeConfigsResponse = {}));\nvar FunctionVersion;\n(function (FunctionVersion) {\n    FunctionVersion[\"ALL\"] = \"ALL\";\n})(FunctionVersion = exports.FunctionVersion || (exports.FunctionVersion = {}));\nvar ListFunctionsRequest;\n(function (ListFunctionsRequest) {\n    /**\n     * @internal\n     */\n    ListFunctionsRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ListFunctionsRequest = exports.ListFunctionsRequest || (exports.ListFunctionsRequest = {}));\nvar ListFunctionsResponse;\n(function (ListFunctionsResponse) {\n    /**\n     * @internal\n     */\n    ListFunctionsResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n        ...(obj.Functions && { Functions: obj.Functions.map((item) => FunctionConfiguration.filterSensitiveLog(item)) }),\n    });\n})(ListFunctionsResponse = exports.ListFunctionsResponse || (exports.ListFunctionsResponse = {}));\nvar ListFunctionsByCodeSigningConfigRequest;\n(function (ListFunctionsByCodeSigningConfigRequest) {\n    /**\n     * @internal\n     */\n    ListFunctionsByCodeSigningConfigRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ListFunctionsByCodeSigningConfigRequest = exports.ListFunctionsByCodeSigningConfigRequest || (exports.ListFunctionsByCodeSigningConfigRequest = {}));\nvar ListFunctionsByCodeSigningConfigResponse;\n(function (ListFunctionsByCodeSigningConfigResponse) {\n    /**\n     * @internal\n     */\n    ListFunctionsByCodeSigningConfigResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ListFunctionsByCodeSigningConfigResponse = exports.ListFunctionsByCodeSigningConfigResponse || (exports.ListFunctionsByCodeSigningConfigResponse = {}));\nvar ListLayersRequest;\n(function (ListLayersRequest) {\n    /**\n     * @internal\n     */\n    ListLayersRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ListLayersRequest = exports.ListLayersRequest || (exports.ListLayersRequest = {}));\nvar LayerVersionsListItem;\n(function (LayerVersionsListItem) {\n    /**\n     * @internal\n     */\n    LayerVersionsListItem.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(LayerVersionsListItem = exports.LayerVersionsListItem || (exports.LayerVersionsListItem = {}));\nvar LayersListItem;\n(function (LayersListItem) {\n    /**\n     * @internal\n     */\n    LayersListItem.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(LayersListItem = exports.LayersListItem || (exports.LayersListItem = {}));\nvar ListLayersResponse;\n(function (ListLayersResponse) {\n    /**\n     * @internal\n     */\n    ListLayersResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ListLayersResponse = exports.ListLayersResponse || (exports.ListLayersResponse = {}));\nvar ListLayerVersionsRequest;\n(function (ListLayerVersionsRequest) {\n    /**\n     * @internal\n     */\n    ListLayerVersionsRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ListLayerVersionsRequest = exports.ListLayerVersionsRequest || (exports.ListLayerVersionsRequest = {}));\nvar ListLayerVersionsResponse;\n(function (ListLayerVersionsResponse) {\n    /**\n     * @internal\n     */\n    ListLayerVersionsResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ListLayerVersionsResponse = exports.ListLayerVersionsResponse || (exports.ListLayerVersionsResponse = {}));\nvar ListProvisionedConcurrencyConfigsRequest;\n(function (ListProvisionedConcurrencyConfigsRequest) {\n    /**\n     * @internal\n     */\n    ListProvisionedConcurrencyConfigsRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ListProvisionedConcurrencyConfigsRequest = exports.ListProvisionedConcurrencyConfigsRequest || (exports.ListProvisionedConcurrencyConfigsRequest = {}));\nvar ProvisionedConcurrencyConfigListItem;\n(function (ProvisionedConcurrencyConfigListItem) {\n    /**\n     * @internal\n     */\n    ProvisionedConcurrencyConfigListItem.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ProvisionedConcurrencyConfigListItem = exports.ProvisionedConcurrencyConfigListItem || (exports.ProvisionedConcurrencyConfigListItem = {}));\nvar ListProvisionedConcurrencyConfigsResponse;\n(function (ListProvisionedConcurrencyConfigsResponse) {\n    /**\n     * @internal\n     */\n    ListProvisionedConcurrencyConfigsResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ListProvisionedConcurrencyConfigsResponse = exports.ListProvisionedConcurrencyConfigsResponse || (exports.ListProvisionedConcurrencyConfigsResponse = {}));\nvar ListTagsRequest;\n(function (ListTagsRequest) {\n    /**\n     * @internal\n     */\n    ListTagsRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ListTagsRequest = exports.ListTagsRequest || (exports.ListTagsRequest = {}));\nvar ListTagsResponse;\n(function (ListTagsResponse) {\n    /**\n     * @internal\n     */\n    ListTagsResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ListTagsResponse = exports.ListTagsResponse || (exports.ListTagsResponse = {}));\nvar ListVersionsByFunctionRequest;\n(function (ListVersionsByFunctionRequest) {\n    /**\n     * @internal\n     */\n    ListVersionsByFunctionRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ListVersionsByFunctionRequest = exports.ListVersionsByFunctionRequest || (exports.ListVersionsByFunctionRequest = {}));\nvar ListVersionsByFunctionResponse;\n(function (ListVersionsByFunctionResponse) {\n    /**\n     * @internal\n     */\n    ListVersionsByFunctionResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n        ...(obj.Versions && { Versions: obj.Versions.map((item) => FunctionConfiguration.filterSensitiveLog(item)) }),\n    });\n})(ListVersionsByFunctionResponse = exports.ListVersionsByFunctionResponse || (exports.ListVersionsByFunctionResponse = {}));\nvar LayerVersionContentInput;\n(function (LayerVersionContentInput) {\n    /**\n     * @internal\n     */\n    LayerVersionContentInput.filterSensitiveLog = (obj) => ({\n        ...obj,\n        ...(obj.ZipFile && { ZipFile: smithy_client_1.SENSITIVE_STRING }),\n    });\n})(LayerVersionContentInput = exports.LayerVersionContentInput || (exports.LayerVersionContentInput = {}));\nvar PublishLayerVersionRequest;\n(function (PublishLayerVersionRequest) {\n    /**\n     * @internal\n     */\n    PublishLayerVersionRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n        ...(obj.Content && { Content: LayerVersionContentInput.filterSensitiveLog(obj.Content) }),\n    });\n})(PublishLayerVersionRequest = exports.PublishLayerVersionRequest || (exports.PublishLayerVersionRequest = {}));\nvar PublishLayerVersionResponse;\n(function (PublishLayerVersionResponse) {\n    /**\n     * @internal\n     */\n    PublishLayerVersionResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(PublishLayerVersionResponse = exports.PublishLayerVersionResponse || (exports.PublishLayerVersionResponse = {}));\nvar PublishVersionRequest;\n(function (PublishVersionRequest) {\n    /**\n     * @internal\n     */\n    PublishVersionRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(PublishVersionRequest = exports.PublishVersionRequest || (exports.PublishVersionRequest = {}));\nvar PutFunctionCodeSigningConfigRequest;\n(function (PutFunctionCodeSigningConfigRequest) {\n    /**\n     * @internal\n     */\n    PutFunctionCodeSigningConfigRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(PutFunctionCodeSigningConfigRequest = exports.PutFunctionCodeSigningConfigRequest || (exports.PutFunctionCodeSigningConfigRequest = {}));\nvar PutFunctionCodeSigningConfigResponse;\n(function (PutFunctionCodeSigningConfigResponse) {\n    /**\n     * @internal\n     */\n    PutFunctionCodeSigningConfigResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(PutFunctionCodeSigningConfigResponse = exports.PutFunctionCodeSigningConfigResponse || (exports.PutFunctionCodeSigningConfigResponse = {}));\nvar PutFunctionConcurrencyRequest;\n(function (PutFunctionConcurrencyRequest) {\n    /**\n     * @internal\n     */\n    PutFunctionConcurrencyRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(PutFunctionConcurrencyRequest = exports.PutFunctionConcurrencyRequest || (exports.PutFunctionConcurrencyRequest = {}));\nvar PutFunctionEventInvokeConfigRequest;\n(function (PutFunctionEventInvokeConfigRequest) {\n    /**\n     * @internal\n     */\n    PutFunctionEventInvokeConfigRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(PutFunctionEventInvokeConfigRequest = exports.PutFunctionEventInvokeConfigRequest || (exports.PutFunctionEventInvokeConfigRequest = {}));\nvar PutProvisionedConcurrencyConfigRequest;\n(function (PutProvisionedConcurrencyConfigRequest) {\n    /**\n     * @internal\n     */\n    PutProvisionedConcurrencyConfigRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(PutProvisionedConcurrencyConfigRequest = exports.PutProvisionedConcurrencyConfigRequest || (exports.PutProvisionedConcurrencyConfigRequest = {}));\nvar PutProvisionedConcurrencyConfigResponse;\n(function (PutProvisionedConcurrencyConfigResponse) {\n    /**\n     * @internal\n     */\n    PutProvisionedConcurrencyConfigResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(PutProvisionedConcurrencyConfigResponse = exports.PutProvisionedConcurrencyConfigResponse || (exports.PutProvisionedConcurrencyConfigResponse = {}));\nvar RemoveLayerVersionPermissionRequest;\n(function (RemoveLayerVersionPermissionRequest) {\n    /**\n     * @internal\n     */\n    RemoveLayerVersionPermissionRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(RemoveLayerVersionPermissionRequest = exports.RemoveLayerVersionPermissionRequest || (exports.RemoveLayerVersionPermissionRequest = {}));\nvar RemovePermissionRequest;\n(function (RemovePermissionRequest) {\n    /**\n     * @internal\n     */\n    RemovePermissionRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(RemovePermissionRequest = exports.RemovePermissionRequest || (exports.RemovePermissionRequest = {}));\nvar TagResourceRequest;\n(function (TagResourceRequest) {\n    /**\n     * @internal\n     */\n    TagResourceRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(TagResourceRequest = exports.TagResourceRequest || (exports.TagResourceRequest = {}));\nvar UntagResourceRequest;\n(function (UntagResourceRequest) {\n    /**\n     * @internal\n     */\n    UntagResourceRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(UntagResourceRequest = exports.UntagResourceRequest || (exports.UntagResourceRequest = {}));\nvar UpdateAliasRequest;\n(function (UpdateAliasRequest) {\n    /**\n     * @internal\n     */\n    UpdateAliasRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(UpdateAliasRequest = exports.UpdateAliasRequest || (exports.UpdateAliasRequest = {}));\nvar UpdateCodeSigningConfigRequest;\n(function (UpdateCodeSigningConfigRequest) {\n    /**\n     * @internal\n     */\n    UpdateCodeSigningConfigRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(UpdateCodeSigningConfigRequest = exports.UpdateCodeSigningConfigRequest || (exports.UpdateCodeSigningConfigRequest = {}));\nvar UpdateCodeSigningConfigResponse;\n(function (UpdateCodeSigningConfigResponse) {\n    /**\n     * @internal\n     */\n    UpdateCodeSigningConfigResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(UpdateCodeSigningConfigResponse = exports.UpdateCodeSigningConfigResponse || (exports.UpdateCodeSigningConfigResponse = {}));\nvar UpdateEventSourceMappingRequest;\n(function (UpdateEventSourceMappingRequest) {\n    /**\n     * @internal\n     */\n    UpdateEventSourceMappingRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(UpdateEventSourceMappingRequest = exports.UpdateEventSourceMappingRequest || (exports.UpdateEventSourceMappingRequest = {}));\nvar UpdateFunctionCodeRequest;\n(function (UpdateFunctionCodeRequest) {\n    /**\n     * @internal\n     */\n    UpdateFunctionCodeRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n        ...(obj.ZipFile && { ZipFile: smithy_client_1.SENSITIVE_STRING }),\n    });\n})(UpdateFunctionCodeRequest = exports.UpdateFunctionCodeRequest || (exports.UpdateFunctionCodeRequest = {}));\nvar UpdateFunctionConfigurationRequest;\n(function (UpdateFunctionConfigurationRequest) {\n    /**\n     * @internal\n     */\n    UpdateFunctionConfigurationRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n        ...(obj.Environment && { Environment: Environment.filterSensitiveLog(obj.Environment) }),\n    });\n})(UpdateFunctionConfigurationRequest = exports.UpdateFunctionConfigurationRequest || (exports.UpdateFunctionConfigurationRequest = {}));\nvar UpdateFunctionEventInvokeConfigRequest;\n(function (UpdateFunctionEventInvokeConfigRequest) {\n    /**\n     * @internal\n     */\n    UpdateFunctionEventInvokeConfigRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(UpdateFunctionEventInvokeConfigRequest = exports.UpdateFunctionEventInvokeConfigRequest || (exports.UpdateFunctionEventInvokeConfigRequest = {}));\n//# sourceMappingURL=models_0.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=Interfaces.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.paginateListAliases = void 0;\nconst Lambda_1 = require(\"../Lambda\");\nconst LambdaClient_1 = require(\"../LambdaClient\");\nconst ListAliasesCommand_1 = require(\"../commands/ListAliasesCommand\");\n/**\n * @private\n */\nconst makePagedClientRequest = async (client, input, ...args) => {\n    // @ts-ignore\n    return await client.send(new ListAliasesCommand_1.ListAliasesCommand(input), ...args);\n};\n/**\n * @private\n */\nconst makePagedRequest = async (client, input, ...args) => {\n    // @ts-ignore\n    return await client.listAliases(input, ...args);\n};\nasync function* paginateListAliases(config, input, ...additionalArguments) {\n    // ToDo: replace with actual type instead of typeof input.Marker\n    let token = config.startingToken || undefined;\n    let hasNext = true;\n    let page;\n    while (hasNext) {\n        input.Marker = token;\n        input[\"MaxItems\"] = config.pageSize;\n        if (config.client instanceof Lambda_1.Lambda) {\n            page = await makePagedRequest(config.client, input, ...additionalArguments);\n        }\n        else if (config.client instanceof LambdaClient_1.LambdaClient) {\n            page = await makePagedClientRequest(config.client, input, ...additionalArguments);\n        }\n        else {\n            throw new Error(\"Invalid client, expected Lambda | LambdaClient\");\n        }\n        yield page;\n        token = page.NextMarker;\n        hasNext = !!token;\n    }\n    // @ts-ignore\n    return undefined;\n}\nexports.paginateListAliases = paginateListAliases;\n//# sourceMappingURL=ListAliasesPaginator.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.paginateListCodeSigningConfigs = void 0;\nconst Lambda_1 = require(\"../Lambda\");\nconst LambdaClient_1 = require(\"../LambdaClient\");\nconst ListCodeSigningConfigsCommand_1 = require(\"../commands/ListCodeSigningConfigsCommand\");\n/**\n * @private\n */\nconst makePagedClientRequest = async (client, input, ...args) => {\n    // @ts-ignore\n    return await client.send(new ListCodeSigningConfigsCommand_1.ListCodeSigningConfigsCommand(input), ...args);\n};\n/**\n * @private\n */\nconst makePagedRequest = async (client, input, ...args) => {\n    // @ts-ignore\n    return await client.listCodeSigningConfigs(input, ...args);\n};\nasync function* paginateListCodeSigningConfigs(config, input, ...additionalArguments) {\n    // ToDo: replace with actual type instead of typeof input.Marker\n    let token = config.startingToken || undefined;\n    let hasNext = true;\n    let page;\n    while (hasNext) {\n        input.Marker = token;\n        input[\"MaxItems\"] = config.pageSize;\n        if (config.client instanceof Lambda_1.Lambda) {\n            page = await makePagedRequest(config.client, input, ...additionalArguments);\n        }\n        else if (config.client instanceof LambdaClient_1.LambdaClient) {\n            page = await makePagedClientRequest(config.client, input, ...additionalArguments);\n        }\n        else {\n            throw new Error(\"Invalid client, expected Lambda | LambdaClient\");\n        }\n        yield page;\n        token = page.NextMarker;\n        hasNext = !!token;\n    }\n    // @ts-ignore\n    return undefined;\n}\nexports.paginateListCodeSigningConfigs = paginateListCodeSigningConfigs;\n//# sourceMappingURL=ListCodeSigningConfigsPaginator.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.paginateListEventSourceMappings = void 0;\nconst Lambda_1 = require(\"../Lambda\");\nconst LambdaClient_1 = require(\"../LambdaClient\");\nconst ListEventSourceMappingsCommand_1 = require(\"../commands/ListEventSourceMappingsCommand\");\n/**\n * @private\n */\nconst makePagedClientRequest = async (client, input, ...args) => {\n    // @ts-ignore\n    return await client.send(new ListEventSourceMappingsCommand_1.ListEventSourceMappingsCommand(input), ...args);\n};\n/**\n * @private\n */\nconst makePagedRequest = async (client, input, ...args) => {\n    // @ts-ignore\n    return await client.listEventSourceMappings(input, ...args);\n};\nasync function* paginateListEventSourceMappings(config, input, ...additionalArguments) {\n    // ToDo: replace with actual type instead of typeof input.Marker\n    let token = config.startingToken || undefined;\n    let hasNext = true;\n    let page;\n    while (hasNext) {\n        input.Marker = token;\n        input[\"MaxItems\"] = config.pageSize;\n        if (config.client instanceof Lambda_1.Lambda) {\n            page = await makePagedRequest(config.client, input, ...additionalArguments);\n        }\n        else if (config.client instanceof LambdaClient_1.LambdaClient) {\n            page = await makePagedClientRequest(config.client, input, ...additionalArguments);\n        }\n        else {\n            throw new Error(\"Invalid client, expected Lambda | LambdaClient\");\n        }\n        yield page;\n        token = page.NextMarker;\n        hasNext = !!token;\n    }\n    // @ts-ignore\n    return undefined;\n}\nexports.paginateListEventSourceMappings = paginateListEventSourceMappings;\n//# sourceMappingURL=ListEventSourceMappingsPaginator.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.paginateListFunctionEventInvokeConfigs = void 0;\nconst Lambda_1 = require(\"../Lambda\");\nconst LambdaClient_1 = require(\"../LambdaClient\");\nconst ListFunctionEventInvokeConfigsCommand_1 = require(\"../commands/ListFunctionEventInvokeConfigsCommand\");\n/**\n * @private\n */\nconst makePagedClientRequest = async (client, input, ...args) => {\n    // @ts-ignore\n    return await client.send(new ListFunctionEventInvokeConfigsCommand_1.ListFunctionEventInvokeConfigsCommand(input), ...args);\n};\n/**\n * @private\n */\nconst makePagedRequest = async (client, input, ...args) => {\n    // @ts-ignore\n    return await client.listFunctionEventInvokeConfigs(input, ...args);\n};\nasync function* paginateListFunctionEventInvokeConfigs(config, input, ...additionalArguments) {\n    // ToDo: replace with actual type instead of typeof input.Marker\n    let token = config.startingToken || undefined;\n    let hasNext = true;\n    let page;\n    while (hasNext) {\n        input.Marker = token;\n        input[\"MaxItems\"] = config.pageSize;\n        if (config.client instanceof Lambda_1.Lambda) {\n            page = await makePagedRequest(config.client, input, ...additionalArguments);\n        }\n        else if (config.client instanceof LambdaClient_1.LambdaClient) {\n            page = await makePagedClientRequest(config.client, input, ...additionalArguments);\n        }\n        else {\n            throw new Error(\"Invalid client, expected Lambda | LambdaClient\");\n        }\n        yield page;\n        token = page.NextMarker;\n        hasNext = !!token;\n    }\n    // @ts-ignore\n    return undefined;\n}\nexports.paginateListFunctionEventInvokeConfigs = paginateListFunctionEventInvokeConfigs;\n//# sourceMappingURL=ListFunctionEventInvokeConfigsPaginator.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.paginateListFunctionsByCodeSigningConfig = void 0;\nconst Lambda_1 = require(\"../Lambda\");\nconst LambdaClient_1 = require(\"../LambdaClient\");\nconst ListFunctionsByCodeSigningConfigCommand_1 = require(\"../commands/ListFunctionsByCodeSigningConfigCommand\");\n/**\n * @private\n */\nconst makePagedClientRequest = async (client, input, ...args) => {\n    // @ts-ignore\n    return await client.send(new ListFunctionsByCodeSigningConfigCommand_1.ListFunctionsByCodeSigningConfigCommand(input), ...args);\n};\n/**\n * @private\n */\nconst makePagedRequest = async (client, input, ...args) => {\n    // @ts-ignore\n    return await client.listFunctionsByCodeSigningConfig(input, ...args);\n};\nasync function* paginateListFunctionsByCodeSigningConfig(config, input, ...additionalArguments) {\n    // ToDo: replace with actual type instead of typeof input.Marker\n    let token = config.startingToken || undefined;\n    let hasNext = true;\n    let page;\n    while (hasNext) {\n        input.Marker = token;\n        input[\"MaxItems\"] = config.pageSize;\n        if (config.client instanceof Lambda_1.Lambda) {\n            page = await makePagedRequest(config.client, input, ...additionalArguments);\n        }\n        else if (config.client instanceof LambdaClient_1.LambdaClient) {\n            page = await makePagedClientRequest(config.client, input, ...additionalArguments);\n        }\n        else {\n            throw new Error(\"Invalid client, expected Lambda | LambdaClient\");\n        }\n        yield page;\n        token = page.NextMarker;\n        hasNext = !!token;\n    }\n    // @ts-ignore\n    return undefined;\n}\nexports.paginateListFunctionsByCodeSigningConfig = paginateListFunctionsByCodeSigningConfig;\n//# sourceMappingURL=ListFunctionsByCodeSigningConfigPaginator.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.paginateListFunctions = void 0;\nconst Lambda_1 = require(\"../Lambda\");\nconst LambdaClient_1 = require(\"../LambdaClient\");\nconst ListFunctionsCommand_1 = require(\"../commands/ListFunctionsCommand\");\n/**\n * @private\n */\nconst makePagedClientRequest = async (client, input, ...args) => {\n    // @ts-ignore\n    return await client.send(new ListFunctionsCommand_1.ListFunctionsCommand(input), ...args);\n};\n/**\n * @private\n */\nconst makePagedRequest = async (client, input, ...args) => {\n    // @ts-ignore\n    return await client.listFunctions(input, ...args);\n};\nasync function* paginateListFunctions(config, input, ...additionalArguments) {\n    // ToDo: replace with actual type instead of typeof input.Marker\n    let token = config.startingToken || undefined;\n    let hasNext = true;\n    let page;\n    while (hasNext) {\n        input.Marker = token;\n        input[\"MaxItems\"] = config.pageSize;\n        if (config.client instanceof Lambda_1.Lambda) {\n            page = await makePagedRequest(config.client, input, ...additionalArguments);\n        }\n        else if (config.client instanceof LambdaClient_1.LambdaClient) {\n            page = await makePagedClientRequest(config.client, input, ...additionalArguments);\n        }\n        else {\n            throw new Error(\"Invalid client, expected Lambda | LambdaClient\");\n        }\n        yield page;\n        token = page.NextMarker;\n        hasNext = !!token;\n    }\n    // @ts-ignore\n    return undefined;\n}\nexports.paginateListFunctions = paginateListFunctions;\n//# sourceMappingURL=ListFunctionsPaginator.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.paginateListLayerVersions = void 0;\nconst Lambda_1 = require(\"../Lambda\");\nconst LambdaClient_1 = require(\"../LambdaClient\");\nconst ListLayerVersionsCommand_1 = require(\"../commands/ListLayerVersionsCommand\");\n/**\n * @private\n */\nconst makePagedClientRequest = async (client, input, ...args) => {\n    // @ts-ignore\n    return await client.send(new ListLayerVersionsCommand_1.ListLayerVersionsCommand(input), ...args);\n};\n/**\n * @private\n */\nconst makePagedRequest = async (client, input, ...args) => {\n    // @ts-ignore\n    return await client.listLayerVersions(input, ...args);\n};\nasync function* paginateListLayerVersions(config, input, ...additionalArguments) {\n    // ToDo: replace with actual type instead of typeof input.Marker\n    let token = config.startingToken || undefined;\n    let hasNext = true;\n    let page;\n    while (hasNext) {\n        input.Marker = token;\n        input[\"MaxItems\"] = config.pageSize;\n        if (config.client instanceof Lambda_1.Lambda) {\n            page = await makePagedRequest(config.client, input, ...additionalArguments);\n        }\n        else if (config.client instanceof LambdaClient_1.LambdaClient) {\n            page = await makePagedClientRequest(config.client, input, ...additionalArguments);\n        }\n        else {\n            throw new Error(\"Invalid client, expected Lambda | LambdaClient\");\n        }\n        yield page;\n        token = page.NextMarker;\n        hasNext = !!token;\n    }\n    // @ts-ignore\n    return undefined;\n}\nexports.paginateListLayerVersions = paginateListLayerVersions;\n//# sourceMappingURL=ListLayerVersionsPaginator.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.paginateListLayers = void 0;\nconst Lambda_1 = require(\"../Lambda\");\nconst LambdaClient_1 = require(\"../LambdaClient\");\nconst ListLayersCommand_1 = require(\"../commands/ListLayersCommand\");\n/**\n * @private\n */\nconst makePagedClientRequest = async (client, input, ...args) => {\n    // @ts-ignore\n    return await client.send(new ListLayersCommand_1.ListLayersCommand(input), ...args);\n};\n/**\n * @private\n */\nconst makePagedRequest = async (client, input, ...args) => {\n    // @ts-ignore\n    return await client.listLayers(input, ...args);\n};\nasync function* paginateListLayers(config, input, ...additionalArguments) {\n    // ToDo: replace with actual type instead of typeof input.Marker\n    let token = config.startingToken || undefined;\n    let hasNext = true;\n    let page;\n    while (hasNext) {\n        input.Marker = token;\n        input[\"MaxItems\"] = config.pageSize;\n        if (config.client instanceof Lambda_1.Lambda) {\n            page = await makePagedRequest(config.client, input, ...additionalArguments);\n        }\n        else if (config.client instanceof LambdaClient_1.LambdaClient) {\n            page = await makePagedClientRequest(config.client, input, ...additionalArguments);\n        }\n        else {\n            throw new Error(\"Invalid client, expected Lambda | LambdaClient\");\n        }\n        yield page;\n        token = page.NextMarker;\n        hasNext = !!token;\n    }\n    // @ts-ignore\n    return undefined;\n}\nexports.paginateListLayers = paginateListLayers;\n//# sourceMappingURL=ListLayersPaginator.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.paginateListProvisionedConcurrencyConfigs = void 0;\nconst Lambda_1 = require(\"../Lambda\");\nconst LambdaClient_1 = require(\"../LambdaClient\");\nconst ListProvisionedConcurrencyConfigsCommand_1 = require(\"../commands/ListProvisionedConcurrencyConfigsCommand\");\n/**\n * @private\n */\nconst makePagedClientRequest = async (client, input, ...args) => {\n    // @ts-ignore\n    return await client.send(new ListProvisionedConcurrencyConfigsCommand_1.ListProvisionedConcurrencyConfigsCommand(input), ...args);\n};\n/**\n * @private\n */\nconst makePagedRequest = async (client, input, ...args) => {\n    // @ts-ignore\n    return await client.listProvisionedConcurrencyConfigs(input, ...args);\n};\nasync function* paginateListProvisionedConcurrencyConfigs(config, input, ...additionalArguments) {\n    // ToDo: replace with actual type instead of typeof input.Marker\n    let token = config.startingToken || undefined;\n    let hasNext = true;\n    let page;\n    while (hasNext) {\n        input.Marker = token;\n        input[\"MaxItems\"] = config.pageSize;\n        if (config.client instanceof Lambda_1.Lambda) {\n            page = await makePagedRequest(config.client, input, ...additionalArguments);\n        }\n        else if (config.client instanceof LambdaClient_1.LambdaClient) {\n            page = await makePagedClientRequest(config.client, input, ...additionalArguments);\n        }\n        else {\n            throw new Error(\"Invalid client, expected Lambda | LambdaClient\");\n        }\n        yield page;\n        token = page.NextMarker;\n        hasNext = !!token;\n    }\n    // @ts-ignore\n    return undefined;\n}\nexports.paginateListProvisionedConcurrencyConfigs = paginateListProvisionedConcurrencyConfigs;\n//# sourceMappingURL=ListProvisionedConcurrencyConfigsPaginator.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.paginateListVersionsByFunction = void 0;\nconst Lambda_1 = require(\"../Lambda\");\nconst LambdaClient_1 = require(\"../LambdaClient\");\nconst ListVersionsByFunctionCommand_1 = require(\"../commands/ListVersionsByFunctionCommand\");\n/**\n * @private\n */\nconst makePagedClientRequest = async (client, input, ...args) => {\n    // @ts-ignore\n    return await client.send(new ListVersionsByFunctionCommand_1.ListVersionsByFunctionCommand(input), ...args);\n};\n/**\n * @private\n */\nconst makePagedRequest = async (client, input, ...args) => {\n    // @ts-ignore\n    return await client.listVersionsByFunction(input, ...args);\n};\nasync function* paginateListVersionsByFunction(config, input, ...additionalArguments) {\n    // ToDo: replace with actual type instead of typeof input.Marker\n    let token = config.startingToken || undefined;\n    let hasNext = true;\n    let page;\n    while (hasNext) {\n        input.Marker = token;\n        input[\"MaxItems\"] = config.pageSize;\n        if (config.client instanceof Lambda_1.Lambda) {\n            page = await makePagedRequest(config.client, input, ...additionalArguments);\n        }\n        else if (config.client instanceof LambdaClient_1.LambdaClient) {\n            page = await makePagedClientRequest(config.client, input, ...additionalArguments);\n        }\n        else {\n            throw new Error(\"Invalid client, expected Lambda | LambdaClient\");\n        }\n        yield page;\n        token = page.NextMarker;\n        hasNext = !!token;\n    }\n    // @ts-ignore\n    return undefined;\n}\nexports.paginateListVersionsByFunction = paginateListVersionsByFunction;\n//# sourceMappingURL=ListVersionsByFunctionPaginator.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.serializeAws_restJson1RemovePermissionCommand = exports.serializeAws_restJson1RemoveLayerVersionPermissionCommand = exports.serializeAws_restJson1PutProvisionedConcurrencyConfigCommand = exports.serializeAws_restJson1PutFunctionEventInvokeConfigCommand = exports.serializeAws_restJson1PutFunctionConcurrencyCommand = exports.serializeAws_restJson1PutFunctionCodeSigningConfigCommand = exports.serializeAws_restJson1PublishVersionCommand = exports.serializeAws_restJson1PublishLayerVersionCommand = exports.serializeAws_restJson1ListVersionsByFunctionCommand = exports.serializeAws_restJson1ListTagsCommand = exports.serializeAws_restJson1ListProvisionedConcurrencyConfigsCommand = exports.serializeAws_restJson1ListLayerVersionsCommand = exports.serializeAws_restJson1ListLayersCommand = exports.serializeAws_restJson1ListFunctionsByCodeSigningConfigCommand = exports.serializeAws_restJson1ListFunctionsCommand = exports.serializeAws_restJson1ListFunctionEventInvokeConfigsCommand = exports.serializeAws_restJson1ListEventSourceMappingsCommand = exports.serializeAws_restJson1ListCodeSigningConfigsCommand = exports.serializeAws_restJson1ListAliasesCommand = exports.serializeAws_restJson1InvokeAsyncCommand = exports.serializeAws_restJson1InvokeCommand = exports.serializeAws_restJson1GetProvisionedConcurrencyConfigCommand = exports.serializeAws_restJson1GetPolicyCommand = exports.serializeAws_restJson1GetLayerVersionPolicyCommand = exports.serializeAws_restJson1GetLayerVersionByArnCommand = exports.serializeAws_restJson1GetLayerVersionCommand = exports.serializeAws_restJson1GetFunctionEventInvokeConfigCommand = exports.serializeAws_restJson1GetFunctionConfigurationCommand = exports.serializeAws_restJson1GetFunctionConcurrencyCommand = exports.serializeAws_restJson1GetFunctionCodeSigningConfigCommand = exports.serializeAws_restJson1GetFunctionCommand = exports.serializeAws_restJson1GetEventSourceMappingCommand = exports.serializeAws_restJson1GetCodeSigningConfigCommand = exports.serializeAws_restJson1GetAliasCommand = exports.serializeAws_restJson1GetAccountSettingsCommand = exports.serializeAws_restJson1DeleteProvisionedConcurrencyConfigCommand = exports.serializeAws_restJson1DeleteLayerVersionCommand = exports.serializeAws_restJson1DeleteFunctionEventInvokeConfigCommand = exports.serializeAws_restJson1DeleteFunctionConcurrencyCommand = exports.serializeAws_restJson1DeleteFunctionCodeSigningConfigCommand = exports.serializeAws_restJson1DeleteFunctionCommand = exports.serializeAws_restJson1DeleteEventSourceMappingCommand = exports.serializeAws_restJson1DeleteCodeSigningConfigCommand = exports.serializeAws_restJson1DeleteAliasCommand = exports.serializeAws_restJson1CreateFunctionCommand = exports.serializeAws_restJson1CreateEventSourceMappingCommand = exports.serializeAws_restJson1CreateCodeSigningConfigCommand = exports.serializeAws_restJson1CreateAliasCommand = exports.serializeAws_restJson1AddPermissionCommand = exports.serializeAws_restJson1AddLayerVersionPermissionCommand = void 0;\nexports.deserializeAws_restJson1ListVersionsByFunctionCommand = exports.deserializeAws_restJson1ListTagsCommand = exports.deserializeAws_restJson1ListProvisionedConcurrencyConfigsCommand = exports.deserializeAws_restJson1ListLayerVersionsCommand = exports.deserializeAws_restJson1ListLayersCommand = exports.deserializeAws_restJson1ListFunctionsByCodeSigningConfigCommand = exports.deserializeAws_restJson1ListFunctionsCommand = exports.deserializeAws_restJson1ListFunctionEventInvokeConfigsCommand = exports.deserializeAws_restJson1ListEventSourceMappingsCommand = exports.deserializeAws_restJson1ListCodeSigningConfigsCommand = exports.deserializeAws_restJson1ListAliasesCommand = exports.deserializeAws_restJson1InvokeAsyncCommand = exports.deserializeAws_restJson1InvokeCommand = exports.deserializeAws_restJson1GetProvisionedConcurrencyConfigCommand = exports.deserializeAws_restJson1GetPolicyCommand = exports.deserializeAws_restJson1GetLayerVersionPolicyCommand = exports.deserializeAws_restJson1GetLayerVersionByArnCommand = exports.deserializeAws_restJson1GetLayerVersionCommand = exports.deserializeAws_restJson1GetFunctionEventInvokeConfigCommand = exports.deserializeAws_restJson1GetFunctionConfigurationCommand = exports.deserializeAws_restJson1GetFunctionConcurrencyCommand = exports.deserializeAws_restJson1GetFunctionCodeSigningConfigCommand = exports.deserializeAws_restJson1GetFunctionCommand = exports.deserializeAws_restJson1GetEventSourceMappingCommand = exports.deserializeAws_restJson1GetCodeSigningConfigCommand = exports.deserializeAws_restJson1GetAliasCommand = exports.deserializeAws_restJson1GetAccountSettingsCommand = exports.deserializeAws_restJson1DeleteProvisionedConcurrencyConfigCommand = exports.deserializeAws_restJson1DeleteLayerVersionCommand = exports.deserializeAws_restJson1DeleteFunctionEventInvokeConfigCommand = exports.deserializeAws_restJson1DeleteFunctionConcurrencyCommand = exports.deserializeAws_restJson1DeleteFunctionCodeSigningConfigCommand = exports.deserializeAws_restJson1DeleteFunctionCommand = exports.deserializeAws_restJson1DeleteEventSourceMappingCommand = exports.deserializeAws_restJson1DeleteCodeSigningConfigCommand = exports.deserializeAws_restJson1DeleteAliasCommand = exports.deserializeAws_restJson1CreateFunctionCommand = exports.deserializeAws_restJson1CreateEventSourceMappingCommand = exports.deserializeAws_restJson1CreateCodeSigningConfigCommand = exports.deserializeAws_restJson1CreateAliasCommand = exports.deserializeAws_restJson1AddPermissionCommand = exports.deserializeAws_restJson1AddLayerVersionPermissionCommand = exports.serializeAws_restJson1UpdateFunctionEventInvokeConfigCommand = exports.serializeAws_restJson1UpdateFunctionConfigurationCommand = exports.serializeAws_restJson1UpdateFunctionCodeCommand = exports.serializeAws_restJson1UpdateEventSourceMappingCommand = exports.serializeAws_restJson1UpdateCodeSigningConfigCommand = exports.serializeAws_restJson1UpdateAliasCommand = exports.serializeAws_restJson1UntagResourceCommand = exports.serializeAws_restJson1TagResourceCommand = void 0;\nexports.deserializeAws_restJson1UpdateFunctionEventInvokeConfigCommand = exports.deserializeAws_restJson1UpdateFunctionConfigurationCommand = exports.deserializeAws_restJson1UpdateFunctionCodeCommand = exports.deserializeAws_restJson1UpdateEventSourceMappingCommand = exports.deserializeAws_restJson1UpdateCodeSigningConfigCommand = exports.deserializeAws_restJson1UpdateAliasCommand = exports.deserializeAws_restJson1UntagResourceCommand = exports.deserializeAws_restJson1TagResourceCommand = exports.deserializeAws_restJson1RemovePermissionCommand = exports.deserializeAws_restJson1RemoveLayerVersionPermissionCommand = exports.deserializeAws_restJson1PutProvisionedConcurrencyConfigCommand = exports.deserializeAws_restJson1PutFunctionEventInvokeConfigCommand = exports.deserializeAws_restJson1PutFunctionConcurrencyCommand = exports.deserializeAws_restJson1PutFunctionCodeSigningConfigCommand = exports.deserializeAws_restJson1PublishVersionCommand = exports.deserializeAws_restJson1PublishLayerVersionCommand = void 0;\nconst protocol_http_1 = require(\"@aws-sdk/protocol-http\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst serializeAws_restJson1AddLayerVersionPermissionCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/json\",\n    };\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2018-10-31/layers/{LayerName}/versions/{VersionNumber}/policy\";\n    if (input.LayerName !== undefined) {\n        const labelValue = input.LayerName;\n        if (labelValue.length <= 0) {\n            throw new Error(\"Empty value provided for input HTTP label: LayerName.\");\n        }\n        resolvedPath = resolvedPath.replace(\"{LayerName}\", (0, smithy_client_1.extendedEncodeURIComponent)(labelValue));\n    }\n    else {\n        throw new Error(\"No value provided for input HTTP label: LayerName.\");\n    }\n    if (input.VersionNumber !== undefined) {\n        const labelValue = input.VersionNumber.toString();\n        if (labelValue.length <= 0) {\n            throw new Error(\"Empty value provided for input HTTP label: VersionNumber.\");\n        }\n        resolvedPath = resolvedPath.replace(\"{VersionNumber}\", (0, smithy_client_1.extendedEncodeURIComponent)(labelValue));\n    }\n    else {\n        throw new Error(\"No value provided for input HTTP label: VersionNumber.\");\n    }\n    const query = {\n        ...(input.RevisionId !== undefined && { RevisionId: input.RevisionId }),\n    };\n    let body;\n    body = JSON.stringify({\n        ...(input.Action !== undefined && input.Action !== null && { Action: input.Action }),\n        ...(input.OrganizationId !== undefined &&\n            input.OrganizationId !== null && { OrganizationId: input.OrganizationId }),\n        ...(input.Principal !== undefined && input.Principal !== null && { Principal: input.Principal }),\n        ...(input.StatementId !== undefined && input.StatementId !== null && { StatementId: input.StatementId }),\n    });\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.serializeAws_restJson1AddLayerVersionPermissionCommand = serializeAws_restJson1AddLayerVersionPermissionCommand;\nconst serializeAws_restJson1AddPermissionCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/json\",\n    };\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2015-03-31/functions/{FunctionName}/policy\";\n    if (input.FunctionName !== undefined) {\n        const labelValue = input.FunctionName;\n        if (labelValue.length <= 0) {\n            throw new Error(\"Empty value provided for input HTTP label: FunctionName.\");\n        }\n        resolvedPath = resolvedPath.replace(\"{FunctionName}\", (0, smithy_client_1.extendedEncodeURIComponent)(labelValue));\n    }\n    else {\n        throw new Error(\"No value provided for input HTTP label: FunctionName.\");\n    }\n    const query = {\n        ...(input.Qualifier !== undefined && { Qualifier: input.Qualifier }),\n    };\n    let body;\n    body = JSON.stringify({\n        ...(input.Action !== undefined && input.Action !== null && { Action: input.Action }),\n        ...(input.EventSourceToken !== undefined &&\n            input.EventSourceToken !== null && { EventSourceToken: input.EventSourceToken }),\n        ...(input.Principal !== undefined && input.Principal !== null && { Principal: input.Principal }),\n        ...(input.RevisionId !== undefined && input.RevisionId !== null && { RevisionId: input.RevisionId }),\n        ...(input.SourceAccount !== undefined && input.SourceAccount !== null && { SourceAccount: input.SourceAccount }),\n        ...(input.SourceArn !== undefined && input.SourceArn !== null && { SourceArn: input.SourceArn }),\n        ...(input.StatementId !== undefined && input.StatementId !== null && { StatementId: input.StatementId }),\n    });\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.serializeAws_restJson1AddPermissionCommand = serializeAws_restJson1AddPermissionCommand;\nconst serializeAws_restJson1CreateAliasCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/json\",\n    };\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2015-03-31/functions/{FunctionName}/aliases\";\n    if (input.FunctionName !== undefined) {\n        const labelValue = input.FunctionName;\n        if (labelValue.length <= 0) {\n            throw new Error(\"Empty value provided for input HTTP label: FunctionName.\");\n        }\n        resolvedPath = resolvedPath.replace(\"{FunctionName}\", (0, smithy_client_1.extendedEncodeURIComponent)(labelValue));\n    }\n    else {\n        throw new Error(\"No value provided for input HTTP label: FunctionName.\");\n    }\n    let body;\n    body = JSON.stringify({\n        ...(input.Description !== undefined && input.Description !== null && { Description: input.Description }),\n        ...(input.FunctionVersion !== undefined &&\n            input.FunctionVersion !== null && { FunctionVersion: input.FunctionVersion }),\n        ...(input.Name !== undefined && input.Name !== null && { Name: input.Name }),\n        ...(input.RoutingConfig !== undefined &&\n            input.RoutingConfig !== null && {\n            RoutingConfig: serializeAws_restJson1AliasRoutingConfiguration(input.RoutingConfig, context),\n        }),\n    });\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restJson1CreateAliasCommand = serializeAws_restJson1CreateAliasCommand;\nconst serializeAws_restJson1CreateCodeSigningConfigCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/json\",\n    };\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-04-22/code-signing-configs\";\n    let body;\n    body = JSON.stringify({\n        ...(input.AllowedPublishers !== undefined &&\n            input.AllowedPublishers !== null && {\n            AllowedPublishers: serializeAws_restJson1AllowedPublishers(input.AllowedPublishers, context),\n        }),\n        ...(input.CodeSigningPolicies !== undefined &&\n            input.CodeSigningPolicies !== null && {\n            CodeSigningPolicies: serializeAws_restJson1CodeSigningPolicies(input.CodeSigningPolicies, context),\n        }),\n        ...(input.Description !== undefined && input.Description !== null && { Description: input.Description }),\n    });\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restJson1CreateCodeSigningConfigCommand = serializeAws_restJson1CreateCodeSigningConfigCommand;\nconst serializeAws_restJson1CreateEventSourceMappingCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/json\",\n    };\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2015-03-31/event-source-mappings\";\n    let body;\n    body = JSON.stringify({\n        ...(input.BatchSize !== undefined && input.BatchSize !== null && { BatchSize: input.BatchSize }),\n        ...(input.BisectBatchOnFunctionError !== undefined &&\n            input.BisectBatchOnFunctionError !== null && { BisectBatchOnFunctionError: input.BisectBatchOnFunctionError }),\n        ...(input.DestinationConfig !== undefined &&\n            input.DestinationConfig !== null && {\n            DestinationConfig: serializeAws_restJson1DestinationConfig(input.DestinationConfig, context),\n        }),\n        ...(input.Enabled !== undefined && input.Enabled !== null && { Enabled: input.Enabled }),\n        ...(input.EventSourceArn !== undefined &&\n            input.EventSourceArn !== null && { EventSourceArn: input.EventSourceArn }),\n        ...(input.FunctionName !== undefined && input.FunctionName !== null && { FunctionName: input.FunctionName }),\n        ...(input.FunctionResponseTypes !== undefined &&\n            input.FunctionResponseTypes !== null && {\n            FunctionResponseTypes: serializeAws_restJson1FunctionResponseTypeList(input.FunctionResponseTypes, context),\n        }),\n        ...(input.MaximumBatchingWindowInSeconds !== undefined &&\n            input.MaximumBatchingWindowInSeconds !== null && {\n            MaximumBatchingWindowInSeconds: input.MaximumBatchingWindowInSeconds,\n        }),\n        ...(input.MaximumRecordAgeInSeconds !== undefined &&\n            input.MaximumRecordAgeInSeconds !== null && { MaximumRecordAgeInSeconds: input.MaximumRecordAgeInSeconds }),\n        ...(input.MaximumRetryAttempts !== undefined &&\n            input.MaximumRetryAttempts !== null && { MaximumRetryAttempts: input.MaximumRetryAttempts }),\n        ...(input.ParallelizationFactor !== undefined &&\n            input.ParallelizationFactor !== null && { ParallelizationFactor: input.ParallelizationFactor }),\n        ...(input.Queues !== undefined &&\n            input.Queues !== null && { Queues: serializeAws_restJson1Queues(input.Queues, context) }),\n        ...(input.SelfManagedEventSource !== undefined &&\n            input.SelfManagedEventSource !== null && {\n            SelfManagedEventSource: serializeAws_restJson1SelfManagedEventSource(input.SelfManagedEventSource, context),\n        }),\n        ...(input.SourceAccessConfigurations !== undefined &&\n            input.SourceAccessConfigurations !== null && {\n            SourceAccessConfigurations: serializeAws_restJson1SourceAccessConfigurations(input.SourceAccessConfigurations, context),\n        }),\n        ...(input.StartingPosition !== undefined &&\n            input.StartingPosition !== null && { StartingPosition: input.StartingPosition }),\n        ...(input.StartingPositionTimestamp !== undefined &&\n            input.StartingPositionTimestamp !== null && {\n            StartingPositionTimestamp: Math.round(input.StartingPositionTimestamp.getTime() / 1000),\n        }),\n        ...(input.Topics !== undefined &&\n            input.Topics !== null && { Topics: serializeAws_restJson1Topics(input.Topics, context) }),\n        ...(input.TumblingWindowInSeconds !== undefined &&\n            input.TumblingWindowInSeconds !== null && { TumblingWindowInSeconds: input.TumblingWindowInSeconds }),\n    });\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restJson1CreateEventSourceMappingCommand = serializeAws_restJson1CreateEventSourceMappingCommand;\nconst serializeAws_restJson1CreateFunctionCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/json\",\n    };\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2015-03-31/functions\";\n    let body;\n    body = JSON.stringify({\n        ...(input.Code !== undefined &&\n            input.Code !== null && { Code: serializeAws_restJson1FunctionCode(input.Code, context) }),\n        ...(input.CodeSigningConfigArn !== undefined &&\n            input.CodeSigningConfigArn !== null && { CodeSigningConfigArn: input.CodeSigningConfigArn }),\n        ...(input.DeadLetterConfig !== undefined &&\n            input.DeadLetterConfig !== null && {\n            DeadLetterConfig: serializeAws_restJson1DeadLetterConfig(input.DeadLetterConfig, context),\n        }),\n        ...(input.Description !== undefined && input.Description !== null && { Description: input.Description }),\n        ...(input.Environment !== undefined &&\n            input.Environment !== null && { Environment: serializeAws_restJson1Environment(input.Environment, context) }),\n        ...(input.FileSystemConfigs !== undefined &&\n            input.FileSystemConfigs !== null && {\n            FileSystemConfigs: serializeAws_restJson1FileSystemConfigList(input.FileSystemConfigs, context),\n        }),\n        ...(input.FunctionName !== undefined && input.FunctionName !== null && { FunctionName: input.FunctionName }),\n        ...(input.Handler !== undefined && input.Handler !== null && { Handler: input.Handler }),\n        ...(input.ImageConfig !== undefined &&\n            input.ImageConfig !== null && { ImageConfig: serializeAws_restJson1ImageConfig(input.ImageConfig, context) }),\n        ...(input.KMSKeyArn !== undefined && input.KMSKeyArn !== null && { KMSKeyArn: input.KMSKeyArn }),\n        ...(input.Layers !== undefined &&\n            input.Layers !== null && { Layers: serializeAws_restJson1LayerList(input.Layers, context) }),\n        ...(input.MemorySize !== undefined && input.MemorySize !== null && { MemorySize: input.MemorySize }),\n        ...(input.PackageType !== undefined && input.PackageType !== null && { PackageType: input.PackageType }),\n        ...(input.Publish !== undefined && input.Publish !== null && { Publish: input.Publish }),\n        ...(input.Role !== undefined && input.Role !== null && { Role: input.Role }),\n        ...(input.Runtime !== undefined && input.Runtime !== null && { Runtime: input.Runtime }),\n        ...(input.Tags !== undefined && input.Tags !== null && { Tags: serializeAws_restJson1Tags(input.Tags, context) }),\n        ...(input.Timeout !== undefined && input.Timeout !== null && { Timeout: input.Timeout }),\n        ...(input.TracingConfig !== undefined &&\n            input.TracingConfig !== null && {\n            TracingConfig: serializeAws_restJson1TracingConfig(input.TracingConfig, context),\n        }),\n        ...(input.VpcConfig !== undefined &&\n            input.VpcConfig !== null && { VpcConfig: serializeAws_restJson1VpcConfig(input.VpcConfig, context) }),\n    });\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restJson1CreateFunctionCommand = serializeAws_restJson1CreateFunctionCommand;\nconst serializeAws_restJson1DeleteAliasCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2015-03-31/functions/{FunctionName}/aliases/{Name}\";\n    if (input.FunctionName !== undefined) {\n        const labelValue = input.FunctionName;\n        if (labelValue.length <= 0) {\n            throw new Error(\"Empty value provided for input HTTP label: FunctionName.\");\n        }\n        resolvedPath = resolvedPath.replace(\"{FunctionName}\", (0, smithy_client_1.extendedEncodeURIComponent)(labelValue));\n    }\n    else {\n        throw new Error(\"No value provided for input HTTP label: FunctionName.\");\n    }\n    if (input.Name !== undefined) {\n        const labelValue = input.Name;\n        if (labelValue.length <= 0) {\n            throw new Error(\"Empty value provided for input HTTP label: Name.\");\n        }\n        resolvedPath = resolvedPath.replace(\"{Name}\", (0, smithy_client_1.extendedEncodeURIComponent)(labelValue));\n    }\n    else {\n        throw new Error(\"No value provided for input HTTP label: Name.\");\n    }\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"DELETE\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restJson1DeleteAliasCommand = serializeAws_restJson1DeleteAliasCommand;\nconst serializeAws_restJson1DeleteCodeSigningConfigCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2020-04-22/code-signing-configs/{CodeSigningConfigArn}\";\n    if (input.CodeSigningConfigArn !== undefined) {\n        const labelValue = input.CodeSigningConfigArn;\n        if (labelValue.length <= 0) {\n            throw new Error(\"Empty value provided for input HTTP label: CodeSigningConfigArn.\");\n        }\n        resolvedPath = resolvedPath.replace(\"{CodeSigningConfigArn}\", (0, smithy_client_1.extendedEncodeURIComponent)(labelValue));\n    }\n    else {\n        throw new Error(\"No value provided for input HTTP label: CodeSigningConfigArn.\");\n    }\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"DELETE\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restJson1DeleteCodeSigningConfigCommand = serializeAws_restJson1DeleteCodeSigningConfigCommand;\nconst serializeAws_restJson1DeleteEventSourceMappingCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2015-03-31/event-source-mappings/{UUID}\";\n    if (input.UUID !== undefined) {\n        const labelValue = input.UUID;\n        if (labelValue.length <= 0) {\n            throw new Error(\"Empty value provided for input HTTP label: UUID.\");\n        }\n        resolvedPath = resolvedPath.replace(\"{UUID}\", (0, smithy_client_1.extendedEncodeURIComponent)(labelValue));\n    }\n    else {\n        throw new Error(\"No value provided for input HTTP label: UUID.\");\n    }\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"DELETE\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restJson1DeleteEventSourceMappingCommand = serializeAws_restJson1DeleteEventSourceMappingCommand;\nconst serializeAws_restJson1DeleteFunctionCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2015-03-31/functions/{FunctionName}\";\n    if (input.FunctionName !== undefined) {\n        const labelValue = input.FunctionName;\n        if (labelValue.length <= 0) {\n            throw new Error(\"Empty value provided for input HTTP label: FunctionName.\");\n        }\n        resolvedPath = resolvedPath.replace(\"{FunctionName}\", (0, smithy_client_1.extendedEncodeURIComponent)(labelValue));\n    }\n    else {\n        throw new Error(\"No value provided for input HTTP label: FunctionName.\");\n    }\n    const query = {\n        ...(input.Qualifier !== undefined && { Qualifier: input.Qualifier }),\n    };\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"DELETE\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.serializeAws_restJson1DeleteFunctionCommand = serializeAws_restJson1DeleteFunctionCommand;\nconst serializeAws_restJson1DeleteFunctionCodeSigningConfigCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2020-06-30/functions/{FunctionName}/code-signing-config\";\n    if (input.FunctionName !== undefined) {\n        const labelValue = input.FunctionName;\n        if (labelValue.length <= 0) {\n            throw new Error(\"Empty value provided for input HTTP label: FunctionName.\");\n        }\n        resolvedPath = resolvedPath.replace(\"{FunctionName}\", (0, smithy_client_1.extendedEncodeURIComponent)(labelValue));\n    }\n    else {\n        throw new Error(\"No value provided for input HTTP label: FunctionName.\");\n    }\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"DELETE\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restJson1DeleteFunctionCodeSigningConfigCommand = serializeAws_restJson1DeleteFunctionCodeSigningConfigCommand;\nconst serializeAws_restJson1DeleteFunctionConcurrencyCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2017-10-31/functions/{FunctionName}/concurrency\";\n    if (input.FunctionName !== undefined) {\n        const labelValue = input.FunctionName;\n        if (labelValue.length <= 0) {\n            throw new Error(\"Empty value provided for input HTTP label: FunctionName.\");\n        }\n        resolvedPath = resolvedPath.replace(\"{FunctionName}\", (0, smithy_client_1.extendedEncodeURIComponent)(labelValue));\n    }\n    else {\n        throw new Error(\"No value provided for input HTTP label: FunctionName.\");\n    }\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"DELETE\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restJson1DeleteFunctionConcurrencyCommand = serializeAws_restJson1DeleteFunctionConcurrencyCommand;\nconst serializeAws_restJson1DeleteFunctionEventInvokeConfigCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2019-09-25/functions/{FunctionName}/event-invoke-config\";\n    if (input.FunctionName !== undefined) {\n        const labelValue = input.FunctionName;\n        if (labelValue.length <= 0) {\n            throw new Error(\"Empty value provided for input HTTP label: FunctionName.\");\n        }\n        resolvedPath = resolvedPath.replace(\"{FunctionName}\", (0, smithy_client_1.extendedEncodeURIComponent)(labelValue));\n    }\n    else {\n        throw new Error(\"No value provided for input HTTP label: FunctionName.\");\n    }\n    const query = {\n        ...(input.Qualifier !== undefined && { Qualifier: input.Qualifier }),\n    };\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"DELETE\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.serializeAws_restJson1DeleteFunctionEventInvokeConfigCommand = serializeAws_restJson1DeleteFunctionEventInvokeConfigCommand;\nconst serializeAws_restJson1DeleteLayerVersionCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2018-10-31/layers/{LayerName}/versions/{VersionNumber}\";\n    if (input.LayerName !== undefined) {\n        const labelValue = input.LayerName;\n        if (labelValue.length <= 0) {\n            throw new Error(\"Empty value provided for input HTTP label: LayerName.\");\n        }\n        resolvedPath = resolvedPath.replace(\"{LayerName}\", (0, smithy_client_1.extendedEncodeURIComponent)(labelValue));\n    }\n    else {\n        throw new Error(\"No value provided for input HTTP label: LayerName.\");\n    }\n    if (input.VersionNumber !== undefined) {\n        const labelValue = input.VersionNumber.toString();\n        if (labelValue.length <= 0) {\n            throw new Error(\"Empty value provided for input HTTP label: VersionNumber.\");\n        }\n        resolvedPath = resolvedPath.replace(\"{VersionNumber}\", (0, smithy_client_1.extendedEncodeURIComponent)(labelValue));\n    }\n    else {\n        throw new Error(\"No value provided for input HTTP label: VersionNumber.\");\n    }\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"DELETE\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restJson1DeleteLayerVersionCommand = serializeAws_restJson1DeleteLayerVersionCommand;\nconst serializeAws_restJson1DeleteProvisionedConcurrencyConfigCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2019-09-30/functions/{FunctionName}/provisioned-concurrency\";\n    if (input.FunctionName !== undefined) {\n        const labelValue = input.FunctionName;\n        if (labelValue.length <= 0) {\n            throw new Error(\"Empty value provided for input HTTP label: FunctionName.\");\n        }\n        resolvedPath = resolvedPath.replace(\"{FunctionName}\", (0, smithy_client_1.extendedEncodeURIComponent)(labelValue));\n    }\n    else {\n        throw new Error(\"No value provided for input HTTP label: FunctionName.\");\n    }\n    const query = {\n        ...(input.Qualifier !== undefined && { Qualifier: input.Qualifier }),\n    };\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"DELETE\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.serializeAws_restJson1DeleteProvisionedConcurrencyConfigCommand = serializeAws_restJson1DeleteProvisionedConcurrencyConfigCommand;\nconst serializeAws_restJson1GetAccountSettingsCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/json\",\n    };\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2016-08-19/account-settings\";\n    let body;\n    body = \"\";\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restJson1GetAccountSettingsCommand = serializeAws_restJson1GetAccountSettingsCommand;\nconst serializeAws_restJson1GetAliasCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2015-03-31/functions/{FunctionName}/aliases/{Name}\";\n    if (input.FunctionName !== undefined) {\n        const labelValue = input.FunctionName;\n        if (labelValue.length <= 0) {\n            throw new Error(\"Empty value provided for input HTTP label: FunctionName.\");\n        }\n        resolvedPath = resolvedPath.replace(\"{FunctionName}\", (0, smithy_client_1.extendedEncodeURIComponent)(labelValue));\n    }\n    else {\n        throw new Error(\"No value provided for input HTTP label: FunctionName.\");\n    }\n    if (input.Name !== undefined) {\n        const labelValue = input.Name;\n        if (labelValue.length <= 0) {\n            throw new Error(\"Empty value provided for input HTTP label: Name.\");\n        }\n        resolvedPath = resolvedPath.replace(\"{Name}\", (0, smithy_client_1.extendedEncodeURIComponent)(labelValue));\n    }\n    else {\n        throw new Error(\"No value provided for input HTTP label: Name.\");\n    }\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restJson1GetAliasCommand = serializeAws_restJson1GetAliasCommand;\nconst serializeAws_restJson1GetCodeSigningConfigCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2020-04-22/code-signing-configs/{CodeSigningConfigArn}\";\n    if (input.CodeSigningConfigArn !== undefined) {\n        const labelValue = input.CodeSigningConfigArn;\n        if (labelValue.length <= 0) {\n            throw new Error(\"Empty value provided for input HTTP label: CodeSigningConfigArn.\");\n        }\n        resolvedPath = resolvedPath.replace(\"{CodeSigningConfigArn}\", (0, smithy_client_1.extendedEncodeURIComponent)(labelValue));\n    }\n    else {\n        throw new Error(\"No value provided for input HTTP label: CodeSigningConfigArn.\");\n    }\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restJson1GetCodeSigningConfigCommand = serializeAws_restJson1GetCodeSigningConfigCommand;\nconst serializeAws_restJson1GetEventSourceMappingCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2015-03-31/event-source-mappings/{UUID}\";\n    if (input.UUID !== undefined) {\n        const labelValue = input.UUID;\n        if (labelValue.length <= 0) {\n            throw new Error(\"Empty value provided for input HTTP label: UUID.\");\n        }\n        resolvedPath = resolvedPath.replace(\"{UUID}\", (0, smithy_client_1.extendedEncodeURIComponent)(labelValue));\n    }\n    else {\n        throw new Error(\"No value provided for input HTTP label: UUID.\");\n    }\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restJson1GetEventSourceMappingCommand = serializeAws_restJson1GetEventSourceMappingCommand;\nconst serializeAws_restJson1GetFunctionCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2015-03-31/functions/{FunctionName}\";\n    if (input.FunctionName !== undefined) {\n        const labelValue = input.FunctionName;\n        if (labelValue.length <= 0) {\n            throw new Error(\"Empty value provided for input HTTP label: FunctionName.\");\n        }\n        resolvedPath = resolvedPath.replace(\"{FunctionName}\", (0, smithy_client_1.extendedEncodeURIComponent)(labelValue));\n    }\n    else {\n        throw new Error(\"No value provided for input HTTP label: FunctionName.\");\n    }\n    const query = {\n        ...(input.Qualifier !== undefined && { Qualifier: input.Qualifier }),\n    };\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.serializeAws_restJson1GetFunctionCommand = serializeAws_restJson1GetFunctionCommand;\nconst serializeAws_restJson1GetFunctionCodeSigningConfigCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2020-06-30/functions/{FunctionName}/code-signing-config\";\n    if (input.FunctionName !== undefined) {\n        const labelValue = input.FunctionName;\n        if (labelValue.length <= 0) {\n            throw new Error(\"Empty value provided for input HTTP label: FunctionName.\");\n        }\n        resolvedPath = resolvedPath.replace(\"{FunctionName}\", (0, smithy_client_1.extendedEncodeURIComponent)(labelValue));\n    }\n    else {\n        throw new Error(\"No value provided for input HTTP label: FunctionName.\");\n    }\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restJson1GetFunctionCodeSigningConfigCommand = serializeAws_restJson1GetFunctionCodeSigningConfigCommand;\nconst serializeAws_restJson1GetFunctionConcurrencyCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2019-09-30/functions/{FunctionName}/concurrency\";\n    if (input.FunctionName !== undefined) {\n        const labelValue = input.FunctionName;\n        if (labelValue.length <= 0) {\n            throw new Error(\"Empty value provided for input HTTP label: FunctionName.\");\n        }\n        resolvedPath = resolvedPath.replace(\"{FunctionName}\", (0, smithy_client_1.extendedEncodeURIComponent)(labelValue));\n    }\n    else {\n        throw new Error(\"No value provided for input HTTP label: FunctionName.\");\n    }\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restJson1GetFunctionConcurrencyCommand = serializeAws_restJson1GetFunctionConcurrencyCommand;\nconst serializeAws_restJson1GetFunctionConfigurationCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2015-03-31/functions/{FunctionName}/configuration\";\n    if (input.FunctionName !== undefined) {\n        const labelValue = input.FunctionName;\n        if (labelValue.length <= 0) {\n            throw new Error(\"Empty value provided for input HTTP label: FunctionName.\");\n        }\n        resolvedPath = resolvedPath.replace(\"{FunctionName}\", (0, smithy_client_1.extendedEncodeURIComponent)(labelValue));\n    }\n    else {\n        throw new Error(\"No value provided for input HTTP label: FunctionName.\");\n    }\n    const query = {\n        ...(input.Qualifier !== undefined && { Qualifier: input.Qualifier }),\n    };\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.serializeAws_restJson1GetFunctionConfigurationCommand = serializeAws_restJson1GetFunctionConfigurationCommand;\nconst serializeAws_restJson1GetFunctionEventInvokeConfigCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2019-09-25/functions/{FunctionName}/event-invoke-config\";\n    if (input.FunctionName !== undefined) {\n        const labelValue = input.FunctionName;\n        if (labelValue.length <= 0) {\n            throw new Error(\"Empty value provided for input HTTP label: FunctionName.\");\n        }\n        resolvedPath = resolvedPath.replace(\"{FunctionName}\", (0, smithy_client_1.extendedEncodeURIComponent)(labelValue));\n    }\n    else {\n        throw new Error(\"No value provided for input HTTP label: FunctionName.\");\n    }\n    const query = {\n        ...(input.Qualifier !== undefined && { Qualifier: input.Qualifier }),\n    };\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.serializeAws_restJson1GetFunctionEventInvokeConfigCommand = serializeAws_restJson1GetFunctionEventInvokeConfigCommand;\nconst serializeAws_restJson1GetLayerVersionCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2018-10-31/layers/{LayerName}/versions/{VersionNumber}\";\n    if (input.LayerName !== undefined) {\n        const labelValue = input.LayerName;\n        if (labelValue.length <= 0) {\n            throw new Error(\"Empty value provided for input HTTP label: LayerName.\");\n        }\n        resolvedPath = resolvedPath.replace(\"{LayerName}\", (0, smithy_client_1.extendedEncodeURIComponent)(labelValue));\n    }\n    else {\n        throw new Error(\"No value provided for input HTTP label: LayerName.\");\n    }\n    if (input.VersionNumber !== undefined) {\n        const labelValue = input.VersionNumber.toString();\n        if (labelValue.length <= 0) {\n            throw new Error(\"Empty value provided for input HTTP label: VersionNumber.\");\n        }\n        resolvedPath = resolvedPath.replace(\"{VersionNumber}\", (0, smithy_client_1.extendedEncodeURIComponent)(labelValue));\n    }\n    else {\n        throw new Error(\"No value provided for input HTTP label: VersionNumber.\");\n    }\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restJson1GetLayerVersionCommand = serializeAws_restJson1GetLayerVersionCommand;\nconst serializeAws_restJson1GetLayerVersionByArnCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2018-10-31/layers\";\n    const query = {\n        find: \"LayerVersion\",\n        ...(input.Arn !== undefined && { Arn: input.Arn }),\n    };\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.serializeAws_restJson1GetLayerVersionByArnCommand = serializeAws_restJson1GetLayerVersionByArnCommand;\nconst serializeAws_restJson1GetLayerVersionPolicyCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2018-10-31/layers/{LayerName}/versions/{VersionNumber}/policy\";\n    if (input.LayerName !== undefined) {\n        const labelValue = input.LayerName;\n        if (labelValue.length <= 0) {\n            throw new Error(\"Empty value provided for input HTTP label: LayerName.\");\n        }\n        resolvedPath = resolvedPath.replace(\"{LayerName}\", (0, smithy_client_1.extendedEncodeURIComponent)(labelValue));\n    }\n    else {\n        throw new Error(\"No value provided for input HTTP label: LayerName.\");\n    }\n    if (input.VersionNumber !== undefined) {\n        const labelValue = input.VersionNumber.toString();\n        if (labelValue.length <= 0) {\n            throw new Error(\"Empty value provided for input HTTP label: VersionNumber.\");\n        }\n        resolvedPath = resolvedPath.replace(\"{VersionNumber}\", (0, smithy_client_1.extendedEncodeURIComponent)(labelValue));\n    }\n    else {\n        throw new Error(\"No value provided for input HTTP label: VersionNumber.\");\n    }\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restJson1GetLayerVersionPolicyCommand = serializeAws_restJson1GetLayerVersionPolicyCommand;\nconst serializeAws_restJson1GetPolicyCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2015-03-31/functions/{FunctionName}/policy\";\n    if (input.FunctionName !== undefined) {\n        const labelValue = input.FunctionName;\n        if (labelValue.length <= 0) {\n            throw new Error(\"Empty value provided for input HTTP label: FunctionName.\");\n        }\n        resolvedPath = resolvedPath.replace(\"{FunctionName}\", (0, smithy_client_1.extendedEncodeURIComponent)(labelValue));\n    }\n    else {\n        throw new Error(\"No value provided for input HTTP label: FunctionName.\");\n    }\n    const query = {\n        ...(input.Qualifier !== undefined && { Qualifier: input.Qualifier }),\n    };\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.serializeAws_restJson1GetPolicyCommand = serializeAws_restJson1GetPolicyCommand;\nconst serializeAws_restJson1GetProvisionedConcurrencyConfigCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2019-09-30/functions/{FunctionName}/provisioned-concurrency\";\n    if (input.FunctionName !== undefined) {\n        const labelValue = input.FunctionName;\n        if (labelValue.length <= 0) {\n            throw new Error(\"Empty value provided for input HTTP label: FunctionName.\");\n        }\n        resolvedPath = resolvedPath.replace(\"{FunctionName}\", (0, smithy_client_1.extendedEncodeURIComponent)(labelValue));\n    }\n    else {\n        throw new Error(\"No value provided for input HTTP label: FunctionName.\");\n    }\n    const query = {\n        ...(input.Qualifier !== undefined && { Qualifier: input.Qualifier }),\n    };\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.serializeAws_restJson1GetProvisionedConcurrencyConfigCommand = serializeAws_restJson1GetProvisionedConcurrencyConfigCommand;\nconst serializeAws_restJson1InvokeCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/octet-stream\",\n        ...(isSerializableHeaderValue(input.InvocationType) && { \"x-amz-invocation-type\": input.InvocationType }),\n        ...(isSerializableHeaderValue(input.LogType) && { \"x-amz-log-type\": input.LogType }),\n        ...(isSerializableHeaderValue(input.ClientContext) && { \"x-amz-client-context\": input.ClientContext }),\n    };\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2015-03-31/functions/{FunctionName}/invocations\";\n    if (input.FunctionName !== undefined) {\n        const labelValue = input.FunctionName;\n        if (labelValue.length <= 0) {\n            throw new Error(\"Empty value provided for input HTTP label: FunctionName.\");\n        }\n        resolvedPath = resolvedPath.replace(\"{FunctionName}\", (0, smithy_client_1.extendedEncodeURIComponent)(labelValue));\n    }\n    else {\n        throw new Error(\"No value provided for input HTTP label: FunctionName.\");\n    }\n    const query = {\n        ...(input.Qualifier !== undefined && { Qualifier: input.Qualifier }),\n    };\n    let body;\n    if (input.Payload !== undefined) {\n        body = input.Payload;\n    }\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.serializeAws_restJson1InvokeCommand = serializeAws_restJson1InvokeCommand;\nconst serializeAws_restJson1InvokeAsyncCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/octet-stream\",\n    };\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2014-11-13/functions/{FunctionName}/invoke-async\";\n    if (input.FunctionName !== undefined) {\n        const labelValue = input.FunctionName;\n        if (labelValue.length <= 0) {\n            throw new Error(\"Empty value provided for input HTTP label: FunctionName.\");\n        }\n        resolvedPath = resolvedPath.replace(\"{FunctionName}\", (0, smithy_client_1.extendedEncodeURIComponent)(labelValue));\n    }\n    else {\n        throw new Error(\"No value provided for input HTTP label: FunctionName.\");\n    }\n    let body;\n    if (input.InvokeArgs !== undefined) {\n        body = input.InvokeArgs;\n    }\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restJson1InvokeAsyncCommand = serializeAws_restJson1InvokeAsyncCommand;\nconst serializeAws_restJson1ListAliasesCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2015-03-31/functions/{FunctionName}/aliases\";\n    if (input.FunctionName !== undefined) {\n        const labelValue = input.FunctionName;\n        if (labelValue.length <= 0) {\n            throw new Error(\"Empty value provided for input HTTP label: FunctionName.\");\n        }\n        resolvedPath = resolvedPath.replace(\"{FunctionName}\", (0, smithy_client_1.extendedEncodeURIComponent)(labelValue));\n    }\n    else {\n        throw new Error(\"No value provided for input HTTP label: FunctionName.\");\n    }\n    const query = {\n        ...(input.FunctionVersion !== undefined && { FunctionVersion: input.FunctionVersion }),\n        ...(input.Marker !== undefined && { Marker: input.Marker }),\n        ...(input.MaxItems !== undefined && { MaxItems: input.MaxItems.toString() }),\n    };\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.serializeAws_restJson1ListAliasesCommand = serializeAws_restJson1ListAliasesCommand;\nconst serializeAws_restJson1ListCodeSigningConfigsCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2020-04-22/code-signing-configs\";\n    const query = {\n        ...(input.Marker !== undefined && { Marker: input.Marker }),\n        ...(input.MaxItems !== undefined && { MaxItems: input.MaxItems.toString() }),\n    };\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.serializeAws_restJson1ListCodeSigningConfigsCommand = serializeAws_restJson1ListCodeSigningConfigsCommand;\nconst serializeAws_restJson1ListEventSourceMappingsCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2015-03-31/event-source-mappings\";\n    const query = {\n        ...(input.EventSourceArn !== undefined && { EventSourceArn: input.EventSourceArn }),\n        ...(input.FunctionName !== undefined && { FunctionName: input.FunctionName }),\n        ...(input.Marker !== undefined && { Marker: input.Marker }),\n        ...(input.MaxItems !== undefined && { MaxItems: input.MaxItems.toString() }),\n    };\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.serializeAws_restJson1ListEventSourceMappingsCommand = serializeAws_restJson1ListEventSourceMappingsCommand;\nconst serializeAws_restJson1ListFunctionEventInvokeConfigsCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2019-09-25/functions/{FunctionName}/event-invoke-config/list\";\n    if (input.FunctionName !== undefined) {\n        const labelValue = input.FunctionName;\n        if (labelValue.length <= 0) {\n            throw new Error(\"Empty value provided for input HTTP label: FunctionName.\");\n        }\n        resolvedPath = resolvedPath.replace(\"{FunctionName}\", (0, smithy_client_1.extendedEncodeURIComponent)(labelValue));\n    }\n    else {\n        throw new Error(\"No value provided for input HTTP label: FunctionName.\");\n    }\n    const query = {\n        ...(input.Marker !== undefined && { Marker: input.Marker }),\n        ...(input.MaxItems !== undefined && { MaxItems: input.MaxItems.toString() }),\n    };\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.serializeAws_restJson1ListFunctionEventInvokeConfigsCommand = serializeAws_restJson1ListFunctionEventInvokeConfigsCommand;\nconst serializeAws_restJson1ListFunctionsCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2015-03-31/functions\";\n    const query = {\n        ...(input.MasterRegion !== undefined && { MasterRegion: input.MasterRegion }),\n        ...(input.FunctionVersion !== undefined && { FunctionVersion: input.FunctionVersion }),\n        ...(input.Marker !== undefined && { Marker: input.Marker }),\n        ...(input.MaxItems !== undefined && { MaxItems: input.MaxItems.toString() }),\n    };\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.serializeAws_restJson1ListFunctionsCommand = serializeAws_restJson1ListFunctionsCommand;\nconst serializeAws_restJson1ListFunctionsByCodeSigningConfigCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2020-04-22/code-signing-configs/{CodeSigningConfigArn}/functions\";\n    if (input.CodeSigningConfigArn !== undefined) {\n        const labelValue = input.CodeSigningConfigArn;\n        if (labelValue.length <= 0) {\n            throw new Error(\"Empty value provided for input HTTP label: CodeSigningConfigArn.\");\n        }\n        resolvedPath = resolvedPath.replace(\"{CodeSigningConfigArn}\", (0, smithy_client_1.extendedEncodeURIComponent)(labelValue));\n    }\n    else {\n        throw new Error(\"No value provided for input HTTP label: CodeSigningConfigArn.\");\n    }\n    const query = {\n        ...(input.Marker !== undefined && { Marker: input.Marker }),\n        ...(input.MaxItems !== undefined && { MaxItems: input.MaxItems.toString() }),\n    };\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.serializeAws_restJson1ListFunctionsByCodeSigningConfigCommand = serializeAws_restJson1ListFunctionsByCodeSigningConfigCommand;\nconst serializeAws_restJson1ListLayersCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2018-10-31/layers\";\n    const query = {\n        ...(input.CompatibleRuntime !== undefined && { CompatibleRuntime: input.CompatibleRuntime }),\n        ...(input.Marker !== undefined && { Marker: input.Marker }),\n        ...(input.MaxItems !== undefined && { MaxItems: input.MaxItems.toString() }),\n    };\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.serializeAws_restJson1ListLayersCommand = serializeAws_restJson1ListLayersCommand;\nconst serializeAws_restJson1ListLayerVersionsCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2018-10-31/layers/{LayerName}/versions\";\n    if (input.LayerName !== undefined) {\n        const labelValue = input.LayerName;\n        if (labelValue.length <= 0) {\n            throw new Error(\"Empty value provided for input HTTP label: LayerName.\");\n        }\n        resolvedPath = resolvedPath.replace(\"{LayerName}\", (0, smithy_client_1.extendedEncodeURIComponent)(labelValue));\n    }\n    else {\n        throw new Error(\"No value provided for input HTTP label: LayerName.\");\n    }\n    const query = {\n        ...(input.CompatibleRuntime !== undefined && { CompatibleRuntime: input.CompatibleRuntime }),\n        ...(input.Marker !== undefined && { Marker: input.Marker }),\n        ...(input.MaxItems !== undefined && { MaxItems: input.MaxItems.toString() }),\n    };\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.serializeAws_restJson1ListLayerVersionsCommand = serializeAws_restJson1ListLayerVersionsCommand;\nconst serializeAws_restJson1ListProvisionedConcurrencyConfigsCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2019-09-30/functions/{FunctionName}/provisioned-concurrency\";\n    if (input.FunctionName !== undefined) {\n        const labelValue = input.FunctionName;\n        if (labelValue.length <= 0) {\n            throw new Error(\"Empty value provided for input HTTP label: FunctionName.\");\n        }\n        resolvedPath = resolvedPath.replace(\"{FunctionName}\", (0, smithy_client_1.extendedEncodeURIComponent)(labelValue));\n    }\n    else {\n        throw new Error(\"No value provided for input HTTP label: FunctionName.\");\n    }\n    const query = {\n        List: \"ALL\",\n        ...(input.Marker !== undefined && { Marker: input.Marker }),\n        ...(input.MaxItems !== undefined && { MaxItems: input.MaxItems.toString() }),\n    };\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.serializeAws_restJson1ListProvisionedConcurrencyConfigsCommand = serializeAws_restJson1ListProvisionedConcurrencyConfigsCommand;\nconst serializeAws_restJson1ListTagsCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2017-03-31/tags/{Resource}\";\n    if (input.Resource !== undefined) {\n        const labelValue = input.Resource;\n        if (labelValue.length <= 0) {\n            throw new Error(\"Empty value provided for input HTTP label: Resource.\");\n        }\n        resolvedPath = resolvedPath.replace(\"{Resource}\", (0, smithy_client_1.extendedEncodeURIComponent)(labelValue));\n    }\n    else {\n        throw new Error(\"No value provided for input HTTP label: Resource.\");\n    }\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restJson1ListTagsCommand = serializeAws_restJson1ListTagsCommand;\nconst serializeAws_restJson1ListVersionsByFunctionCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2015-03-31/functions/{FunctionName}/versions\";\n    if (input.FunctionName !== undefined) {\n        const labelValue = input.FunctionName;\n        if (labelValue.length <= 0) {\n            throw new Error(\"Empty value provided for input HTTP label: FunctionName.\");\n        }\n        resolvedPath = resolvedPath.replace(\"{FunctionName}\", (0, smithy_client_1.extendedEncodeURIComponent)(labelValue));\n    }\n    else {\n        throw new Error(\"No value provided for input HTTP label: FunctionName.\");\n    }\n    const query = {\n        ...(input.Marker !== undefined && { Marker: input.Marker }),\n        ...(input.MaxItems !== undefined && { MaxItems: input.MaxItems.toString() }),\n    };\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.serializeAws_restJson1ListVersionsByFunctionCommand = serializeAws_restJson1ListVersionsByFunctionCommand;\nconst serializeAws_restJson1PublishLayerVersionCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/json\",\n    };\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2018-10-31/layers/{LayerName}/versions\";\n    if (input.LayerName !== undefined) {\n        const labelValue = input.LayerName;\n        if (labelValue.length <= 0) {\n            throw new Error(\"Empty value provided for input HTTP label: LayerName.\");\n        }\n        resolvedPath = resolvedPath.replace(\"{LayerName}\", (0, smithy_client_1.extendedEncodeURIComponent)(labelValue));\n    }\n    else {\n        throw new Error(\"No value provided for input HTTP label: LayerName.\");\n    }\n    let body;\n    body = JSON.stringify({\n        ...(input.CompatibleRuntimes !== undefined &&\n            input.CompatibleRuntimes !== null && {\n            CompatibleRuntimes: serializeAws_restJson1CompatibleRuntimes(input.CompatibleRuntimes, context),\n        }),\n        ...(input.Content !== undefined &&\n            input.Content !== null && { Content: serializeAws_restJson1LayerVersionContentInput(input.Content, context) }),\n        ...(input.Description !== undefined && input.Description !== null && { Description: input.Description }),\n        ...(input.LicenseInfo !== undefined && input.LicenseInfo !== null && { LicenseInfo: input.LicenseInfo }),\n    });\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restJson1PublishLayerVersionCommand = serializeAws_restJson1PublishLayerVersionCommand;\nconst serializeAws_restJson1PublishVersionCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/json\",\n    };\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2015-03-31/functions/{FunctionName}/versions\";\n    if (input.FunctionName !== undefined) {\n        const labelValue = input.FunctionName;\n        if (labelValue.length <= 0) {\n            throw new Error(\"Empty value provided for input HTTP label: FunctionName.\");\n        }\n        resolvedPath = resolvedPath.replace(\"{FunctionName}\", (0, smithy_client_1.extendedEncodeURIComponent)(labelValue));\n    }\n    else {\n        throw new Error(\"No value provided for input HTTP label: FunctionName.\");\n    }\n    let body;\n    body = JSON.stringify({\n        ...(input.CodeSha256 !== undefined && input.CodeSha256 !== null && { CodeSha256: input.CodeSha256 }),\n        ...(input.Description !== undefined && input.Description !== null && { Description: input.Description }),\n        ...(input.RevisionId !== undefined && input.RevisionId !== null && { RevisionId: input.RevisionId }),\n    });\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restJson1PublishVersionCommand = serializeAws_restJson1PublishVersionCommand;\nconst serializeAws_restJson1PutFunctionCodeSigningConfigCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/json\",\n    };\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2020-06-30/functions/{FunctionName}/code-signing-config\";\n    if (input.FunctionName !== undefined) {\n        const labelValue = input.FunctionName;\n        if (labelValue.length <= 0) {\n            throw new Error(\"Empty value provided for input HTTP label: FunctionName.\");\n        }\n        resolvedPath = resolvedPath.replace(\"{FunctionName}\", (0, smithy_client_1.extendedEncodeURIComponent)(labelValue));\n    }\n    else {\n        throw new Error(\"No value provided for input HTTP label: FunctionName.\");\n    }\n    let body;\n    body = JSON.stringify({\n        ...(input.CodeSigningConfigArn !== undefined &&\n            input.CodeSigningConfigArn !== null && { CodeSigningConfigArn: input.CodeSigningConfigArn }),\n    });\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restJson1PutFunctionCodeSigningConfigCommand = serializeAws_restJson1PutFunctionCodeSigningConfigCommand;\nconst serializeAws_restJson1PutFunctionConcurrencyCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/json\",\n    };\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2017-10-31/functions/{FunctionName}/concurrency\";\n    if (input.FunctionName !== undefined) {\n        const labelValue = input.FunctionName;\n        if (labelValue.length <= 0) {\n            throw new Error(\"Empty value provided for input HTTP label: FunctionName.\");\n        }\n        resolvedPath = resolvedPath.replace(\"{FunctionName}\", (0, smithy_client_1.extendedEncodeURIComponent)(labelValue));\n    }\n    else {\n        throw new Error(\"No value provided for input HTTP label: FunctionName.\");\n    }\n    let body;\n    body = JSON.stringify({\n        ...(input.ReservedConcurrentExecutions !== undefined &&\n            input.ReservedConcurrentExecutions !== null && {\n            ReservedConcurrentExecutions: input.ReservedConcurrentExecutions,\n        }),\n    });\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restJson1PutFunctionConcurrencyCommand = serializeAws_restJson1PutFunctionConcurrencyCommand;\nconst serializeAws_restJson1PutFunctionEventInvokeConfigCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/json\",\n    };\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2019-09-25/functions/{FunctionName}/event-invoke-config\";\n    if (input.FunctionName !== undefined) {\n        const labelValue = input.FunctionName;\n        if (labelValue.length <= 0) {\n            throw new Error(\"Empty value provided for input HTTP label: FunctionName.\");\n        }\n        resolvedPath = resolvedPath.replace(\"{FunctionName}\", (0, smithy_client_1.extendedEncodeURIComponent)(labelValue));\n    }\n    else {\n        throw new Error(\"No value provided for input HTTP label: FunctionName.\");\n    }\n    const query = {\n        ...(input.Qualifier !== undefined && { Qualifier: input.Qualifier }),\n    };\n    let body;\n    body = JSON.stringify({\n        ...(input.DestinationConfig !== undefined &&\n            input.DestinationConfig !== null && {\n            DestinationConfig: serializeAws_restJson1DestinationConfig(input.DestinationConfig, context),\n        }),\n        ...(input.MaximumEventAgeInSeconds !== undefined &&\n            input.MaximumEventAgeInSeconds !== null && { MaximumEventAgeInSeconds: input.MaximumEventAgeInSeconds }),\n        ...(input.MaximumRetryAttempts !== undefined &&\n            input.MaximumRetryAttempts !== null && { MaximumRetryAttempts: input.MaximumRetryAttempts }),\n    });\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.serializeAws_restJson1PutFunctionEventInvokeConfigCommand = serializeAws_restJson1PutFunctionEventInvokeConfigCommand;\nconst serializeAws_restJson1PutProvisionedConcurrencyConfigCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/json\",\n    };\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2019-09-30/functions/{FunctionName}/provisioned-concurrency\";\n    if (input.FunctionName !== undefined) {\n        const labelValue = input.FunctionName;\n        if (labelValue.length <= 0) {\n            throw new Error(\"Empty value provided for input HTTP label: FunctionName.\");\n        }\n        resolvedPath = resolvedPath.replace(\"{FunctionName}\", (0, smithy_client_1.extendedEncodeURIComponent)(labelValue));\n    }\n    else {\n        throw new Error(\"No value provided for input HTTP label: FunctionName.\");\n    }\n    const query = {\n        ...(input.Qualifier !== undefined && { Qualifier: input.Qualifier }),\n    };\n    let body;\n    body = JSON.stringify({\n        ...(input.ProvisionedConcurrentExecutions !== undefined &&\n            input.ProvisionedConcurrentExecutions !== null && {\n            ProvisionedConcurrentExecutions: input.ProvisionedConcurrentExecutions,\n        }),\n    });\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.serializeAws_restJson1PutProvisionedConcurrencyConfigCommand = serializeAws_restJson1PutProvisionedConcurrencyConfigCommand;\nconst serializeAws_restJson1RemoveLayerVersionPermissionCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2018-10-31/layers/{LayerName}/versions/{VersionNumber}/policy/{StatementId}\";\n    if (input.LayerName !== undefined) {\n        const labelValue = input.LayerName;\n        if (labelValue.length <= 0) {\n            throw new Error(\"Empty value provided for input HTTP label: LayerName.\");\n        }\n        resolvedPath = resolvedPath.replace(\"{LayerName}\", (0, smithy_client_1.extendedEncodeURIComponent)(labelValue));\n    }\n    else {\n        throw new Error(\"No value provided for input HTTP label: LayerName.\");\n    }\n    if (input.VersionNumber !== undefined) {\n        const labelValue = input.VersionNumber.toString();\n        if (labelValue.length <= 0) {\n            throw new Error(\"Empty value provided for input HTTP label: VersionNumber.\");\n        }\n        resolvedPath = resolvedPath.replace(\"{VersionNumber}\", (0, smithy_client_1.extendedEncodeURIComponent)(labelValue));\n    }\n    else {\n        throw new Error(\"No value provided for input HTTP label: VersionNumber.\");\n    }\n    if (input.StatementId !== undefined) {\n        const labelValue = input.StatementId;\n        if (labelValue.length <= 0) {\n            throw new Error(\"Empty value provided for input HTTP label: StatementId.\");\n        }\n        resolvedPath = resolvedPath.replace(\"{StatementId}\", (0, smithy_client_1.extendedEncodeURIComponent)(labelValue));\n    }\n    else {\n        throw new Error(\"No value provided for input HTTP label: StatementId.\");\n    }\n    const query = {\n        ...(input.RevisionId !== undefined && { RevisionId: input.RevisionId }),\n    };\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"DELETE\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.serializeAws_restJson1RemoveLayerVersionPermissionCommand = serializeAws_restJson1RemoveLayerVersionPermissionCommand;\nconst serializeAws_restJson1RemovePermissionCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2015-03-31/functions/{FunctionName}/policy/{StatementId}\";\n    if (input.FunctionName !== undefined) {\n        const labelValue = input.FunctionName;\n        if (labelValue.length <= 0) {\n            throw new Error(\"Empty value provided for input HTTP label: FunctionName.\");\n        }\n        resolvedPath = resolvedPath.replace(\"{FunctionName}\", (0, smithy_client_1.extendedEncodeURIComponent)(labelValue));\n    }\n    else {\n        throw new Error(\"No value provided for input HTTP label: FunctionName.\");\n    }\n    if (input.StatementId !== undefined) {\n        const labelValue = input.StatementId;\n        if (labelValue.length <= 0) {\n            throw new Error(\"Empty value provided for input HTTP label: StatementId.\");\n        }\n        resolvedPath = resolvedPath.replace(\"{StatementId}\", (0, smithy_client_1.extendedEncodeURIComponent)(labelValue));\n    }\n    else {\n        throw new Error(\"No value provided for input HTTP label: StatementId.\");\n    }\n    const query = {\n        ...(input.Qualifier !== undefined && { Qualifier: input.Qualifier }),\n        ...(input.RevisionId !== undefined && { RevisionId: input.RevisionId }),\n    };\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"DELETE\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.serializeAws_restJson1RemovePermissionCommand = serializeAws_restJson1RemovePermissionCommand;\nconst serializeAws_restJson1TagResourceCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/json\",\n    };\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2017-03-31/tags/{Resource}\";\n    if (input.Resource !== undefined) {\n        const labelValue = input.Resource;\n        if (labelValue.length <= 0) {\n            throw new Error(\"Empty value provided for input HTTP label: Resource.\");\n        }\n        resolvedPath = resolvedPath.replace(\"{Resource}\", (0, smithy_client_1.extendedEncodeURIComponent)(labelValue));\n    }\n    else {\n        throw new Error(\"No value provided for input HTTP label: Resource.\");\n    }\n    let body;\n    body = JSON.stringify({\n        ...(input.Tags !== undefined && input.Tags !== null && { Tags: serializeAws_restJson1Tags(input.Tags, context) }),\n    });\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restJson1TagResourceCommand = serializeAws_restJson1TagResourceCommand;\nconst serializeAws_restJson1UntagResourceCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {};\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2017-03-31/tags/{Resource}\";\n    if (input.Resource !== undefined) {\n        const labelValue = input.Resource;\n        if (labelValue.length <= 0) {\n            throw new Error(\"Empty value provided for input HTTP label: Resource.\");\n        }\n        resolvedPath = resolvedPath.replace(\"{Resource}\", (0, smithy_client_1.extendedEncodeURIComponent)(labelValue));\n    }\n    else {\n        throw new Error(\"No value provided for input HTTP label: Resource.\");\n    }\n    const query = {\n        ...(input.TagKeys !== undefined && { tagKeys: (input.TagKeys || []).map((_entry) => _entry) }),\n    };\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"DELETE\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.serializeAws_restJson1UntagResourceCommand = serializeAws_restJson1UntagResourceCommand;\nconst serializeAws_restJson1UpdateAliasCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/json\",\n    };\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2015-03-31/functions/{FunctionName}/aliases/{Name}\";\n    if (input.FunctionName !== undefined) {\n        const labelValue = input.FunctionName;\n        if (labelValue.length <= 0) {\n            throw new Error(\"Empty value provided for input HTTP label: FunctionName.\");\n        }\n        resolvedPath = resolvedPath.replace(\"{FunctionName}\", (0, smithy_client_1.extendedEncodeURIComponent)(labelValue));\n    }\n    else {\n        throw new Error(\"No value provided for input HTTP label: FunctionName.\");\n    }\n    if (input.Name !== undefined) {\n        const labelValue = input.Name;\n        if (labelValue.length <= 0) {\n            throw new Error(\"Empty value provided for input HTTP label: Name.\");\n        }\n        resolvedPath = resolvedPath.replace(\"{Name}\", (0, smithy_client_1.extendedEncodeURIComponent)(labelValue));\n    }\n    else {\n        throw new Error(\"No value provided for input HTTP label: Name.\");\n    }\n    let body;\n    body = JSON.stringify({\n        ...(input.Description !== undefined && input.Description !== null && { Description: input.Description }),\n        ...(input.FunctionVersion !== undefined &&\n            input.FunctionVersion !== null && { FunctionVersion: input.FunctionVersion }),\n        ...(input.RevisionId !== undefined && input.RevisionId !== null && { RevisionId: input.RevisionId }),\n        ...(input.RoutingConfig !== undefined &&\n            input.RoutingConfig !== null && {\n            RoutingConfig: serializeAws_restJson1AliasRoutingConfiguration(input.RoutingConfig, context),\n        }),\n    });\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restJson1UpdateAliasCommand = serializeAws_restJson1UpdateAliasCommand;\nconst serializeAws_restJson1UpdateCodeSigningConfigCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/json\",\n    };\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2020-04-22/code-signing-configs/{CodeSigningConfigArn}\";\n    if (input.CodeSigningConfigArn !== undefined) {\n        const labelValue = input.CodeSigningConfigArn;\n        if (labelValue.length <= 0) {\n            throw new Error(\"Empty value provided for input HTTP label: CodeSigningConfigArn.\");\n        }\n        resolvedPath = resolvedPath.replace(\"{CodeSigningConfigArn}\", (0, smithy_client_1.extendedEncodeURIComponent)(labelValue));\n    }\n    else {\n        throw new Error(\"No value provided for input HTTP label: CodeSigningConfigArn.\");\n    }\n    let body;\n    body = JSON.stringify({\n        ...(input.AllowedPublishers !== undefined &&\n            input.AllowedPublishers !== null && {\n            AllowedPublishers: serializeAws_restJson1AllowedPublishers(input.AllowedPublishers, context),\n        }),\n        ...(input.CodeSigningPolicies !== undefined &&\n            input.CodeSigningPolicies !== null && {\n            CodeSigningPolicies: serializeAws_restJson1CodeSigningPolicies(input.CodeSigningPolicies, context),\n        }),\n        ...(input.Description !== undefined && input.Description !== null && { Description: input.Description }),\n    });\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restJson1UpdateCodeSigningConfigCommand = serializeAws_restJson1UpdateCodeSigningConfigCommand;\nconst serializeAws_restJson1UpdateEventSourceMappingCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/json\",\n    };\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2015-03-31/event-source-mappings/{UUID}\";\n    if (input.UUID !== undefined) {\n        const labelValue = input.UUID;\n        if (labelValue.length <= 0) {\n            throw new Error(\"Empty value provided for input HTTP label: UUID.\");\n        }\n        resolvedPath = resolvedPath.replace(\"{UUID}\", (0, smithy_client_1.extendedEncodeURIComponent)(labelValue));\n    }\n    else {\n        throw new Error(\"No value provided for input HTTP label: UUID.\");\n    }\n    let body;\n    body = JSON.stringify({\n        ...(input.BatchSize !== undefined && input.BatchSize !== null && { BatchSize: input.BatchSize }),\n        ...(input.BisectBatchOnFunctionError !== undefined &&\n            input.BisectBatchOnFunctionError !== null && { BisectBatchOnFunctionError: input.BisectBatchOnFunctionError }),\n        ...(input.DestinationConfig !== undefined &&\n            input.DestinationConfig !== null && {\n            DestinationConfig: serializeAws_restJson1DestinationConfig(input.DestinationConfig, context),\n        }),\n        ...(input.Enabled !== undefined && input.Enabled !== null && { Enabled: input.Enabled }),\n        ...(input.FunctionName !== undefined && input.FunctionName !== null && { FunctionName: input.FunctionName }),\n        ...(input.FunctionResponseTypes !== undefined &&\n            input.FunctionResponseTypes !== null && {\n            FunctionResponseTypes: serializeAws_restJson1FunctionResponseTypeList(input.FunctionResponseTypes, context),\n        }),\n        ...(input.MaximumBatchingWindowInSeconds !== undefined &&\n            input.MaximumBatchingWindowInSeconds !== null && {\n            MaximumBatchingWindowInSeconds: input.MaximumBatchingWindowInSeconds,\n        }),\n        ...(input.MaximumRecordAgeInSeconds !== undefined &&\n            input.MaximumRecordAgeInSeconds !== null && { MaximumRecordAgeInSeconds: input.MaximumRecordAgeInSeconds }),\n        ...(input.MaximumRetryAttempts !== undefined &&\n            input.MaximumRetryAttempts !== null && { MaximumRetryAttempts: input.MaximumRetryAttempts }),\n        ...(input.ParallelizationFactor !== undefined &&\n            input.ParallelizationFactor !== null && { ParallelizationFactor: input.ParallelizationFactor }),\n        ...(input.SourceAccessConfigurations !== undefined &&\n            input.SourceAccessConfigurations !== null && {\n            SourceAccessConfigurations: serializeAws_restJson1SourceAccessConfigurations(input.SourceAccessConfigurations, context),\n        }),\n        ...(input.TumblingWindowInSeconds !== undefined &&\n            input.TumblingWindowInSeconds !== null && { TumblingWindowInSeconds: input.TumblingWindowInSeconds }),\n    });\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restJson1UpdateEventSourceMappingCommand = serializeAws_restJson1UpdateEventSourceMappingCommand;\nconst serializeAws_restJson1UpdateFunctionCodeCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/json\",\n    };\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/2015-03-31/functions/{FunctionName}/code\";\n    if (input.FunctionName !== undefined) {\n        const labelValue = input.FunctionName;\n        if (labelValue.length <= 0) {\n            throw new Error(\"Empty value provided for input HTTP label: FunctionName.\");\n        }\n        resolvedPath = resolvedPath.replace(\"{FunctionName}\", (0, smithy_client_1.extendedEncodeURIComponent)(labelValue));\n    }\n    else {\n        throw new Error(\"No value provided for input HTTP label: FunctionName.\");\n    }\n    let body;\n    body = JSON.stringify({\n        ...(input.DryRun !== undefined && input.DryRun !== null && { DryRun: input.DryRun }),\n        ...(input.ImageUri !== undefined && input.ImageUri !== null && { ImageUri: input.ImageUri }),\n        ...(input.Publish !== undefined && input.Publish !== null && { Publish: input.Publish }),\n        ...(input.RevisionId !== undefined && input.RevisionId !== null && { RevisionId: input.RevisionId }),\n        ...(input.S3Bucket !== undefined && input.S3Bucket !== null && { S3Bucket: input.S3Bucket }),\n        ...(input.S3Key !== undefined && input.S3Key !== null && { S3Key: input.S3Key }),\n        ...(input.S3ObjectVersion !== undefined &&\n            input.S3ObjectVersion !== null && { S3ObjectVersion: input.S3ObjectVersion }),\n        ...(input.ZipFile !== undefined && input.ZipFile !== null && { ZipFile: context.base64Encoder(input.ZipFile) }),\n    });\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restJson1UpdateFunctionCodeCommand = serializeAws_restJson1UpdateFunctionCodeCommand;\nconst serializeAws_restJson1UpdateFunctionConfigurationCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/json\",\n    };\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2015-03-31/functions/{FunctionName}/configuration\";\n    if (input.FunctionName !== undefined) {\n        const labelValue = input.FunctionName;\n        if (labelValue.length <= 0) {\n            throw new Error(\"Empty value provided for input HTTP label: FunctionName.\");\n        }\n        resolvedPath = resolvedPath.replace(\"{FunctionName}\", (0, smithy_client_1.extendedEncodeURIComponent)(labelValue));\n    }\n    else {\n        throw new Error(\"No value provided for input HTTP label: FunctionName.\");\n    }\n    let body;\n    body = JSON.stringify({\n        ...(input.DeadLetterConfig !== undefined &&\n            input.DeadLetterConfig !== null && {\n            DeadLetterConfig: serializeAws_restJson1DeadLetterConfig(input.DeadLetterConfig, context),\n        }),\n        ...(input.Description !== undefined && input.Description !== null && { Description: input.Description }),\n        ...(input.Environment !== undefined &&\n            input.Environment !== null && { Environment: serializeAws_restJson1Environment(input.Environment, context) }),\n        ...(input.FileSystemConfigs !== undefined &&\n            input.FileSystemConfigs !== null && {\n            FileSystemConfigs: serializeAws_restJson1FileSystemConfigList(input.FileSystemConfigs, context),\n        }),\n        ...(input.Handler !== undefined && input.Handler !== null && { Handler: input.Handler }),\n        ...(input.ImageConfig !== undefined &&\n            input.ImageConfig !== null && { ImageConfig: serializeAws_restJson1ImageConfig(input.ImageConfig, context) }),\n        ...(input.KMSKeyArn !== undefined && input.KMSKeyArn !== null && { KMSKeyArn: input.KMSKeyArn }),\n        ...(input.Layers !== undefined &&\n            input.Layers !== null && { Layers: serializeAws_restJson1LayerList(input.Layers, context) }),\n        ...(input.MemorySize !== undefined && input.MemorySize !== null && { MemorySize: input.MemorySize }),\n        ...(input.RevisionId !== undefined && input.RevisionId !== null && { RevisionId: input.RevisionId }),\n        ...(input.Role !== undefined && input.Role !== null && { Role: input.Role }),\n        ...(input.Runtime !== undefined && input.Runtime !== null && { Runtime: input.Runtime }),\n        ...(input.Timeout !== undefined && input.Timeout !== null && { Timeout: input.Timeout }),\n        ...(input.TracingConfig !== undefined &&\n            input.TracingConfig !== null && {\n            TracingConfig: serializeAws_restJson1TracingConfig(input.TracingConfig, context),\n        }),\n        ...(input.VpcConfig !== undefined &&\n            input.VpcConfig !== null && { VpcConfig: serializeAws_restJson1VpcConfig(input.VpcConfig, context) }),\n    });\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"PUT\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restJson1UpdateFunctionConfigurationCommand = serializeAws_restJson1UpdateFunctionConfigurationCommand;\nconst serializeAws_restJson1UpdateFunctionEventInvokeConfigCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/json\",\n    };\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` +\n        \"/2019-09-25/functions/{FunctionName}/event-invoke-config\";\n    if (input.FunctionName !== undefined) {\n        const labelValue = input.FunctionName;\n        if (labelValue.length <= 0) {\n            throw new Error(\"Empty value provided for input HTTP label: FunctionName.\");\n        }\n        resolvedPath = resolvedPath.replace(\"{FunctionName}\", (0, smithy_client_1.extendedEncodeURIComponent)(labelValue));\n    }\n    else {\n        throw new Error(\"No value provided for input HTTP label: FunctionName.\");\n    }\n    const query = {\n        ...(input.Qualifier !== undefined && { Qualifier: input.Qualifier }),\n    };\n    let body;\n    body = JSON.stringify({\n        ...(input.DestinationConfig !== undefined &&\n            input.DestinationConfig !== null && {\n            DestinationConfig: serializeAws_restJson1DestinationConfig(input.DestinationConfig, context),\n        }),\n        ...(input.MaximumEventAgeInSeconds !== undefined &&\n            input.MaximumEventAgeInSeconds !== null && { MaximumEventAgeInSeconds: input.MaximumEventAgeInSeconds }),\n        ...(input.MaximumRetryAttempts !== undefined &&\n            input.MaximumRetryAttempts !== null && { MaximumRetryAttempts: input.MaximumRetryAttempts }),\n    });\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.serializeAws_restJson1UpdateFunctionEventInvokeConfigCommand = serializeAws_restJson1UpdateFunctionEventInvokeConfigCommand;\nconst deserializeAws_restJson1AddLayerVersionPermissionCommand = async (output, context) => {\n    if (output.statusCode !== 201 && output.statusCode >= 300) {\n        return deserializeAws_restJson1AddLayerVersionPermissionCommandError(output, context);\n    }\n    const contents = {\n        $metadata: deserializeMetadata(output),\n        RevisionId: undefined,\n        Statement: undefined,\n    };\n    const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\n    if (data.RevisionId !== undefined && data.RevisionId !== null) {\n        contents.RevisionId = (0, smithy_client_1.expectString)(data.RevisionId);\n    }\n    if (data.Statement !== undefined && data.Statement !== null) {\n        contents.Statement = (0, smithy_client_1.expectString)(data.Statement);\n    }\n    return Promise.resolve(contents);\n};\nexports.deserializeAws_restJson1AddLayerVersionPermissionCommand = deserializeAws_restJson1AddLayerVersionPermissionCommand;\nconst deserializeAws_restJson1AddLayerVersionPermissionCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidParameterValueException\":\n        case \"com.amazonaws.lambda#InvalidParameterValueException\":\n            response = {\n                ...(await deserializeAws_restJson1InvalidParameterValueExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"PolicyLengthExceededException\":\n        case \"com.amazonaws.lambda#PolicyLengthExceededException\":\n            response = {\n                ...(await deserializeAws_restJson1PolicyLengthExceededExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"PreconditionFailedException\":\n        case \"com.amazonaws.lambda#PreconditionFailedException\":\n            response = {\n                ...(await deserializeAws_restJson1PreconditionFailedExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceConflictException\":\n        case \"com.amazonaws.lambda#ResourceConflictException\":\n            response = {\n                ...(await deserializeAws_restJson1ResourceConflictExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.lambda#ResourceNotFoundException\":\n            response = {\n                ...(await deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServiceException\":\n        case \"com.amazonaws.lambda#ServiceException\":\n            response = {\n                ...(await deserializeAws_restJson1ServiceExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.lambda#TooManyRequestsException\":\n            response = {\n                ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_restJson1AddPermissionCommand = async (output, context) => {\n    if (output.statusCode !== 201 && output.statusCode >= 300) {\n        return deserializeAws_restJson1AddPermissionCommandError(output, context);\n    }\n    const contents = {\n        $metadata: deserializeMetadata(output),\n        Statement: undefined,\n    };\n    const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\n    if (data.Statement !== undefined && data.Statement !== null) {\n        contents.Statement = (0, smithy_client_1.expectString)(data.Statement);\n    }\n    return Promise.resolve(contents);\n};\nexports.deserializeAws_restJson1AddPermissionCommand = deserializeAws_restJson1AddPermissionCommand;\nconst deserializeAws_restJson1AddPermissionCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidParameterValueException\":\n        case \"com.amazonaws.lambda#InvalidParameterValueException\":\n            response = {\n                ...(await deserializeAws_restJson1InvalidParameterValueExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"PolicyLengthExceededException\":\n        case \"com.amazonaws.lambda#PolicyLengthExceededException\":\n            response = {\n                ...(await deserializeAws_restJson1PolicyLengthExceededExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"PreconditionFailedException\":\n        case \"com.amazonaws.lambda#PreconditionFailedException\":\n            response = {\n                ...(await deserializeAws_restJson1PreconditionFailedExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceConflictException\":\n        case \"com.amazonaws.lambda#ResourceConflictException\":\n            response = {\n                ...(await deserializeAws_restJson1ResourceConflictExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.lambda#ResourceNotFoundException\":\n            response = {\n                ...(await deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServiceException\":\n        case \"com.amazonaws.lambda#ServiceException\":\n            response = {\n                ...(await deserializeAws_restJson1ServiceExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.lambda#TooManyRequestsException\":\n            response = {\n                ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_restJson1CreateAliasCommand = async (output, context) => {\n    if (output.statusCode !== 201 && output.statusCode >= 300) {\n        return deserializeAws_restJson1CreateAliasCommandError(output, context);\n    }\n    const contents = {\n        $metadata: deserializeMetadata(output),\n        AliasArn: undefined,\n        Description: undefined,\n        FunctionVersion: undefined,\n        Name: undefined,\n        RevisionId: undefined,\n        RoutingConfig: undefined,\n    };\n    const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\n    if (data.AliasArn !== undefined && data.AliasArn !== null) {\n        contents.AliasArn = (0, smithy_client_1.expectString)(data.AliasArn);\n    }\n    if (data.Description !== undefined && data.Description !== null) {\n        contents.Description = (0, smithy_client_1.expectString)(data.Description);\n    }\n    if (data.FunctionVersion !== undefined && data.FunctionVersion !== null) {\n        contents.FunctionVersion = (0, smithy_client_1.expectString)(data.FunctionVersion);\n    }\n    if (data.Name !== undefined && data.Name !== null) {\n        contents.Name = (0, smithy_client_1.expectString)(data.Name);\n    }\n    if (data.RevisionId !== undefined && data.RevisionId !== null) {\n        contents.RevisionId = (0, smithy_client_1.expectString)(data.RevisionId);\n    }\n    if (data.RoutingConfig !== undefined && data.RoutingConfig !== null) {\n        contents.RoutingConfig = deserializeAws_restJson1AliasRoutingConfiguration(data.RoutingConfig, context);\n    }\n    return Promise.resolve(contents);\n};\nexports.deserializeAws_restJson1CreateAliasCommand = deserializeAws_restJson1CreateAliasCommand;\nconst deserializeAws_restJson1CreateAliasCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidParameterValueException\":\n        case \"com.amazonaws.lambda#InvalidParameterValueException\":\n            response = {\n                ...(await deserializeAws_restJson1InvalidParameterValueExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceConflictException\":\n        case \"com.amazonaws.lambda#ResourceConflictException\":\n            response = {\n                ...(await deserializeAws_restJson1ResourceConflictExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.lambda#ResourceNotFoundException\":\n            response = {\n                ...(await deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServiceException\":\n        case \"com.amazonaws.lambda#ServiceException\":\n            response = {\n                ...(await deserializeAws_restJson1ServiceExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.lambda#TooManyRequestsException\":\n            response = {\n                ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_restJson1CreateCodeSigningConfigCommand = async (output, context) => {\n    if (output.statusCode !== 201 && output.statusCode >= 300) {\n        return deserializeAws_restJson1CreateCodeSigningConfigCommandError(output, context);\n    }\n    const contents = {\n        $metadata: deserializeMetadata(output),\n        CodeSigningConfig: undefined,\n    };\n    const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\n    if (data.CodeSigningConfig !== undefined && data.CodeSigningConfig !== null) {\n        contents.CodeSigningConfig = deserializeAws_restJson1CodeSigningConfig(data.CodeSigningConfig, context);\n    }\n    return Promise.resolve(contents);\n};\nexports.deserializeAws_restJson1CreateCodeSigningConfigCommand = deserializeAws_restJson1CreateCodeSigningConfigCommand;\nconst deserializeAws_restJson1CreateCodeSigningConfigCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidParameterValueException\":\n        case \"com.amazonaws.lambda#InvalidParameterValueException\":\n            response = {\n                ...(await deserializeAws_restJson1InvalidParameterValueExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServiceException\":\n        case \"com.amazonaws.lambda#ServiceException\":\n            response = {\n                ...(await deserializeAws_restJson1ServiceExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_restJson1CreateEventSourceMappingCommand = async (output, context) => {\n    if (output.statusCode !== 202 && output.statusCode >= 300) {\n        return deserializeAws_restJson1CreateEventSourceMappingCommandError(output, context);\n    }\n    const contents = {\n        $metadata: deserializeMetadata(output),\n        BatchSize: undefined,\n        BisectBatchOnFunctionError: undefined,\n        DestinationConfig: undefined,\n        EventSourceArn: undefined,\n        FunctionArn: undefined,\n        FunctionResponseTypes: undefined,\n        LastModified: undefined,\n        LastProcessingResult: undefined,\n        MaximumBatchingWindowInSeconds: undefined,\n        MaximumRecordAgeInSeconds: undefined,\n        MaximumRetryAttempts: undefined,\n        ParallelizationFactor: undefined,\n        Queues: undefined,\n        SelfManagedEventSource: undefined,\n        SourceAccessConfigurations: undefined,\n        StartingPosition: undefined,\n        StartingPositionTimestamp: undefined,\n        State: undefined,\n        StateTransitionReason: undefined,\n        Topics: undefined,\n        TumblingWindowInSeconds: undefined,\n        UUID: undefined,\n    };\n    const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\n    if (data.BatchSize !== undefined && data.BatchSize !== null) {\n        contents.BatchSize = (0, smithy_client_1.expectInt32)(data.BatchSize);\n    }\n    if (data.BisectBatchOnFunctionError !== undefined && data.BisectBatchOnFunctionError !== null) {\n        contents.BisectBatchOnFunctionError = (0, smithy_client_1.expectBoolean)(data.BisectBatchOnFunctionError);\n    }\n    if (data.DestinationConfig !== undefined && data.DestinationConfig !== null) {\n        contents.DestinationConfig = deserializeAws_restJson1DestinationConfig(data.DestinationConfig, context);\n    }\n    if (data.EventSourceArn !== undefined && data.EventSourceArn !== null) {\n        contents.EventSourceArn = (0, smithy_client_1.expectString)(data.EventSourceArn);\n    }\n    if (data.FunctionArn !== undefined && data.FunctionArn !== null) {\n        contents.FunctionArn = (0, smithy_client_1.expectString)(data.FunctionArn);\n    }\n    if (data.FunctionResponseTypes !== undefined && data.FunctionResponseTypes !== null) {\n        contents.FunctionResponseTypes = deserializeAws_restJson1FunctionResponseTypeList(data.FunctionResponseTypes, context);\n    }\n    if (data.LastModified !== undefined && data.LastModified !== null) {\n        contents.LastModified = new Date(Math.round(data.LastModified * 1000));\n    }\n    if (data.LastProcessingResult !== undefined && data.LastProcessingResult !== null) {\n        contents.LastProcessingResult = (0, smithy_client_1.expectString)(data.LastProcessingResult);\n    }\n    if (data.MaximumBatchingWindowInSeconds !== undefined && data.MaximumBatchingWindowInSeconds !== null) {\n        contents.MaximumBatchingWindowInSeconds = (0, smithy_client_1.expectInt32)(data.MaximumBatchingWindowInSeconds);\n    }\n    if (data.MaximumRecordAgeInSeconds !== undefined && data.MaximumRecordAgeInSeconds !== null) {\n        contents.MaximumRecordAgeInSeconds = (0, smithy_client_1.expectInt32)(data.MaximumRecordAgeInSeconds);\n    }\n    if (data.MaximumRetryAttempts !== undefined && data.MaximumRetryAttempts !== null) {\n        contents.MaximumRetryAttempts = (0, smithy_client_1.expectInt32)(data.MaximumRetryAttempts);\n    }\n    if (data.ParallelizationFactor !== undefined && data.ParallelizationFactor !== null) {\n        contents.ParallelizationFactor = (0, smithy_client_1.expectInt32)(data.ParallelizationFactor);\n    }\n    if (data.Queues !== undefined && data.Queues !== null) {\n        contents.Queues = deserializeAws_restJson1Queues(data.Queues, context);\n    }\n    if (data.SelfManagedEventSource !== undefined && data.SelfManagedEventSource !== null) {\n        contents.SelfManagedEventSource = deserializeAws_restJson1SelfManagedEventSource(data.SelfManagedEventSource, context);\n    }\n    if (data.SourceAccessConfigurations !== undefined && data.SourceAccessConfigurations !== null) {\n        contents.SourceAccessConfigurations = deserializeAws_restJson1SourceAccessConfigurations(data.SourceAccessConfigurations, context);\n    }\n    if (data.StartingPosition !== undefined && data.StartingPosition !== null) {\n        contents.StartingPosition = (0, smithy_client_1.expectString)(data.StartingPosition);\n    }\n    if (data.StartingPositionTimestamp !== undefined && data.StartingPositionTimestamp !== null) {\n        contents.StartingPositionTimestamp = new Date(Math.round(data.StartingPositionTimestamp * 1000));\n    }\n    if (data.State !== undefined && data.State !== null) {\n        contents.State = (0, smithy_client_1.expectString)(data.State);\n    }\n    if (data.StateTransitionReason !== undefined && data.StateTransitionReason !== null) {\n        contents.StateTransitionReason = (0, smithy_client_1.expectString)(data.StateTransitionReason);\n    }\n    if (data.Topics !== undefined && data.Topics !== null) {\n        contents.Topics = deserializeAws_restJson1Topics(data.Topics, context);\n    }\n    if (data.TumblingWindowInSeconds !== undefined && data.TumblingWindowInSeconds !== null) {\n        contents.TumblingWindowInSeconds = (0, smithy_client_1.expectInt32)(data.TumblingWindowInSeconds);\n    }\n    if (data.UUID !== undefined && data.UUID !== null) {\n        contents.UUID = (0, smithy_client_1.expectString)(data.UUID);\n    }\n    return Promise.resolve(contents);\n};\nexports.deserializeAws_restJson1CreateEventSourceMappingCommand = deserializeAws_restJson1CreateEventSourceMappingCommand;\nconst deserializeAws_restJson1CreateEventSourceMappingCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidParameterValueException\":\n        case \"com.amazonaws.lambda#InvalidParameterValueException\":\n            response = {\n                ...(await deserializeAws_restJson1InvalidParameterValueExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceConflictException\":\n        case \"com.amazonaws.lambda#ResourceConflictException\":\n            response = {\n                ...(await deserializeAws_restJson1ResourceConflictExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.lambda#ResourceNotFoundException\":\n            response = {\n                ...(await deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServiceException\":\n        case \"com.amazonaws.lambda#ServiceException\":\n            response = {\n                ...(await deserializeAws_restJson1ServiceExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.lambda#TooManyRequestsException\":\n            response = {\n                ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_restJson1CreateFunctionCommand = async (output, context) => {\n    if (output.statusCode !== 201 && output.statusCode >= 300) {\n        return deserializeAws_restJson1CreateFunctionCommandError(output, context);\n    }\n    const contents = {\n        $metadata: deserializeMetadata(output),\n        CodeSha256: undefined,\n        CodeSize: undefined,\n        DeadLetterConfig: undefined,\n        Description: undefined,\n        Environment: undefined,\n        FileSystemConfigs: undefined,\n        FunctionArn: undefined,\n        FunctionName: undefined,\n        Handler: undefined,\n        ImageConfigResponse: undefined,\n        KMSKeyArn: undefined,\n        LastModified: undefined,\n        LastUpdateStatus: undefined,\n        LastUpdateStatusReason: undefined,\n        LastUpdateStatusReasonCode: undefined,\n        Layers: undefined,\n        MasterArn: undefined,\n        MemorySize: undefined,\n        PackageType: undefined,\n        RevisionId: undefined,\n        Role: undefined,\n        Runtime: undefined,\n        SigningJobArn: undefined,\n        SigningProfileVersionArn: undefined,\n        State: undefined,\n        StateReason: undefined,\n        StateReasonCode: undefined,\n        Timeout: undefined,\n        TracingConfig: undefined,\n        Version: undefined,\n        VpcConfig: undefined,\n    };\n    const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\n    if (data.CodeSha256 !== undefined && data.CodeSha256 !== null) {\n        contents.CodeSha256 = (0, smithy_client_1.expectString)(data.CodeSha256);\n    }\n    if (data.CodeSize !== undefined && data.CodeSize !== null) {\n        contents.CodeSize = (0, smithy_client_1.expectLong)(data.CodeSize);\n    }\n    if (data.DeadLetterConfig !== undefined && data.DeadLetterConfig !== null) {\n        contents.DeadLetterConfig = deserializeAws_restJson1DeadLetterConfig(data.DeadLetterConfig, context);\n    }\n    if (data.Description !== undefined && data.Description !== null) {\n        contents.Description = (0, smithy_client_1.expectString)(data.Description);\n    }\n    if (data.Environment !== undefined && data.Environment !== null) {\n        contents.Environment = deserializeAws_restJson1EnvironmentResponse(data.Environment, context);\n    }\n    if (data.FileSystemConfigs !== undefined && data.FileSystemConfigs !== null) {\n        contents.FileSystemConfigs = deserializeAws_restJson1FileSystemConfigList(data.FileSystemConfigs, context);\n    }\n    if (data.FunctionArn !== undefined && data.FunctionArn !== null) {\n        contents.FunctionArn = (0, smithy_client_1.expectString)(data.FunctionArn);\n    }\n    if (data.FunctionName !== undefined && data.FunctionName !== null) {\n        contents.FunctionName = (0, smithy_client_1.expectString)(data.FunctionName);\n    }\n    if (data.Handler !== undefined && data.Handler !== null) {\n        contents.Handler = (0, smithy_client_1.expectString)(data.Handler);\n    }\n    if (data.ImageConfigResponse !== undefined && data.ImageConfigResponse !== null) {\n        contents.ImageConfigResponse = deserializeAws_restJson1ImageConfigResponse(data.ImageConfigResponse, context);\n    }\n    if (data.KMSKeyArn !== undefined && data.KMSKeyArn !== null) {\n        contents.KMSKeyArn = (0, smithy_client_1.expectString)(data.KMSKeyArn);\n    }\n    if (data.LastModified !== undefined && data.LastModified !== null) {\n        contents.LastModified = (0, smithy_client_1.expectString)(data.LastModified);\n    }\n    if (data.LastUpdateStatus !== undefined && data.LastUpdateStatus !== null) {\n        contents.LastUpdateStatus = (0, smithy_client_1.expectString)(data.LastUpdateStatus);\n    }\n    if (data.LastUpdateStatusReason !== undefined && data.LastUpdateStatusReason !== null) {\n        contents.LastUpdateStatusReason = (0, smithy_client_1.expectString)(data.LastUpdateStatusReason);\n    }\n    if (data.LastUpdateStatusReasonCode !== undefined && data.LastUpdateStatusReasonCode !== null) {\n        contents.LastUpdateStatusReasonCode = (0, smithy_client_1.expectString)(data.LastUpdateStatusReasonCode);\n    }\n    if (data.Layers !== undefined && data.Layers !== null) {\n        contents.Layers = deserializeAws_restJson1LayersReferenceList(data.Layers, context);\n    }\n    if (data.MasterArn !== undefined && data.MasterArn !== null) {\n        contents.MasterArn = (0, smithy_client_1.expectString)(data.MasterArn);\n    }\n    if (data.MemorySize !== undefined && data.MemorySize !== null) {\n        contents.MemorySize = (0, smithy_client_1.expectInt32)(data.MemorySize);\n    }\n    if (data.PackageType !== undefined && data.PackageType !== null) {\n        contents.PackageType = (0, smithy_client_1.expectString)(data.PackageType);\n    }\n    if (data.RevisionId !== undefined && data.RevisionId !== null) {\n        contents.RevisionId = (0, smithy_client_1.expectString)(data.RevisionId);\n    }\n    if (data.Role !== undefined && data.Role !== null) {\n        contents.Role = (0, smithy_client_1.expectString)(data.Role);\n    }\n    if (data.Runtime !== undefined && data.Runtime !== null) {\n        contents.Runtime = (0, smithy_client_1.expectString)(data.Runtime);\n    }\n    if (data.SigningJobArn !== undefined && data.SigningJobArn !== null) {\n        contents.SigningJobArn = (0, smithy_client_1.expectString)(data.SigningJobArn);\n    }\n    if (data.SigningProfileVersionArn !== undefined && data.SigningProfileVersionArn !== null) {\n        contents.SigningProfileVersionArn = (0, smithy_client_1.expectString)(data.SigningProfileVersionArn);\n    }\n    if (data.State !== undefined && data.State !== null) {\n        contents.State = (0, smithy_client_1.expectString)(data.State);\n    }\n    if (data.StateReason !== undefined && data.StateReason !== null) {\n        contents.StateReason = (0, smithy_client_1.expectString)(data.StateReason);\n    }\n    if (data.StateReasonCode !== undefined && data.StateReasonCode !== null) {\n        contents.StateReasonCode = (0, smithy_client_1.expectString)(data.StateReasonCode);\n    }\n    if (data.Timeout !== undefined && data.Timeout !== null) {\n        contents.Timeout = (0, smithy_client_1.expectInt32)(data.Timeout);\n    }\n    if (data.TracingConfig !== undefined && data.TracingConfig !== null) {\n        contents.TracingConfig = deserializeAws_restJson1TracingConfigResponse(data.TracingConfig, context);\n    }\n    if (data.Version !== undefined && data.Version !== null) {\n        contents.Version = (0, smithy_client_1.expectString)(data.Version);\n    }\n    if (data.VpcConfig !== undefined && data.VpcConfig !== null) {\n        contents.VpcConfig = deserializeAws_restJson1VpcConfigResponse(data.VpcConfig, context);\n    }\n    return Promise.resolve(contents);\n};\nexports.deserializeAws_restJson1CreateFunctionCommand = deserializeAws_restJson1CreateFunctionCommand;\nconst deserializeAws_restJson1CreateFunctionCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"CodeSigningConfigNotFoundException\":\n        case \"com.amazonaws.lambda#CodeSigningConfigNotFoundException\":\n            response = {\n                ...(await deserializeAws_restJson1CodeSigningConfigNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"CodeStorageExceededException\":\n        case \"com.amazonaws.lambda#CodeStorageExceededException\":\n            response = {\n                ...(await deserializeAws_restJson1CodeStorageExceededExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"CodeVerificationFailedException\":\n        case \"com.amazonaws.lambda#CodeVerificationFailedException\":\n            response = {\n                ...(await deserializeAws_restJson1CodeVerificationFailedExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidCodeSignatureException\":\n        case \"com.amazonaws.lambda#InvalidCodeSignatureException\":\n            response = {\n                ...(await deserializeAws_restJson1InvalidCodeSignatureExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterValueException\":\n        case \"com.amazonaws.lambda#InvalidParameterValueException\":\n            response = {\n                ...(await deserializeAws_restJson1InvalidParameterValueExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceConflictException\":\n        case \"com.amazonaws.lambda#ResourceConflictException\":\n            response = {\n                ...(await deserializeAws_restJson1ResourceConflictExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.lambda#ResourceNotFoundException\":\n            response = {\n                ...(await deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServiceException\":\n        case \"com.amazonaws.lambda#ServiceException\":\n            response = {\n                ...(await deserializeAws_restJson1ServiceExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.lambda#TooManyRequestsException\":\n            response = {\n                ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_restJson1DeleteAliasCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return deserializeAws_restJson1DeleteAliasCommandError(output, context);\n    }\n    const contents = {\n        $metadata: deserializeMetadata(output),\n    };\n    await collectBody(output.body, context);\n    return Promise.resolve(contents);\n};\nexports.deserializeAws_restJson1DeleteAliasCommand = deserializeAws_restJson1DeleteAliasCommand;\nconst deserializeAws_restJson1DeleteAliasCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidParameterValueException\":\n        case \"com.amazonaws.lambda#InvalidParameterValueException\":\n            response = {\n                ...(await deserializeAws_restJson1InvalidParameterValueExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceConflictException\":\n        case \"com.amazonaws.lambda#ResourceConflictException\":\n            response = {\n                ...(await deserializeAws_restJson1ResourceConflictExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServiceException\":\n        case \"com.amazonaws.lambda#ServiceException\":\n            response = {\n                ...(await deserializeAws_restJson1ServiceExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.lambda#TooManyRequestsException\":\n            response = {\n                ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_restJson1DeleteCodeSigningConfigCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return deserializeAws_restJson1DeleteCodeSigningConfigCommandError(output, context);\n    }\n    const contents = {\n        $metadata: deserializeMetadata(output),\n    };\n    await collectBody(output.body, context);\n    return Promise.resolve(contents);\n};\nexports.deserializeAws_restJson1DeleteCodeSigningConfigCommand = deserializeAws_restJson1DeleteCodeSigningConfigCommand;\nconst deserializeAws_restJson1DeleteCodeSigningConfigCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidParameterValueException\":\n        case \"com.amazonaws.lambda#InvalidParameterValueException\":\n            response = {\n                ...(await deserializeAws_restJson1InvalidParameterValueExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceConflictException\":\n        case \"com.amazonaws.lambda#ResourceConflictException\":\n            response = {\n                ...(await deserializeAws_restJson1ResourceConflictExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.lambda#ResourceNotFoundException\":\n            response = {\n                ...(await deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServiceException\":\n        case \"com.amazonaws.lambda#ServiceException\":\n            response = {\n                ...(await deserializeAws_restJson1ServiceExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_restJson1DeleteEventSourceMappingCommand = async (output, context) => {\n    if (output.statusCode !== 202 && output.statusCode >= 300) {\n        return deserializeAws_restJson1DeleteEventSourceMappingCommandError(output, context);\n    }\n    const contents = {\n        $metadata: deserializeMetadata(output),\n        BatchSize: undefined,\n        BisectBatchOnFunctionError: undefined,\n        DestinationConfig: undefined,\n        EventSourceArn: undefined,\n        FunctionArn: undefined,\n        FunctionResponseTypes: undefined,\n        LastModified: undefined,\n        LastProcessingResult: undefined,\n        MaximumBatchingWindowInSeconds: undefined,\n        MaximumRecordAgeInSeconds: undefined,\n        MaximumRetryAttempts: undefined,\n        ParallelizationFactor: undefined,\n        Queues: undefined,\n        SelfManagedEventSource: undefined,\n        SourceAccessConfigurations: undefined,\n        StartingPosition: undefined,\n        StartingPositionTimestamp: undefined,\n        State: undefined,\n        StateTransitionReason: undefined,\n        Topics: undefined,\n        TumblingWindowInSeconds: undefined,\n        UUID: undefined,\n    };\n    const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\n    if (data.BatchSize !== undefined && data.BatchSize !== null) {\n        contents.BatchSize = (0, smithy_client_1.expectInt32)(data.BatchSize);\n    }\n    if (data.BisectBatchOnFunctionError !== undefined && data.BisectBatchOnFunctionError !== null) {\n        contents.BisectBatchOnFunctionError = (0, smithy_client_1.expectBoolean)(data.BisectBatchOnFunctionError);\n    }\n    if (data.DestinationConfig !== undefined && data.DestinationConfig !== null) {\n        contents.DestinationConfig = deserializeAws_restJson1DestinationConfig(data.DestinationConfig, context);\n    }\n    if (data.EventSourceArn !== undefined && data.EventSourceArn !== null) {\n        contents.EventSourceArn = (0, smithy_client_1.expectString)(data.EventSourceArn);\n    }\n    if (data.FunctionArn !== undefined && data.FunctionArn !== null) {\n        contents.FunctionArn = (0, smithy_client_1.expectString)(data.FunctionArn);\n    }\n    if (data.FunctionResponseTypes !== undefined && data.FunctionResponseTypes !== null) {\n        contents.FunctionResponseTypes = deserializeAws_restJson1FunctionResponseTypeList(data.FunctionResponseTypes, context);\n    }\n    if (data.LastModified !== undefined && data.LastModified !== null) {\n        contents.LastModified = new Date(Math.round(data.LastModified * 1000));\n    }\n    if (data.LastProcessingResult !== undefined && data.LastProcessingResult !== null) {\n        contents.LastProcessingResult = (0, smithy_client_1.expectString)(data.LastProcessingResult);\n    }\n    if (data.MaximumBatchingWindowInSeconds !== undefined && data.MaximumBatchingWindowInSeconds !== null) {\n        contents.MaximumBatchingWindowInSeconds = (0, smithy_client_1.expectInt32)(data.MaximumBatchingWindowInSeconds);\n    }\n    if (data.MaximumRecordAgeInSeconds !== undefined && data.MaximumRecordAgeInSeconds !== null) {\n        contents.MaximumRecordAgeInSeconds = (0, smithy_client_1.expectInt32)(data.MaximumRecordAgeInSeconds);\n    }\n    if (data.MaximumRetryAttempts !== undefined && data.MaximumRetryAttempts !== null) {\n        contents.MaximumRetryAttempts = (0, smithy_client_1.expectInt32)(data.MaximumRetryAttempts);\n    }\n    if (data.ParallelizationFactor !== undefined && data.ParallelizationFactor !== null) {\n        contents.ParallelizationFactor = (0, smithy_client_1.expectInt32)(data.ParallelizationFactor);\n    }\n    if (data.Queues !== undefined && data.Queues !== null) {\n        contents.Queues = deserializeAws_restJson1Queues(data.Queues, context);\n    }\n    if (data.SelfManagedEventSource !== undefined && data.SelfManagedEventSource !== null) {\n        contents.SelfManagedEventSource = deserializeAws_restJson1SelfManagedEventSource(data.SelfManagedEventSource, context);\n    }\n    if (data.SourceAccessConfigurations !== undefined && data.SourceAccessConfigurations !== null) {\n        contents.SourceAccessConfigurations = deserializeAws_restJson1SourceAccessConfigurations(data.SourceAccessConfigurations, context);\n    }\n    if (data.StartingPosition !== undefined && data.StartingPosition !== null) {\n        contents.StartingPosition = (0, smithy_client_1.expectString)(data.StartingPosition);\n    }\n    if (data.StartingPositionTimestamp !== undefined && data.StartingPositionTimestamp !== null) {\n        contents.StartingPositionTimestamp = new Date(Math.round(data.StartingPositionTimestamp * 1000));\n    }\n    if (data.State !== undefined && data.State !== null) {\n        contents.State = (0, smithy_client_1.expectString)(data.State);\n    }\n    if (data.StateTransitionReason !== undefined && data.StateTransitionReason !== null) {\n        contents.StateTransitionReason = (0, smithy_client_1.expectString)(data.StateTransitionReason);\n    }\n    if (data.Topics !== undefined && data.Topics !== null) {\n        contents.Topics = deserializeAws_restJson1Topics(data.Topics, context);\n    }\n    if (data.TumblingWindowInSeconds !== undefined && data.TumblingWindowInSeconds !== null) {\n        contents.TumblingWindowInSeconds = (0, smithy_client_1.expectInt32)(data.TumblingWindowInSeconds);\n    }\n    if (data.UUID !== undefined && data.UUID !== null) {\n        contents.UUID = (0, smithy_client_1.expectString)(data.UUID);\n    }\n    return Promise.resolve(contents);\n};\nexports.deserializeAws_restJson1DeleteEventSourceMappingCommand = deserializeAws_restJson1DeleteEventSourceMappingCommand;\nconst deserializeAws_restJson1DeleteEventSourceMappingCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidParameterValueException\":\n        case \"com.amazonaws.lambda#InvalidParameterValueException\":\n            response = {\n                ...(await deserializeAws_restJson1InvalidParameterValueExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceInUseException\":\n        case \"com.amazonaws.lambda#ResourceInUseException\":\n            response = {\n                ...(await deserializeAws_restJson1ResourceInUseExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.lambda#ResourceNotFoundException\":\n            response = {\n                ...(await deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServiceException\":\n        case \"com.amazonaws.lambda#ServiceException\":\n            response = {\n                ...(await deserializeAws_restJson1ServiceExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.lambda#TooManyRequestsException\":\n            response = {\n                ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_restJson1DeleteFunctionCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return deserializeAws_restJson1DeleteFunctionCommandError(output, context);\n    }\n    const contents = {\n        $metadata: deserializeMetadata(output),\n    };\n    await collectBody(output.body, context);\n    return Promise.resolve(contents);\n};\nexports.deserializeAws_restJson1DeleteFunctionCommand = deserializeAws_restJson1DeleteFunctionCommand;\nconst deserializeAws_restJson1DeleteFunctionCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidParameterValueException\":\n        case \"com.amazonaws.lambda#InvalidParameterValueException\":\n            response = {\n                ...(await deserializeAws_restJson1InvalidParameterValueExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceConflictException\":\n        case \"com.amazonaws.lambda#ResourceConflictException\":\n            response = {\n                ...(await deserializeAws_restJson1ResourceConflictExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.lambda#ResourceNotFoundException\":\n            response = {\n                ...(await deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServiceException\":\n        case \"com.amazonaws.lambda#ServiceException\":\n            response = {\n                ...(await deserializeAws_restJson1ServiceExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.lambda#TooManyRequestsException\":\n            response = {\n                ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_restJson1DeleteFunctionCodeSigningConfigCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return deserializeAws_restJson1DeleteFunctionCodeSigningConfigCommandError(output, context);\n    }\n    const contents = {\n        $metadata: deserializeMetadata(output),\n    };\n    await collectBody(output.body, context);\n    return Promise.resolve(contents);\n};\nexports.deserializeAws_restJson1DeleteFunctionCodeSigningConfigCommand = deserializeAws_restJson1DeleteFunctionCodeSigningConfigCommand;\nconst deserializeAws_restJson1DeleteFunctionCodeSigningConfigCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"CodeSigningConfigNotFoundException\":\n        case \"com.amazonaws.lambda#CodeSigningConfigNotFoundException\":\n            response = {\n                ...(await deserializeAws_restJson1CodeSigningConfigNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterValueException\":\n        case \"com.amazonaws.lambda#InvalidParameterValueException\":\n            response = {\n                ...(await deserializeAws_restJson1InvalidParameterValueExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceConflictException\":\n        case \"com.amazonaws.lambda#ResourceConflictException\":\n            response = {\n                ...(await deserializeAws_restJson1ResourceConflictExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.lambda#ResourceNotFoundException\":\n            response = {\n                ...(await deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServiceException\":\n        case \"com.amazonaws.lambda#ServiceException\":\n            response = {\n                ...(await deserializeAws_restJson1ServiceExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.lambda#TooManyRequestsException\":\n            response = {\n                ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_restJson1DeleteFunctionConcurrencyCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return deserializeAws_restJson1DeleteFunctionConcurrencyCommandError(output, context);\n    }\n    const contents = {\n        $metadata: deserializeMetadata(output),\n    };\n    await collectBody(output.body, context);\n    return Promise.resolve(contents);\n};\nexports.deserializeAws_restJson1DeleteFunctionConcurrencyCommand = deserializeAws_restJson1DeleteFunctionConcurrencyCommand;\nconst deserializeAws_restJson1DeleteFunctionConcurrencyCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidParameterValueException\":\n        case \"com.amazonaws.lambda#InvalidParameterValueException\":\n            response = {\n                ...(await deserializeAws_restJson1InvalidParameterValueExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceConflictException\":\n        case \"com.amazonaws.lambda#ResourceConflictException\":\n            response = {\n                ...(await deserializeAws_restJson1ResourceConflictExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.lambda#ResourceNotFoundException\":\n            response = {\n                ...(await deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServiceException\":\n        case \"com.amazonaws.lambda#ServiceException\":\n            response = {\n                ...(await deserializeAws_restJson1ServiceExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.lambda#TooManyRequestsException\":\n            response = {\n                ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_restJson1DeleteFunctionEventInvokeConfigCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return deserializeAws_restJson1DeleteFunctionEventInvokeConfigCommandError(output, context);\n    }\n    const contents = {\n        $metadata: deserializeMetadata(output),\n    };\n    await collectBody(output.body, context);\n    return Promise.resolve(contents);\n};\nexports.deserializeAws_restJson1DeleteFunctionEventInvokeConfigCommand = deserializeAws_restJson1DeleteFunctionEventInvokeConfigCommand;\nconst deserializeAws_restJson1DeleteFunctionEventInvokeConfigCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidParameterValueException\":\n        case \"com.amazonaws.lambda#InvalidParameterValueException\":\n            response = {\n                ...(await deserializeAws_restJson1InvalidParameterValueExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceConflictException\":\n        case \"com.amazonaws.lambda#ResourceConflictException\":\n            response = {\n                ...(await deserializeAws_restJson1ResourceConflictExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.lambda#ResourceNotFoundException\":\n            response = {\n                ...(await deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServiceException\":\n        case \"com.amazonaws.lambda#ServiceException\":\n            response = {\n                ...(await deserializeAws_restJson1ServiceExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.lambda#TooManyRequestsException\":\n            response = {\n                ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_restJson1DeleteLayerVersionCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return deserializeAws_restJson1DeleteLayerVersionCommandError(output, context);\n    }\n    const contents = {\n        $metadata: deserializeMetadata(output),\n    };\n    await collectBody(output.body, context);\n    return Promise.resolve(contents);\n};\nexports.deserializeAws_restJson1DeleteLayerVersionCommand = deserializeAws_restJson1DeleteLayerVersionCommand;\nconst deserializeAws_restJson1DeleteLayerVersionCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ServiceException\":\n        case \"com.amazonaws.lambda#ServiceException\":\n            response = {\n                ...(await deserializeAws_restJson1ServiceExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.lambda#TooManyRequestsException\":\n            response = {\n                ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_restJson1DeleteProvisionedConcurrencyConfigCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return deserializeAws_restJson1DeleteProvisionedConcurrencyConfigCommandError(output, context);\n    }\n    const contents = {\n        $metadata: deserializeMetadata(output),\n    };\n    await collectBody(output.body, context);\n    return Promise.resolve(contents);\n};\nexports.deserializeAws_restJson1DeleteProvisionedConcurrencyConfigCommand = deserializeAws_restJson1DeleteProvisionedConcurrencyConfigCommand;\nconst deserializeAws_restJson1DeleteProvisionedConcurrencyConfigCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidParameterValueException\":\n        case \"com.amazonaws.lambda#InvalidParameterValueException\":\n            response = {\n                ...(await deserializeAws_restJson1InvalidParameterValueExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceConflictException\":\n        case \"com.amazonaws.lambda#ResourceConflictException\":\n            response = {\n                ...(await deserializeAws_restJson1ResourceConflictExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.lambda#ResourceNotFoundException\":\n            response = {\n                ...(await deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServiceException\":\n        case \"com.amazonaws.lambda#ServiceException\":\n            response = {\n                ...(await deserializeAws_restJson1ServiceExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.lambda#TooManyRequestsException\":\n            response = {\n                ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_restJson1GetAccountSettingsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1GetAccountSettingsCommandError(output, context);\n    }\n    const contents = {\n        $metadata: deserializeMetadata(output),\n        AccountLimit: undefined,\n        AccountUsage: undefined,\n    };\n    const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\n    if (data.AccountLimit !== undefined && data.AccountLimit !== null) {\n        contents.AccountLimit = deserializeAws_restJson1AccountLimit(data.AccountLimit, context);\n    }\n    if (data.AccountUsage !== undefined && data.AccountUsage !== null) {\n        contents.AccountUsage = deserializeAws_restJson1AccountUsage(data.AccountUsage, context);\n    }\n    return Promise.resolve(contents);\n};\nexports.deserializeAws_restJson1GetAccountSettingsCommand = deserializeAws_restJson1GetAccountSettingsCommand;\nconst deserializeAws_restJson1GetAccountSettingsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ServiceException\":\n        case \"com.amazonaws.lambda#ServiceException\":\n            response = {\n                ...(await deserializeAws_restJson1ServiceExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.lambda#TooManyRequestsException\":\n            response = {\n                ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_restJson1GetAliasCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1GetAliasCommandError(output, context);\n    }\n    const contents = {\n        $metadata: deserializeMetadata(output),\n        AliasArn: undefined,\n        Description: undefined,\n        FunctionVersion: undefined,\n        Name: undefined,\n        RevisionId: undefined,\n        RoutingConfig: undefined,\n    };\n    const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\n    if (data.AliasArn !== undefined && data.AliasArn !== null) {\n        contents.AliasArn = (0, smithy_client_1.expectString)(data.AliasArn);\n    }\n    if (data.Description !== undefined && data.Description !== null) {\n        contents.Description = (0, smithy_client_1.expectString)(data.Description);\n    }\n    if (data.FunctionVersion !== undefined && data.FunctionVersion !== null) {\n        contents.FunctionVersion = (0, smithy_client_1.expectString)(data.FunctionVersion);\n    }\n    if (data.Name !== undefined && data.Name !== null) {\n        contents.Name = (0, smithy_client_1.expectString)(data.Name);\n    }\n    if (data.RevisionId !== undefined && data.RevisionId !== null) {\n        contents.RevisionId = (0, smithy_client_1.expectString)(data.RevisionId);\n    }\n    if (data.RoutingConfig !== undefined && data.RoutingConfig !== null) {\n        contents.RoutingConfig = deserializeAws_restJson1AliasRoutingConfiguration(data.RoutingConfig, context);\n    }\n    return Promise.resolve(contents);\n};\nexports.deserializeAws_restJson1GetAliasCommand = deserializeAws_restJson1GetAliasCommand;\nconst deserializeAws_restJson1GetAliasCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidParameterValueException\":\n        case \"com.amazonaws.lambda#InvalidParameterValueException\":\n            response = {\n                ...(await deserializeAws_restJson1InvalidParameterValueExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.lambda#ResourceNotFoundException\":\n            response = {\n                ...(await deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServiceException\":\n        case \"com.amazonaws.lambda#ServiceException\":\n            response = {\n                ...(await deserializeAws_restJson1ServiceExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.lambda#TooManyRequestsException\":\n            response = {\n                ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_restJson1GetCodeSigningConfigCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1GetCodeSigningConfigCommandError(output, context);\n    }\n    const contents = {\n        $metadata: deserializeMetadata(output),\n        CodeSigningConfig: undefined,\n    };\n    const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\n    if (data.CodeSigningConfig !== undefined && data.CodeSigningConfig !== null) {\n        contents.CodeSigningConfig = deserializeAws_restJson1CodeSigningConfig(data.CodeSigningConfig, context);\n    }\n    return Promise.resolve(contents);\n};\nexports.deserializeAws_restJson1GetCodeSigningConfigCommand = deserializeAws_restJson1GetCodeSigningConfigCommand;\nconst deserializeAws_restJson1GetCodeSigningConfigCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidParameterValueException\":\n        case \"com.amazonaws.lambda#InvalidParameterValueException\":\n            response = {\n                ...(await deserializeAws_restJson1InvalidParameterValueExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.lambda#ResourceNotFoundException\":\n            response = {\n                ...(await deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServiceException\":\n        case \"com.amazonaws.lambda#ServiceException\":\n            response = {\n                ...(await deserializeAws_restJson1ServiceExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_restJson1GetEventSourceMappingCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1GetEventSourceMappingCommandError(output, context);\n    }\n    const contents = {\n        $metadata: deserializeMetadata(output),\n        BatchSize: undefined,\n        BisectBatchOnFunctionError: undefined,\n        DestinationConfig: undefined,\n        EventSourceArn: undefined,\n        FunctionArn: undefined,\n        FunctionResponseTypes: undefined,\n        LastModified: undefined,\n        LastProcessingResult: undefined,\n        MaximumBatchingWindowInSeconds: undefined,\n        MaximumRecordAgeInSeconds: undefined,\n        MaximumRetryAttempts: undefined,\n        ParallelizationFactor: undefined,\n        Queues: undefined,\n        SelfManagedEventSource: undefined,\n        SourceAccessConfigurations: undefined,\n        StartingPosition: undefined,\n        StartingPositionTimestamp: undefined,\n        State: undefined,\n        StateTransitionReason: undefined,\n        Topics: undefined,\n        TumblingWindowInSeconds: undefined,\n        UUID: undefined,\n    };\n    const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\n    if (data.BatchSize !== undefined && data.BatchSize !== null) {\n        contents.BatchSize = (0, smithy_client_1.expectInt32)(data.BatchSize);\n    }\n    if (data.BisectBatchOnFunctionError !== undefined && data.BisectBatchOnFunctionError !== null) {\n        contents.BisectBatchOnFunctionError = (0, smithy_client_1.expectBoolean)(data.BisectBatchOnFunctionError);\n    }\n    if (data.DestinationConfig !== undefined && data.DestinationConfig !== null) {\n        contents.DestinationConfig = deserializeAws_restJson1DestinationConfig(data.DestinationConfig, context);\n    }\n    if (data.EventSourceArn !== undefined && data.EventSourceArn !== null) {\n        contents.EventSourceArn = (0, smithy_client_1.expectString)(data.EventSourceArn);\n    }\n    if (data.FunctionArn !== undefined && data.FunctionArn !== null) {\n        contents.FunctionArn = (0, smithy_client_1.expectString)(data.FunctionArn);\n    }\n    if (data.FunctionResponseTypes !== undefined && data.FunctionResponseTypes !== null) {\n        contents.FunctionResponseTypes = deserializeAws_restJson1FunctionResponseTypeList(data.FunctionResponseTypes, context);\n    }\n    if (data.LastModified !== undefined && data.LastModified !== null) {\n        contents.LastModified = new Date(Math.round(data.LastModified * 1000));\n    }\n    if (data.LastProcessingResult !== undefined && data.LastProcessingResult !== null) {\n        contents.LastProcessingResult = (0, smithy_client_1.expectString)(data.LastProcessingResult);\n    }\n    if (data.MaximumBatchingWindowInSeconds !== undefined && data.MaximumBatchingWindowInSeconds !== null) {\n        contents.MaximumBatchingWindowInSeconds = (0, smithy_client_1.expectInt32)(data.MaximumBatchingWindowInSeconds);\n    }\n    if (data.MaximumRecordAgeInSeconds !== undefined && data.MaximumRecordAgeInSeconds !== null) {\n        contents.MaximumRecordAgeInSeconds = (0, smithy_client_1.expectInt32)(data.MaximumRecordAgeInSeconds);\n    }\n    if (data.MaximumRetryAttempts !== undefined && data.MaximumRetryAttempts !== null) {\n        contents.MaximumRetryAttempts = (0, smithy_client_1.expectInt32)(data.MaximumRetryAttempts);\n    }\n    if (data.ParallelizationFactor !== undefined && data.ParallelizationFactor !== null) {\n        contents.ParallelizationFactor = (0, smithy_client_1.expectInt32)(data.ParallelizationFactor);\n    }\n    if (data.Queues !== undefined && data.Queues !== null) {\n        contents.Queues = deserializeAws_restJson1Queues(data.Queues, context);\n    }\n    if (data.SelfManagedEventSource !== undefined && data.SelfManagedEventSource !== null) {\n        contents.SelfManagedEventSource = deserializeAws_restJson1SelfManagedEventSource(data.SelfManagedEventSource, context);\n    }\n    if (data.SourceAccessConfigurations !== undefined && data.SourceAccessConfigurations !== null) {\n        contents.SourceAccessConfigurations = deserializeAws_restJson1SourceAccessConfigurations(data.SourceAccessConfigurations, context);\n    }\n    if (data.StartingPosition !== undefined && data.StartingPosition !== null) {\n        contents.StartingPosition = (0, smithy_client_1.expectString)(data.StartingPosition);\n    }\n    if (data.StartingPositionTimestamp !== undefined && data.StartingPositionTimestamp !== null) {\n        contents.StartingPositionTimestamp = new Date(Math.round(data.StartingPositionTimestamp * 1000));\n    }\n    if (data.State !== undefined && data.State !== null) {\n        contents.State = (0, smithy_client_1.expectString)(data.State);\n    }\n    if (data.StateTransitionReason !== undefined && data.StateTransitionReason !== null) {\n        contents.StateTransitionReason = (0, smithy_client_1.expectString)(data.StateTransitionReason);\n    }\n    if (data.Topics !== undefined && data.Topics !== null) {\n        contents.Topics = deserializeAws_restJson1Topics(data.Topics, context);\n    }\n    if (data.TumblingWindowInSeconds !== undefined && data.TumblingWindowInSeconds !== null) {\n        contents.TumblingWindowInSeconds = (0, smithy_client_1.expectInt32)(data.TumblingWindowInSeconds);\n    }\n    if (data.UUID !== undefined && data.UUID !== null) {\n        contents.UUID = (0, smithy_client_1.expectString)(data.UUID);\n    }\n    return Promise.resolve(contents);\n};\nexports.deserializeAws_restJson1GetEventSourceMappingCommand = deserializeAws_restJson1GetEventSourceMappingCommand;\nconst deserializeAws_restJson1GetEventSourceMappingCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidParameterValueException\":\n        case \"com.amazonaws.lambda#InvalidParameterValueException\":\n            response = {\n                ...(await deserializeAws_restJson1InvalidParameterValueExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.lambda#ResourceNotFoundException\":\n            response = {\n                ...(await deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServiceException\":\n        case \"com.amazonaws.lambda#ServiceException\":\n            response = {\n                ...(await deserializeAws_restJson1ServiceExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.lambda#TooManyRequestsException\":\n            response = {\n                ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_restJson1GetFunctionCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1GetFunctionCommandError(output, context);\n    }\n    const contents = {\n        $metadata: deserializeMetadata(output),\n        Code: undefined,\n        Concurrency: undefined,\n        Configuration: undefined,\n        Tags: undefined,\n    };\n    const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\n    if (data.Code !== undefined && data.Code !== null) {\n        contents.Code = deserializeAws_restJson1FunctionCodeLocation(data.Code, context);\n    }\n    if (data.Concurrency !== undefined && data.Concurrency !== null) {\n        contents.Concurrency = deserializeAws_restJson1Concurrency(data.Concurrency, context);\n    }\n    if (data.Configuration !== undefined && data.Configuration !== null) {\n        contents.Configuration = deserializeAws_restJson1FunctionConfiguration(data.Configuration, context);\n    }\n    if (data.Tags !== undefined && data.Tags !== null) {\n        contents.Tags = deserializeAws_restJson1Tags(data.Tags, context);\n    }\n    return Promise.resolve(contents);\n};\nexports.deserializeAws_restJson1GetFunctionCommand = deserializeAws_restJson1GetFunctionCommand;\nconst deserializeAws_restJson1GetFunctionCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidParameterValueException\":\n        case \"com.amazonaws.lambda#InvalidParameterValueException\":\n            response = {\n                ...(await deserializeAws_restJson1InvalidParameterValueExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.lambda#ResourceNotFoundException\":\n            response = {\n                ...(await deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServiceException\":\n        case \"com.amazonaws.lambda#ServiceException\":\n            response = {\n                ...(await deserializeAws_restJson1ServiceExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.lambda#TooManyRequestsException\":\n            response = {\n                ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_restJson1GetFunctionCodeSigningConfigCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1GetFunctionCodeSigningConfigCommandError(output, context);\n    }\n    const contents = {\n        $metadata: deserializeMetadata(output),\n        CodeSigningConfigArn: undefined,\n        FunctionName: undefined,\n    };\n    const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\n    if (data.CodeSigningConfigArn !== undefined && data.CodeSigningConfigArn !== null) {\n        contents.CodeSigningConfigArn = (0, smithy_client_1.expectString)(data.CodeSigningConfigArn);\n    }\n    if (data.FunctionName !== undefined && data.FunctionName !== null) {\n        contents.FunctionName = (0, smithy_client_1.expectString)(data.FunctionName);\n    }\n    return Promise.resolve(contents);\n};\nexports.deserializeAws_restJson1GetFunctionCodeSigningConfigCommand = deserializeAws_restJson1GetFunctionCodeSigningConfigCommand;\nconst deserializeAws_restJson1GetFunctionCodeSigningConfigCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidParameterValueException\":\n        case \"com.amazonaws.lambda#InvalidParameterValueException\":\n            response = {\n                ...(await deserializeAws_restJson1InvalidParameterValueExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.lambda#ResourceNotFoundException\":\n            response = {\n                ...(await deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServiceException\":\n        case \"com.amazonaws.lambda#ServiceException\":\n            response = {\n                ...(await deserializeAws_restJson1ServiceExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.lambda#TooManyRequestsException\":\n            response = {\n                ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_restJson1GetFunctionConcurrencyCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1GetFunctionConcurrencyCommandError(output, context);\n    }\n    const contents = {\n        $metadata: deserializeMetadata(output),\n        ReservedConcurrentExecutions: undefined,\n    };\n    const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\n    if (data.ReservedConcurrentExecutions !== undefined && data.ReservedConcurrentExecutions !== null) {\n        contents.ReservedConcurrentExecutions = (0, smithy_client_1.expectInt32)(data.ReservedConcurrentExecutions);\n    }\n    return Promise.resolve(contents);\n};\nexports.deserializeAws_restJson1GetFunctionConcurrencyCommand = deserializeAws_restJson1GetFunctionConcurrencyCommand;\nconst deserializeAws_restJson1GetFunctionConcurrencyCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidParameterValueException\":\n        case \"com.amazonaws.lambda#InvalidParameterValueException\":\n            response = {\n                ...(await deserializeAws_restJson1InvalidParameterValueExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.lambda#ResourceNotFoundException\":\n            response = {\n                ...(await deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServiceException\":\n        case \"com.amazonaws.lambda#ServiceException\":\n            response = {\n                ...(await deserializeAws_restJson1ServiceExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.lambda#TooManyRequestsException\":\n            response = {\n                ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_restJson1GetFunctionConfigurationCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1GetFunctionConfigurationCommandError(output, context);\n    }\n    const contents = {\n        $metadata: deserializeMetadata(output),\n        CodeSha256: undefined,\n        CodeSize: undefined,\n        DeadLetterConfig: undefined,\n        Description: undefined,\n        Environment: undefined,\n        FileSystemConfigs: undefined,\n        FunctionArn: undefined,\n        FunctionName: undefined,\n        Handler: undefined,\n        ImageConfigResponse: undefined,\n        KMSKeyArn: undefined,\n        LastModified: undefined,\n        LastUpdateStatus: undefined,\n        LastUpdateStatusReason: undefined,\n        LastUpdateStatusReasonCode: undefined,\n        Layers: undefined,\n        MasterArn: undefined,\n        MemorySize: undefined,\n        PackageType: undefined,\n        RevisionId: undefined,\n        Role: undefined,\n        Runtime: undefined,\n        SigningJobArn: undefined,\n        SigningProfileVersionArn: undefined,\n        State: undefined,\n        StateReason: undefined,\n        StateReasonCode: undefined,\n        Timeout: undefined,\n        TracingConfig: undefined,\n        Version: undefined,\n        VpcConfig: undefined,\n    };\n    const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\n    if (data.CodeSha256 !== undefined && data.CodeSha256 !== null) {\n        contents.CodeSha256 = (0, smithy_client_1.expectString)(data.CodeSha256);\n    }\n    if (data.CodeSize !== undefined && data.CodeSize !== null) {\n        contents.CodeSize = (0, smithy_client_1.expectLong)(data.CodeSize);\n    }\n    if (data.DeadLetterConfig !== undefined && data.DeadLetterConfig !== null) {\n        contents.DeadLetterConfig = deserializeAws_restJson1DeadLetterConfig(data.DeadLetterConfig, context);\n    }\n    if (data.Description !== undefined && data.Description !== null) {\n        contents.Description = (0, smithy_client_1.expectString)(data.Description);\n    }\n    if (data.Environment !== undefined && data.Environment !== null) {\n        contents.Environment = deserializeAws_restJson1EnvironmentResponse(data.Environment, context);\n    }\n    if (data.FileSystemConfigs !== undefined && data.FileSystemConfigs !== null) {\n        contents.FileSystemConfigs = deserializeAws_restJson1FileSystemConfigList(data.FileSystemConfigs, context);\n    }\n    if (data.FunctionArn !== undefined && data.FunctionArn !== null) {\n        contents.FunctionArn = (0, smithy_client_1.expectString)(data.FunctionArn);\n    }\n    if (data.FunctionName !== undefined && data.FunctionName !== null) {\n        contents.FunctionName = (0, smithy_client_1.expectString)(data.FunctionName);\n    }\n    if (data.Handler !== undefined && data.Handler !== null) {\n        contents.Handler = (0, smithy_client_1.expectString)(data.Handler);\n    }\n    if (data.ImageConfigResponse !== undefined && data.ImageConfigResponse !== null) {\n        contents.ImageConfigResponse = deserializeAws_restJson1ImageConfigResponse(data.ImageConfigResponse, context);\n    }\n    if (data.KMSKeyArn !== undefined && data.KMSKeyArn !== null) {\n        contents.KMSKeyArn = (0, smithy_client_1.expectString)(data.KMSKeyArn);\n    }\n    if (data.LastModified !== undefined && data.LastModified !== null) {\n        contents.LastModified = (0, smithy_client_1.expectString)(data.LastModified);\n    }\n    if (data.LastUpdateStatus !== undefined && data.LastUpdateStatus !== null) {\n        contents.LastUpdateStatus = (0, smithy_client_1.expectString)(data.LastUpdateStatus);\n    }\n    if (data.LastUpdateStatusReason !== undefined && data.LastUpdateStatusReason !== null) {\n        contents.LastUpdateStatusReason = (0, smithy_client_1.expectString)(data.LastUpdateStatusReason);\n    }\n    if (data.LastUpdateStatusReasonCode !== undefined && data.LastUpdateStatusReasonCode !== null) {\n        contents.LastUpdateStatusReasonCode = (0, smithy_client_1.expectString)(data.LastUpdateStatusReasonCode);\n    }\n    if (data.Layers !== undefined && data.Layers !== null) {\n        contents.Layers = deserializeAws_restJson1LayersReferenceList(data.Layers, context);\n    }\n    if (data.MasterArn !== undefined && data.MasterArn !== null) {\n        contents.MasterArn = (0, smithy_client_1.expectString)(data.MasterArn);\n    }\n    if (data.MemorySize !== undefined && data.MemorySize !== null) {\n        contents.MemorySize = (0, smithy_client_1.expectInt32)(data.MemorySize);\n    }\n    if (data.PackageType !== undefined && data.PackageType !== null) {\n        contents.PackageType = (0, smithy_client_1.expectString)(data.PackageType);\n    }\n    if (data.RevisionId !== undefined && data.RevisionId !== null) {\n        contents.RevisionId = (0, smithy_client_1.expectString)(data.RevisionId);\n    }\n    if (data.Role !== undefined && data.Role !== null) {\n        contents.Role = (0, smithy_client_1.expectString)(data.Role);\n    }\n    if (data.Runtime !== undefined && data.Runtime !== null) {\n        contents.Runtime = (0, smithy_client_1.expectString)(data.Runtime);\n    }\n    if (data.SigningJobArn !== undefined && data.SigningJobArn !== null) {\n        contents.SigningJobArn = (0, smithy_client_1.expectString)(data.SigningJobArn);\n    }\n    if (data.SigningProfileVersionArn !== undefined && data.SigningProfileVersionArn !== null) {\n        contents.SigningProfileVersionArn = (0, smithy_client_1.expectString)(data.SigningProfileVersionArn);\n    }\n    if (data.State !== undefined && data.State !== null) {\n        contents.State = (0, smithy_client_1.expectString)(data.State);\n    }\n    if (data.StateReason !== undefined && data.StateReason !== null) {\n        contents.StateReason = (0, smithy_client_1.expectString)(data.StateReason);\n    }\n    if (data.StateReasonCode !== undefined && data.StateReasonCode !== null) {\n        contents.StateReasonCode = (0, smithy_client_1.expectString)(data.StateReasonCode);\n    }\n    if (data.Timeout !== undefined && data.Timeout !== null) {\n        contents.Timeout = (0, smithy_client_1.expectInt32)(data.Timeout);\n    }\n    if (data.TracingConfig !== undefined && data.TracingConfig !== null) {\n        contents.TracingConfig = deserializeAws_restJson1TracingConfigResponse(data.TracingConfig, context);\n    }\n    if (data.Version !== undefined && data.Version !== null) {\n        contents.Version = (0, smithy_client_1.expectString)(data.Version);\n    }\n    if (data.VpcConfig !== undefined && data.VpcConfig !== null) {\n        contents.VpcConfig = deserializeAws_restJson1VpcConfigResponse(data.VpcConfig, context);\n    }\n    return Promise.resolve(contents);\n};\nexports.deserializeAws_restJson1GetFunctionConfigurationCommand = deserializeAws_restJson1GetFunctionConfigurationCommand;\nconst deserializeAws_restJson1GetFunctionConfigurationCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidParameterValueException\":\n        case \"com.amazonaws.lambda#InvalidParameterValueException\":\n            response = {\n                ...(await deserializeAws_restJson1InvalidParameterValueExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.lambda#ResourceNotFoundException\":\n            response = {\n                ...(await deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServiceException\":\n        case \"com.amazonaws.lambda#ServiceException\":\n            response = {\n                ...(await deserializeAws_restJson1ServiceExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.lambda#TooManyRequestsException\":\n            response = {\n                ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_restJson1GetFunctionEventInvokeConfigCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1GetFunctionEventInvokeConfigCommandError(output, context);\n    }\n    const contents = {\n        $metadata: deserializeMetadata(output),\n        DestinationConfig: undefined,\n        FunctionArn: undefined,\n        LastModified: undefined,\n        MaximumEventAgeInSeconds: undefined,\n        MaximumRetryAttempts: undefined,\n    };\n    const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\n    if (data.DestinationConfig !== undefined && data.DestinationConfig !== null) {\n        contents.DestinationConfig = deserializeAws_restJson1DestinationConfig(data.DestinationConfig, context);\n    }\n    if (data.FunctionArn !== undefined && data.FunctionArn !== null) {\n        contents.FunctionArn = (0, smithy_client_1.expectString)(data.FunctionArn);\n    }\n    if (data.LastModified !== undefined && data.LastModified !== null) {\n        contents.LastModified = new Date(Math.round(data.LastModified * 1000));\n    }\n    if (data.MaximumEventAgeInSeconds !== undefined && data.MaximumEventAgeInSeconds !== null) {\n        contents.MaximumEventAgeInSeconds = (0, smithy_client_1.expectInt32)(data.MaximumEventAgeInSeconds);\n    }\n    if (data.MaximumRetryAttempts !== undefined && data.MaximumRetryAttempts !== null) {\n        contents.MaximumRetryAttempts = (0, smithy_client_1.expectInt32)(data.MaximumRetryAttempts);\n    }\n    return Promise.resolve(contents);\n};\nexports.deserializeAws_restJson1GetFunctionEventInvokeConfigCommand = deserializeAws_restJson1GetFunctionEventInvokeConfigCommand;\nconst deserializeAws_restJson1GetFunctionEventInvokeConfigCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidParameterValueException\":\n        case \"com.amazonaws.lambda#InvalidParameterValueException\":\n            response = {\n                ...(await deserializeAws_restJson1InvalidParameterValueExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.lambda#ResourceNotFoundException\":\n            response = {\n                ...(await deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServiceException\":\n        case \"com.amazonaws.lambda#ServiceException\":\n            response = {\n                ...(await deserializeAws_restJson1ServiceExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.lambda#TooManyRequestsException\":\n            response = {\n                ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_restJson1GetLayerVersionCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1GetLayerVersionCommandError(output, context);\n    }\n    const contents = {\n        $metadata: deserializeMetadata(output),\n        CompatibleRuntimes: undefined,\n        Content: undefined,\n        CreatedDate: undefined,\n        Description: undefined,\n        LayerArn: undefined,\n        LayerVersionArn: undefined,\n        LicenseInfo: undefined,\n        Version: undefined,\n    };\n    const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\n    if (data.CompatibleRuntimes !== undefined && data.CompatibleRuntimes !== null) {\n        contents.CompatibleRuntimes = deserializeAws_restJson1CompatibleRuntimes(data.CompatibleRuntimes, context);\n    }\n    if (data.Content !== undefined && data.Content !== null) {\n        contents.Content = deserializeAws_restJson1LayerVersionContentOutput(data.Content, context);\n    }\n    if (data.CreatedDate !== undefined && data.CreatedDate !== null) {\n        contents.CreatedDate = (0, smithy_client_1.expectString)(data.CreatedDate);\n    }\n    if (data.Description !== undefined && data.Description !== null) {\n        contents.Description = (0, smithy_client_1.expectString)(data.Description);\n    }\n    if (data.LayerArn !== undefined && data.LayerArn !== null) {\n        contents.LayerArn = (0, smithy_client_1.expectString)(data.LayerArn);\n    }\n    if (data.LayerVersionArn !== undefined && data.LayerVersionArn !== null) {\n        contents.LayerVersionArn = (0, smithy_client_1.expectString)(data.LayerVersionArn);\n    }\n    if (data.LicenseInfo !== undefined && data.LicenseInfo !== null) {\n        contents.LicenseInfo = (0, smithy_client_1.expectString)(data.LicenseInfo);\n    }\n    if (data.Version !== undefined && data.Version !== null) {\n        contents.Version = (0, smithy_client_1.expectLong)(data.Version);\n    }\n    return Promise.resolve(contents);\n};\nexports.deserializeAws_restJson1GetLayerVersionCommand = deserializeAws_restJson1GetLayerVersionCommand;\nconst deserializeAws_restJson1GetLayerVersionCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidParameterValueException\":\n        case \"com.amazonaws.lambda#InvalidParameterValueException\":\n            response = {\n                ...(await deserializeAws_restJson1InvalidParameterValueExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.lambda#ResourceNotFoundException\":\n            response = {\n                ...(await deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServiceException\":\n        case \"com.amazonaws.lambda#ServiceException\":\n            response = {\n                ...(await deserializeAws_restJson1ServiceExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.lambda#TooManyRequestsException\":\n            response = {\n                ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_restJson1GetLayerVersionByArnCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1GetLayerVersionByArnCommandError(output, context);\n    }\n    const contents = {\n        $metadata: deserializeMetadata(output),\n        CompatibleRuntimes: undefined,\n        Content: undefined,\n        CreatedDate: undefined,\n        Description: undefined,\n        LayerArn: undefined,\n        LayerVersionArn: undefined,\n        LicenseInfo: undefined,\n        Version: undefined,\n    };\n    const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\n    if (data.CompatibleRuntimes !== undefined && data.CompatibleRuntimes !== null) {\n        contents.CompatibleRuntimes = deserializeAws_restJson1CompatibleRuntimes(data.CompatibleRuntimes, context);\n    }\n    if (data.Content !== undefined && data.Content !== null) {\n        contents.Content = deserializeAws_restJson1LayerVersionContentOutput(data.Content, context);\n    }\n    if (data.CreatedDate !== undefined && data.CreatedDate !== null) {\n        contents.CreatedDate = (0, smithy_client_1.expectString)(data.CreatedDate);\n    }\n    if (data.Description !== undefined && data.Description !== null) {\n        contents.Description = (0, smithy_client_1.expectString)(data.Description);\n    }\n    if (data.LayerArn !== undefined && data.LayerArn !== null) {\n        contents.LayerArn = (0, smithy_client_1.expectString)(data.LayerArn);\n    }\n    if (data.LayerVersionArn !== undefined && data.LayerVersionArn !== null) {\n        contents.LayerVersionArn = (0, smithy_client_1.expectString)(data.LayerVersionArn);\n    }\n    if (data.LicenseInfo !== undefined && data.LicenseInfo !== null) {\n        contents.LicenseInfo = (0, smithy_client_1.expectString)(data.LicenseInfo);\n    }\n    if (data.Version !== undefined && data.Version !== null) {\n        contents.Version = (0, smithy_client_1.expectLong)(data.Version);\n    }\n    return Promise.resolve(contents);\n};\nexports.deserializeAws_restJson1GetLayerVersionByArnCommand = deserializeAws_restJson1GetLayerVersionByArnCommand;\nconst deserializeAws_restJson1GetLayerVersionByArnCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidParameterValueException\":\n        case \"com.amazonaws.lambda#InvalidParameterValueException\":\n            response = {\n                ...(await deserializeAws_restJson1InvalidParameterValueExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.lambda#ResourceNotFoundException\":\n            response = {\n                ...(await deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServiceException\":\n        case \"com.amazonaws.lambda#ServiceException\":\n            response = {\n                ...(await deserializeAws_restJson1ServiceExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.lambda#TooManyRequestsException\":\n            response = {\n                ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_restJson1GetLayerVersionPolicyCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1GetLayerVersionPolicyCommandError(output, context);\n    }\n    const contents = {\n        $metadata: deserializeMetadata(output),\n        Policy: undefined,\n        RevisionId: undefined,\n    };\n    const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\n    if (data.Policy !== undefined && data.Policy !== null) {\n        contents.Policy = (0, smithy_client_1.expectString)(data.Policy);\n    }\n    if (data.RevisionId !== undefined && data.RevisionId !== null) {\n        contents.RevisionId = (0, smithy_client_1.expectString)(data.RevisionId);\n    }\n    return Promise.resolve(contents);\n};\nexports.deserializeAws_restJson1GetLayerVersionPolicyCommand = deserializeAws_restJson1GetLayerVersionPolicyCommand;\nconst deserializeAws_restJson1GetLayerVersionPolicyCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidParameterValueException\":\n        case \"com.amazonaws.lambda#InvalidParameterValueException\":\n            response = {\n                ...(await deserializeAws_restJson1InvalidParameterValueExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.lambda#ResourceNotFoundException\":\n            response = {\n                ...(await deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServiceException\":\n        case \"com.amazonaws.lambda#ServiceException\":\n            response = {\n                ...(await deserializeAws_restJson1ServiceExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.lambda#TooManyRequestsException\":\n            response = {\n                ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_restJson1GetPolicyCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1GetPolicyCommandError(output, context);\n    }\n    const contents = {\n        $metadata: deserializeMetadata(output),\n        Policy: undefined,\n        RevisionId: undefined,\n    };\n    const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\n    if (data.Policy !== undefined && data.Policy !== null) {\n        contents.Policy = (0, smithy_client_1.expectString)(data.Policy);\n    }\n    if (data.RevisionId !== undefined && data.RevisionId !== null) {\n        contents.RevisionId = (0, smithy_client_1.expectString)(data.RevisionId);\n    }\n    return Promise.resolve(contents);\n};\nexports.deserializeAws_restJson1GetPolicyCommand = deserializeAws_restJson1GetPolicyCommand;\nconst deserializeAws_restJson1GetPolicyCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidParameterValueException\":\n        case \"com.amazonaws.lambda#InvalidParameterValueException\":\n            response = {\n                ...(await deserializeAws_restJson1InvalidParameterValueExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.lambda#ResourceNotFoundException\":\n            response = {\n                ...(await deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServiceException\":\n        case \"com.amazonaws.lambda#ServiceException\":\n            response = {\n                ...(await deserializeAws_restJson1ServiceExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.lambda#TooManyRequestsException\":\n            response = {\n                ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_restJson1GetProvisionedConcurrencyConfigCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1GetProvisionedConcurrencyConfigCommandError(output, context);\n    }\n    const contents = {\n        $metadata: deserializeMetadata(output),\n        AllocatedProvisionedConcurrentExecutions: undefined,\n        AvailableProvisionedConcurrentExecutions: undefined,\n        LastModified: undefined,\n        RequestedProvisionedConcurrentExecutions: undefined,\n        Status: undefined,\n        StatusReason: undefined,\n    };\n    const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\n    if (data.AllocatedProvisionedConcurrentExecutions !== undefined &&\n        data.AllocatedProvisionedConcurrentExecutions !== null) {\n        contents.AllocatedProvisionedConcurrentExecutions = (0, smithy_client_1.expectInt32)(data.AllocatedProvisionedConcurrentExecutions);\n    }\n    if (data.AvailableProvisionedConcurrentExecutions !== undefined &&\n        data.AvailableProvisionedConcurrentExecutions !== null) {\n        contents.AvailableProvisionedConcurrentExecutions = (0, smithy_client_1.expectInt32)(data.AvailableProvisionedConcurrentExecutions);\n    }\n    if (data.LastModified !== undefined && data.LastModified !== null) {\n        contents.LastModified = (0, smithy_client_1.expectString)(data.LastModified);\n    }\n    if (data.RequestedProvisionedConcurrentExecutions !== undefined &&\n        data.RequestedProvisionedConcurrentExecutions !== null) {\n        contents.RequestedProvisionedConcurrentExecutions = (0, smithy_client_1.expectInt32)(data.RequestedProvisionedConcurrentExecutions);\n    }\n    if (data.Status !== undefined && data.Status !== null) {\n        contents.Status = (0, smithy_client_1.expectString)(data.Status);\n    }\n    if (data.StatusReason !== undefined && data.StatusReason !== null) {\n        contents.StatusReason = (0, smithy_client_1.expectString)(data.StatusReason);\n    }\n    return Promise.resolve(contents);\n};\nexports.deserializeAws_restJson1GetProvisionedConcurrencyConfigCommand = deserializeAws_restJson1GetProvisionedConcurrencyConfigCommand;\nconst deserializeAws_restJson1GetProvisionedConcurrencyConfigCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidParameterValueException\":\n        case \"com.amazonaws.lambda#InvalidParameterValueException\":\n            response = {\n                ...(await deserializeAws_restJson1InvalidParameterValueExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ProvisionedConcurrencyConfigNotFoundException\":\n        case \"com.amazonaws.lambda#ProvisionedConcurrencyConfigNotFoundException\":\n            response = {\n                ...(await deserializeAws_restJson1ProvisionedConcurrencyConfigNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.lambda#ResourceNotFoundException\":\n            response = {\n                ...(await deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServiceException\":\n        case \"com.amazonaws.lambda#ServiceException\":\n            response = {\n                ...(await deserializeAws_restJson1ServiceExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.lambda#TooManyRequestsException\":\n            response = {\n                ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_restJson1InvokeCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1InvokeCommandError(output, context);\n    }\n    const contents = {\n        $metadata: deserializeMetadata(output),\n        ExecutedVersion: undefined,\n        FunctionError: undefined,\n        LogResult: undefined,\n        Payload: undefined,\n        StatusCode: undefined,\n    };\n    if (output.headers[\"x-amz-function-error\"] !== undefined) {\n        contents.FunctionError = output.headers[\"x-amz-function-error\"];\n    }\n    if (output.headers[\"x-amz-log-result\"] !== undefined) {\n        contents.LogResult = output.headers[\"x-amz-log-result\"];\n    }\n    if (output.headers[\"x-amz-executed-version\"] !== undefined) {\n        contents.ExecutedVersion = output.headers[\"x-amz-executed-version\"];\n    }\n    const data = await collectBody(output.body, context);\n    contents.Payload = data;\n    if (contents.StatusCode === undefined) {\n        contents.StatusCode = output.statusCode;\n    }\n    return Promise.resolve(contents);\n};\nexports.deserializeAws_restJson1InvokeCommand = deserializeAws_restJson1InvokeCommand;\nconst deserializeAws_restJson1InvokeCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"EC2AccessDeniedException\":\n        case \"com.amazonaws.lambda#EC2AccessDeniedException\":\n            response = {\n                ...(await deserializeAws_restJson1EC2AccessDeniedExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"EC2ThrottledException\":\n        case \"com.amazonaws.lambda#EC2ThrottledException\":\n            response = {\n                ...(await deserializeAws_restJson1EC2ThrottledExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"EC2UnexpectedException\":\n        case \"com.amazonaws.lambda#EC2UnexpectedException\":\n            response = {\n                ...(await deserializeAws_restJson1EC2UnexpectedExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"EFSIOException\":\n        case \"com.amazonaws.lambda#EFSIOException\":\n            response = {\n                ...(await deserializeAws_restJson1EFSIOExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"EFSMountConnectivityException\":\n        case \"com.amazonaws.lambda#EFSMountConnectivityException\":\n            response = {\n                ...(await deserializeAws_restJson1EFSMountConnectivityExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"EFSMountFailureException\":\n        case \"com.amazonaws.lambda#EFSMountFailureException\":\n            response = {\n                ...(await deserializeAws_restJson1EFSMountFailureExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"EFSMountTimeoutException\":\n        case \"com.amazonaws.lambda#EFSMountTimeoutException\":\n            response = {\n                ...(await deserializeAws_restJson1EFSMountTimeoutExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ENILimitReachedException\":\n        case \"com.amazonaws.lambda#ENILimitReachedException\":\n            response = {\n                ...(await deserializeAws_restJson1ENILimitReachedExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterValueException\":\n        case \"com.amazonaws.lambda#InvalidParameterValueException\":\n            response = {\n                ...(await deserializeAws_restJson1InvalidParameterValueExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidRequestContentException\":\n        case \"com.amazonaws.lambda#InvalidRequestContentException\":\n            response = {\n                ...(await deserializeAws_restJson1InvalidRequestContentExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidRuntimeException\":\n        case \"com.amazonaws.lambda#InvalidRuntimeException\":\n            response = {\n                ...(await deserializeAws_restJson1InvalidRuntimeExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidSecurityGroupIDException\":\n        case \"com.amazonaws.lambda#InvalidSecurityGroupIDException\":\n            response = {\n                ...(await deserializeAws_restJson1InvalidSecurityGroupIDExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidSubnetIDException\":\n        case \"com.amazonaws.lambda#InvalidSubnetIDException\":\n            response = {\n                ...(await deserializeAws_restJson1InvalidSubnetIDExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidZipFileException\":\n        case \"com.amazonaws.lambda#InvalidZipFileException\":\n            response = {\n                ...(await deserializeAws_restJson1InvalidZipFileExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"KMSAccessDeniedException\":\n        case \"com.amazonaws.lambda#KMSAccessDeniedException\":\n            response = {\n                ...(await deserializeAws_restJson1KMSAccessDeniedExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"KMSDisabledException\":\n        case \"com.amazonaws.lambda#KMSDisabledException\":\n            response = {\n                ...(await deserializeAws_restJson1KMSDisabledExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"KMSInvalidStateException\":\n        case \"com.amazonaws.lambda#KMSInvalidStateException\":\n            response = {\n                ...(await deserializeAws_restJson1KMSInvalidStateExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"KMSNotFoundException\":\n        case \"com.amazonaws.lambda#KMSNotFoundException\":\n            response = {\n                ...(await deserializeAws_restJson1KMSNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"RequestTooLargeException\":\n        case \"com.amazonaws.lambda#RequestTooLargeException\":\n            response = {\n                ...(await deserializeAws_restJson1RequestTooLargeExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceConflictException\":\n        case \"com.amazonaws.lambda#ResourceConflictException\":\n            response = {\n                ...(await deserializeAws_restJson1ResourceConflictExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.lambda#ResourceNotFoundException\":\n            response = {\n                ...(await deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceNotReadyException\":\n        case \"com.amazonaws.lambda#ResourceNotReadyException\":\n            response = {\n                ...(await deserializeAws_restJson1ResourceNotReadyExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServiceException\":\n        case \"com.amazonaws.lambda#ServiceException\":\n            response = {\n                ...(await deserializeAws_restJson1ServiceExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"SubnetIPAddressLimitReachedException\":\n        case \"com.amazonaws.lambda#SubnetIPAddressLimitReachedException\":\n            response = {\n                ...(await deserializeAws_restJson1SubnetIPAddressLimitReachedExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.lambda#TooManyRequestsException\":\n            response = {\n                ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"UnsupportedMediaTypeException\":\n        case \"com.amazonaws.lambda#UnsupportedMediaTypeException\":\n            response = {\n                ...(await deserializeAws_restJson1UnsupportedMediaTypeExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_restJson1InvokeAsyncCommand = async (output, context) => {\n    if (output.statusCode !== 202 && output.statusCode >= 300) {\n        return deserializeAws_restJson1InvokeAsyncCommandError(output, context);\n    }\n    const contents = {\n        $metadata: deserializeMetadata(output),\n        Status: undefined,\n    };\n    if (contents.Status === undefined) {\n        contents.Status = output.statusCode;\n    }\n    await collectBody(output.body, context);\n    return Promise.resolve(contents);\n};\nexports.deserializeAws_restJson1InvokeAsyncCommand = deserializeAws_restJson1InvokeAsyncCommand;\nconst deserializeAws_restJson1InvokeAsyncCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidRequestContentException\":\n        case \"com.amazonaws.lambda#InvalidRequestContentException\":\n            response = {\n                ...(await deserializeAws_restJson1InvalidRequestContentExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidRuntimeException\":\n        case \"com.amazonaws.lambda#InvalidRuntimeException\":\n            response = {\n                ...(await deserializeAws_restJson1InvalidRuntimeExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceConflictException\":\n        case \"com.amazonaws.lambda#ResourceConflictException\":\n            response = {\n                ...(await deserializeAws_restJson1ResourceConflictExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.lambda#ResourceNotFoundException\":\n            response = {\n                ...(await deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServiceException\":\n        case \"com.amazonaws.lambda#ServiceException\":\n            response = {\n                ...(await deserializeAws_restJson1ServiceExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_restJson1ListAliasesCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1ListAliasesCommandError(output, context);\n    }\n    const contents = {\n        $metadata: deserializeMetadata(output),\n        Aliases: undefined,\n        NextMarker: undefined,\n    };\n    const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\n    if (data.Aliases !== undefined && data.Aliases !== null) {\n        contents.Aliases = deserializeAws_restJson1AliasList(data.Aliases, context);\n    }\n    if (data.NextMarker !== undefined && data.NextMarker !== null) {\n        contents.NextMarker = (0, smithy_client_1.expectString)(data.NextMarker);\n    }\n    return Promise.resolve(contents);\n};\nexports.deserializeAws_restJson1ListAliasesCommand = deserializeAws_restJson1ListAliasesCommand;\nconst deserializeAws_restJson1ListAliasesCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidParameterValueException\":\n        case \"com.amazonaws.lambda#InvalidParameterValueException\":\n            response = {\n                ...(await deserializeAws_restJson1InvalidParameterValueExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.lambda#ResourceNotFoundException\":\n            response = {\n                ...(await deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServiceException\":\n        case \"com.amazonaws.lambda#ServiceException\":\n            response = {\n                ...(await deserializeAws_restJson1ServiceExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.lambda#TooManyRequestsException\":\n            response = {\n                ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_restJson1ListCodeSigningConfigsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1ListCodeSigningConfigsCommandError(output, context);\n    }\n    const contents = {\n        $metadata: deserializeMetadata(output),\n        CodeSigningConfigs: undefined,\n        NextMarker: undefined,\n    };\n    const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\n    if (data.CodeSigningConfigs !== undefined && data.CodeSigningConfigs !== null) {\n        contents.CodeSigningConfigs = deserializeAws_restJson1CodeSigningConfigList(data.CodeSigningConfigs, context);\n    }\n    if (data.NextMarker !== undefined && data.NextMarker !== null) {\n        contents.NextMarker = (0, smithy_client_1.expectString)(data.NextMarker);\n    }\n    return Promise.resolve(contents);\n};\nexports.deserializeAws_restJson1ListCodeSigningConfigsCommand = deserializeAws_restJson1ListCodeSigningConfigsCommand;\nconst deserializeAws_restJson1ListCodeSigningConfigsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidParameterValueException\":\n        case \"com.amazonaws.lambda#InvalidParameterValueException\":\n            response = {\n                ...(await deserializeAws_restJson1InvalidParameterValueExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServiceException\":\n        case \"com.amazonaws.lambda#ServiceException\":\n            response = {\n                ...(await deserializeAws_restJson1ServiceExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_restJson1ListEventSourceMappingsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1ListEventSourceMappingsCommandError(output, context);\n    }\n    const contents = {\n        $metadata: deserializeMetadata(output),\n        EventSourceMappings: undefined,\n        NextMarker: undefined,\n    };\n    const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\n    if (data.EventSourceMappings !== undefined && data.EventSourceMappings !== null) {\n        contents.EventSourceMappings = deserializeAws_restJson1EventSourceMappingsList(data.EventSourceMappings, context);\n    }\n    if (data.NextMarker !== undefined && data.NextMarker !== null) {\n        contents.NextMarker = (0, smithy_client_1.expectString)(data.NextMarker);\n    }\n    return Promise.resolve(contents);\n};\nexports.deserializeAws_restJson1ListEventSourceMappingsCommand = deserializeAws_restJson1ListEventSourceMappingsCommand;\nconst deserializeAws_restJson1ListEventSourceMappingsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidParameterValueException\":\n        case \"com.amazonaws.lambda#InvalidParameterValueException\":\n            response = {\n                ...(await deserializeAws_restJson1InvalidParameterValueExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.lambda#ResourceNotFoundException\":\n            response = {\n                ...(await deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServiceException\":\n        case \"com.amazonaws.lambda#ServiceException\":\n            response = {\n                ...(await deserializeAws_restJson1ServiceExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.lambda#TooManyRequestsException\":\n            response = {\n                ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_restJson1ListFunctionEventInvokeConfigsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1ListFunctionEventInvokeConfigsCommandError(output, context);\n    }\n    const contents = {\n        $metadata: deserializeMetadata(output),\n        FunctionEventInvokeConfigs: undefined,\n        NextMarker: undefined,\n    };\n    const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\n    if (data.FunctionEventInvokeConfigs !== undefined && data.FunctionEventInvokeConfigs !== null) {\n        contents.FunctionEventInvokeConfigs = deserializeAws_restJson1FunctionEventInvokeConfigList(data.FunctionEventInvokeConfigs, context);\n    }\n    if (data.NextMarker !== undefined && data.NextMarker !== null) {\n        contents.NextMarker = (0, smithy_client_1.expectString)(data.NextMarker);\n    }\n    return Promise.resolve(contents);\n};\nexports.deserializeAws_restJson1ListFunctionEventInvokeConfigsCommand = deserializeAws_restJson1ListFunctionEventInvokeConfigsCommand;\nconst deserializeAws_restJson1ListFunctionEventInvokeConfigsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidParameterValueException\":\n        case \"com.amazonaws.lambda#InvalidParameterValueException\":\n            response = {\n                ...(await deserializeAws_restJson1InvalidParameterValueExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.lambda#ResourceNotFoundException\":\n            response = {\n                ...(await deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServiceException\":\n        case \"com.amazonaws.lambda#ServiceException\":\n            response = {\n                ...(await deserializeAws_restJson1ServiceExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.lambda#TooManyRequestsException\":\n            response = {\n                ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_restJson1ListFunctionsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1ListFunctionsCommandError(output, context);\n    }\n    const contents = {\n        $metadata: deserializeMetadata(output),\n        Functions: undefined,\n        NextMarker: undefined,\n    };\n    const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\n    if (data.Functions !== undefined && data.Functions !== null) {\n        contents.Functions = deserializeAws_restJson1FunctionList(data.Functions, context);\n    }\n    if (data.NextMarker !== undefined && data.NextMarker !== null) {\n        contents.NextMarker = (0, smithy_client_1.expectString)(data.NextMarker);\n    }\n    return Promise.resolve(contents);\n};\nexports.deserializeAws_restJson1ListFunctionsCommand = deserializeAws_restJson1ListFunctionsCommand;\nconst deserializeAws_restJson1ListFunctionsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidParameterValueException\":\n        case \"com.amazonaws.lambda#InvalidParameterValueException\":\n            response = {\n                ...(await deserializeAws_restJson1InvalidParameterValueExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServiceException\":\n        case \"com.amazonaws.lambda#ServiceException\":\n            response = {\n                ...(await deserializeAws_restJson1ServiceExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.lambda#TooManyRequestsException\":\n            response = {\n                ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_restJson1ListFunctionsByCodeSigningConfigCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1ListFunctionsByCodeSigningConfigCommandError(output, context);\n    }\n    const contents = {\n        $metadata: deserializeMetadata(output),\n        FunctionArns: undefined,\n        NextMarker: undefined,\n    };\n    const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\n    if (data.FunctionArns !== undefined && data.FunctionArns !== null) {\n        contents.FunctionArns = deserializeAws_restJson1FunctionArnList(data.FunctionArns, context);\n    }\n    if (data.NextMarker !== undefined && data.NextMarker !== null) {\n        contents.NextMarker = (0, smithy_client_1.expectString)(data.NextMarker);\n    }\n    return Promise.resolve(contents);\n};\nexports.deserializeAws_restJson1ListFunctionsByCodeSigningConfigCommand = deserializeAws_restJson1ListFunctionsByCodeSigningConfigCommand;\nconst deserializeAws_restJson1ListFunctionsByCodeSigningConfigCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidParameterValueException\":\n        case \"com.amazonaws.lambda#InvalidParameterValueException\":\n            response = {\n                ...(await deserializeAws_restJson1InvalidParameterValueExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.lambda#ResourceNotFoundException\":\n            response = {\n                ...(await deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServiceException\":\n        case \"com.amazonaws.lambda#ServiceException\":\n            response = {\n                ...(await deserializeAws_restJson1ServiceExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_restJson1ListLayersCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1ListLayersCommandError(output, context);\n    }\n    const contents = {\n        $metadata: deserializeMetadata(output),\n        Layers: undefined,\n        NextMarker: undefined,\n    };\n    const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\n    if (data.Layers !== undefined && data.Layers !== null) {\n        contents.Layers = deserializeAws_restJson1LayersList(data.Layers, context);\n    }\n    if (data.NextMarker !== undefined && data.NextMarker !== null) {\n        contents.NextMarker = (0, smithy_client_1.expectString)(data.NextMarker);\n    }\n    return Promise.resolve(contents);\n};\nexports.deserializeAws_restJson1ListLayersCommand = deserializeAws_restJson1ListLayersCommand;\nconst deserializeAws_restJson1ListLayersCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidParameterValueException\":\n        case \"com.amazonaws.lambda#InvalidParameterValueException\":\n            response = {\n                ...(await deserializeAws_restJson1InvalidParameterValueExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServiceException\":\n        case \"com.amazonaws.lambda#ServiceException\":\n            response = {\n                ...(await deserializeAws_restJson1ServiceExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.lambda#TooManyRequestsException\":\n            response = {\n                ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_restJson1ListLayerVersionsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1ListLayerVersionsCommandError(output, context);\n    }\n    const contents = {\n        $metadata: deserializeMetadata(output),\n        LayerVersions: undefined,\n        NextMarker: undefined,\n    };\n    const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\n    if (data.LayerVersions !== undefined && data.LayerVersions !== null) {\n        contents.LayerVersions = deserializeAws_restJson1LayerVersionsList(data.LayerVersions, context);\n    }\n    if (data.NextMarker !== undefined && data.NextMarker !== null) {\n        contents.NextMarker = (0, smithy_client_1.expectString)(data.NextMarker);\n    }\n    return Promise.resolve(contents);\n};\nexports.deserializeAws_restJson1ListLayerVersionsCommand = deserializeAws_restJson1ListLayerVersionsCommand;\nconst deserializeAws_restJson1ListLayerVersionsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidParameterValueException\":\n        case \"com.amazonaws.lambda#InvalidParameterValueException\":\n            response = {\n                ...(await deserializeAws_restJson1InvalidParameterValueExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.lambda#ResourceNotFoundException\":\n            response = {\n                ...(await deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServiceException\":\n        case \"com.amazonaws.lambda#ServiceException\":\n            response = {\n                ...(await deserializeAws_restJson1ServiceExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.lambda#TooManyRequestsException\":\n            response = {\n                ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_restJson1ListProvisionedConcurrencyConfigsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1ListProvisionedConcurrencyConfigsCommandError(output, context);\n    }\n    const contents = {\n        $metadata: deserializeMetadata(output),\n        NextMarker: undefined,\n        ProvisionedConcurrencyConfigs: undefined,\n    };\n    const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\n    if (data.NextMarker !== undefined && data.NextMarker !== null) {\n        contents.NextMarker = (0, smithy_client_1.expectString)(data.NextMarker);\n    }\n    if (data.ProvisionedConcurrencyConfigs !== undefined && data.ProvisionedConcurrencyConfigs !== null) {\n        contents.ProvisionedConcurrencyConfigs = deserializeAws_restJson1ProvisionedConcurrencyConfigList(data.ProvisionedConcurrencyConfigs, context);\n    }\n    return Promise.resolve(contents);\n};\nexports.deserializeAws_restJson1ListProvisionedConcurrencyConfigsCommand = deserializeAws_restJson1ListProvisionedConcurrencyConfigsCommand;\nconst deserializeAws_restJson1ListProvisionedConcurrencyConfigsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidParameterValueException\":\n        case \"com.amazonaws.lambda#InvalidParameterValueException\":\n            response = {\n                ...(await deserializeAws_restJson1InvalidParameterValueExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.lambda#ResourceNotFoundException\":\n            response = {\n                ...(await deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServiceException\":\n        case \"com.amazonaws.lambda#ServiceException\":\n            response = {\n                ...(await deserializeAws_restJson1ServiceExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.lambda#TooManyRequestsException\":\n            response = {\n                ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_restJson1ListTagsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1ListTagsCommandError(output, context);\n    }\n    const contents = {\n        $metadata: deserializeMetadata(output),\n        Tags: undefined,\n    };\n    const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\n    if (data.Tags !== undefined && data.Tags !== null) {\n        contents.Tags = deserializeAws_restJson1Tags(data.Tags, context);\n    }\n    return Promise.resolve(contents);\n};\nexports.deserializeAws_restJson1ListTagsCommand = deserializeAws_restJson1ListTagsCommand;\nconst deserializeAws_restJson1ListTagsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidParameterValueException\":\n        case \"com.amazonaws.lambda#InvalidParameterValueException\":\n            response = {\n                ...(await deserializeAws_restJson1InvalidParameterValueExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.lambda#ResourceNotFoundException\":\n            response = {\n                ...(await deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServiceException\":\n        case \"com.amazonaws.lambda#ServiceException\":\n            response = {\n                ...(await deserializeAws_restJson1ServiceExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.lambda#TooManyRequestsException\":\n            response = {\n                ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_restJson1ListVersionsByFunctionCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1ListVersionsByFunctionCommandError(output, context);\n    }\n    const contents = {\n        $metadata: deserializeMetadata(output),\n        NextMarker: undefined,\n        Versions: undefined,\n    };\n    const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\n    if (data.NextMarker !== undefined && data.NextMarker !== null) {\n        contents.NextMarker = (0, smithy_client_1.expectString)(data.NextMarker);\n    }\n    if (data.Versions !== undefined && data.Versions !== null) {\n        contents.Versions = deserializeAws_restJson1FunctionList(data.Versions, context);\n    }\n    return Promise.resolve(contents);\n};\nexports.deserializeAws_restJson1ListVersionsByFunctionCommand = deserializeAws_restJson1ListVersionsByFunctionCommand;\nconst deserializeAws_restJson1ListVersionsByFunctionCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidParameterValueException\":\n        case \"com.amazonaws.lambda#InvalidParameterValueException\":\n            response = {\n                ...(await deserializeAws_restJson1InvalidParameterValueExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.lambda#ResourceNotFoundException\":\n            response = {\n                ...(await deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServiceException\":\n        case \"com.amazonaws.lambda#ServiceException\":\n            response = {\n                ...(await deserializeAws_restJson1ServiceExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.lambda#TooManyRequestsException\":\n            response = {\n                ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_restJson1PublishLayerVersionCommand = async (output, context) => {\n    if (output.statusCode !== 201 && output.statusCode >= 300) {\n        return deserializeAws_restJson1PublishLayerVersionCommandError(output, context);\n    }\n    const contents = {\n        $metadata: deserializeMetadata(output),\n        CompatibleRuntimes: undefined,\n        Content: undefined,\n        CreatedDate: undefined,\n        Description: undefined,\n        LayerArn: undefined,\n        LayerVersionArn: undefined,\n        LicenseInfo: undefined,\n        Version: undefined,\n    };\n    const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\n    if (data.CompatibleRuntimes !== undefined && data.CompatibleRuntimes !== null) {\n        contents.CompatibleRuntimes = deserializeAws_restJson1CompatibleRuntimes(data.CompatibleRuntimes, context);\n    }\n    if (data.Content !== undefined && data.Content !== null) {\n        contents.Content = deserializeAws_restJson1LayerVersionContentOutput(data.Content, context);\n    }\n    if (data.CreatedDate !== undefined && data.CreatedDate !== null) {\n        contents.CreatedDate = (0, smithy_client_1.expectString)(data.CreatedDate);\n    }\n    if (data.Description !== undefined && data.Description !== null) {\n        contents.Description = (0, smithy_client_1.expectString)(data.Description);\n    }\n    if (data.LayerArn !== undefined && data.LayerArn !== null) {\n        contents.LayerArn = (0, smithy_client_1.expectString)(data.LayerArn);\n    }\n    if (data.LayerVersionArn !== undefined && data.LayerVersionArn !== null) {\n        contents.LayerVersionArn = (0, smithy_client_1.expectString)(data.LayerVersionArn);\n    }\n    if (data.LicenseInfo !== undefined && data.LicenseInfo !== null) {\n        contents.LicenseInfo = (0, smithy_client_1.expectString)(data.LicenseInfo);\n    }\n    if (data.Version !== undefined && data.Version !== null) {\n        contents.Version = (0, smithy_client_1.expectLong)(data.Version);\n    }\n    return Promise.resolve(contents);\n};\nexports.deserializeAws_restJson1PublishLayerVersionCommand = deserializeAws_restJson1PublishLayerVersionCommand;\nconst deserializeAws_restJson1PublishLayerVersionCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"CodeStorageExceededException\":\n        case \"com.amazonaws.lambda#CodeStorageExceededException\":\n            response = {\n                ...(await deserializeAws_restJson1CodeStorageExceededExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterValueException\":\n        case \"com.amazonaws.lambda#InvalidParameterValueException\":\n            response = {\n                ...(await deserializeAws_restJson1InvalidParameterValueExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.lambda#ResourceNotFoundException\":\n            response = {\n                ...(await deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServiceException\":\n        case \"com.amazonaws.lambda#ServiceException\":\n            response = {\n                ...(await deserializeAws_restJson1ServiceExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.lambda#TooManyRequestsException\":\n            response = {\n                ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_restJson1PublishVersionCommand = async (output, context) => {\n    if (output.statusCode !== 201 && output.statusCode >= 300) {\n        return deserializeAws_restJson1PublishVersionCommandError(output, context);\n    }\n    const contents = {\n        $metadata: deserializeMetadata(output),\n        CodeSha256: undefined,\n        CodeSize: undefined,\n        DeadLetterConfig: undefined,\n        Description: undefined,\n        Environment: undefined,\n        FileSystemConfigs: undefined,\n        FunctionArn: undefined,\n        FunctionName: undefined,\n        Handler: undefined,\n        ImageConfigResponse: undefined,\n        KMSKeyArn: undefined,\n        LastModified: undefined,\n        LastUpdateStatus: undefined,\n        LastUpdateStatusReason: undefined,\n        LastUpdateStatusReasonCode: undefined,\n        Layers: undefined,\n        MasterArn: undefined,\n        MemorySize: undefined,\n        PackageType: undefined,\n        RevisionId: undefined,\n        Role: undefined,\n        Runtime: undefined,\n        SigningJobArn: undefined,\n        SigningProfileVersionArn: undefined,\n        State: undefined,\n        StateReason: undefined,\n        StateReasonCode: undefined,\n        Timeout: undefined,\n        TracingConfig: undefined,\n        Version: undefined,\n        VpcConfig: undefined,\n    };\n    const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\n    if (data.CodeSha256 !== undefined && data.CodeSha256 !== null) {\n        contents.CodeSha256 = (0, smithy_client_1.expectString)(data.CodeSha256);\n    }\n    if (data.CodeSize !== undefined && data.CodeSize !== null) {\n        contents.CodeSize = (0, smithy_client_1.expectLong)(data.CodeSize);\n    }\n    if (data.DeadLetterConfig !== undefined && data.DeadLetterConfig !== null) {\n        contents.DeadLetterConfig = deserializeAws_restJson1DeadLetterConfig(data.DeadLetterConfig, context);\n    }\n    if (data.Description !== undefined && data.Description !== null) {\n        contents.Description = (0, smithy_client_1.expectString)(data.Description);\n    }\n    if (data.Environment !== undefined && data.Environment !== null) {\n        contents.Environment = deserializeAws_restJson1EnvironmentResponse(data.Environment, context);\n    }\n    if (data.FileSystemConfigs !== undefined && data.FileSystemConfigs !== null) {\n        contents.FileSystemConfigs = deserializeAws_restJson1FileSystemConfigList(data.FileSystemConfigs, context);\n    }\n    if (data.FunctionArn !== undefined && data.FunctionArn !== null) {\n        contents.FunctionArn = (0, smithy_client_1.expectString)(data.FunctionArn);\n    }\n    if (data.FunctionName !== undefined && data.FunctionName !== null) {\n        contents.FunctionName = (0, smithy_client_1.expectString)(data.FunctionName);\n    }\n    if (data.Handler !== undefined && data.Handler !== null) {\n        contents.Handler = (0, smithy_client_1.expectString)(data.Handler);\n    }\n    if (data.ImageConfigResponse !== undefined && data.ImageConfigResponse !== null) {\n        contents.ImageConfigResponse = deserializeAws_restJson1ImageConfigResponse(data.ImageConfigResponse, context);\n    }\n    if (data.KMSKeyArn !== undefined && data.KMSKeyArn !== null) {\n        contents.KMSKeyArn = (0, smithy_client_1.expectString)(data.KMSKeyArn);\n    }\n    if (data.LastModified !== undefined && data.LastModified !== null) {\n        contents.LastModified = (0, smithy_client_1.expectString)(data.LastModified);\n    }\n    if (data.LastUpdateStatus !== undefined && data.LastUpdateStatus !== null) {\n        contents.LastUpdateStatus = (0, smithy_client_1.expectString)(data.LastUpdateStatus);\n    }\n    if (data.LastUpdateStatusReason !== undefined && data.LastUpdateStatusReason !== null) {\n        contents.LastUpdateStatusReason = (0, smithy_client_1.expectString)(data.LastUpdateStatusReason);\n    }\n    if (data.LastUpdateStatusReasonCode !== undefined && data.LastUpdateStatusReasonCode !== null) {\n        contents.LastUpdateStatusReasonCode = (0, smithy_client_1.expectString)(data.LastUpdateStatusReasonCode);\n    }\n    if (data.Layers !== undefined && data.Layers !== null) {\n        contents.Layers = deserializeAws_restJson1LayersReferenceList(data.Layers, context);\n    }\n    if (data.MasterArn !== undefined && data.MasterArn !== null) {\n        contents.MasterArn = (0, smithy_client_1.expectString)(data.MasterArn);\n    }\n    if (data.MemorySize !== undefined && data.MemorySize !== null) {\n        contents.MemorySize = (0, smithy_client_1.expectInt32)(data.MemorySize);\n    }\n    if (data.PackageType !== undefined && data.PackageType !== null) {\n        contents.PackageType = (0, smithy_client_1.expectString)(data.PackageType);\n    }\n    if (data.RevisionId !== undefined && data.RevisionId !== null) {\n        contents.RevisionId = (0, smithy_client_1.expectString)(data.RevisionId);\n    }\n    if (data.Role !== undefined && data.Role !== null) {\n        contents.Role = (0, smithy_client_1.expectString)(data.Role);\n    }\n    if (data.Runtime !== undefined && data.Runtime !== null) {\n        contents.Runtime = (0, smithy_client_1.expectString)(data.Runtime);\n    }\n    if (data.SigningJobArn !== undefined && data.SigningJobArn !== null) {\n        contents.SigningJobArn = (0, smithy_client_1.expectString)(data.SigningJobArn);\n    }\n    if (data.SigningProfileVersionArn !== undefined && data.SigningProfileVersionArn !== null) {\n        contents.SigningProfileVersionArn = (0, smithy_client_1.expectString)(data.SigningProfileVersionArn);\n    }\n    if (data.State !== undefined && data.State !== null) {\n        contents.State = (0, smithy_client_1.expectString)(data.State);\n    }\n    if (data.StateReason !== undefined && data.StateReason !== null) {\n        contents.StateReason = (0, smithy_client_1.expectString)(data.StateReason);\n    }\n    if (data.StateReasonCode !== undefined && data.StateReasonCode !== null) {\n        contents.StateReasonCode = (0, smithy_client_1.expectString)(data.StateReasonCode);\n    }\n    if (data.Timeout !== undefined && data.Timeout !== null) {\n        contents.Timeout = (0, smithy_client_1.expectInt32)(data.Timeout);\n    }\n    if (data.TracingConfig !== undefined && data.TracingConfig !== null) {\n        contents.TracingConfig = deserializeAws_restJson1TracingConfigResponse(data.TracingConfig, context);\n    }\n    if (data.Version !== undefined && data.Version !== null) {\n        contents.Version = (0, smithy_client_1.expectString)(data.Version);\n    }\n    if (data.VpcConfig !== undefined && data.VpcConfig !== null) {\n        contents.VpcConfig = deserializeAws_restJson1VpcConfigResponse(data.VpcConfig, context);\n    }\n    return Promise.resolve(contents);\n};\nexports.deserializeAws_restJson1PublishVersionCommand = deserializeAws_restJson1PublishVersionCommand;\nconst deserializeAws_restJson1PublishVersionCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"CodeStorageExceededException\":\n        case \"com.amazonaws.lambda#CodeStorageExceededException\":\n            response = {\n                ...(await deserializeAws_restJson1CodeStorageExceededExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterValueException\":\n        case \"com.amazonaws.lambda#InvalidParameterValueException\":\n            response = {\n                ...(await deserializeAws_restJson1InvalidParameterValueExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"PreconditionFailedException\":\n        case \"com.amazonaws.lambda#PreconditionFailedException\":\n            response = {\n                ...(await deserializeAws_restJson1PreconditionFailedExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceConflictException\":\n        case \"com.amazonaws.lambda#ResourceConflictException\":\n            response = {\n                ...(await deserializeAws_restJson1ResourceConflictExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.lambda#ResourceNotFoundException\":\n            response = {\n                ...(await deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServiceException\":\n        case \"com.amazonaws.lambda#ServiceException\":\n            response = {\n                ...(await deserializeAws_restJson1ServiceExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.lambda#TooManyRequestsException\":\n            response = {\n                ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_restJson1PutFunctionCodeSigningConfigCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1PutFunctionCodeSigningConfigCommandError(output, context);\n    }\n    const contents = {\n        $metadata: deserializeMetadata(output),\n        CodeSigningConfigArn: undefined,\n        FunctionName: undefined,\n    };\n    const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\n    if (data.CodeSigningConfigArn !== undefined && data.CodeSigningConfigArn !== null) {\n        contents.CodeSigningConfigArn = (0, smithy_client_1.expectString)(data.CodeSigningConfigArn);\n    }\n    if (data.FunctionName !== undefined && data.FunctionName !== null) {\n        contents.FunctionName = (0, smithy_client_1.expectString)(data.FunctionName);\n    }\n    return Promise.resolve(contents);\n};\nexports.deserializeAws_restJson1PutFunctionCodeSigningConfigCommand = deserializeAws_restJson1PutFunctionCodeSigningConfigCommand;\nconst deserializeAws_restJson1PutFunctionCodeSigningConfigCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"CodeSigningConfigNotFoundException\":\n        case \"com.amazonaws.lambda#CodeSigningConfigNotFoundException\":\n            response = {\n                ...(await deserializeAws_restJson1CodeSigningConfigNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterValueException\":\n        case \"com.amazonaws.lambda#InvalidParameterValueException\":\n            response = {\n                ...(await deserializeAws_restJson1InvalidParameterValueExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceConflictException\":\n        case \"com.amazonaws.lambda#ResourceConflictException\":\n            response = {\n                ...(await deserializeAws_restJson1ResourceConflictExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.lambda#ResourceNotFoundException\":\n            response = {\n                ...(await deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServiceException\":\n        case \"com.amazonaws.lambda#ServiceException\":\n            response = {\n                ...(await deserializeAws_restJson1ServiceExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.lambda#TooManyRequestsException\":\n            response = {\n                ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_restJson1PutFunctionConcurrencyCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1PutFunctionConcurrencyCommandError(output, context);\n    }\n    const contents = {\n        $metadata: deserializeMetadata(output),\n        ReservedConcurrentExecutions: undefined,\n    };\n    const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\n    if (data.ReservedConcurrentExecutions !== undefined && data.ReservedConcurrentExecutions !== null) {\n        contents.ReservedConcurrentExecutions = (0, smithy_client_1.expectInt32)(data.ReservedConcurrentExecutions);\n    }\n    return Promise.resolve(contents);\n};\nexports.deserializeAws_restJson1PutFunctionConcurrencyCommand = deserializeAws_restJson1PutFunctionConcurrencyCommand;\nconst deserializeAws_restJson1PutFunctionConcurrencyCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidParameterValueException\":\n        case \"com.amazonaws.lambda#InvalidParameterValueException\":\n            response = {\n                ...(await deserializeAws_restJson1InvalidParameterValueExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceConflictException\":\n        case \"com.amazonaws.lambda#ResourceConflictException\":\n            response = {\n                ...(await deserializeAws_restJson1ResourceConflictExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.lambda#ResourceNotFoundException\":\n            response = {\n                ...(await deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServiceException\":\n        case \"com.amazonaws.lambda#ServiceException\":\n            response = {\n                ...(await deserializeAws_restJson1ServiceExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.lambda#TooManyRequestsException\":\n            response = {\n                ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_restJson1PutFunctionEventInvokeConfigCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1PutFunctionEventInvokeConfigCommandError(output, context);\n    }\n    const contents = {\n        $metadata: deserializeMetadata(output),\n        DestinationConfig: undefined,\n        FunctionArn: undefined,\n        LastModified: undefined,\n        MaximumEventAgeInSeconds: undefined,\n        MaximumRetryAttempts: undefined,\n    };\n    const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\n    if (data.DestinationConfig !== undefined && data.DestinationConfig !== null) {\n        contents.DestinationConfig = deserializeAws_restJson1DestinationConfig(data.DestinationConfig, context);\n    }\n    if (data.FunctionArn !== undefined && data.FunctionArn !== null) {\n        contents.FunctionArn = (0, smithy_client_1.expectString)(data.FunctionArn);\n    }\n    if (data.LastModified !== undefined && data.LastModified !== null) {\n        contents.LastModified = new Date(Math.round(data.LastModified * 1000));\n    }\n    if (data.MaximumEventAgeInSeconds !== undefined && data.MaximumEventAgeInSeconds !== null) {\n        contents.MaximumEventAgeInSeconds = (0, smithy_client_1.expectInt32)(data.MaximumEventAgeInSeconds);\n    }\n    if (data.MaximumRetryAttempts !== undefined && data.MaximumRetryAttempts !== null) {\n        contents.MaximumRetryAttempts = (0, smithy_client_1.expectInt32)(data.MaximumRetryAttempts);\n    }\n    return Promise.resolve(contents);\n};\nexports.deserializeAws_restJson1PutFunctionEventInvokeConfigCommand = deserializeAws_restJson1PutFunctionEventInvokeConfigCommand;\nconst deserializeAws_restJson1PutFunctionEventInvokeConfigCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidParameterValueException\":\n        case \"com.amazonaws.lambda#InvalidParameterValueException\":\n            response = {\n                ...(await deserializeAws_restJson1InvalidParameterValueExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceConflictException\":\n        case \"com.amazonaws.lambda#ResourceConflictException\":\n            response = {\n                ...(await deserializeAws_restJson1ResourceConflictExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.lambda#ResourceNotFoundException\":\n            response = {\n                ...(await deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServiceException\":\n        case \"com.amazonaws.lambda#ServiceException\":\n            response = {\n                ...(await deserializeAws_restJson1ServiceExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.lambda#TooManyRequestsException\":\n            response = {\n                ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_restJson1PutProvisionedConcurrencyConfigCommand = async (output, context) => {\n    if (output.statusCode !== 202 && output.statusCode >= 300) {\n        return deserializeAws_restJson1PutProvisionedConcurrencyConfigCommandError(output, context);\n    }\n    const contents = {\n        $metadata: deserializeMetadata(output),\n        AllocatedProvisionedConcurrentExecutions: undefined,\n        AvailableProvisionedConcurrentExecutions: undefined,\n        LastModified: undefined,\n        RequestedProvisionedConcurrentExecutions: undefined,\n        Status: undefined,\n        StatusReason: undefined,\n    };\n    const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\n    if (data.AllocatedProvisionedConcurrentExecutions !== undefined &&\n        data.AllocatedProvisionedConcurrentExecutions !== null) {\n        contents.AllocatedProvisionedConcurrentExecutions = (0, smithy_client_1.expectInt32)(data.AllocatedProvisionedConcurrentExecutions);\n    }\n    if (data.AvailableProvisionedConcurrentExecutions !== undefined &&\n        data.AvailableProvisionedConcurrentExecutions !== null) {\n        contents.AvailableProvisionedConcurrentExecutions = (0, smithy_client_1.expectInt32)(data.AvailableProvisionedConcurrentExecutions);\n    }\n    if (data.LastModified !== undefined && data.LastModified !== null) {\n        contents.LastModified = (0, smithy_client_1.expectString)(data.LastModified);\n    }\n    if (data.RequestedProvisionedConcurrentExecutions !== undefined &&\n        data.RequestedProvisionedConcurrentExecutions !== null) {\n        contents.RequestedProvisionedConcurrentExecutions = (0, smithy_client_1.expectInt32)(data.RequestedProvisionedConcurrentExecutions);\n    }\n    if (data.Status !== undefined && data.Status !== null) {\n        contents.Status = (0, smithy_client_1.expectString)(data.Status);\n    }\n    if (data.StatusReason !== undefined && data.StatusReason !== null) {\n        contents.StatusReason = (0, smithy_client_1.expectString)(data.StatusReason);\n    }\n    return Promise.resolve(contents);\n};\nexports.deserializeAws_restJson1PutProvisionedConcurrencyConfigCommand = deserializeAws_restJson1PutProvisionedConcurrencyConfigCommand;\nconst deserializeAws_restJson1PutProvisionedConcurrencyConfigCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidParameterValueException\":\n        case \"com.amazonaws.lambda#InvalidParameterValueException\":\n            response = {\n                ...(await deserializeAws_restJson1InvalidParameterValueExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceConflictException\":\n        case \"com.amazonaws.lambda#ResourceConflictException\":\n            response = {\n                ...(await deserializeAws_restJson1ResourceConflictExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.lambda#ResourceNotFoundException\":\n            response = {\n                ...(await deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServiceException\":\n        case \"com.amazonaws.lambda#ServiceException\":\n            response = {\n                ...(await deserializeAws_restJson1ServiceExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.lambda#TooManyRequestsException\":\n            response = {\n                ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_restJson1RemoveLayerVersionPermissionCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return deserializeAws_restJson1RemoveLayerVersionPermissionCommandError(output, context);\n    }\n    const contents = {\n        $metadata: deserializeMetadata(output),\n    };\n    await collectBody(output.body, context);\n    return Promise.resolve(contents);\n};\nexports.deserializeAws_restJson1RemoveLayerVersionPermissionCommand = deserializeAws_restJson1RemoveLayerVersionPermissionCommand;\nconst deserializeAws_restJson1RemoveLayerVersionPermissionCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidParameterValueException\":\n        case \"com.amazonaws.lambda#InvalidParameterValueException\":\n            response = {\n                ...(await deserializeAws_restJson1InvalidParameterValueExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"PreconditionFailedException\":\n        case \"com.amazonaws.lambda#PreconditionFailedException\":\n            response = {\n                ...(await deserializeAws_restJson1PreconditionFailedExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.lambda#ResourceNotFoundException\":\n            response = {\n                ...(await deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServiceException\":\n        case \"com.amazonaws.lambda#ServiceException\":\n            response = {\n                ...(await deserializeAws_restJson1ServiceExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.lambda#TooManyRequestsException\":\n            response = {\n                ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_restJson1RemovePermissionCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return deserializeAws_restJson1RemovePermissionCommandError(output, context);\n    }\n    const contents = {\n        $metadata: deserializeMetadata(output),\n    };\n    await collectBody(output.body, context);\n    return Promise.resolve(contents);\n};\nexports.deserializeAws_restJson1RemovePermissionCommand = deserializeAws_restJson1RemovePermissionCommand;\nconst deserializeAws_restJson1RemovePermissionCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidParameterValueException\":\n        case \"com.amazonaws.lambda#InvalidParameterValueException\":\n            response = {\n                ...(await deserializeAws_restJson1InvalidParameterValueExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"PreconditionFailedException\":\n        case \"com.amazonaws.lambda#PreconditionFailedException\":\n            response = {\n                ...(await deserializeAws_restJson1PreconditionFailedExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.lambda#ResourceNotFoundException\":\n            response = {\n                ...(await deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServiceException\":\n        case \"com.amazonaws.lambda#ServiceException\":\n            response = {\n                ...(await deserializeAws_restJson1ServiceExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.lambda#TooManyRequestsException\":\n            response = {\n                ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_restJson1TagResourceCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return deserializeAws_restJson1TagResourceCommandError(output, context);\n    }\n    const contents = {\n        $metadata: deserializeMetadata(output),\n    };\n    await collectBody(output.body, context);\n    return Promise.resolve(contents);\n};\nexports.deserializeAws_restJson1TagResourceCommand = deserializeAws_restJson1TagResourceCommand;\nconst deserializeAws_restJson1TagResourceCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidParameterValueException\":\n        case \"com.amazonaws.lambda#InvalidParameterValueException\":\n            response = {\n                ...(await deserializeAws_restJson1InvalidParameterValueExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceConflictException\":\n        case \"com.amazonaws.lambda#ResourceConflictException\":\n            response = {\n                ...(await deserializeAws_restJson1ResourceConflictExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.lambda#ResourceNotFoundException\":\n            response = {\n                ...(await deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServiceException\":\n        case \"com.amazonaws.lambda#ServiceException\":\n            response = {\n                ...(await deserializeAws_restJson1ServiceExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.lambda#TooManyRequestsException\":\n            response = {\n                ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_restJson1UntagResourceCommand = async (output, context) => {\n    if (output.statusCode !== 204 && output.statusCode >= 300) {\n        return deserializeAws_restJson1UntagResourceCommandError(output, context);\n    }\n    const contents = {\n        $metadata: deserializeMetadata(output),\n    };\n    await collectBody(output.body, context);\n    return Promise.resolve(contents);\n};\nexports.deserializeAws_restJson1UntagResourceCommand = deserializeAws_restJson1UntagResourceCommand;\nconst deserializeAws_restJson1UntagResourceCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidParameterValueException\":\n        case \"com.amazonaws.lambda#InvalidParameterValueException\":\n            response = {\n                ...(await deserializeAws_restJson1InvalidParameterValueExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceConflictException\":\n        case \"com.amazonaws.lambda#ResourceConflictException\":\n            response = {\n                ...(await deserializeAws_restJson1ResourceConflictExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.lambda#ResourceNotFoundException\":\n            response = {\n                ...(await deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServiceException\":\n        case \"com.amazonaws.lambda#ServiceException\":\n            response = {\n                ...(await deserializeAws_restJson1ServiceExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.lambda#TooManyRequestsException\":\n            response = {\n                ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_restJson1UpdateAliasCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1UpdateAliasCommandError(output, context);\n    }\n    const contents = {\n        $metadata: deserializeMetadata(output),\n        AliasArn: undefined,\n        Description: undefined,\n        FunctionVersion: undefined,\n        Name: undefined,\n        RevisionId: undefined,\n        RoutingConfig: undefined,\n    };\n    const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\n    if (data.AliasArn !== undefined && data.AliasArn !== null) {\n        contents.AliasArn = (0, smithy_client_1.expectString)(data.AliasArn);\n    }\n    if (data.Description !== undefined && data.Description !== null) {\n        contents.Description = (0, smithy_client_1.expectString)(data.Description);\n    }\n    if (data.FunctionVersion !== undefined && data.FunctionVersion !== null) {\n        contents.FunctionVersion = (0, smithy_client_1.expectString)(data.FunctionVersion);\n    }\n    if (data.Name !== undefined && data.Name !== null) {\n        contents.Name = (0, smithy_client_1.expectString)(data.Name);\n    }\n    if (data.RevisionId !== undefined && data.RevisionId !== null) {\n        contents.RevisionId = (0, smithy_client_1.expectString)(data.RevisionId);\n    }\n    if (data.RoutingConfig !== undefined && data.RoutingConfig !== null) {\n        contents.RoutingConfig = deserializeAws_restJson1AliasRoutingConfiguration(data.RoutingConfig, context);\n    }\n    return Promise.resolve(contents);\n};\nexports.deserializeAws_restJson1UpdateAliasCommand = deserializeAws_restJson1UpdateAliasCommand;\nconst deserializeAws_restJson1UpdateAliasCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidParameterValueException\":\n        case \"com.amazonaws.lambda#InvalidParameterValueException\":\n            response = {\n                ...(await deserializeAws_restJson1InvalidParameterValueExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"PreconditionFailedException\":\n        case \"com.amazonaws.lambda#PreconditionFailedException\":\n            response = {\n                ...(await deserializeAws_restJson1PreconditionFailedExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceConflictException\":\n        case \"com.amazonaws.lambda#ResourceConflictException\":\n            response = {\n                ...(await deserializeAws_restJson1ResourceConflictExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.lambda#ResourceNotFoundException\":\n            response = {\n                ...(await deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServiceException\":\n        case \"com.amazonaws.lambda#ServiceException\":\n            response = {\n                ...(await deserializeAws_restJson1ServiceExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.lambda#TooManyRequestsException\":\n            response = {\n                ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_restJson1UpdateCodeSigningConfigCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1UpdateCodeSigningConfigCommandError(output, context);\n    }\n    const contents = {\n        $metadata: deserializeMetadata(output),\n        CodeSigningConfig: undefined,\n    };\n    const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\n    if (data.CodeSigningConfig !== undefined && data.CodeSigningConfig !== null) {\n        contents.CodeSigningConfig = deserializeAws_restJson1CodeSigningConfig(data.CodeSigningConfig, context);\n    }\n    return Promise.resolve(contents);\n};\nexports.deserializeAws_restJson1UpdateCodeSigningConfigCommand = deserializeAws_restJson1UpdateCodeSigningConfigCommand;\nconst deserializeAws_restJson1UpdateCodeSigningConfigCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidParameterValueException\":\n        case \"com.amazonaws.lambda#InvalidParameterValueException\":\n            response = {\n                ...(await deserializeAws_restJson1InvalidParameterValueExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.lambda#ResourceNotFoundException\":\n            response = {\n                ...(await deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServiceException\":\n        case \"com.amazonaws.lambda#ServiceException\":\n            response = {\n                ...(await deserializeAws_restJson1ServiceExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_restJson1UpdateEventSourceMappingCommand = async (output, context) => {\n    if (output.statusCode !== 202 && output.statusCode >= 300) {\n        return deserializeAws_restJson1UpdateEventSourceMappingCommandError(output, context);\n    }\n    const contents = {\n        $metadata: deserializeMetadata(output),\n        BatchSize: undefined,\n        BisectBatchOnFunctionError: undefined,\n        DestinationConfig: undefined,\n        EventSourceArn: undefined,\n        FunctionArn: undefined,\n        FunctionResponseTypes: undefined,\n        LastModified: undefined,\n        LastProcessingResult: undefined,\n        MaximumBatchingWindowInSeconds: undefined,\n        MaximumRecordAgeInSeconds: undefined,\n        MaximumRetryAttempts: undefined,\n        ParallelizationFactor: undefined,\n        Queues: undefined,\n        SelfManagedEventSource: undefined,\n        SourceAccessConfigurations: undefined,\n        StartingPosition: undefined,\n        StartingPositionTimestamp: undefined,\n        State: undefined,\n        StateTransitionReason: undefined,\n        Topics: undefined,\n        TumblingWindowInSeconds: undefined,\n        UUID: undefined,\n    };\n    const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\n    if (data.BatchSize !== undefined && data.BatchSize !== null) {\n        contents.BatchSize = (0, smithy_client_1.expectInt32)(data.BatchSize);\n    }\n    if (data.BisectBatchOnFunctionError !== undefined && data.BisectBatchOnFunctionError !== null) {\n        contents.BisectBatchOnFunctionError = (0, smithy_client_1.expectBoolean)(data.BisectBatchOnFunctionError);\n    }\n    if (data.DestinationConfig !== undefined && data.DestinationConfig !== null) {\n        contents.DestinationConfig = deserializeAws_restJson1DestinationConfig(data.DestinationConfig, context);\n    }\n    if (data.EventSourceArn !== undefined && data.EventSourceArn !== null) {\n        contents.EventSourceArn = (0, smithy_client_1.expectString)(data.EventSourceArn);\n    }\n    if (data.FunctionArn !== undefined && data.FunctionArn !== null) {\n        contents.FunctionArn = (0, smithy_client_1.expectString)(data.FunctionArn);\n    }\n    if (data.FunctionResponseTypes !== undefined && data.FunctionResponseTypes !== null) {\n        contents.FunctionResponseTypes = deserializeAws_restJson1FunctionResponseTypeList(data.FunctionResponseTypes, context);\n    }\n    if (data.LastModified !== undefined && data.LastModified !== null) {\n        contents.LastModified = new Date(Math.round(data.LastModified * 1000));\n    }\n    if (data.LastProcessingResult !== undefined && data.LastProcessingResult !== null) {\n        contents.LastProcessingResult = (0, smithy_client_1.expectString)(data.LastProcessingResult);\n    }\n    if (data.MaximumBatchingWindowInSeconds !== undefined && data.MaximumBatchingWindowInSeconds !== null) {\n        contents.MaximumBatchingWindowInSeconds = (0, smithy_client_1.expectInt32)(data.MaximumBatchingWindowInSeconds);\n    }\n    if (data.MaximumRecordAgeInSeconds !== undefined && data.MaximumRecordAgeInSeconds !== null) {\n        contents.MaximumRecordAgeInSeconds = (0, smithy_client_1.expectInt32)(data.MaximumRecordAgeInSeconds);\n    }\n    if (data.MaximumRetryAttempts !== undefined && data.MaximumRetryAttempts !== null) {\n        contents.MaximumRetryAttempts = (0, smithy_client_1.expectInt32)(data.MaximumRetryAttempts);\n    }\n    if (data.ParallelizationFactor !== undefined && data.ParallelizationFactor !== null) {\n        contents.ParallelizationFactor = (0, smithy_client_1.expectInt32)(data.ParallelizationFactor);\n    }\n    if (data.Queues !== undefined && data.Queues !== null) {\n        contents.Queues = deserializeAws_restJson1Queues(data.Queues, context);\n    }\n    if (data.SelfManagedEventSource !== undefined && data.SelfManagedEventSource !== null) {\n        contents.SelfManagedEventSource = deserializeAws_restJson1SelfManagedEventSource(data.SelfManagedEventSource, context);\n    }\n    if (data.SourceAccessConfigurations !== undefined && data.SourceAccessConfigurations !== null) {\n        contents.SourceAccessConfigurations = deserializeAws_restJson1SourceAccessConfigurations(data.SourceAccessConfigurations, context);\n    }\n    if (data.StartingPosition !== undefined && data.StartingPosition !== null) {\n        contents.StartingPosition = (0, smithy_client_1.expectString)(data.StartingPosition);\n    }\n    if (data.StartingPositionTimestamp !== undefined && data.StartingPositionTimestamp !== null) {\n        contents.StartingPositionTimestamp = new Date(Math.round(data.StartingPositionTimestamp * 1000));\n    }\n    if (data.State !== undefined && data.State !== null) {\n        contents.State = (0, smithy_client_1.expectString)(data.State);\n    }\n    if (data.StateTransitionReason !== undefined && data.StateTransitionReason !== null) {\n        contents.StateTransitionReason = (0, smithy_client_1.expectString)(data.StateTransitionReason);\n    }\n    if (data.Topics !== undefined && data.Topics !== null) {\n        contents.Topics = deserializeAws_restJson1Topics(data.Topics, context);\n    }\n    if (data.TumblingWindowInSeconds !== undefined && data.TumblingWindowInSeconds !== null) {\n        contents.TumblingWindowInSeconds = (0, smithy_client_1.expectInt32)(data.TumblingWindowInSeconds);\n    }\n    if (data.UUID !== undefined && data.UUID !== null) {\n        contents.UUID = (0, smithy_client_1.expectString)(data.UUID);\n    }\n    return Promise.resolve(contents);\n};\nexports.deserializeAws_restJson1UpdateEventSourceMappingCommand = deserializeAws_restJson1UpdateEventSourceMappingCommand;\nconst deserializeAws_restJson1UpdateEventSourceMappingCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidParameterValueException\":\n        case \"com.amazonaws.lambda#InvalidParameterValueException\":\n            response = {\n                ...(await deserializeAws_restJson1InvalidParameterValueExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceConflictException\":\n        case \"com.amazonaws.lambda#ResourceConflictException\":\n            response = {\n                ...(await deserializeAws_restJson1ResourceConflictExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceInUseException\":\n        case \"com.amazonaws.lambda#ResourceInUseException\":\n            response = {\n                ...(await deserializeAws_restJson1ResourceInUseExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.lambda#ResourceNotFoundException\":\n            response = {\n                ...(await deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServiceException\":\n        case \"com.amazonaws.lambda#ServiceException\":\n            response = {\n                ...(await deserializeAws_restJson1ServiceExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.lambda#TooManyRequestsException\":\n            response = {\n                ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_restJson1UpdateFunctionCodeCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1UpdateFunctionCodeCommandError(output, context);\n    }\n    const contents = {\n        $metadata: deserializeMetadata(output),\n        CodeSha256: undefined,\n        CodeSize: undefined,\n        DeadLetterConfig: undefined,\n        Description: undefined,\n        Environment: undefined,\n        FileSystemConfigs: undefined,\n        FunctionArn: undefined,\n        FunctionName: undefined,\n        Handler: undefined,\n        ImageConfigResponse: undefined,\n        KMSKeyArn: undefined,\n        LastModified: undefined,\n        LastUpdateStatus: undefined,\n        LastUpdateStatusReason: undefined,\n        LastUpdateStatusReasonCode: undefined,\n        Layers: undefined,\n        MasterArn: undefined,\n        MemorySize: undefined,\n        PackageType: undefined,\n        RevisionId: undefined,\n        Role: undefined,\n        Runtime: undefined,\n        SigningJobArn: undefined,\n        SigningProfileVersionArn: undefined,\n        State: undefined,\n        StateReason: undefined,\n        StateReasonCode: undefined,\n        Timeout: undefined,\n        TracingConfig: undefined,\n        Version: undefined,\n        VpcConfig: undefined,\n    };\n    const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\n    if (data.CodeSha256 !== undefined && data.CodeSha256 !== null) {\n        contents.CodeSha256 = (0, smithy_client_1.expectString)(data.CodeSha256);\n    }\n    if (data.CodeSize !== undefined && data.CodeSize !== null) {\n        contents.CodeSize = (0, smithy_client_1.expectLong)(data.CodeSize);\n    }\n    if (data.DeadLetterConfig !== undefined && data.DeadLetterConfig !== null) {\n        contents.DeadLetterConfig = deserializeAws_restJson1DeadLetterConfig(data.DeadLetterConfig, context);\n    }\n    if (data.Description !== undefined && data.Description !== null) {\n        contents.Description = (0, smithy_client_1.expectString)(data.Description);\n    }\n    if (data.Environment !== undefined && data.Environment !== null) {\n        contents.Environment = deserializeAws_restJson1EnvironmentResponse(data.Environment, context);\n    }\n    if (data.FileSystemConfigs !== undefined && data.FileSystemConfigs !== null) {\n        contents.FileSystemConfigs = deserializeAws_restJson1FileSystemConfigList(data.FileSystemConfigs, context);\n    }\n    if (data.FunctionArn !== undefined && data.FunctionArn !== null) {\n        contents.FunctionArn = (0, smithy_client_1.expectString)(data.FunctionArn);\n    }\n    if (data.FunctionName !== undefined && data.FunctionName !== null) {\n        contents.FunctionName = (0, smithy_client_1.expectString)(data.FunctionName);\n    }\n    if (data.Handler !== undefined && data.Handler !== null) {\n        contents.Handler = (0, smithy_client_1.expectString)(data.Handler);\n    }\n    if (data.ImageConfigResponse !== undefined && data.ImageConfigResponse !== null) {\n        contents.ImageConfigResponse = deserializeAws_restJson1ImageConfigResponse(data.ImageConfigResponse, context);\n    }\n    if (data.KMSKeyArn !== undefined && data.KMSKeyArn !== null) {\n        contents.KMSKeyArn = (0, smithy_client_1.expectString)(data.KMSKeyArn);\n    }\n    if (data.LastModified !== undefined && data.LastModified !== null) {\n        contents.LastModified = (0, smithy_client_1.expectString)(data.LastModified);\n    }\n    if (data.LastUpdateStatus !== undefined && data.LastUpdateStatus !== null) {\n        contents.LastUpdateStatus = (0, smithy_client_1.expectString)(data.LastUpdateStatus);\n    }\n    if (data.LastUpdateStatusReason !== undefined && data.LastUpdateStatusReason !== null) {\n        contents.LastUpdateStatusReason = (0, smithy_client_1.expectString)(data.LastUpdateStatusReason);\n    }\n    if (data.LastUpdateStatusReasonCode !== undefined && data.LastUpdateStatusReasonCode !== null) {\n        contents.LastUpdateStatusReasonCode = (0, smithy_client_1.expectString)(data.LastUpdateStatusReasonCode);\n    }\n    if (data.Layers !== undefined && data.Layers !== null) {\n        contents.Layers = deserializeAws_restJson1LayersReferenceList(data.Layers, context);\n    }\n    if (data.MasterArn !== undefined && data.MasterArn !== null) {\n        contents.MasterArn = (0, smithy_client_1.expectString)(data.MasterArn);\n    }\n    if (data.MemorySize !== undefined && data.MemorySize !== null) {\n        contents.MemorySize = (0, smithy_client_1.expectInt32)(data.MemorySize);\n    }\n    if (data.PackageType !== undefined && data.PackageType !== null) {\n        contents.PackageType = (0, smithy_client_1.expectString)(data.PackageType);\n    }\n    if (data.RevisionId !== undefined && data.RevisionId !== null) {\n        contents.RevisionId = (0, smithy_client_1.expectString)(data.RevisionId);\n    }\n    if (data.Role !== undefined && data.Role !== null) {\n        contents.Role = (0, smithy_client_1.expectString)(data.Role);\n    }\n    if (data.Runtime !== undefined && data.Runtime !== null) {\n        contents.Runtime = (0, smithy_client_1.expectString)(data.Runtime);\n    }\n    if (data.SigningJobArn !== undefined && data.SigningJobArn !== null) {\n        contents.SigningJobArn = (0, smithy_client_1.expectString)(data.SigningJobArn);\n    }\n    if (data.SigningProfileVersionArn !== undefined && data.SigningProfileVersionArn !== null) {\n        contents.SigningProfileVersionArn = (0, smithy_client_1.expectString)(data.SigningProfileVersionArn);\n    }\n    if (data.State !== undefined && data.State !== null) {\n        contents.State = (0, smithy_client_1.expectString)(data.State);\n    }\n    if (data.StateReason !== undefined && data.StateReason !== null) {\n        contents.StateReason = (0, smithy_client_1.expectString)(data.StateReason);\n    }\n    if (data.StateReasonCode !== undefined && data.StateReasonCode !== null) {\n        contents.StateReasonCode = (0, smithy_client_1.expectString)(data.StateReasonCode);\n    }\n    if (data.Timeout !== undefined && data.Timeout !== null) {\n        contents.Timeout = (0, smithy_client_1.expectInt32)(data.Timeout);\n    }\n    if (data.TracingConfig !== undefined && data.TracingConfig !== null) {\n        contents.TracingConfig = deserializeAws_restJson1TracingConfigResponse(data.TracingConfig, context);\n    }\n    if (data.Version !== undefined && data.Version !== null) {\n        contents.Version = (0, smithy_client_1.expectString)(data.Version);\n    }\n    if (data.VpcConfig !== undefined && data.VpcConfig !== null) {\n        contents.VpcConfig = deserializeAws_restJson1VpcConfigResponse(data.VpcConfig, context);\n    }\n    return Promise.resolve(contents);\n};\nexports.deserializeAws_restJson1UpdateFunctionCodeCommand = deserializeAws_restJson1UpdateFunctionCodeCommand;\nconst deserializeAws_restJson1UpdateFunctionCodeCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"CodeSigningConfigNotFoundException\":\n        case \"com.amazonaws.lambda#CodeSigningConfigNotFoundException\":\n            response = {\n                ...(await deserializeAws_restJson1CodeSigningConfigNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"CodeStorageExceededException\":\n        case \"com.amazonaws.lambda#CodeStorageExceededException\":\n            response = {\n                ...(await deserializeAws_restJson1CodeStorageExceededExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"CodeVerificationFailedException\":\n        case \"com.amazonaws.lambda#CodeVerificationFailedException\":\n            response = {\n                ...(await deserializeAws_restJson1CodeVerificationFailedExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidCodeSignatureException\":\n        case \"com.amazonaws.lambda#InvalidCodeSignatureException\":\n            response = {\n                ...(await deserializeAws_restJson1InvalidCodeSignatureExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterValueException\":\n        case \"com.amazonaws.lambda#InvalidParameterValueException\":\n            response = {\n                ...(await deserializeAws_restJson1InvalidParameterValueExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"PreconditionFailedException\":\n        case \"com.amazonaws.lambda#PreconditionFailedException\":\n            response = {\n                ...(await deserializeAws_restJson1PreconditionFailedExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceConflictException\":\n        case \"com.amazonaws.lambda#ResourceConflictException\":\n            response = {\n                ...(await deserializeAws_restJson1ResourceConflictExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.lambda#ResourceNotFoundException\":\n            response = {\n                ...(await deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServiceException\":\n        case \"com.amazonaws.lambda#ServiceException\":\n            response = {\n                ...(await deserializeAws_restJson1ServiceExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.lambda#TooManyRequestsException\":\n            response = {\n                ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_restJson1UpdateFunctionConfigurationCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1UpdateFunctionConfigurationCommandError(output, context);\n    }\n    const contents = {\n        $metadata: deserializeMetadata(output),\n        CodeSha256: undefined,\n        CodeSize: undefined,\n        DeadLetterConfig: undefined,\n        Description: undefined,\n        Environment: undefined,\n        FileSystemConfigs: undefined,\n        FunctionArn: undefined,\n        FunctionName: undefined,\n        Handler: undefined,\n        ImageConfigResponse: undefined,\n        KMSKeyArn: undefined,\n        LastModified: undefined,\n        LastUpdateStatus: undefined,\n        LastUpdateStatusReason: undefined,\n        LastUpdateStatusReasonCode: undefined,\n        Layers: undefined,\n        MasterArn: undefined,\n        MemorySize: undefined,\n        PackageType: undefined,\n        RevisionId: undefined,\n        Role: undefined,\n        Runtime: undefined,\n        SigningJobArn: undefined,\n        SigningProfileVersionArn: undefined,\n        State: undefined,\n        StateReason: undefined,\n        StateReasonCode: undefined,\n        Timeout: undefined,\n        TracingConfig: undefined,\n        Version: undefined,\n        VpcConfig: undefined,\n    };\n    const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\n    if (data.CodeSha256 !== undefined && data.CodeSha256 !== null) {\n        contents.CodeSha256 = (0, smithy_client_1.expectString)(data.CodeSha256);\n    }\n    if (data.CodeSize !== undefined && data.CodeSize !== null) {\n        contents.CodeSize = (0, smithy_client_1.expectLong)(data.CodeSize);\n    }\n    if (data.DeadLetterConfig !== undefined && data.DeadLetterConfig !== null) {\n        contents.DeadLetterConfig = deserializeAws_restJson1DeadLetterConfig(data.DeadLetterConfig, context);\n    }\n    if (data.Description !== undefined && data.Description !== null) {\n        contents.Description = (0, smithy_client_1.expectString)(data.Description);\n    }\n    if (data.Environment !== undefined && data.Environment !== null) {\n        contents.Environment = deserializeAws_restJson1EnvironmentResponse(data.Environment, context);\n    }\n    if (data.FileSystemConfigs !== undefined && data.FileSystemConfigs !== null) {\n        contents.FileSystemConfigs = deserializeAws_restJson1FileSystemConfigList(data.FileSystemConfigs, context);\n    }\n    if (data.FunctionArn !== undefined && data.FunctionArn !== null) {\n        contents.FunctionArn = (0, smithy_client_1.expectString)(data.FunctionArn);\n    }\n    if (data.FunctionName !== undefined && data.FunctionName !== null) {\n        contents.FunctionName = (0, smithy_client_1.expectString)(data.FunctionName);\n    }\n    if (data.Handler !== undefined && data.Handler !== null) {\n        contents.Handler = (0, smithy_client_1.expectString)(data.Handler);\n    }\n    if (data.ImageConfigResponse !== undefined && data.ImageConfigResponse !== null) {\n        contents.ImageConfigResponse = deserializeAws_restJson1ImageConfigResponse(data.ImageConfigResponse, context);\n    }\n    if (data.KMSKeyArn !== undefined && data.KMSKeyArn !== null) {\n        contents.KMSKeyArn = (0, smithy_client_1.expectString)(data.KMSKeyArn);\n    }\n    if (data.LastModified !== undefined && data.LastModified !== null) {\n        contents.LastModified = (0, smithy_client_1.expectString)(data.LastModified);\n    }\n    if (data.LastUpdateStatus !== undefined && data.LastUpdateStatus !== null) {\n        contents.LastUpdateStatus = (0, smithy_client_1.expectString)(data.LastUpdateStatus);\n    }\n    if (data.LastUpdateStatusReason !== undefined && data.LastUpdateStatusReason !== null) {\n        contents.LastUpdateStatusReason = (0, smithy_client_1.expectString)(data.LastUpdateStatusReason);\n    }\n    if (data.LastUpdateStatusReasonCode !== undefined && data.LastUpdateStatusReasonCode !== null) {\n        contents.LastUpdateStatusReasonCode = (0, smithy_client_1.expectString)(data.LastUpdateStatusReasonCode);\n    }\n    if (data.Layers !== undefined && data.Layers !== null) {\n        contents.Layers = deserializeAws_restJson1LayersReferenceList(data.Layers, context);\n    }\n    if (data.MasterArn !== undefined && data.MasterArn !== null) {\n        contents.MasterArn = (0, smithy_client_1.expectString)(data.MasterArn);\n    }\n    if (data.MemorySize !== undefined && data.MemorySize !== null) {\n        contents.MemorySize = (0, smithy_client_1.expectInt32)(data.MemorySize);\n    }\n    if (data.PackageType !== undefined && data.PackageType !== null) {\n        contents.PackageType = (0, smithy_client_1.expectString)(data.PackageType);\n    }\n    if (data.RevisionId !== undefined && data.RevisionId !== null) {\n        contents.RevisionId = (0, smithy_client_1.expectString)(data.RevisionId);\n    }\n    if (data.Role !== undefined && data.Role !== null) {\n        contents.Role = (0, smithy_client_1.expectString)(data.Role);\n    }\n    if (data.Runtime !== undefined && data.Runtime !== null) {\n        contents.Runtime = (0, smithy_client_1.expectString)(data.Runtime);\n    }\n    if (data.SigningJobArn !== undefined && data.SigningJobArn !== null) {\n        contents.SigningJobArn = (0, smithy_client_1.expectString)(data.SigningJobArn);\n    }\n    if (data.SigningProfileVersionArn !== undefined && data.SigningProfileVersionArn !== null) {\n        contents.SigningProfileVersionArn = (0, smithy_client_1.expectString)(data.SigningProfileVersionArn);\n    }\n    if (data.State !== undefined && data.State !== null) {\n        contents.State = (0, smithy_client_1.expectString)(data.State);\n    }\n    if (data.StateReason !== undefined && data.StateReason !== null) {\n        contents.StateReason = (0, smithy_client_1.expectString)(data.StateReason);\n    }\n    if (data.StateReasonCode !== undefined && data.StateReasonCode !== null) {\n        contents.StateReasonCode = (0, smithy_client_1.expectString)(data.StateReasonCode);\n    }\n    if (data.Timeout !== undefined && data.Timeout !== null) {\n        contents.Timeout = (0, smithy_client_1.expectInt32)(data.Timeout);\n    }\n    if (data.TracingConfig !== undefined && data.TracingConfig !== null) {\n        contents.TracingConfig = deserializeAws_restJson1TracingConfigResponse(data.TracingConfig, context);\n    }\n    if (data.Version !== undefined && data.Version !== null) {\n        contents.Version = (0, smithy_client_1.expectString)(data.Version);\n    }\n    if (data.VpcConfig !== undefined && data.VpcConfig !== null) {\n        contents.VpcConfig = deserializeAws_restJson1VpcConfigResponse(data.VpcConfig, context);\n    }\n    return Promise.resolve(contents);\n};\nexports.deserializeAws_restJson1UpdateFunctionConfigurationCommand = deserializeAws_restJson1UpdateFunctionConfigurationCommand;\nconst deserializeAws_restJson1UpdateFunctionConfigurationCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"CodeSigningConfigNotFoundException\":\n        case \"com.amazonaws.lambda#CodeSigningConfigNotFoundException\":\n            response = {\n                ...(await deserializeAws_restJson1CodeSigningConfigNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"CodeVerificationFailedException\":\n        case \"com.amazonaws.lambda#CodeVerificationFailedException\":\n            response = {\n                ...(await deserializeAws_restJson1CodeVerificationFailedExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidCodeSignatureException\":\n        case \"com.amazonaws.lambda#InvalidCodeSignatureException\":\n            response = {\n                ...(await deserializeAws_restJson1InvalidCodeSignatureExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidParameterValueException\":\n        case \"com.amazonaws.lambda#InvalidParameterValueException\":\n            response = {\n                ...(await deserializeAws_restJson1InvalidParameterValueExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"PreconditionFailedException\":\n        case \"com.amazonaws.lambda#PreconditionFailedException\":\n            response = {\n                ...(await deserializeAws_restJson1PreconditionFailedExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceConflictException\":\n        case \"com.amazonaws.lambda#ResourceConflictException\":\n            response = {\n                ...(await deserializeAws_restJson1ResourceConflictExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.lambda#ResourceNotFoundException\":\n            response = {\n                ...(await deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServiceException\":\n        case \"com.amazonaws.lambda#ServiceException\":\n            response = {\n                ...(await deserializeAws_restJson1ServiceExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.lambda#TooManyRequestsException\":\n            response = {\n                ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_restJson1UpdateFunctionEventInvokeConfigCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1UpdateFunctionEventInvokeConfigCommandError(output, context);\n    }\n    const contents = {\n        $metadata: deserializeMetadata(output),\n        DestinationConfig: undefined,\n        FunctionArn: undefined,\n        LastModified: undefined,\n        MaximumEventAgeInSeconds: undefined,\n        MaximumRetryAttempts: undefined,\n    };\n    const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\n    if (data.DestinationConfig !== undefined && data.DestinationConfig !== null) {\n        contents.DestinationConfig = deserializeAws_restJson1DestinationConfig(data.DestinationConfig, context);\n    }\n    if (data.FunctionArn !== undefined && data.FunctionArn !== null) {\n        contents.FunctionArn = (0, smithy_client_1.expectString)(data.FunctionArn);\n    }\n    if (data.LastModified !== undefined && data.LastModified !== null) {\n        contents.LastModified = new Date(Math.round(data.LastModified * 1000));\n    }\n    if (data.MaximumEventAgeInSeconds !== undefined && data.MaximumEventAgeInSeconds !== null) {\n        contents.MaximumEventAgeInSeconds = (0, smithy_client_1.expectInt32)(data.MaximumEventAgeInSeconds);\n    }\n    if (data.MaximumRetryAttempts !== undefined && data.MaximumRetryAttempts !== null) {\n        contents.MaximumRetryAttempts = (0, smithy_client_1.expectInt32)(data.MaximumRetryAttempts);\n    }\n    return Promise.resolve(contents);\n};\nexports.deserializeAws_restJson1UpdateFunctionEventInvokeConfigCommand = deserializeAws_restJson1UpdateFunctionEventInvokeConfigCommand;\nconst deserializeAws_restJson1UpdateFunctionEventInvokeConfigCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidParameterValueException\":\n        case \"com.amazonaws.lambda#InvalidParameterValueException\":\n            response = {\n                ...(await deserializeAws_restJson1InvalidParameterValueExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceConflictException\":\n        case \"com.amazonaws.lambda#ResourceConflictException\":\n            response = {\n                ...(await deserializeAws_restJson1ResourceConflictExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.lambda#ResourceNotFoundException\":\n            response = {\n                ...(await deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ServiceException\":\n        case \"com.amazonaws.lambda#ServiceException\":\n            response = {\n                ...(await deserializeAws_restJson1ServiceExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.lambda#TooManyRequestsException\":\n            response = {\n                ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_restJson1CodeSigningConfigNotFoundExceptionResponse = async (parsedOutput, context) => {\n    const contents = {\n        name: \"CodeSigningConfigNotFoundException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        Message: undefined,\n        Type: undefined,\n    };\n    const data = parsedOutput.body;\n    if (data.Message !== undefined && data.Message !== null) {\n        contents.Message = (0, smithy_client_1.expectString)(data.Message);\n    }\n    if (data.Type !== undefined && data.Type !== null) {\n        contents.Type = (0, smithy_client_1.expectString)(data.Type);\n    }\n    return contents;\n};\nconst deserializeAws_restJson1CodeStorageExceededExceptionResponse = async (parsedOutput, context) => {\n    const contents = {\n        name: \"CodeStorageExceededException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        Type: undefined,\n        message: undefined,\n    };\n    const data = parsedOutput.body;\n    if (data.Type !== undefined && data.Type !== null) {\n        contents.Type = (0, smithy_client_1.expectString)(data.Type);\n    }\n    if (data.message !== undefined && data.message !== null) {\n        contents.message = (0, smithy_client_1.expectString)(data.message);\n    }\n    return contents;\n};\nconst deserializeAws_restJson1CodeVerificationFailedExceptionResponse = async (parsedOutput, context) => {\n    const contents = {\n        name: \"CodeVerificationFailedException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        Message: undefined,\n        Type: undefined,\n    };\n    const data = parsedOutput.body;\n    if (data.Message !== undefined && data.Message !== null) {\n        contents.Message = (0, smithy_client_1.expectString)(data.Message);\n    }\n    if (data.Type !== undefined && data.Type !== null) {\n        contents.Type = (0, smithy_client_1.expectString)(data.Type);\n    }\n    return contents;\n};\nconst deserializeAws_restJson1EC2AccessDeniedExceptionResponse = async (parsedOutput, context) => {\n    const contents = {\n        name: \"EC2AccessDeniedException\",\n        $fault: \"server\",\n        $metadata: deserializeMetadata(parsedOutput),\n        Message: undefined,\n        Type: undefined,\n    };\n    const data = parsedOutput.body;\n    if (data.Message !== undefined && data.Message !== null) {\n        contents.Message = (0, smithy_client_1.expectString)(data.Message);\n    }\n    if (data.Type !== undefined && data.Type !== null) {\n        contents.Type = (0, smithy_client_1.expectString)(data.Type);\n    }\n    return contents;\n};\nconst deserializeAws_restJson1EC2ThrottledExceptionResponse = async (parsedOutput, context) => {\n    const contents = {\n        name: \"EC2ThrottledException\",\n        $fault: \"server\",\n        $metadata: deserializeMetadata(parsedOutput),\n        Message: undefined,\n        Type: undefined,\n    };\n    const data = parsedOutput.body;\n    if (data.Message !== undefined && data.Message !== null) {\n        contents.Message = (0, smithy_client_1.expectString)(data.Message);\n    }\n    if (data.Type !== undefined && data.Type !== null) {\n        contents.Type = (0, smithy_client_1.expectString)(data.Type);\n    }\n    return contents;\n};\nconst deserializeAws_restJson1EC2UnexpectedExceptionResponse = async (parsedOutput, context) => {\n    const contents = {\n        name: \"EC2UnexpectedException\",\n        $fault: \"server\",\n        $metadata: deserializeMetadata(parsedOutput),\n        EC2ErrorCode: undefined,\n        Message: undefined,\n        Type: undefined,\n    };\n    const data = parsedOutput.body;\n    if (data.EC2ErrorCode !== undefined && data.EC2ErrorCode !== null) {\n        contents.EC2ErrorCode = (0, smithy_client_1.expectString)(data.EC2ErrorCode);\n    }\n    if (data.Message !== undefined && data.Message !== null) {\n        contents.Message = (0, smithy_client_1.expectString)(data.Message);\n    }\n    if (data.Type !== undefined && data.Type !== null) {\n        contents.Type = (0, smithy_client_1.expectString)(data.Type);\n    }\n    return contents;\n};\nconst deserializeAws_restJson1EFSIOExceptionResponse = async (parsedOutput, context) => {\n    const contents = {\n        name: \"EFSIOException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        Message: undefined,\n        Type: undefined,\n    };\n    const data = parsedOutput.body;\n    if (data.Message !== undefined && data.Message !== null) {\n        contents.Message = (0, smithy_client_1.expectString)(data.Message);\n    }\n    if (data.Type !== undefined && data.Type !== null) {\n        contents.Type = (0, smithy_client_1.expectString)(data.Type);\n    }\n    return contents;\n};\nconst deserializeAws_restJson1EFSMountConnectivityExceptionResponse = async (parsedOutput, context) => {\n    const contents = {\n        name: \"EFSMountConnectivityException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        Message: undefined,\n        Type: undefined,\n    };\n    const data = parsedOutput.body;\n    if (data.Message !== undefined && data.Message !== null) {\n        contents.Message = (0, smithy_client_1.expectString)(data.Message);\n    }\n    if (data.Type !== undefined && data.Type !== null) {\n        contents.Type = (0, smithy_client_1.expectString)(data.Type);\n    }\n    return contents;\n};\nconst deserializeAws_restJson1EFSMountFailureExceptionResponse = async (parsedOutput, context) => {\n    const contents = {\n        name: \"EFSMountFailureException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        Message: undefined,\n        Type: undefined,\n    };\n    const data = parsedOutput.body;\n    if (data.Message !== undefined && data.Message !== null) {\n        contents.Message = (0, smithy_client_1.expectString)(data.Message);\n    }\n    if (data.Type !== undefined && data.Type !== null) {\n        contents.Type = (0, smithy_client_1.expectString)(data.Type);\n    }\n    return contents;\n};\nconst deserializeAws_restJson1EFSMountTimeoutExceptionResponse = async (parsedOutput, context) => {\n    const contents = {\n        name: \"EFSMountTimeoutException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        Message: undefined,\n        Type: undefined,\n    };\n    const data = parsedOutput.body;\n    if (data.Message !== undefined && data.Message !== null) {\n        contents.Message = (0, smithy_client_1.expectString)(data.Message);\n    }\n    if (data.Type !== undefined && data.Type !== null) {\n        contents.Type = (0, smithy_client_1.expectString)(data.Type);\n    }\n    return contents;\n};\nconst deserializeAws_restJson1ENILimitReachedExceptionResponse = async (parsedOutput, context) => {\n    const contents = {\n        name: \"ENILimitReachedException\",\n        $fault: \"server\",\n        $metadata: deserializeMetadata(parsedOutput),\n        Message: undefined,\n        Type: undefined,\n    };\n    const data = parsedOutput.body;\n    if (data.Message !== undefined && data.Message !== null) {\n        contents.Message = (0, smithy_client_1.expectString)(data.Message);\n    }\n    if (data.Type !== undefined && data.Type !== null) {\n        contents.Type = (0, smithy_client_1.expectString)(data.Type);\n    }\n    return contents;\n};\nconst deserializeAws_restJson1InvalidCodeSignatureExceptionResponse = async (parsedOutput, context) => {\n    const contents = {\n        name: \"InvalidCodeSignatureException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        Message: undefined,\n        Type: undefined,\n    };\n    const data = parsedOutput.body;\n    if (data.Message !== undefined && data.Message !== null) {\n        contents.Message = (0, smithy_client_1.expectString)(data.Message);\n    }\n    if (data.Type !== undefined && data.Type !== null) {\n        contents.Type = (0, smithy_client_1.expectString)(data.Type);\n    }\n    return contents;\n};\nconst deserializeAws_restJson1InvalidParameterValueExceptionResponse = async (parsedOutput, context) => {\n    const contents = {\n        name: \"InvalidParameterValueException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        Type: undefined,\n        message: undefined,\n    };\n    const data = parsedOutput.body;\n    if (data.Type !== undefined && data.Type !== null) {\n        contents.Type = (0, smithy_client_1.expectString)(data.Type);\n    }\n    if (data.message !== undefined && data.message !== null) {\n        contents.message = (0, smithy_client_1.expectString)(data.message);\n    }\n    return contents;\n};\nconst deserializeAws_restJson1InvalidRequestContentExceptionResponse = async (parsedOutput, context) => {\n    const contents = {\n        name: \"InvalidRequestContentException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        Type: undefined,\n        message: undefined,\n    };\n    const data = parsedOutput.body;\n    if (data.Type !== undefined && data.Type !== null) {\n        contents.Type = (0, smithy_client_1.expectString)(data.Type);\n    }\n    if (data.message !== undefined && data.message !== null) {\n        contents.message = (0, smithy_client_1.expectString)(data.message);\n    }\n    return contents;\n};\nconst deserializeAws_restJson1InvalidRuntimeExceptionResponse = async (parsedOutput, context) => {\n    const contents = {\n        name: \"InvalidRuntimeException\",\n        $fault: \"server\",\n        $metadata: deserializeMetadata(parsedOutput),\n        Message: undefined,\n        Type: undefined,\n    };\n    const data = parsedOutput.body;\n    if (data.Message !== undefined && data.Message !== null) {\n        contents.Message = (0, smithy_client_1.expectString)(data.Message);\n    }\n    if (data.Type !== undefined && data.Type !== null) {\n        contents.Type = (0, smithy_client_1.expectString)(data.Type);\n    }\n    return contents;\n};\nconst deserializeAws_restJson1InvalidSecurityGroupIDExceptionResponse = async (parsedOutput, context) => {\n    const contents = {\n        name: \"InvalidSecurityGroupIDException\",\n        $fault: \"server\",\n        $metadata: deserializeMetadata(parsedOutput),\n        Message: undefined,\n        Type: undefined,\n    };\n    const data = parsedOutput.body;\n    if (data.Message !== undefined && data.Message !== null) {\n        contents.Message = (0, smithy_client_1.expectString)(data.Message);\n    }\n    if (data.Type !== undefined && data.Type !== null) {\n        contents.Type = (0, smithy_client_1.expectString)(data.Type);\n    }\n    return contents;\n};\nconst deserializeAws_restJson1InvalidSubnetIDExceptionResponse = async (parsedOutput, context) => {\n    const contents = {\n        name: \"InvalidSubnetIDException\",\n        $fault: \"server\",\n        $metadata: deserializeMetadata(parsedOutput),\n        Message: undefined,\n        Type: undefined,\n    };\n    const data = parsedOutput.body;\n    if (data.Message !== undefined && data.Message !== null) {\n        contents.Message = (0, smithy_client_1.expectString)(data.Message);\n    }\n    if (data.Type !== undefined && data.Type !== null) {\n        contents.Type = (0, smithy_client_1.expectString)(data.Type);\n    }\n    return contents;\n};\nconst deserializeAws_restJson1InvalidZipFileExceptionResponse = async (parsedOutput, context) => {\n    const contents = {\n        name: \"InvalidZipFileException\",\n        $fault: \"server\",\n        $metadata: deserializeMetadata(parsedOutput),\n        Message: undefined,\n        Type: undefined,\n    };\n    const data = parsedOutput.body;\n    if (data.Message !== undefined && data.Message !== null) {\n        contents.Message = (0, smithy_client_1.expectString)(data.Message);\n    }\n    if (data.Type !== undefined && data.Type !== null) {\n        contents.Type = (0, smithy_client_1.expectString)(data.Type);\n    }\n    return contents;\n};\nconst deserializeAws_restJson1KMSAccessDeniedExceptionResponse = async (parsedOutput, context) => {\n    const contents = {\n        name: \"KMSAccessDeniedException\",\n        $fault: \"server\",\n        $metadata: deserializeMetadata(parsedOutput),\n        Message: undefined,\n        Type: undefined,\n    };\n    const data = parsedOutput.body;\n    if (data.Message !== undefined && data.Message !== null) {\n        contents.Message = (0, smithy_client_1.expectString)(data.Message);\n    }\n    if (data.Type !== undefined && data.Type !== null) {\n        contents.Type = (0, smithy_client_1.expectString)(data.Type);\n    }\n    return contents;\n};\nconst deserializeAws_restJson1KMSDisabledExceptionResponse = async (parsedOutput, context) => {\n    const contents = {\n        name: \"KMSDisabledException\",\n        $fault: \"server\",\n        $metadata: deserializeMetadata(parsedOutput),\n        Message: undefined,\n        Type: undefined,\n    };\n    const data = parsedOutput.body;\n    if (data.Message !== undefined && data.Message !== null) {\n        contents.Message = (0, smithy_client_1.expectString)(data.Message);\n    }\n    if (data.Type !== undefined && data.Type !== null) {\n        contents.Type = (0, smithy_client_1.expectString)(data.Type);\n    }\n    return contents;\n};\nconst deserializeAws_restJson1KMSInvalidStateExceptionResponse = async (parsedOutput, context) => {\n    const contents = {\n        name: \"KMSInvalidStateException\",\n        $fault: \"server\",\n        $metadata: deserializeMetadata(parsedOutput),\n        Message: undefined,\n        Type: undefined,\n    };\n    const data = parsedOutput.body;\n    if (data.Message !== undefined && data.Message !== null) {\n        contents.Message = (0, smithy_client_1.expectString)(data.Message);\n    }\n    if (data.Type !== undefined && data.Type !== null) {\n        contents.Type = (0, smithy_client_1.expectString)(data.Type);\n    }\n    return contents;\n};\nconst deserializeAws_restJson1KMSNotFoundExceptionResponse = async (parsedOutput, context) => {\n    const contents = {\n        name: \"KMSNotFoundException\",\n        $fault: \"server\",\n        $metadata: deserializeMetadata(parsedOutput),\n        Message: undefined,\n        Type: undefined,\n    };\n    const data = parsedOutput.body;\n    if (data.Message !== undefined && data.Message !== null) {\n        contents.Message = (0, smithy_client_1.expectString)(data.Message);\n    }\n    if (data.Type !== undefined && data.Type !== null) {\n        contents.Type = (0, smithy_client_1.expectString)(data.Type);\n    }\n    return contents;\n};\nconst deserializeAws_restJson1PolicyLengthExceededExceptionResponse = async (parsedOutput, context) => {\n    const contents = {\n        name: \"PolicyLengthExceededException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        Type: undefined,\n        message: undefined,\n    };\n    const data = parsedOutput.body;\n    if (data.Type !== undefined && data.Type !== null) {\n        contents.Type = (0, smithy_client_1.expectString)(data.Type);\n    }\n    if (data.message !== undefined && data.message !== null) {\n        contents.message = (0, smithy_client_1.expectString)(data.message);\n    }\n    return contents;\n};\nconst deserializeAws_restJson1PreconditionFailedExceptionResponse = async (parsedOutput, context) => {\n    const contents = {\n        name: \"PreconditionFailedException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        Type: undefined,\n        message: undefined,\n    };\n    const data = parsedOutput.body;\n    if (data.Type !== undefined && data.Type !== null) {\n        contents.Type = (0, smithy_client_1.expectString)(data.Type);\n    }\n    if (data.message !== undefined && data.message !== null) {\n        contents.message = (0, smithy_client_1.expectString)(data.message);\n    }\n    return contents;\n};\nconst deserializeAws_restJson1ProvisionedConcurrencyConfigNotFoundExceptionResponse = async (parsedOutput, context) => {\n    const contents = {\n        name: \"ProvisionedConcurrencyConfigNotFoundException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        Type: undefined,\n        message: undefined,\n    };\n    const data = parsedOutput.body;\n    if (data.Type !== undefined && data.Type !== null) {\n        contents.Type = (0, smithy_client_1.expectString)(data.Type);\n    }\n    if (data.message !== undefined && data.message !== null) {\n        contents.message = (0, smithy_client_1.expectString)(data.message);\n    }\n    return contents;\n};\nconst deserializeAws_restJson1RequestTooLargeExceptionResponse = async (parsedOutput, context) => {\n    const contents = {\n        name: \"RequestTooLargeException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        Type: undefined,\n        message: undefined,\n    };\n    const data = parsedOutput.body;\n    if (data.Type !== undefined && data.Type !== null) {\n        contents.Type = (0, smithy_client_1.expectString)(data.Type);\n    }\n    if (data.message !== undefined && data.message !== null) {\n        contents.message = (0, smithy_client_1.expectString)(data.message);\n    }\n    return contents;\n};\nconst deserializeAws_restJson1ResourceConflictExceptionResponse = async (parsedOutput, context) => {\n    const contents = {\n        name: \"ResourceConflictException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        Type: undefined,\n        message: undefined,\n    };\n    const data = parsedOutput.body;\n    if (data.Type !== undefined && data.Type !== null) {\n        contents.Type = (0, smithy_client_1.expectString)(data.Type);\n    }\n    if (data.message !== undefined && data.message !== null) {\n        contents.message = (0, smithy_client_1.expectString)(data.message);\n    }\n    return contents;\n};\nconst deserializeAws_restJson1ResourceInUseExceptionResponse = async (parsedOutput, context) => {\n    const contents = {\n        name: \"ResourceInUseException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        Message: undefined,\n        Type: undefined,\n    };\n    const data = parsedOutput.body;\n    if (data.Message !== undefined && data.Message !== null) {\n        contents.Message = (0, smithy_client_1.expectString)(data.Message);\n    }\n    if (data.Type !== undefined && data.Type !== null) {\n        contents.Type = (0, smithy_client_1.expectString)(data.Type);\n    }\n    return contents;\n};\nconst deserializeAws_restJson1ResourceNotFoundExceptionResponse = async (parsedOutput, context) => {\n    const contents = {\n        name: \"ResourceNotFoundException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        Message: undefined,\n        Type: undefined,\n    };\n    const data = parsedOutput.body;\n    if (data.Message !== undefined && data.Message !== null) {\n        contents.Message = (0, smithy_client_1.expectString)(data.Message);\n    }\n    if (data.Type !== undefined && data.Type !== null) {\n        contents.Type = (0, smithy_client_1.expectString)(data.Type);\n    }\n    return contents;\n};\nconst deserializeAws_restJson1ResourceNotReadyExceptionResponse = async (parsedOutput, context) => {\n    const contents = {\n        name: \"ResourceNotReadyException\",\n        $fault: \"server\",\n        $metadata: deserializeMetadata(parsedOutput),\n        Type: undefined,\n        message: undefined,\n    };\n    const data = parsedOutput.body;\n    if (data.Type !== undefined && data.Type !== null) {\n        contents.Type = (0, smithy_client_1.expectString)(data.Type);\n    }\n    if (data.message !== undefined && data.message !== null) {\n        contents.message = (0, smithy_client_1.expectString)(data.message);\n    }\n    return contents;\n};\nconst deserializeAws_restJson1ServiceExceptionResponse = async (parsedOutput, context) => {\n    const contents = {\n        name: \"ServiceException\",\n        $fault: \"server\",\n        $metadata: deserializeMetadata(parsedOutput),\n        Message: undefined,\n        Type: undefined,\n    };\n    const data = parsedOutput.body;\n    if (data.Message !== undefined && data.Message !== null) {\n        contents.Message = (0, smithy_client_1.expectString)(data.Message);\n    }\n    if (data.Type !== undefined && data.Type !== null) {\n        contents.Type = (0, smithy_client_1.expectString)(data.Type);\n    }\n    return contents;\n};\nconst deserializeAws_restJson1SubnetIPAddressLimitReachedExceptionResponse = async (parsedOutput, context) => {\n    const contents = {\n        name: \"SubnetIPAddressLimitReachedException\",\n        $fault: \"server\",\n        $metadata: deserializeMetadata(parsedOutput),\n        Message: undefined,\n        Type: undefined,\n    };\n    const data = parsedOutput.body;\n    if (data.Message !== undefined && data.Message !== null) {\n        contents.Message = (0, smithy_client_1.expectString)(data.Message);\n    }\n    if (data.Type !== undefined && data.Type !== null) {\n        contents.Type = (0, smithy_client_1.expectString)(data.Type);\n    }\n    return contents;\n};\nconst deserializeAws_restJson1TooManyRequestsExceptionResponse = async (parsedOutput, context) => {\n    const contents = {\n        name: \"TooManyRequestsException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        Reason: undefined,\n        Type: undefined,\n        message: undefined,\n        retryAfterSeconds: undefined,\n    };\n    if (parsedOutput.headers[\"retry-after\"] !== undefined) {\n        contents.retryAfterSeconds = parsedOutput.headers[\"retry-after\"];\n    }\n    const data = parsedOutput.body;\n    if (data.Reason !== undefined && data.Reason !== null) {\n        contents.Reason = (0, smithy_client_1.expectString)(data.Reason);\n    }\n    if (data.Type !== undefined && data.Type !== null) {\n        contents.Type = (0, smithy_client_1.expectString)(data.Type);\n    }\n    if (data.message !== undefined && data.message !== null) {\n        contents.message = (0, smithy_client_1.expectString)(data.message);\n    }\n    return contents;\n};\nconst deserializeAws_restJson1UnsupportedMediaTypeExceptionResponse = async (parsedOutput, context) => {\n    const contents = {\n        name: \"UnsupportedMediaTypeException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        Type: undefined,\n        message: undefined,\n    };\n    const data = parsedOutput.body;\n    if (data.Type !== undefined && data.Type !== null) {\n        contents.Type = (0, smithy_client_1.expectString)(data.Type);\n    }\n    if (data.message !== undefined && data.message !== null) {\n        contents.message = (0, smithy_client_1.expectString)(data.message);\n    }\n    return contents;\n};\nconst serializeAws_restJson1AdditionalVersionWeights = (input, context) => {\n    return Object.entries(input).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        return {\n            ...acc,\n            [key]: (0, smithy_client_1.serializeFloat)(value),\n        };\n    }, {});\n};\nconst serializeAws_restJson1AliasRoutingConfiguration = (input, context) => {\n    return {\n        ...(input.AdditionalVersionWeights !== undefined &&\n            input.AdditionalVersionWeights !== null && {\n            AdditionalVersionWeights: serializeAws_restJson1AdditionalVersionWeights(input.AdditionalVersionWeights, context),\n        }),\n    };\n};\nconst serializeAws_restJson1AllowedPublishers = (input, context) => {\n    return {\n        ...(input.SigningProfileVersionArns !== undefined &&\n            input.SigningProfileVersionArns !== null && {\n            SigningProfileVersionArns: serializeAws_restJson1SigningProfileVersionArns(input.SigningProfileVersionArns, context),\n        }),\n    };\n};\nconst serializeAws_restJson1CodeSigningPolicies = (input, context) => {\n    return {\n        ...(input.UntrustedArtifactOnDeployment !== undefined &&\n            input.UntrustedArtifactOnDeployment !== null && {\n            UntrustedArtifactOnDeployment: input.UntrustedArtifactOnDeployment,\n        }),\n    };\n};\nconst serializeAws_restJson1CompatibleRuntimes = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return entry;\n    });\n};\nconst serializeAws_restJson1DeadLetterConfig = (input, context) => {\n    return {\n        ...(input.TargetArn !== undefined && input.TargetArn !== null && { TargetArn: input.TargetArn }),\n    };\n};\nconst serializeAws_restJson1DestinationConfig = (input, context) => {\n    return {\n        ...(input.OnFailure !== undefined &&\n            input.OnFailure !== null && { OnFailure: serializeAws_restJson1OnFailure(input.OnFailure, context) }),\n        ...(input.OnSuccess !== undefined &&\n            input.OnSuccess !== null && { OnSuccess: serializeAws_restJson1OnSuccess(input.OnSuccess, context) }),\n    };\n};\nconst serializeAws_restJson1EndpointLists = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return entry;\n    });\n};\nconst serializeAws_restJson1Endpoints = (input, context) => {\n    return Object.entries(input).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        return {\n            ...acc,\n            [key]: serializeAws_restJson1EndpointLists(value, context),\n        };\n    }, {});\n};\nconst serializeAws_restJson1Environment = (input, context) => {\n    return {\n        ...(input.Variables !== undefined &&\n            input.Variables !== null && { Variables: serializeAws_restJson1EnvironmentVariables(input.Variables, context) }),\n    };\n};\nconst serializeAws_restJson1EnvironmentVariables = (input, context) => {\n    return Object.entries(input).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        return {\n            ...acc,\n            [key]: value,\n        };\n    }, {});\n};\nconst serializeAws_restJson1FileSystemConfig = (input, context) => {\n    return {\n        ...(input.Arn !== undefined && input.Arn !== null && { Arn: input.Arn }),\n        ...(input.LocalMountPath !== undefined &&\n            input.LocalMountPath !== null && { LocalMountPath: input.LocalMountPath }),\n    };\n};\nconst serializeAws_restJson1FileSystemConfigList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return serializeAws_restJson1FileSystemConfig(entry, context);\n    });\n};\nconst serializeAws_restJson1FunctionCode = (input, context) => {\n    return {\n        ...(input.ImageUri !== undefined && input.ImageUri !== null && { ImageUri: input.ImageUri }),\n        ...(input.S3Bucket !== undefined && input.S3Bucket !== null && { S3Bucket: input.S3Bucket }),\n        ...(input.S3Key !== undefined && input.S3Key !== null && { S3Key: input.S3Key }),\n        ...(input.S3ObjectVersion !== undefined &&\n            input.S3ObjectVersion !== null && { S3ObjectVersion: input.S3ObjectVersion }),\n        ...(input.ZipFile !== undefined && input.ZipFile !== null && { ZipFile: context.base64Encoder(input.ZipFile) }),\n    };\n};\nconst serializeAws_restJson1FunctionResponseTypeList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return entry;\n    });\n};\nconst serializeAws_restJson1ImageConfig = (input, context) => {\n    return {\n        ...(input.Command !== undefined &&\n            input.Command !== null && { Command: serializeAws_restJson1StringList(input.Command, context) }),\n        ...(input.EntryPoint !== undefined &&\n            input.EntryPoint !== null && { EntryPoint: serializeAws_restJson1StringList(input.EntryPoint, context) }),\n        ...(input.WorkingDirectory !== undefined &&\n            input.WorkingDirectory !== null && { WorkingDirectory: input.WorkingDirectory }),\n    };\n};\nconst serializeAws_restJson1LayerList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return entry;\n    });\n};\nconst serializeAws_restJson1LayerVersionContentInput = (input, context) => {\n    return {\n        ...(input.S3Bucket !== undefined && input.S3Bucket !== null && { S3Bucket: input.S3Bucket }),\n        ...(input.S3Key !== undefined && input.S3Key !== null && { S3Key: input.S3Key }),\n        ...(input.S3ObjectVersion !== undefined &&\n            input.S3ObjectVersion !== null && { S3ObjectVersion: input.S3ObjectVersion }),\n        ...(input.ZipFile !== undefined && input.ZipFile !== null && { ZipFile: context.base64Encoder(input.ZipFile) }),\n    };\n};\nconst serializeAws_restJson1OnFailure = (input, context) => {\n    return {\n        ...(input.Destination !== undefined && input.Destination !== null && { Destination: input.Destination }),\n    };\n};\nconst serializeAws_restJson1OnSuccess = (input, context) => {\n    return {\n        ...(input.Destination !== undefined && input.Destination !== null && { Destination: input.Destination }),\n    };\n};\nconst serializeAws_restJson1Queues = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return entry;\n    });\n};\nconst serializeAws_restJson1SecurityGroupIds = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return entry;\n    });\n};\nconst serializeAws_restJson1SelfManagedEventSource = (input, context) => {\n    return {\n        ...(input.Endpoints !== undefined &&\n            input.Endpoints !== null && { Endpoints: serializeAws_restJson1Endpoints(input.Endpoints, context) }),\n    };\n};\nconst serializeAws_restJson1SigningProfileVersionArns = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return entry;\n    });\n};\nconst serializeAws_restJson1SourceAccessConfiguration = (input, context) => {\n    return {\n        ...(input.Type !== undefined && input.Type !== null && { Type: input.Type }),\n        ...(input.URI !== undefined && input.URI !== null && { URI: input.URI }),\n    };\n};\nconst serializeAws_restJson1SourceAccessConfigurations = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return serializeAws_restJson1SourceAccessConfiguration(entry, context);\n    });\n};\nconst serializeAws_restJson1StringList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return entry;\n    });\n};\nconst serializeAws_restJson1SubnetIds = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return entry;\n    });\n};\nconst serializeAws_restJson1Tags = (input, context) => {\n    return Object.entries(input).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        return {\n            ...acc,\n            [key]: value,\n        };\n    }, {});\n};\nconst serializeAws_restJson1Topics = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return entry;\n    });\n};\nconst serializeAws_restJson1TracingConfig = (input, context) => {\n    return {\n        ...(input.Mode !== undefined && input.Mode !== null && { Mode: input.Mode }),\n    };\n};\nconst serializeAws_restJson1VpcConfig = (input, context) => {\n    return {\n        ...(input.SecurityGroupIds !== undefined &&\n            input.SecurityGroupIds !== null && {\n            SecurityGroupIds: serializeAws_restJson1SecurityGroupIds(input.SecurityGroupIds, context),\n        }),\n        ...(input.SubnetIds !== undefined &&\n            input.SubnetIds !== null && { SubnetIds: serializeAws_restJson1SubnetIds(input.SubnetIds, context) }),\n    };\n};\nconst deserializeAws_restJson1AccountLimit = (output, context) => {\n    return {\n        CodeSizeUnzipped: (0, smithy_client_1.expectLong)(output.CodeSizeUnzipped),\n        CodeSizeZipped: (0, smithy_client_1.expectLong)(output.CodeSizeZipped),\n        ConcurrentExecutions: (0, smithy_client_1.expectInt32)(output.ConcurrentExecutions),\n        TotalCodeSize: (0, smithy_client_1.expectLong)(output.TotalCodeSize),\n        UnreservedConcurrentExecutions: (0, smithy_client_1.expectInt32)(output.UnreservedConcurrentExecutions),\n    };\n};\nconst deserializeAws_restJson1AccountUsage = (output, context) => {\n    return {\n        FunctionCount: (0, smithy_client_1.expectLong)(output.FunctionCount),\n        TotalCodeSize: (0, smithy_client_1.expectLong)(output.TotalCodeSize),\n    };\n};\nconst deserializeAws_restJson1AdditionalVersionWeights = (output, context) => {\n    return Object.entries(output).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        return {\n            ...acc,\n            [key]: (0, smithy_client_1.limitedParseDouble)(value),\n        };\n    }, {});\n};\nconst deserializeAws_restJson1AliasConfiguration = (output, context) => {\n    return {\n        AliasArn: (0, smithy_client_1.expectString)(output.AliasArn),\n        Description: (0, smithy_client_1.expectString)(output.Description),\n        FunctionVersion: (0, smithy_client_1.expectString)(output.FunctionVersion),\n        Name: (0, smithy_client_1.expectString)(output.Name),\n        RevisionId: (0, smithy_client_1.expectString)(output.RevisionId),\n        RoutingConfig: output.RoutingConfig !== undefined && output.RoutingConfig !== null\n            ? deserializeAws_restJson1AliasRoutingConfiguration(output.RoutingConfig, context)\n            : undefined,\n    };\n};\nconst deserializeAws_restJson1AliasList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restJson1AliasConfiguration(entry, context);\n    });\n};\nconst deserializeAws_restJson1AliasRoutingConfiguration = (output, context) => {\n    return {\n        AdditionalVersionWeights: output.AdditionalVersionWeights !== undefined && output.AdditionalVersionWeights !== null\n            ? deserializeAws_restJson1AdditionalVersionWeights(output.AdditionalVersionWeights, context)\n            : undefined,\n    };\n};\nconst deserializeAws_restJson1AllowedPublishers = (output, context) => {\n    return {\n        SigningProfileVersionArns: output.SigningProfileVersionArns !== undefined && output.SigningProfileVersionArns !== null\n            ? deserializeAws_restJson1SigningProfileVersionArns(output.SigningProfileVersionArns, context)\n            : undefined,\n    };\n};\nconst deserializeAws_restJson1CodeSigningConfig = (output, context) => {\n    return {\n        AllowedPublishers: output.AllowedPublishers !== undefined && output.AllowedPublishers !== null\n            ? deserializeAws_restJson1AllowedPublishers(output.AllowedPublishers, context)\n            : undefined,\n        CodeSigningConfigArn: (0, smithy_client_1.expectString)(output.CodeSigningConfigArn),\n        CodeSigningConfigId: (0, smithy_client_1.expectString)(output.CodeSigningConfigId),\n        CodeSigningPolicies: output.CodeSigningPolicies !== undefined && output.CodeSigningPolicies !== null\n            ? deserializeAws_restJson1CodeSigningPolicies(output.CodeSigningPolicies, context)\n            : undefined,\n        Description: (0, smithy_client_1.expectString)(output.Description),\n        LastModified: (0, smithy_client_1.expectString)(output.LastModified),\n    };\n};\nconst deserializeAws_restJson1CodeSigningConfigList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restJson1CodeSigningConfig(entry, context);\n    });\n};\nconst deserializeAws_restJson1CodeSigningPolicies = (output, context) => {\n    return {\n        UntrustedArtifactOnDeployment: (0, smithy_client_1.expectString)(output.UntrustedArtifactOnDeployment),\n    };\n};\nconst deserializeAws_restJson1CompatibleRuntimes = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return (0, smithy_client_1.expectString)(entry);\n    });\n};\nconst deserializeAws_restJson1Concurrency = (output, context) => {\n    return {\n        ReservedConcurrentExecutions: (0, smithy_client_1.expectInt32)(output.ReservedConcurrentExecutions),\n    };\n};\nconst deserializeAws_restJson1DeadLetterConfig = (output, context) => {\n    return {\n        TargetArn: (0, smithy_client_1.expectString)(output.TargetArn),\n    };\n};\nconst deserializeAws_restJson1DestinationConfig = (output, context) => {\n    return {\n        OnFailure: output.OnFailure !== undefined && output.OnFailure !== null\n            ? deserializeAws_restJson1OnFailure(output.OnFailure, context)\n            : undefined,\n        OnSuccess: output.OnSuccess !== undefined && output.OnSuccess !== null\n            ? deserializeAws_restJson1OnSuccess(output.OnSuccess, context)\n            : undefined,\n    };\n};\nconst deserializeAws_restJson1EndpointLists = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return (0, smithy_client_1.expectString)(entry);\n    });\n};\nconst deserializeAws_restJson1Endpoints = (output, context) => {\n    return Object.entries(output).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        return {\n            ...acc,\n            [key]: deserializeAws_restJson1EndpointLists(value, context),\n        };\n    }, {});\n};\nconst deserializeAws_restJson1EnvironmentError = (output, context) => {\n    return {\n        ErrorCode: (0, smithy_client_1.expectString)(output.ErrorCode),\n        Message: (0, smithy_client_1.expectString)(output.Message),\n    };\n};\nconst deserializeAws_restJson1EnvironmentResponse = (output, context) => {\n    return {\n        Error: output.Error !== undefined && output.Error !== null\n            ? deserializeAws_restJson1EnvironmentError(output.Error, context)\n            : undefined,\n        Variables: output.Variables !== undefined && output.Variables !== null\n            ? deserializeAws_restJson1EnvironmentVariables(output.Variables, context)\n            : undefined,\n    };\n};\nconst deserializeAws_restJson1EnvironmentVariables = (output, context) => {\n    return Object.entries(output).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        return {\n            ...acc,\n            [key]: (0, smithy_client_1.expectString)(value),\n        };\n    }, {});\n};\nconst deserializeAws_restJson1EventSourceMappingConfiguration = (output, context) => {\n    return {\n        BatchSize: (0, smithy_client_1.expectInt32)(output.BatchSize),\n        BisectBatchOnFunctionError: (0, smithy_client_1.expectBoolean)(output.BisectBatchOnFunctionError),\n        DestinationConfig: output.DestinationConfig !== undefined && output.DestinationConfig !== null\n            ? deserializeAws_restJson1DestinationConfig(output.DestinationConfig, context)\n            : undefined,\n        EventSourceArn: (0, smithy_client_1.expectString)(output.EventSourceArn),\n        FunctionArn: (0, smithy_client_1.expectString)(output.FunctionArn),\n        FunctionResponseTypes: output.FunctionResponseTypes !== undefined && output.FunctionResponseTypes !== null\n            ? deserializeAws_restJson1FunctionResponseTypeList(output.FunctionResponseTypes, context)\n            : undefined,\n        LastModified: output.LastModified !== undefined && output.LastModified !== null\n            ? new Date(Math.round(output.LastModified * 1000))\n            : undefined,\n        LastProcessingResult: (0, smithy_client_1.expectString)(output.LastProcessingResult),\n        MaximumBatchingWindowInSeconds: (0, smithy_client_1.expectInt32)(output.MaximumBatchingWindowInSeconds),\n        MaximumRecordAgeInSeconds: (0, smithy_client_1.expectInt32)(output.MaximumRecordAgeInSeconds),\n        MaximumRetryAttempts: (0, smithy_client_1.expectInt32)(output.MaximumRetryAttempts),\n        ParallelizationFactor: (0, smithy_client_1.expectInt32)(output.ParallelizationFactor),\n        Queues: output.Queues !== undefined && output.Queues !== null\n            ? deserializeAws_restJson1Queues(output.Queues, context)\n            : undefined,\n        SelfManagedEventSource: output.SelfManagedEventSource !== undefined && output.SelfManagedEventSource !== null\n            ? deserializeAws_restJson1SelfManagedEventSource(output.SelfManagedEventSource, context)\n            : undefined,\n        SourceAccessConfigurations: output.SourceAccessConfigurations !== undefined && output.SourceAccessConfigurations !== null\n            ? deserializeAws_restJson1SourceAccessConfigurations(output.SourceAccessConfigurations, context)\n            : undefined,\n        StartingPosition: (0, smithy_client_1.expectString)(output.StartingPosition),\n        StartingPositionTimestamp: output.StartingPositionTimestamp !== undefined && output.StartingPositionTimestamp !== null\n            ? new Date(Math.round(output.StartingPositionTimestamp * 1000))\n            : undefined,\n        State: (0, smithy_client_1.expectString)(output.State),\n        StateTransitionReason: (0, smithy_client_1.expectString)(output.StateTransitionReason),\n        Topics: output.Topics !== undefined && output.Topics !== null\n            ? deserializeAws_restJson1Topics(output.Topics, context)\n            : undefined,\n        TumblingWindowInSeconds: (0, smithy_client_1.expectInt32)(output.TumblingWindowInSeconds),\n        UUID: (0, smithy_client_1.expectString)(output.UUID),\n    };\n};\nconst deserializeAws_restJson1EventSourceMappingsList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restJson1EventSourceMappingConfiguration(entry, context);\n    });\n};\nconst deserializeAws_restJson1FileSystemConfig = (output, context) => {\n    return {\n        Arn: (0, smithy_client_1.expectString)(output.Arn),\n        LocalMountPath: (0, smithy_client_1.expectString)(output.LocalMountPath),\n    };\n};\nconst deserializeAws_restJson1FileSystemConfigList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restJson1FileSystemConfig(entry, context);\n    });\n};\nconst deserializeAws_restJson1FunctionArnList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return (0, smithy_client_1.expectString)(entry);\n    });\n};\nconst deserializeAws_restJson1FunctionCodeLocation = (output, context) => {\n    return {\n        ImageUri: (0, smithy_client_1.expectString)(output.ImageUri),\n        Location: (0, smithy_client_1.expectString)(output.Location),\n        RepositoryType: (0, smithy_client_1.expectString)(output.RepositoryType),\n        ResolvedImageUri: (0, smithy_client_1.expectString)(output.ResolvedImageUri),\n    };\n};\nconst deserializeAws_restJson1FunctionConfiguration = (output, context) => {\n    return {\n        CodeSha256: (0, smithy_client_1.expectString)(output.CodeSha256),\n        CodeSize: (0, smithy_client_1.expectLong)(output.CodeSize),\n        DeadLetterConfig: output.DeadLetterConfig !== undefined && output.DeadLetterConfig !== null\n            ? deserializeAws_restJson1DeadLetterConfig(output.DeadLetterConfig, context)\n            : undefined,\n        Description: (0, smithy_client_1.expectString)(output.Description),\n        Environment: output.Environment !== undefined && output.Environment !== null\n            ? deserializeAws_restJson1EnvironmentResponse(output.Environment, context)\n            : undefined,\n        FileSystemConfigs: output.FileSystemConfigs !== undefined && output.FileSystemConfigs !== null\n            ? deserializeAws_restJson1FileSystemConfigList(output.FileSystemConfigs, context)\n            : undefined,\n        FunctionArn: (0, smithy_client_1.expectString)(output.FunctionArn),\n        FunctionName: (0, smithy_client_1.expectString)(output.FunctionName),\n        Handler: (0, smithy_client_1.expectString)(output.Handler),\n        ImageConfigResponse: output.ImageConfigResponse !== undefined && output.ImageConfigResponse !== null\n            ? deserializeAws_restJson1ImageConfigResponse(output.ImageConfigResponse, context)\n            : undefined,\n        KMSKeyArn: (0, smithy_client_1.expectString)(output.KMSKeyArn),\n        LastModified: (0, smithy_client_1.expectString)(output.LastModified),\n        LastUpdateStatus: (0, smithy_client_1.expectString)(output.LastUpdateStatus),\n        LastUpdateStatusReason: (0, smithy_client_1.expectString)(output.LastUpdateStatusReason),\n        LastUpdateStatusReasonCode: (0, smithy_client_1.expectString)(output.LastUpdateStatusReasonCode),\n        Layers: output.Layers !== undefined && output.Layers !== null\n            ? deserializeAws_restJson1LayersReferenceList(output.Layers, context)\n            : undefined,\n        MasterArn: (0, smithy_client_1.expectString)(output.MasterArn),\n        MemorySize: (0, smithy_client_1.expectInt32)(output.MemorySize),\n        PackageType: (0, smithy_client_1.expectString)(output.PackageType),\n        RevisionId: (0, smithy_client_1.expectString)(output.RevisionId),\n        Role: (0, smithy_client_1.expectString)(output.Role),\n        Runtime: (0, smithy_client_1.expectString)(output.Runtime),\n        SigningJobArn: (0, smithy_client_1.expectString)(output.SigningJobArn),\n        SigningProfileVersionArn: (0, smithy_client_1.expectString)(output.SigningProfileVersionArn),\n        State: (0, smithy_client_1.expectString)(output.State),\n        StateReason: (0, smithy_client_1.expectString)(output.StateReason),\n        StateReasonCode: (0, smithy_client_1.expectString)(output.StateReasonCode),\n        Timeout: (0, smithy_client_1.expectInt32)(output.Timeout),\n        TracingConfig: output.TracingConfig !== undefined && output.TracingConfig !== null\n            ? deserializeAws_restJson1TracingConfigResponse(output.TracingConfig, context)\n            : undefined,\n        Version: (0, smithy_client_1.expectString)(output.Version),\n        VpcConfig: output.VpcConfig !== undefined && output.VpcConfig !== null\n            ? deserializeAws_restJson1VpcConfigResponse(output.VpcConfig, context)\n            : undefined,\n    };\n};\nconst deserializeAws_restJson1FunctionEventInvokeConfig = (output, context) => {\n    return {\n        DestinationConfig: output.DestinationConfig !== undefined && output.DestinationConfig !== null\n            ? deserializeAws_restJson1DestinationConfig(output.DestinationConfig, context)\n            : undefined,\n        FunctionArn: (0, smithy_client_1.expectString)(output.FunctionArn),\n        LastModified: output.LastModified !== undefined && output.LastModified !== null\n            ? new Date(Math.round(output.LastModified * 1000))\n            : undefined,\n        MaximumEventAgeInSeconds: (0, smithy_client_1.expectInt32)(output.MaximumEventAgeInSeconds),\n        MaximumRetryAttempts: (0, smithy_client_1.expectInt32)(output.MaximumRetryAttempts),\n    };\n};\nconst deserializeAws_restJson1FunctionEventInvokeConfigList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restJson1FunctionEventInvokeConfig(entry, context);\n    });\n};\nconst deserializeAws_restJson1FunctionList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restJson1FunctionConfiguration(entry, context);\n    });\n};\nconst deserializeAws_restJson1FunctionResponseTypeList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return (0, smithy_client_1.expectString)(entry);\n    });\n};\nconst deserializeAws_restJson1ImageConfig = (output, context) => {\n    return {\n        Command: output.Command !== undefined && output.Command !== null\n            ? deserializeAws_restJson1StringList(output.Command, context)\n            : undefined,\n        EntryPoint: output.EntryPoint !== undefined && output.EntryPoint !== null\n            ? deserializeAws_restJson1StringList(output.EntryPoint, context)\n            : undefined,\n        WorkingDirectory: (0, smithy_client_1.expectString)(output.WorkingDirectory),\n    };\n};\nconst deserializeAws_restJson1ImageConfigError = (output, context) => {\n    return {\n        ErrorCode: (0, smithy_client_1.expectString)(output.ErrorCode),\n        Message: (0, smithy_client_1.expectString)(output.Message),\n    };\n};\nconst deserializeAws_restJson1ImageConfigResponse = (output, context) => {\n    return {\n        Error: output.Error !== undefined && output.Error !== null\n            ? deserializeAws_restJson1ImageConfigError(output.Error, context)\n            : undefined,\n        ImageConfig: output.ImageConfig !== undefined && output.ImageConfig !== null\n            ? deserializeAws_restJson1ImageConfig(output.ImageConfig, context)\n            : undefined,\n    };\n};\nconst deserializeAws_restJson1Layer = (output, context) => {\n    return {\n        Arn: (0, smithy_client_1.expectString)(output.Arn),\n        CodeSize: (0, smithy_client_1.expectLong)(output.CodeSize),\n        SigningJobArn: (0, smithy_client_1.expectString)(output.SigningJobArn),\n        SigningProfileVersionArn: (0, smithy_client_1.expectString)(output.SigningProfileVersionArn),\n    };\n};\nconst deserializeAws_restJson1LayersList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restJson1LayersListItem(entry, context);\n    });\n};\nconst deserializeAws_restJson1LayersListItem = (output, context) => {\n    return {\n        LatestMatchingVersion: output.LatestMatchingVersion !== undefined && output.LatestMatchingVersion !== null\n            ? deserializeAws_restJson1LayerVersionsListItem(output.LatestMatchingVersion, context)\n            : undefined,\n        LayerArn: (0, smithy_client_1.expectString)(output.LayerArn),\n        LayerName: (0, smithy_client_1.expectString)(output.LayerName),\n    };\n};\nconst deserializeAws_restJson1LayersReferenceList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restJson1Layer(entry, context);\n    });\n};\nconst deserializeAws_restJson1LayerVersionContentOutput = (output, context) => {\n    return {\n        CodeSha256: (0, smithy_client_1.expectString)(output.CodeSha256),\n        CodeSize: (0, smithy_client_1.expectLong)(output.CodeSize),\n        Location: (0, smithy_client_1.expectString)(output.Location),\n        SigningJobArn: (0, smithy_client_1.expectString)(output.SigningJobArn),\n        SigningProfileVersionArn: (0, smithy_client_1.expectString)(output.SigningProfileVersionArn),\n    };\n};\nconst deserializeAws_restJson1LayerVersionsList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restJson1LayerVersionsListItem(entry, context);\n    });\n};\nconst deserializeAws_restJson1LayerVersionsListItem = (output, context) => {\n    return {\n        CompatibleRuntimes: output.CompatibleRuntimes !== undefined && output.CompatibleRuntimes !== null\n            ? deserializeAws_restJson1CompatibleRuntimes(output.CompatibleRuntimes, context)\n            : undefined,\n        CreatedDate: (0, smithy_client_1.expectString)(output.CreatedDate),\n        Description: (0, smithy_client_1.expectString)(output.Description),\n        LayerVersionArn: (0, smithy_client_1.expectString)(output.LayerVersionArn),\n        LicenseInfo: (0, smithy_client_1.expectString)(output.LicenseInfo),\n        Version: (0, smithy_client_1.expectLong)(output.Version),\n    };\n};\nconst deserializeAws_restJson1OnFailure = (output, context) => {\n    return {\n        Destination: (0, smithy_client_1.expectString)(output.Destination),\n    };\n};\nconst deserializeAws_restJson1OnSuccess = (output, context) => {\n    return {\n        Destination: (0, smithy_client_1.expectString)(output.Destination),\n    };\n};\nconst deserializeAws_restJson1ProvisionedConcurrencyConfigList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restJson1ProvisionedConcurrencyConfigListItem(entry, context);\n    });\n};\nconst deserializeAws_restJson1ProvisionedConcurrencyConfigListItem = (output, context) => {\n    return {\n        AllocatedProvisionedConcurrentExecutions: (0, smithy_client_1.expectInt32)(output.AllocatedProvisionedConcurrentExecutions),\n        AvailableProvisionedConcurrentExecutions: (0, smithy_client_1.expectInt32)(output.AvailableProvisionedConcurrentExecutions),\n        FunctionArn: (0, smithy_client_1.expectString)(output.FunctionArn),\n        LastModified: (0, smithy_client_1.expectString)(output.LastModified),\n        RequestedProvisionedConcurrentExecutions: (0, smithy_client_1.expectInt32)(output.RequestedProvisionedConcurrentExecutions),\n        Status: (0, smithy_client_1.expectString)(output.Status),\n        StatusReason: (0, smithy_client_1.expectString)(output.StatusReason),\n    };\n};\nconst deserializeAws_restJson1Queues = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return (0, smithy_client_1.expectString)(entry);\n    });\n};\nconst deserializeAws_restJson1SecurityGroupIds = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return (0, smithy_client_1.expectString)(entry);\n    });\n};\nconst deserializeAws_restJson1SelfManagedEventSource = (output, context) => {\n    return {\n        Endpoints: output.Endpoints !== undefined && output.Endpoints !== null\n            ? deserializeAws_restJson1Endpoints(output.Endpoints, context)\n            : undefined,\n    };\n};\nconst deserializeAws_restJson1SigningProfileVersionArns = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return (0, smithy_client_1.expectString)(entry);\n    });\n};\nconst deserializeAws_restJson1SourceAccessConfiguration = (output, context) => {\n    return {\n        Type: (0, smithy_client_1.expectString)(output.Type),\n        URI: (0, smithy_client_1.expectString)(output.URI),\n    };\n};\nconst deserializeAws_restJson1SourceAccessConfigurations = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restJson1SourceAccessConfiguration(entry, context);\n    });\n};\nconst deserializeAws_restJson1StringList = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return (0, smithy_client_1.expectString)(entry);\n    });\n};\nconst deserializeAws_restJson1SubnetIds = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return (0, smithy_client_1.expectString)(entry);\n    });\n};\nconst deserializeAws_restJson1Tags = (output, context) => {\n    return Object.entries(output).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        return {\n            ...acc,\n            [key]: (0, smithy_client_1.expectString)(value),\n        };\n    }, {});\n};\nconst deserializeAws_restJson1Topics = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return (0, smithy_client_1.expectString)(entry);\n    });\n};\nconst deserializeAws_restJson1TracingConfigResponse = (output, context) => {\n    return {\n        Mode: (0, smithy_client_1.expectString)(output.Mode),\n    };\n};\nconst deserializeAws_restJson1VpcConfigResponse = (output, context) => {\n    return {\n        SecurityGroupIds: output.SecurityGroupIds !== undefined && output.SecurityGroupIds !== null\n            ? deserializeAws_restJson1SecurityGroupIds(output.SecurityGroupIds, context)\n            : undefined,\n        SubnetIds: output.SubnetIds !== undefined && output.SubnetIds !== null\n            ? deserializeAws_restJson1SubnetIds(output.SubnetIds, context)\n            : undefined,\n        VpcId: (0, smithy_client_1.expectString)(output.VpcId),\n    };\n};\nconst deserializeMetadata = (output) => {\n    var _a;\n    return ({\n        httpStatusCode: output.statusCode,\n        requestId: (_a = output.headers[\"x-amzn-requestid\"]) !== null && _a !== void 0 ? _a : output.headers[\"x-amzn-request-id\"],\n        extendedRequestId: output.headers[\"x-amz-id-2\"],\n        cfId: output.headers[\"x-amz-cf-id\"],\n    });\n};\n// Collect low-level response body stream to Uint8Array.\nconst collectBody = (streamBody = new Uint8Array(), context) => {\n    if (streamBody instanceof Uint8Array) {\n        return Promise.resolve(streamBody);\n    }\n    return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n};\n// Encode Uint8Array data into string with utf-8.\nconst collectBodyString = (streamBody, context) => collectBody(streamBody, context).then((body) => context.utf8Encoder(body));\nconst isSerializableHeaderValue = (value) => value !== undefined &&\n    value !== null &&\n    value !== \"\" &&\n    (!Object.getOwnPropertyNames(value).includes(\"length\") || value.length != 0) &&\n    (!Object.getOwnPropertyNames(value).includes(\"size\") || value.size != 0);\nconst parseBody = (streamBody, context) => collectBodyString(streamBody, context).then((encoded) => {\n    if (encoded.length) {\n        return JSON.parse(encoded);\n    }\n    return {};\n});\n/**\n * Load an error code for the aws.rest-json-1.1 protocol.\n */\nconst loadRestJsonErrorCode = (output, data) => {\n    const findKey = (object, key) => Object.keys(object).find((k) => k.toLowerCase() === key.toLowerCase());\n    const sanitizeErrorCode = (rawValue) => {\n        let cleanValue = rawValue;\n        if (cleanValue.indexOf(\":\") >= 0) {\n            cleanValue = cleanValue.split(\":\")[0];\n        }\n        if (cleanValue.indexOf(\"#\") >= 0) {\n            cleanValue = cleanValue.split(\"#\")[1];\n        }\n        return cleanValue;\n    };\n    const headerKey = findKey(output.headers, \"x-amzn-errortype\");\n    if (headerKey !== undefined) {\n        return sanitizeErrorCode(output.headers[headerKey]);\n    }\n    if (data.code !== undefined) {\n        return sanitizeErrorCode(data.code);\n    }\n    if (data[\"__type\"] !== undefined) {\n        return sanitizeErrorCode(data[\"__type\"]);\n    }\n    return \"\";\n};\n//# sourceMappingURL=Aws_restJson1.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRuntimeConfig = void 0;\nconst tslib_1 = require(\"tslib\");\nconst package_json_1 = (0, tslib_1.__importDefault)(require(\"./package.json\"));\nconst client_sts_1 = require(\"@aws-sdk/client-sts\");\nconst config_resolver_1 = require(\"@aws-sdk/config-resolver\");\nconst credential_provider_node_1 = require(\"@aws-sdk/credential-provider-node\");\nconst hash_node_1 = require(\"@aws-sdk/hash-node\");\nconst middleware_retry_1 = require(\"@aws-sdk/middleware-retry\");\nconst node_config_provider_1 = require(\"@aws-sdk/node-config-provider\");\nconst node_http_handler_1 = require(\"@aws-sdk/node-http-handler\");\nconst util_base64_node_1 = require(\"@aws-sdk/util-base64-node\");\nconst util_body_length_node_1 = require(\"@aws-sdk/util-body-length-node\");\nconst util_user_agent_node_1 = require(\"@aws-sdk/util-user-agent-node\");\nconst util_utf8_node_1 = require(\"@aws-sdk/util-utf8-node\");\nconst runtimeConfig_shared_1 = require(\"./runtimeConfig.shared\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * @internal\n */\nconst getRuntimeConfig = (config) => {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o;\n    (0, smithy_client_1.emitWarningIfUnsupportedVersion)(process.version);\n    const clientSharedValues = (0, runtimeConfig_shared_1.getRuntimeConfig)(config);\n    return {\n        ...clientSharedValues,\n        ...config,\n        runtime: \"node\",\n        base64Decoder: (_a = config === null || config === void 0 ? void 0 : config.base64Decoder) !== null && _a !== void 0 ? _a : util_base64_node_1.fromBase64,\n        base64Encoder: (_b = config === null || config === void 0 ? void 0 : config.base64Encoder) !== null && _b !== void 0 ? _b : util_base64_node_1.toBase64,\n        bodyLengthChecker: (_c = config === null || config === void 0 ? void 0 : config.bodyLengthChecker) !== null && _c !== void 0 ? _c : util_body_length_node_1.calculateBodyLength,\n        credentialDefaultProvider: (_d = config === null || config === void 0 ? void 0 : config.credentialDefaultProvider) !== null && _d !== void 0 ? _d : (0, client_sts_1.decorateDefaultCredentialProvider)(credential_provider_node_1.defaultProvider),\n        defaultUserAgentProvider: (_e = config === null || config === void 0 ? void 0 : config.defaultUserAgentProvider) !== null && _e !== void 0 ? _e : (0, util_user_agent_node_1.defaultUserAgent)({ serviceId: clientSharedValues.serviceId, clientVersion: package_json_1.default.version }),\n        maxAttempts: (_f = config === null || config === void 0 ? void 0 : config.maxAttempts) !== null && _f !== void 0 ? _f : (0, node_config_provider_1.loadConfig)(middleware_retry_1.NODE_MAX_ATTEMPT_CONFIG_OPTIONS),\n        region: (_g = config === null || config === void 0 ? void 0 : config.region) !== null && _g !== void 0 ? _g : (0, node_config_provider_1.loadConfig)(config_resolver_1.NODE_REGION_CONFIG_OPTIONS, config_resolver_1.NODE_REGION_CONFIG_FILE_OPTIONS),\n        requestHandler: (_h = config === null || config === void 0 ? void 0 : config.requestHandler) !== null && _h !== void 0 ? _h : new node_http_handler_1.NodeHttpHandler(),\n        retryMode: (_j = config === null || config === void 0 ? void 0 : config.retryMode) !== null && _j !== void 0 ? _j : (0, node_config_provider_1.loadConfig)(middleware_retry_1.NODE_RETRY_MODE_CONFIG_OPTIONS),\n        sha256: (_k = config === null || config === void 0 ? void 0 : config.sha256) !== null && _k !== void 0 ? _k : hash_node_1.Hash.bind(null, \"sha256\"),\n        streamCollector: (_l = config === null || config === void 0 ? void 0 : config.streamCollector) !== null && _l !== void 0 ? _l : node_http_handler_1.streamCollector,\n        utf8Decoder: (_m = config === null || config === void 0 ? void 0 : config.utf8Decoder) !== null && _m !== void 0 ? _m : util_utf8_node_1.fromUtf8,\n        utf8Encoder: (_o = config === null || config === void 0 ? void 0 : config.utf8Encoder) !== null && _o !== void 0 ? _o : util_utf8_node_1.toUtf8,\n    };\n};\nexports.getRuntimeConfig = getRuntimeConfig;\n//# sourceMappingURL=runtimeConfig.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRuntimeConfig = void 0;\nconst endpoints_1 = require(\"./endpoints\");\nconst url_parser_1 = require(\"@aws-sdk/url-parser\");\n/**\n * @internal\n */\nconst getRuntimeConfig = (config) => {\n    var _a, _b, _c, _d, _e;\n    return ({\n        apiVersion: \"2015-03-31\",\n        disableHostPrefix: (_a = config === null || config === void 0 ? void 0 : config.disableHostPrefix) !== null && _a !== void 0 ? _a : false,\n        logger: (_b = config === null || config === void 0 ? void 0 : config.logger) !== null && _b !== void 0 ? _b : {},\n        regionInfoProvider: (_c = config === null || config === void 0 ? void 0 : config.regionInfoProvider) !== null && _c !== void 0 ? _c : endpoints_1.defaultRegionInfoProvider,\n        serviceId: (_d = config === null || config === void 0 ? void 0 : config.serviceId) !== null && _d !== void 0 ? _d : \"Lambda\",\n        urlParser: (_e = config === null || config === void 0 ? void 0 : config.urlParser) !== null && _e !== void 0 ? _e : url_parser_1.parseUrl,\n    });\n};\nexports.getRuntimeConfig = getRuntimeConfig;\n//# sourceMappingURL=runtimeConfig.shared.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.waitUntilFunctionActive = exports.waitForFunctionActive = void 0;\nconst GetFunctionConfigurationCommand_1 = require(\"../commands/GetFunctionConfigurationCommand\");\nconst util_waiter_1 = require(\"@aws-sdk/util-waiter\");\nconst checkState = async (client, input) => {\n    let reason;\n    try {\n        let result = await client.send(new GetFunctionConfigurationCommand_1.GetFunctionConfigurationCommand(input));\n        reason = result;\n        try {\n            let returnComparator = () => {\n                return result.State;\n            };\n            if (returnComparator() === \"Active\") {\n                return { state: util_waiter_1.WaiterState.SUCCESS, reason };\n            }\n        }\n        catch (e) { }\n        try {\n            let returnComparator = () => {\n                return result.State;\n            };\n            if (returnComparator() === \"Failed\") {\n                return { state: util_waiter_1.WaiterState.FAILURE, reason };\n            }\n        }\n        catch (e) { }\n        try {\n            let returnComparator = () => {\n                return result.State;\n            };\n            if (returnComparator() === \"Pending\") {\n                return { state: util_waiter_1.WaiterState.RETRY, reason };\n            }\n        }\n        catch (e) { }\n    }\n    catch (exception) {\n        reason = exception;\n    }\n    return { state: util_waiter_1.WaiterState.RETRY, reason };\n};\n/**\n * Waits for the function's State to be Active.\n *  @deprecated Use waitUntilFunctionActive instead. waitForFunctionActive does not throw error in non-success cases.\n */\nconst waitForFunctionActive = async (params, input) => {\n    const serviceDefaults = { minDelay: 5, maxDelay: 120 };\n    return (0, util_waiter_1.createWaiter)({ ...serviceDefaults, ...params }, input, checkState);\n};\nexports.waitForFunctionActive = waitForFunctionActive;\n/**\n * Waits for the function's State to be Active.\n *  @param params - Waiter configuration options.\n *  @param input - The input to GetFunctionConfigurationCommand for polling.\n */\nconst waitUntilFunctionActive = async (params, input) => {\n    const serviceDefaults = { minDelay: 5, maxDelay: 120 };\n    const result = await (0, util_waiter_1.createWaiter)({ ...serviceDefaults, ...params }, input, checkState);\n    return (0, util_waiter_1.checkExceptions)(result);\n};\nexports.waitUntilFunctionActive = waitUntilFunctionActive;\n//# sourceMappingURL=waitForFunctionActive.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.waitUntilFunctionExists = exports.waitForFunctionExists = void 0;\nconst GetFunctionCommand_1 = require(\"../commands/GetFunctionCommand\");\nconst util_waiter_1 = require(\"@aws-sdk/util-waiter\");\nconst checkState = async (client, input) => {\n    let reason;\n    try {\n        let result = await client.send(new GetFunctionCommand_1.GetFunctionCommand(input));\n        reason = result;\n        return { state: util_waiter_1.WaiterState.SUCCESS, reason };\n    }\n    catch (exception) {\n        reason = exception;\n        if (exception.name && exception.name == \"ResourceNotFoundException\") {\n            return { state: util_waiter_1.WaiterState.RETRY, reason };\n        }\n    }\n    return { state: util_waiter_1.WaiterState.RETRY, reason };\n};\n/**\n *\n *  @deprecated Use waitUntilFunctionExists instead. waitForFunctionExists does not throw error in non-success cases.\n */\nconst waitForFunctionExists = async (params, input) => {\n    const serviceDefaults = { minDelay: 1, maxDelay: 120 };\n    return (0, util_waiter_1.createWaiter)({ ...serviceDefaults, ...params }, input, checkState);\n};\nexports.waitForFunctionExists = waitForFunctionExists;\n/**\n *\n *  @param params - Waiter configuration options.\n *  @param input - The input to GetFunctionCommand for polling.\n */\nconst waitUntilFunctionExists = async (params, input) => {\n    const serviceDefaults = { minDelay: 1, maxDelay: 120 };\n    const result = await (0, util_waiter_1.createWaiter)({ ...serviceDefaults, ...params }, input, checkState);\n    return (0, util_waiter_1.checkExceptions)(result);\n};\nexports.waitUntilFunctionExists = waitUntilFunctionExists;\n//# sourceMappingURL=waitForFunctionExists.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.waitUntilFunctionUpdated = exports.waitForFunctionUpdated = void 0;\nconst GetFunctionConfigurationCommand_1 = require(\"../commands/GetFunctionConfigurationCommand\");\nconst util_waiter_1 = require(\"@aws-sdk/util-waiter\");\nconst checkState = async (client, input) => {\n    let reason;\n    try {\n        let result = await client.send(new GetFunctionConfigurationCommand_1.GetFunctionConfigurationCommand(input));\n        reason = result;\n        try {\n            let returnComparator = () => {\n                return result.LastUpdateStatus;\n            };\n            if (returnComparator() === \"Successful\") {\n                return { state: util_waiter_1.WaiterState.SUCCESS, reason };\n            }\n        }\n        catch (e) { }\n        try {\n            let returnComparator = () => {\n                return result.LastUpdateStatus;\n            };\n            if (returnComparator() === \"Failed\") {\n                return { state: util_waiter_1.WaiterState.FAILURE, reason };\n            }\n        }\n        catch (e) { }\n        try {\n            let returnComparator = () => {\n                return result.LastUpdateStatus;\n            };\n            if (returnComparator() === \"InProgress\") {\n                return { state: util_waiter_1.WaiterState.RETRY, reason };\n            }\n        }\n        catch (e) { }\n    }\n    catch (exception) {\n        reason = exception;\n    }\n    return { state: util_waiter_1.WaiterState.RETRY, reason };\n};\n/**\n * Waits for the function's LastUpdateStatus to be Successful.\n *  @deprecated Use waitUntilFunctionUpdated instead. waitForFunctionUpdated does not throw error in non-success cases.\n */\nconst waitForFunctionUpdated = async (params, input) => {\n    const serviceDefaults = { minDelay: 5, maxDelay: 120 };\n    return (0, util_waiter_1.createWaiter)({ ...serviceDefaults, ...params }, input, checkState);\n};\nexports.waitForFunctionUpdated = waitForFunctionUpdated;\n/**\n * Waits for the function's LastUpdateStatus to be Successful.\n *  @param params - Waiter configuration options.\n *  @param input - The input to GetFunctionConfigurationCommand for polling.\n */\nconst waitUntilFunctionUpdated = async (params, input) => {\n    const serviceDefaults = { minDelay: 5, maxDelay: 120 };\n    const result = await (0, util_waiter_1.createWaiter)({ ...serviceDefaults, ...params }, input, checkState);\n    return (0, util_waiter_1.checkExceptions)(result);\n};\nexports.waitUntilFunctionUpdated = waitUntilFunctionUpdated;\n//# sourceMappingURL=waitForFunctionUpdated.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SSO = void 0;\nconst SSOClient_1 = require(\"./SSOClient\");\nconst GetRoleCredentialsCommand_1 = require(\"./commands/GetRoleCredentialsCommand\");\nconst ListAccountRolesCommand_1 = require(\"./commands/ListAccountRolesCommand\");\nconst ListAccountsCommand_1 = require(\"./commands/ListAccountsCommand\");\nconst LogoutCommand_1 = require(\"./commands/LogoutCommand\");\n/**\n * <p>AWS Single Sign-On Portal is a web service that makes it easy for you to assign user\n *       access to AWS SSO resources such as the user portal. Users can get AWS account applications\n *       and roles assigned to them and get federated into the application.</p>\n *\n *          <p>For general information about AWS SSO, see <a href=\"https://docs.aws.amazon.com/singlesignon/latest/userguide/what-is.html\">What is AWS\n *         Single Sign-On?</a> in the <i>AWS SSO User Guide</i>.</p>\n *\n *          <p>This API reference guide describes the AWS SSO Portal operations that you can call\n *       programatically and includes detailed information on data types and errors.</p>\n *\n *          <note>\n *             <p>AWS provides SDKs that consist of libraries and sample code for various programming\n *         languages and platforms, such as Java, Ruby, .Net, iOS, or Android. The SDKs provide a\n *         convenient way to create programmatic access to AWS SSO and other AWS services. For more\n *         information about the AWS SDKs, including how to download and install them, see <a href=\"http://aws.amazon.com/tools/\">Tools for Amazon Web Services</a>.</p>\n *          </note>\n */\nclass SSO extends SSOClient_1.SSOClient {\n    getRoleCredentials(args, optionsOrCb, cb) {\n        const command = new GetRoleCredentialsCommand_1.GetRoleCredentialsCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    listAccountRoles(args, optionsOrCb, cb) {\n        const command = new ListAccountRolesCommand_1.ListAccountRolesCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    listAccounts(args, optionsOrCb, cb) {\n        const command = new ListAccountsCommand_1.ListAccountsCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    logout(args, optionsOrCb, cb) {\n        const command = new LogoutCommand_1.LogoutCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n}\nexports.SSO = SSO;\n//# sourceMappingURL=SSO.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SSOClient = void 0;\nconst runtimeConfig_1 = require(\"./runtimeConfig\");\nconst config_resolver_1 = require(\"@aws-sdk/config-resolver\");\nconst middleware_content_length_1 = require(\"@aws-sdk/middleware-content-length\");\nconst middleware_host_header_1 = require(\"@aws-sdk/middleware-host-header\");\nconst middleware_logger_1 = require(\"@aws-sdk/middleware-logger\");\nconst middleware_retry_1 = require(\"@aws-sdk/middleware-retry\");\nconst middleware_user_agent_1 = require(\"@aws-sdk/middleware-user-agent\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>AWS Single Sign-On Portal is a web service that makes it easy for you to assign user\n *       access to AWS SSO resources such as the user portal. Users can get AWS account applications\n *       and roles assigned to them and get federated into the application.</p>\n *\n *          <p>For general information about AWS SSO, see <a href=\"https://docs.aws.amazon.com/singlesignon/latest/userguide/what-is.html\">What is AWS\n *         Single Sign-On?</a> in the <i>AWS SSO User Guide</i>.</p>\n *\n *          <p>This API reference guide describes the AWS SSO Portal operations that you can call\n *       programatically and includes detailed information on data types and errors.</p>\n *\n *          <note>\n *             <p>AWS provides SDKs that consist of libraries and sample code for various programming\n *         languages and platforms, such as Java, Ruby, .Net, iOS, or Android. The SDKs provide a\n *         convenient way to create programmatic access to AWS SSO and other AWS services. For more\n *         information about the AWS SDKs, including how to download and install them, see <a href=\"http://aws.amazon.com/tools/\">Tools for Amazon Web Services</a>.</p>\n *          </note>\n */\nclass SSOClient extends smithy_client_1.Client {\n    constructor(configuration) {\n        let _config_0 = (0, runtimeConfig_1.getRuntimeConfig)(configuration);\n        let _config_1 = (0, config_resolver_1.resolveRegionConfig)(_config_0);\n        let _config_2 = (0, config_resolver_1.resolveEndpointsConfig)(_config_1);\n        let _config_3 = (0, middleware_retry_1.resolveRetryConfig)(_config_2);\n        let _config_4 = (0, middleware_host_header_1.resolveHostHeaderConfig)(_config_3);\n        let _config_5 = (0, middleware_user_agent_1.resolveUserAgentConfig)(_config_4);\n        super(_config_5);\n        this.config = _config_5;\n        this.middlewareStack.use((0, middleware_retry_1.getRetryPlugin)(this.config));\n        this.middlewareStack.use((0, middleware_content_length_1.getContentLengthPlugin)(this.config));\n        this.middlewareStack.use((0, middleware_host_header_1.getHostHeaderPlugin)(this.config));\n        this.middlewareStack.use((0, middleware_logger_1.getLoggerPlugin)(this.config));\n        this.middlewareStack.use((0, middleware_user_agent_1.getUserAgentPlugin)(this.config));\n    }\n    /**\n     * Destroy underlying resources, like sockets. It's usually not necessary to do this.\n     * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.\n     * Otherwise, sockets might stay open for quite a long time before the server terminates them.\n     */\n    destroy() {\n        super.destroy();\n    }\n}\nexports.SSOClient = SSOClient;\n//# sourceMappingURL=SSOClient.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetRoleCredentialsCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restJson1_1 = require(\"../protocols/Aws_restJson1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Returns the STS short-term credentials for a given role name that is assigned to the\n *       user.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { SSOClient, GetRoleCredentialsCommand } from \"@aws-sdk/client-sso\"; // ES Modules import\n * // const { SSOClient, GetRoleCredentialsCommand } = require(\"@aws-sdk/client-sso\"); // CommonJS import\n * const client = new SSOClient(config);\n * const command = new GetRoleCredentialsCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link GetRoleCredentialsCommandInput} for command's `input` shape.\n * @see {@link GetRoleCredentialsCommandOutput} for command's `response` shape.\n * @see {@link SSOClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass GetRoleCredentialsCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"SSOClient\";\n        const commandName = \"GetRoleCredentialsCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.GetRoleCredentialsRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.GetRoleCredentialsResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restJson1_1.serializeAws_restJson1GetRoleCredentialsCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restJson1_1.deserializeAws_restJson1GetRoleCredentialsCommand)(output, context);\n    }\n}\nexports.GetRoleCredentialsCommand = GetRoleCredentialsCommand;\n//# sourceMappingURL=GetRoleCredentialsCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListAccountRolesCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restJson1_1 = require(\"../protocols/Aws_restJson1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Lists all roles that are assigned to the user for a given AWS account.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { SSOClient, ListAccountRolesCommand } from \"@aws-sdk/client-sso\"; // ES Modules import\n * // const { SSOClient, ListAccountRolesCommand } = require(\"@aws-sdk/client-sso\"); // CommonJS import\n * const client = new SSOClient(config);\n * const command = new ListAccountRolesCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link ListAccountRolesCommandInput} for command's `input` shape.\n * @see {@link ListAccountRolesCommandOutput} for command's `response` shape.\n * @see {@link SSOClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass ListAccountRolesCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"SSOClient\";\n        const commandName = \"ListAccountRolesCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.ListAccountRolesRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.ListAccountRolesResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restJson1_1.serializeAws_restJson1ListAccountRolesCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restJson1_1.deserializeAws_restJson1ListAccountRolesCommand)(output, context);\n    }\n}\nexports.ListAccountRolesCommand = ListAccountRolesCommand;\n//# sourceMappingURL=ListAccountRolesCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListAccountsCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restJson1_1 = require(\"../protocols/Aws_restJson1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Lists all AWS accounts assigned to the user. These AWS accounts are assigned by the\n *       administrator of the account. For more information, see <a href=\"https://docs.aws.amazon.com/singlesignon/latest/userguide/useraccess.html#assignusers\">Assign User Access</a> in the <i>AWS SSO User Guide</i>. This operation\n *       returns a paginated response.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { SSOClient, ListAccountsCommand } from \"@aws-sdk/client-sso\"; // ES Modules import\n * // const { SSOClient, ListAccountsCommand } = require(\"@aws-sdk/client-sso\"); // CommonJS import\n * const client = new SSOClient(config);\n * const command = new ListAccountsCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link ListAccountsCommandInput} for command's `input` shape.\n * @see {@link ListAccountsCommandOutput} for command's `response` shape.\n * @see {@link SSOClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass ListAccountsCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"SSOClient\";\n        const commandName = \"ListAccountsCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.ListAccountsRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.ListAccountsResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restJson1_1.serializeAws_restJson1ListAccountsCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restJson1_1.deserializeAws_restJson1ListAccountsCommand)(output, context);\n    }\n}\nexports.ListAccountsCommand = ListAccountsCommand;\n//# sourceMappingURL=ListAccountsCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LogoutCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_restJson1_1 = require(\"../protocols/Aws_restJson1\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Removes the client- and server-side session that is associated with the user.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { SSOClient, LogoutCommand } from \"@aws-sdk/client-sso\"; // ES Modules import\n * // const { SSOClient, LogoutCommand } = require(\"@aws-sdk/client-sso\"); // CommonJS import\n * const client = new SSOClient(config);\n * const command = new LogoutCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link LogoutCommandInput} for command's `input` shape.\n * @see {@link LogoutCommandOutput} for command's `response` shape.\n * @see {@link SSOClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass LogoutCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"SSOClient\";\n        const commandName = \"LogoutCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.LogoutRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: (output) => output,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_restJson1_1.serializeAws_restJson1LogoutCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_restJson1_1.deserializeAws_restJson1LogoutCommand)(output, context);\n    }\n}\nexports.LogoutCommand = LogoutCommand;\n//# sourceMappingURL=LogoutCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultRegionInfoProvider = void 0;\nconst config_resolver_1 = require(\"@aws-sdk/config-resolver\");\nconst regionHash = {\n    \"ap-southeast-1\": {\n        hostname: \"portal.sso.ap-southeast-1.amazonaws.com\",\n        signingRegion: \"ap-southeast-1\",\n    },\n    \"ap-southeast-2\": {\n        hostname: \"portal.sso.ap-southeast-2.amazonaws.com\",\n        signingRegion: \"ap-southeast-2\",\n    },\n    \"ca-central-1\": {\n        hostname: \"portal.sso.ca-central-1.amazonaws.com\",\n        signingRegion: \"ca-central-1\",\n    },\n    \"eu-central-1\": {\n        hostname: \"portal.sso.eu-central-1.amazonaws.com\",\n        signingRegion: \"eu-central-1\",\n    },\n    \"eu-west-1\": {\n        hostname: \"portal.sso.eu-west-1.amazonaws.com\",\n        signingRegion: \"eu-west-1\",\n    },\n    \"eu-west-2\": {\n        hostname: \"portal.sso.eu-west-2.amazonaws.com\",\n        signingRegion: \"eu-west-2\",\n    },\n    \"us-east-1\": {\n        hostname: \"portal.sso.us-east-1.amazonaws.com\",\n        signingRegion: \"us-east-1\",\n    },\n    \"us-east-2\": {\n        hostname: \"portal.sso.us-east-2.amazonaws.com\",\n        signingRegion: \"us-east-2\",\n    },\n    \"us-west-2\": {\n        hostname: \"portal.sso.us-west-2.amazonaws.com\",\n        signingRegion: \"us-west-2\",\n    },\n};\nconst partitionHash = {\n    aws: {\n        regions: [\n            \"af-south-1\",\n            \"ap-east-1\",\n            \"ap-northeast-1\",\n            \"ap-northeast-2\",\n            \"ap-northeast-3\",\n            \"ap-south-1\",\n            \"ap-southeast-1\",\n            \"ap-southeast-2\",\n            \"ca-central-1\",\n            \"eu-central-1\",\n            \"eu-north-1\",\n            \"eu-south-1\",\n            \"eu-west-1\",\n            \"eu-west-2\",\n            \"eu-west-3\",\n            \"me-south-1\",\n            \"sa-east-1\",\n            \"us-east-1\",\n            \"us-east-2\",\n            \"us-west-1\",\n            \"us-west-2\",\n        ],\n        hostname: \"portal.sso.{region}.amazonaws.com\",\n    },\n    \"aws-cn\": {\n        regions: [\"cn-north-1\", \"cn-northwest-1\"],\n        hostname: \"portal.sso.{region}.amazonaws.com.cn\",\n    },\n    \"aws-iso\": {\n        regions: [\"us-iso-east-1\"],\n        hostname: \"portal.sso.{region}.c2s.ic.gov\",\n    },\n    \"aws-iso-b\": {\n        regions: [\"us-isob-east-1\"],\n        hostname: \"portal.sso.{region}.sc2s.sgov.gov\",\n    },\n    \"aws-us-gov\": {\n        regions: [\"us-gov-east-1\", \"us-gov-west-1\"],\n        hostname: \"portal.sso.{region}.amazonaws.com\",\n    },\n};\nconst defaultRegionInfoProvider = async (region, options) => (0, config_resolver_1.getRegionInfo)(region, {\n    ...options,\n    signingService: \"awsssoportal\",\n    regionHash,\n    partitionHash,\n});\nexports.defaultRegionInfoProvider = defaultRegionInfoProvider;\n//# sourceMappingURL=endpoints.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\n(0, tslib_1.__exportStar)(require(\"./SSOClient\"), exports);\n(0, tslib_1.__exportStar)(require(\"./SSO\"), exports);\n(0, tslib_1.__exportStar)(require(\"./commands/GetRoleCredentialsCommand\"), exports);\n(0, tslib_1.__exportStar)(require(\"./commands/ListAccountRolesCommand\"), exports);\n(0, tslib_1.__exportStar)(require(\"./pagination/ListAccountRolesPaginator\"), exports);\n(0, tslib_1.__exportStar)(require(\"./commands/ListAccountsCommand\"), exports);\n(0, tslib_1.__exportStar)(require(\"./pagination/ListAccountsPaginator\"), exports);\n(0, tslib_1.__exportStar)(require(\"./commands/LogoutCommand\"), exports);\n(0, tslib_1.__exportStar)(require(\"./pagination/Interfaces\"), exports);\n(0, tslib_1.__exportStar)(require(\"./models/index\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\n(0, tslib_1.__exportStar)(require(\"./models_0\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LogoutRequest = exports.ListAccountsResponse = exports.ListAccountsRequest = exports.ListAccountRolesResponse = exports.RoleInfo = exports.ListAccountRolesRequest = exports.UnauthorizedException = exports.TooManyRequestsException = exports.ResourceNotFoundException = exports.InvalidRequestException = exports.GetRoleCredentialsResponse = exports.RoleCredentials = exports.GetRoleCredentialsRequest = exports.AccountInfo = void 0;\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nvar AccountInfo;\n(function (AccountInfo) {\n    /**\n     * @internal\n     */\n    AccountInfo.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(AccountInfo = exports.AccountInfo || (exports.AccountInfo = {}));\nvar GetRoleCredentialsRequest;\n(function (GetRoleCredentialsRequest) {\n    /**\n     * @internal\n     */\n    GetRoleCredentialsRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n        ...(obj.accessToken && { accessToken: smithy_client_1.SENSITIVE_STRING }),\n    });\n})(GetRoleCredentialsRequest = exports.GetRoleCredentialsRequest || (exports.GetRoleCredentialsRequest = {}));\nvar RoleCredentials;\n(function (RoleCredentials) {\n    /**\n     * @internal\n     */\n    RoleCredentials.filterSensitiveLog = (obj) => ({\n        ...obj,\n        ...(obj.secretAccessKey && { secretAccessKey: smithy_client_1.SENSITIVE_STRING }),\n        ...(obj.sessionToken && { sessionToken: smithy_client_1.SENSITIVE_STRING }),\n    });\n})(RoleCredentials = exports.RoleCredentials || (exports.RoleCredentials = {}));\nvar GetRoleCredentialsResponse;\n(function (GetRoleCredentialsResponse) {\n    /**\n     * @internal\n     */\n    GetRoleCredentialsResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n        ...(obj.roleCredentials && { roleCredentials: RoleCredentials.filterSensitiveLog(obj.roleCredentials) }),\n    });\n})(GetRoleCredentialsResponse = exports.GetRoleCredentialsResponse || (exports.GetRoleCredentialsResponse = {}));\nvar InvalidRequestException;\n(function (InvalidRequestException) {\n    /**\n     * @internal\n     */\n    InvalidRequestException.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(InvalidRequestException = exports.InvalidRequestException || (exports.InvalidRequestException = {}));\nvar ResourceNotFoundException;\n(function (ResourceNotFoundException) {\n    /**\n     * @internal\n     */\n    ResourceNotFoundException.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ResourceNotFoundException = exports.ResourceNotFoundException || (exports.ResourceNotFoundException = {}));\nvar TooManyRequestsException;\n(function (TooManyRequestsException) {\n    /**\n     * @internal\n     */\n    TooManyRequestsException.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(TooManyRequestsException = exports.TooManyRequestsException || (exports.TooManyRequestsException = {}));\nvar UnauthorizedException;\n(function (UnauthorizedException) {\n    /**\n     * @internal\n     */\n    UnauthorizedException.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(UnauthorizedException = exports.UnauthorizedException || (exports.UnauthorizedException = {}));\nvar ListAccountRolesRequest;\n(function (ListAccountRolesRequest) {\n    /**\n     * @internal\n     */\n    ListAccountRolesRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n        ...(obj.accessToken && { accessToken: smithy_client_1.SENSITIVE_STRING }),\n    });\n})(ListAccountRolesRequest = exports.ListAccountRolesRequest || (exports.ListAccountRolesRequest = {}));\nvar RoleInfo;\n(function (RoleInfo) {\n    /**\n     * @internal\n     */\n    RoleInfo.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(RoleInfo = exports.RoleInfo || (exports.RoleInfo = {}));\nvar ListAccountRolesResponse;\n(function (ListAccountRolesResponse) {\n    /**\n     * @internal\n     */\n    ListAccountRolesResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ListAccountRolesResponse = exports.ListAccountRolesResponse || (exports.ListAccountRolesResponse = {}));\nvar ListAccountsRequest;\n(function (ListAccountsRequest) {\n    /**\n     * @internal\n     */\n    ListAccountsRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n        ...(obj.accessToken && { accessToken: smithy_client_1.SENSITIVE_STRING }),\n    });\n})(ListAccountsRequest = exports.ListAccountsRequest || (exports.ListAccountsRequest = {}));\nvar ListAccountsResponse;\n(function (ListAccountsResponse) {\n    /**\n     * @internal\n     */\n    ListAccountsResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ListAccountsResponse = exports.ListAccountsResponse || (exports.ListAccountsResponse = {}));\nvar LogoutRequest;\n(function (LogoutRequest) {\n    /**\n     * @internal\n     */\n    LogoutRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n        ...(obj.accessToken && { accessToken: smithy_client_1.SENSITIVE_STRING }),\n    });\n})(LogoutRequest = exports.LogoutRequest || (exports.LogoutRequest = {}));\n//# sourceMappingURL=models_0.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=Interfaces.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.paginateListAccountRoles = void 0;\nconst SSO_1 = require(\"../SSO\");\nconst SSOClient_1 = require(\"../SSOClient\");\nconst ListAccountRolesCommand_1 = require(\"../commands/ListAccountRolesCommand\");\n/**\n * @private\n */\nconst makePagedClientRequest = async (client, input, ...args) => {\n    // @ts-ignore\n    return await client.send(new ListAccountRolesCommand_1.ListAccountRolesCommand(input), ...args);\n};\n/**\n * @private\n */\nconst makePagedRequest = async (client, input, ...args) => {\n    // @ts-ignore\n    return await client.listAccountRoles(input, ...args);\n};\nasync function* paginateListAccountRoles(config, input, ...additionalArguments) {\n    // ToDo: replace with actual type instead of typeof input.nextToken\n    let token = config.startingToken || undefined;\n    let hasNext = true;\n    let page;\n    while (hasNext) {\n        input.nextToken = token;\n        input[\"maxResults\"] = config.pageSize;\n        if (config.client instanceof SSO_1.SSO) {\n            page = await makePagedRequest(config.client, input, ...additionalArguments);\n        }\n        else if (config.client instanceof SSOClient_1.SSOClient) {\n            page = await makePagedClientRequest(config.client, input, ...additionalArguments);\n        }\n        else {\n            throw new Error(\"Invalid client, expected SSO | SSOClient\");\n        }\n        yield page;\n        token = page.nextToken;\n        hasNext = !!token;\n    }\n    // @ts-ignore\n    return undefined;\n}\nexports.paginateListAccountRoles = paginateListAccountRoles;\n//# sourceMappingURL=ListAccountRolesPaginator.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.paginateListAccounts = void 0;\nconst SSO_1 = require(\"../SSO\");\nconst SSOClient_1 = require(\"../SSOClient\");\nconst ListAccountsCommand_1 = require(\"../commands/ListAccountsCommand\");\n/**\n * @private\n */\nconst makePagedClientRequest = async (client, input, ...args) => {\n    // @ts-ignore\n    return await client.send(new ListAccountsCommand_1.ListAccountsCommand(input), ...args);\n};\n/**\n * @private\n */\nconst makePagedRequest = async (client, input, ...args) => {\n    // @ts-ignore\n    return await client.listAccounts(input, ...args);\n};\nasync function* paginateListAccounts(config, input, ...additionalArguments) {\n    // ToDo: replace with actual type instead of typeof input.nextToken\n    let token = config.startingToken || undefined;\n    let hasNext = true;\n    let page;\n    while (hasNext) {\n        input.nextToken = token;\n        input[\"maxResults\"] = config.pageSize;\n        if (config.client instanceof SSO_1.SSO) {\n            page = await makePagedRequest(config.client, input, ...additionalArguments);\n        }\n        else if (config.client instanceof SSOClient_1.SSOClient) {\n            page = await makePagedClientRequest(config.client, input, ...additionalArguments);\n        }\n        else {\n            throw new Error(\"Invalid client, expected SSO | SSOClient\");\n        }\n        yield page;\n        token = page.nextToken;\n        hasNext = !!token;\n    }\n    // @ts-ignore\n    return undefined;\n}\nexports.paginateListAccounts = paginateListAccounts;\n//# sourceMappingURL=ListAccountsPaginator.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserializeAws_restJson1LogoutCommand = exports.deserializeAws_restJson1ListAccountsCommand = exports.deserializeAws_restJson1ListAccountRolesCommand = exports.deserializeAws_restJson1GetRoleCredentialsCommand = exports.serializeAws_restJson1LogoutCommand = exports.serializeAws_restJson1ListAccountsCommand = exports.serializeAws_restJson1ListAccountRolesCommand = exports.serializeAws_restJson1GetRoleCredentialsCommand = void 0;\nconst protocol_http_1 = require(\"@aws-sdk/protocol-http\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst serializeAws_restJson1GetRoleCredentialsCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        ...(isSerializableHeaderValue(input.accessToken) && { \"x-amz-sso_bearer_token\": input.accessToken }),\n    };\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/federation/credentials\";\n    const query = {\n        ...(input.roleName !== undefined && { role_name: input.roleName }),\n        ...(input.accountId !== undefined && { account_id: input.accountId }),\n    };\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.serializeAws_restJson1GetRoleCredentialsCommand = serializeAws_restJson1GetRoleCredentialsCommand;\nconst serializeAws_restJson1ListAccountRolesCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        ...(isSerializableHeaderValue(input.accessToken) && { \"x-amz-sso_bearer_token\": input.accessToken }),\n    };\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/assignment/roles\";\n    const query = {\n        ...(input.nextToken !== undefined && { next_token: input.nextToken }),\n        ...(input.maxResults !== undefined && { max_result: input.maxResults.toString() }),\n        ...(input.accountId !== undefined && { account_id: input.accountId }),\n    };\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.serializeAws_restJson1ListAccountRolesCommand = serializeAws_restJson1ListAccountRolesCommand;\nconst serializeAws_restJson1ListAccountsCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        ...(isSerializableHeaderValue(input.accessToken) && { \"x-amz-sso_bearer_token\": input.accessToken }),\n    };\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/assignment/accounts\";\n    const query = {\n        ...(input.nextToken !== undefined && { next_token: input.nextToken }),\n        ...(input.maxResults !== undefined && { max_result: input.maxResults.toString() }),\n    };\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexports.serializeAws_restJson1ListAccountsCommand = serializeAws_restJson1ListAccountsCommand;\nconst serializeAws_restJson1LogoutCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        ...(isSerializableHeaderValue(input.accessToken) && { \"x-amz-sso_bearer_token\": input.accessToken }),\n    };\n    let resolvedPath = `${(basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\"}` + \"/logout\";\n    let body;\n    return new protocol_http_1.HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexports.serializeAws_restJson1LogoutCommand = serializeAws_restJson1LogoutCommand;\nconst deserializeAws_restJson1GetRoleCredentialsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1GetRoleCredentialsCommandError(output, context);\n    }\n    const contents = {\n        $metadata: deserializeMetadata(output),\n        roleCredentials: undefined,\n    };\n    const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\n    if (data.roleCredentials !== undefined && data.roleCredentials !== null) {\n        contents.roleCredentials = deserializeAws_restJson1RoleCredentials(data.roleCredentials, context);\n    }\n    return Promise.resolve(contents);\n};\nexports.deserializeAws_restJson1GetRoleCredentialsCommand = deserializeAws_restJson1GetRoleCredentialsCommand;\nconst deserializeAws_restJson1GetRoleCredentialsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidRequestException\":\n        case \"com.amazonaws.sso#InvalidRequestException\":\n            response = {\n                ...(await deserializeAws_restJson1InvalidRequestExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.sso#ResourceNotFoundException\":\n            response = {\n                ...(await deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.sso#TooManyRequestsException\":\n            response = {\n                ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"UnauthorizedException\":\n        case \"com.amazonaws.sso#UnauthorizedException\":\n            response = {\n                ...(await deserializeAws_restJson1UnauthorizedExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_restJson1ListAccountRolesCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1ListAccountRolesCommandError(output, context);\n    }\n    const contents = {\n        $metadata: deserializeMetadata(output),\n        nextToken: undefined,\n        roleList: undefined,\n    };\n    const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\n    if (data.nextToken !== undefined && data.nextToken !== null) {\n        contents.nextToken = (0, smithy_client_1.expectString)(data.nextToken);\n    }\n    if (data.roleList !== undefined && data.roleList !== null) {\n        contents.roleList = deserializeAws_restJson1RoleListType(data.roleList, context);\n    }\n    return Promise.resolve(contents);\n};\nexports.deserializeAws_restJson1ListAccountRolesCommand = deserializeAws_restJson1ListAccountRolesCommand;\nconst deserializeAws_restJson1ListAccountRolesCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidRequestException\":\n        case \"com.amazonaws.sso#InvalidRequestException\":\n            response = {\n                ...(await deserializeAws_restJson1InvalidRequestExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.sso#ResourceNotFoundException\":\n            response = {\n                ...(await deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.sso#TooManyRequestsException\":\n            response = {\n                ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"UnauthorizedException\":\n        case \"com.amazonaws.sso#UnauthorizedException\":\n            response = {\n                ...(await deserializeAws_restJson1UnauthorizedExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_restJson1ListAccountsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1ListAccountsCommandError(output, context);\n    }\n    const contents = {\n        $metadata: deserializeMetadata(output),\n        accountList: undefined,\n        nextToken: undefined,\n    };\n    const data = (0, smithy_client_1.expectNonNull)((0, smithy_client_1.expectObject)(await parseBody(output.body, context)), \"body\");\n    if (data.accountList !== undefined && data.accountList !== null) {\n        contents.accountList = deserializeAws_restJson1AccountListType(data.accountList, context);\n    }\n    if (data.nextToken !== undefined && data.nextToken !== null) {\n        contents.nextToken = (0, smithy_client_1.expectString)(data.nextToken);\n    }\n    return Promise.resolve(contents);\n};\nexports.deserializeAws_restJson1ListAccountsCommand = deserializeAws_restJson1ListAccountsCommand;\nconst deserializeAws_restJson1ListAccountsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidRequestException\":\n        case \"com.amazonaws.sso#InvalidRequestException\":\n            response = {\n                ...(await deserializeAws_restJson1InvalidRequestExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.sso#ResourceNotFoundException\":\n            response = {\n                ...(await deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.sso#TooManyRequestsException\":\n            response = {\n                ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"UnauthorizedException\":\n        case \"com.amazonaws.sso#UnauthorizedException\":\n            response = {\n                ...(await deserializeAws_restJson1UnauthorizedExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_restJson1LogoutCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1LogoutCommandError(output, context);\n    }\n    const contents = {\n        $metadata: deserializeMetadata(output),\n    };\n    await collectBody(output.body, context);\n    return Promise.resolve(contents);\n};\nexports.deserializeAws_restJson1LogoutCommand = deserializeAws_restJson1LogoutCommand;\nconst deserializeAws_restJson1LogoutCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidRequestException\":\n        case \"com.amazonaws.sso#InvalidRequestException\":\n            response = {\n                ...(await deserializeAws_restJson1InvalidRequestExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.sso#TooManyRequestsException\":\n            response = {\n                ...(await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"UnauthorizedException\":\n        case \"com.amazonaws.sso#UnauthorizedException\":\n            response = {\n                ...(await deserializeAws_restJson1UnauthorizedExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.code || parsedBody.Code || errorCode;\n            response = {\n                ...parsedBody,\n                name: `${errorCode}`,\n                message: parsedBody.message || parsedBody.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_restJson1InvalidRequestExceptionResponse = async (parsedOutput, context) => {\n    const contents = {\n        name: \"InvalidRequestException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        message: undefined,\n    };\n    const data = parsedOutput.body;\n    if (data.message !== undefined && data.message !== null) {\n        contents.message = (0, smithy_client_1.expectString)(data.message);\n    }\n    return contents;\n};\nconst deserializeAws_restJson1ResourceNotFoundExceptionResponse = async (parsedOutput, context) => {\n    const contents = {\n        name: \"ResourceNotFoundException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        message: undefined,\n    };\n    const data = parsedOutput.body;\n    if (data.message !== undefined && data.message !== null) {\n        contents.message = (0, smithy_client_1.expectString)(data.message);\n    }\n    return contents;\n};\nconst deserializeAws_restJson1TooManyRequestsExceptionResponse = async (parsedOutput, context) => {\n    const contents = {\n        name: \"TooManyRequestsException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        message: undefined,\n    };\n    const data = parsedOutput.body;\n    if (data.message !== undefined && data.message !== null) {\n        contents.message = (0, smithy_client_1.expectString)(data.message);\n    }\n    return contents;\n};\nconst deserializeAws_restJson1UnauthorizedExceptionResponse = async (parsedOutput, context) => {\n    const contents = {\n        name: \"UnauthorizedException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        message: undefined,\n    };\n    const data = parsedOutput.body;\n    if (data.message !== undefined && data.message !== null) {\n        contents.message = (0, smithy_client_1.expectString)(data.message);\n    }\n    return contents;\n};\nconst deserializeAws_restJson1AccountInfo = (output, context) => {\n    return {\n        accountId: (0, smithy_client_1.expectString)(output.accountId),\n        accountName: (0, smithy_client_1.expectString)(output.accountName),\n        emailAddress: (0, smithy_client_1.expectString)(output.emailAddress),\n    };\n};\nconst deserializeAws_restJson1AccountListType = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restJson1AccountInfo(entry, context);\n    });\n};\nconst deserializeAws_restJson1RoleCredentials = (output, context) => {\n    return {\n        accessKeyId: (0, smithy_client_1.expectString)(output.accessKeyId),\n        expiration: (0, smithy_client_1.expectLong)(output.expiration),\n        secretAccessKey: (0, smithy_client_1.expectString)(output.secretAccessKey),\n        sessionToken: (0, smithy_client_1.expectString)(output.sessionToken),\n    };\n};\nconst deserializeAws_restJson1RoleInfo = (output, context) => {\n    return {\n        accountId: (0, smithy_client_1.expectString)(output.accountId),\n        roleName: (0, smithy_client_1.expectString)(output.roleName),\n    };\n};\nconst deserializeAws_restJson1RoleListType = (output, context) => {\n    return (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restJson1RoleInfo(entry, context);\n    });\n};\nconst deserializeMetadata = (output) => {\n    var _a;\n    return ({\n        httpStatusCode: output.statusCode,\n        requestId: (_a = output.headers[\"x-amzn-requestid\"]) !== null && _a !== void 0 ? _a : output.headers[\"x-amzn-request-id\"],\n        extendedRequestId: output.headers[\"x-amz-id-2\"],\n        cfId: output.headers[\"x-amz-cf-id\"],\n    });\n};\n// Collect low-level response body stream to Uint8Array.\nconst collectBody = (streamBody = new Uint8Array(), context) => {\n    if (streamBody instanceof Uint8Array) {\n        return Promise.resolve(streamBody);\n    }\n    return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n};\n// Encode Uint8Array data into string with utf-8.\nconst collectBodyString = (streamBody, context) => collectBody(streamBody, context).then((body) => context.utf8Encoder(body));\nconst isSerializableHeaderValue = (value) => value !== undefined &&\n    value !== null &&\n    value !== \"\" &&\n    (!Object.getOwnPropertyNames(value).includes(\"length\") || value.length != 0) &&\n    (!Object.getOwnPropertyNames(value).includes(\"size\") || value.size != 0);\nconst parseBody = (streamBody, context) => collectBodyString(streamBody, context).then((encoded) => {\n    if (encoded.length) {\n        return JSON.parse(encoded);\n    }\n    return {};\n});\n/**\n * Load an error code for the aws.rest-json-1.1 protocol.\n */\nconst loadRestJsonErrorCode = (output, data) => {\n    const findKey = (object, key) => Object.keys(object).find((k) => k.toLowerCase() === key.toLowerCase());\n    const sanitizeErrorCode = (rawValue) => {\n        let cleanValue = rawValue;\n        if (cleanValue.indexOf(\":\") >= 0) {\n            cleanValue = cleanValue.split(\":\")[0];\n        }\n        if (cleanValue.indexOf(\"#\") >= 0) {\n            cleanValue = cleanValue.split(\"#\")[1];\n        }\n        return cleanValue;\n    };\n    const headerKey = findKey(output.headers, \"x-amzn-errortype\");\n    if (headerKey !== undefined) {\n        return sanitizeErrorCode(output.headers[headerKey]);\n    }\n    if (data.code !== undefined) {\n        return sanitizeErrorCode(data.code);\n    }\n    if (data[\"__type\"] !== undefined) {\n        return sanitizeErrorCode(data[\"__type\"]);\n    }\n    return \"\";\n};\n//# sourceMappingURL=Aws_restJson1.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRuntimeConfig = void 0;\nconst tslib_1 = require(\"tslib\");\nconst package_json_1 = (0, tslib_1.__importDefault)(require(\"./package.json\"));\nconst config_resolver_1 = require(\"@aws-sdk/config-resolver\");\nconst hash_node_1 = require(\"@aws-sdk/hash-node\");\nconst middleware_retry_1 = require(\"@aws-sdk/middleware-retry\");\nconst node_config_provider_1 = require(\"@aws-sdk/node-config-provider\");\nconst node_http_handler_1 = require(\"@aws-sdk/node-http-handler\");\nconst util_base64_node_1 = require(\"@aws-sdk/util-base64-node\");\nconst util_body_length_node_1 = require(\"@aws-sdk/util-body-length-node\");\nconst util_user_agent_node_1 = require(\"@aws-sdk/util-user-agent-node\");\nconst util_utf8_node_1 = require(\"@aws-sdk/util-utf8-node\");\nconst runtimeConfig_shared_1 = require(\"./runtimeConfig.shared\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * @internal\n */\nconst getRuntimeConfig = (config) => {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\n    (0, smithy_client_1.emitWarningIfUnsupportedVersion)(process.version);\n    const clientSharedValues = (0, runtimeConfig_shared_1.getRuntimeConfig)(config);\n    return {\n        ...clientSharedValues,\n        ...config,\n        runtime: \"node\",\n        base64Decoder: (_a = config === null || config === void 0 ? void 0 : config.base64Decoder) !== null && _a !== void 0 ? _a : util_base64_node_1.fromBase64,\n        base64Encoder: (_b = config === null || config === void 0 ? void 0 : config.base64Encoder) !== null && _b !== void 0 ? _b : util_base64_node_1.toBase64,\n        bodyLengthChecker: (_c = config === null || config === void 0 ? void 0 : config.bodyLengthChecker) !== null && _c !== void 0 ? _c : util_body_length_node_1.calculateBodyLength,\n        defaultUserAgentProvider: (_d = config === null || config === void 0 ? void 0 : config.defaultUserAgentProvider) !== null && _d !== void 0 ? _d : (0, util_user_agent_node_1.defaultUserAgent)({ serviceId: clientSharedValues.serviceId, clientVersion: package_json_1.default.version }),\n        maxAttempts: (_e = config === null || config === void 0 ? void 0 : config.maxAttempts) !== null && _e !== void 0 ? _e : (0, node_config_provider_1.loadConfig)(middleware_retry_1.NODE_MAX_ATTEMPT_CONFIG_OPTIONS),\n        region: (_f = config === null || config === void 0 ? void 0 : config.region) !== null && _f !== void 0 ? _f : (0, node_config_provider_1.loadConfig)(config_resolver_1.NODE_REGION_CONFIG_OPTIONS, config_resolver_1.NODE_REGION_CONFIG_FILE_OPTIONS),\n        requestHandler: (_g = config === null || config === void 0 ? void 0 : config.requestHandler) !== null && _g !== void 0 ? _g : new node_http_handler_1.NodeHttpHandler(),\n        retryMode: (_h = config === null || config === void 0 ? void 0 : config.retryMode) !== null && _h !== void 0 ? _h : (0, node_config_provider_1.loadConfig)(middleware_retry_1.NODE_RETRY_MODE_CONFIG_OPTIONS),\n        sha256: (_j = config === null || config === void 0 ? void 0 : config.sha256) !== null && _j !== void 0 ? _j : hash_node_1.Hash.bind(null, \"sha256\"),\n        streamCollector: (_k = config === null || config === void 0 ? void 0 : config.streamCollector) !== null && _k !== void 0 ? _k : node_http_handler_1.streamCollector,\n        utf8Decoder: (_l = config === null || config === void 0 ? void 0 : config.utf8Decoder) !== null && _l !== void 0 ? _l : util_utf8_node_1.fromUtf8,\n        utf8Encoder: (_m = config === null || config === void 0 ? void 0 : config.utf8Encoder) !== null && _m !== void 0 ? _m : util_utf8_node_1.toUtf8,\n    };\n};\nexports.getRuntimeConfig = getRuntimeConfig;\n//# sourceMappingURL=runtimeConfig.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRuntimeConfig = void 0;\nconst endpoints_1 = require(\"./endpoints\");\nconst url_parser_1 = require(\"@aws-sdk/url-parser\");\n/**\n * @internal\n */\nconst getRuntimeConfig = (config) => {\n    var _a, _b, _c, _d, _e;\n    return ({\n        apiVersion: \"2019-06-10\",\n        disableHostPrefix: (_a = config === null || config === void 0 ? void 0 : config.disableHostPrefix) !== null && _a !== void 0 ? _a : false,\n        logger: (_b = config === null || config === void 0 ? void 0 : config.logger) !== null && _b !== void 0 ? _b : {},\n        regionInfoProvider: (_c = config === null || config === void 0 ? void 0 : config.regionInfoProvider) !== null && _c !== void 0 ? _c : endpoints_1.defaultRegionInfoProvider,\n        serviceId: (_d = config === null || config === void 0 ? void 0 : config.serviceId) !== null && _d !== void 0 ? _d : \"SSO\",\n        urlParser: (_e = config === null || config === void 0 ? void 0 : config.urlParser) !== null && _e !== void 0 ? _e : url_parser_1.parseUrl,\n    });\n};\nexports.getRuntimeConfig = getRuntimeConfig;\n//# sourceMappingURL=runtimeConfig.shared.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.STS = void 0;\nconst STSClient_1 = require(\"./STSClient\");\nconst AssumeRoleCommand_1 = require(\"./commands/AssumeRoleCommand\");\nconst AssumeRoleWithSAMLCommand_1 = require(\"./commands/AssumeRoleWithSAMLCommand\");\nconst AssumeRoleWithWebIdentityCommand_1 = require(\"./commands/AssumeRoleWithWebIdentityCommand\");\nconst DecodeAuthorizationMessageCommand_1 = require(\"./commands/DecodeAuthorizationMessageCommand\");\nconst GetAccessKeyInfoCommand_1 = require(\"./commands/GetAccessKeyInfoCommand\");\nconst GetCallerIdentityCommand_1 = require(\"./commands/GetCallerIdentityCommand\");\nconst GetFederationTokenCommand_1 = require(\"./commands/GetFederationTokenCommand\");\nconst GetSessionTokenCommand_1 = require(\"./commands/GetSessionTokenCommand\");\n/**\n * <fullname>Security Token Service</fullname>\n *          <p>Security Token Service (STS) enables you to request temporary, limited-privilege\n *       credentials for Identity and Access Management (IAM) users or for users that you\n *       authenticate (federated users). This guide provides descriptions of the STS API. For\n *       more information about using this service, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp.html\">Temporary Security Credentials</a>.</p>\n */\nclass STS extends STSClient_1.STSClient {\n    assumeRole(args, optionsOrCb, cb) {\n        const command = new AssumeRoleCommand_1.AssumeRoleCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    assumeRoleWithSAML(args, optionsOrCb, cb) {\n        const command = new AssumeRoleWithSAMLCommand_1.AssumeRoleWithSAMLCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    assumeRoleWithWebIdentity(args, optionsOrCb, cb) {\n        const command = new AssumeRoleWithWebIdentityCommand_1.AssumeRoleWithWebIdentityCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    decodeAuthorizationMessage(args, optionsOrCb, cb) {\n        const command = new DecodeAuthorizationMessageCommand_1.DecodeAuthorizationMessageCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    getAccessKeyInfo(args, optionsOrCb, cb) {\n        const command = new GetAccessKeyInfoCommand_1.GetAccessKeyInfoCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    getCallerIdentity(args, optionsOrCb, cb) {\n        const command = new GetCallerIdentityCommand_1.GetCallerIdentityCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    getFederationToken(args, optionsOrCb, cb) {\n        const command = new GetFederationTokenCommand_1.GetFederationTokenCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n    getSessionToken(args, optionsOrCb, cb) {\n        const command = new GetSessionTokenCommand_1.GetSessionTokenCommand(args);\n        if (typeof optionsOrCb === \"function\") {\n            this.send(command, optionsOrCb);\n        }\n        else if (typeof cb === \"function\") {\n            if (typeof optionsOrCb !== \"object\")\n                throw new Error(`Expect http options but get ${typeof optionsOrCb}`);\n            this.send(command, optionsOrCb || {}, cb);\n        }\n        else {\n            return this.send(command, optionsOrCb);\n        }\n    }\n}\nexports.STS = STS;\n//# sourceMappingURL=STS.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.STSClient = void 0;\nconst runtimeConfig_1 = require(\"./runtimeConfig\");\nconst config_resolver_1 = require(\"@aws-sdk/config-resolver\");\nconst middleware_content_length_1 = require(\"@aws-sdk/middleware-content-length\");\nconst middleware_host_header_1 = require(\"@aws-sdk/middleware-host-header\");\nconst middleware_logger_1 = require(\"@aws-sdk/middleware-logger\");\nconst middleware_retry_1 = require(\"@aws-sdk/middleware-retry\");\nconst middleware_sdk_sts_1 = require(\"@aws-sdk/middleware-sdk-sts\");\nconst middleware_user_agent_1 = require(\"@aws-sdk/middleware-user-agent\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <fullname>Security Token Service</fullname>\n *          <p>Security Token Service (STS) enables you to request temporary, limited-privilege\n *       credentials for Identity and Access Management (IAM) users or for users that you\n *       authenticate (federated users). This guide provides descriptions of the STS API. For\n *       more information about using this service, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp.html\">Temporary Security Credentials</a>.</p>\n */\nclass STSClient extends smithy_client_1.Client {\n    constructor(configuration) {\n        let _config_0 = (0, runtimeConfig_1.getRuntimeConfig)(configuration);\n        let _config_1 = (0, config_resolver_1.resolveRegionConfig)(_config_0);\n        let _config_2 = (0, config_resolver_1.resolveEndpointsConfig)(_config_1);\n        let _config_3 = (0, middleware_retry_1.resolveRetryConfig)(_config_2);\n        let _config_4 = (0, middleware_host_header_1.resolveHostHeaderConfig)(_config_3);\n        let _config_5 = (0, middleware_sdk_sts_1.resolveStsAuthConfig)(_config_4, { stsClientCtor: STSClient });\n        let _config_6 = (0, middleware_user_agent_1.resolveUserAgentConfig)(_config_5);\n        super(_config_6);\n        this.config = _config_6;\n        this.middlewareStack.use((0, middleware_retry_1.getRetryPlugin)(this.config));\n        this.middlewareStack.use((0, middleware_content_length_1.getContentLengthPlugin)(this.config));\n        this.middlewareStack.use((0, middleware_host_header_1.getHostHeaderPlugin)(this.config));\n        this.middlewareStack.use((0, middleware_logger_1.getLoggerPlugin)(this.config));\n        this.middlewareStack.use((0, middleware_user_agent_1.getUserAgentPlugin)(this.config));\n    }\n    /**\n     * Destroy underlying resources, like sockets. It's usually not necessary to do this.\n     * However in Node.js, it's best to explicitly shut down the client's agent when it is no longer needed.\n     * Otherwise, sockets might stay open for quite a long time before the server terminates them.\n     */\n    destroy() {\n        super.destroy();\n    }\n}\nexports.STSClient = STSClient;\n//# sourceMappingURL=STSClient.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AssumeRoleCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst middleware_signing_1 = require(\"@aws-sdk/middleware-signing\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Returns a set of temporary security credentials that you can use to access Amazon Web Services\n *             resources that you might not normally have access to. These temporary credentials\n *             consist of an access key ID, a secret access key, and a security token. Typically, you\n *             use <code>AssumeRole</code> within your account or for cross-account access. For a\n *             comparison of <code>AssumeRole</code> with other API operations that produce temporary\n *             credentials, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html\">Requesting Temporary Security\n *                 Credentials</a> and <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html#stsapi_comparison\">Comparing\n *                 the STS API operations</a> in the\n *             <i>IAM User Guide</i>.</p>\n *          <p>\n *             <b>Permissions</b>\n *          </p>\n *          <p>The temporary security credentials created by <code>AssumeRole</code> can be used to\n *          make API calls to any Amazon Web Services service with the following exception: You cannot call the\n *          STS <code>GetFederationToken</code> or <code>GetSessionToken</code> API\n *          operations.</p>\n *          <p>(Optional) You can pass inline or managed <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\">session policies</a> to\n *          this operation. You can pass a single JSON policy document to use as an inline session\n *          policy. You can also specify up to 10 managed policies to use as managed session policies.\n *          The plaintext that you use for both inline and managed session policies can't exceed 2,048\n *          characters. Passing policies to this operation returns new\n *          temporary credentials. The resulting session's permissions are the intersection of the\n *          role's identity-based policy and the session policies. You can use the role's temporary\n *          credentials in subsequent Amazon Web Services API calls to access resources in the account that owns\n *          the role. You cannot use session policies to grant more permissions than those allowed\n *          by the identity-based policy of the role that is being assumed. For more information, see\n *             <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\">Session\n *             Policies</a> in the <i>IAM User Guide</i>.</p>\n *          <p>To assume a role from a different account, your account must be trusted by the\n *          role. The trust relationship is defined in the role's trust policy when the role is\n *          created. That trust policy states which accounts are allowed to delegate that access to\n *          users in the account. </p>\n *          <p>A user who wants to access a role in a different account must also have permissions that\n *          are delegated from the user account administrator. The administrator must attach a policy\n *          that allows the user to call <code>AssumeRole</code> for the ARN of the role in the other\n *          account. If the user is in the same account as the role, then you can do either of the\n *          following:</p>\n *          <ul>\n *             <li>\n *                <p>Attach a policy to the user (identical to the previous user in a different\n *                account).</p>\n *             </li>\n *             <li>\n *                <p>Add the user as a principal directly in the role's trust policy.</p>\n *             </li>\n *          </ul>\n *          <p>In this case, the trust policy acts as an IAM resource-based policy. Users in the same\n *          account as the role do not need explicit permission to assume the role. For more\n *          information about trust policies and resource-based policies, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html\">IAM Policies</a> in\n *          the <i>IAM User Guide</i>.</p>\n *          <p>\n *             <b>Tags</b>\n *          </p>\n *          <p>(Optional) You can pass tag key-value pairs to your session. These tags are called\n *          session tags. For more information about session tags, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_session-tags.html\">Passing Session Tags in STS</a> in the\n *             <i>IAM User Guide</i>.</p>\n *          <p>An administrator must grant you the permissions necessary to pass session tags. The\n *          administrator can also create granular permissions to allow you to pass only specific\n *          session tags. For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/tutorial_attribute-based-access-control.html\">Tutorial: Using Tags\n *             for Attribute-Based Access Control</a> in the\n *          <i>IAM User Guide</i>.</p>\n *          <p>You can set the session tags as transitive. Transitive tags persist during role\n *          chaining. For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_session-tags.html#id_session-tags_role-chaining\">Chaining Roles\n *             with Session Tags</a> in the <i>IAM User Guide</i>.</p>\n *          <p>\n *             <b>Using MFA with AssumeRole</b>\n *          </p>\n *          <p>(Optional) You can include multi-factor authentication (MFA) information when you call\n *             <code>AssumeRole</code>. This is useful for cross-account scenarios to ensure that the\n *          user that assumes the role has been authenticated with an Amazon Web Services MFA device. In that\n *          scenario, the trust policy of the role being assumed includes a condition that tests for\n *          MFA authentication. If the caller does not include valid MFA information, the request to\n *          assume the role is denied. The condition in a trust policy that tests for MFA\n *          authentication might look like the following example.</p>\n *          <p>\n *             <code>\"Condition\": {\"Bool\": {\"aws:MultiFactorAuthPresent\": true}}</code>\n *          </p>\n *          <p>For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/MFAProtectedAPI.html\">Configuring MFA-Protected API Access</a>\n *          in the <i>IAM User Guide</i> guide.</p>\n *          <p>To use MFA with <code>AssumeRole</code>, you pass values for the\n *             <code>SerialNumber</code> and <code>TokenCode</code> parameters. The\n *             <code>SerialNumber</code> value identifies the user's hardware or virtual MFA device.\n *          The <code>TokenCode</code> is the time-based one-time password (TOTP) that the MFA device\n *          produces. </p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { STSClient, AssumeRoleCommand } from \"@aws-sdk/client-sts\"; // ES Modules import\n * // const { STSClient, AssumeRoleCommand } = require(\"@aws-sdk/client-sts\"); // CommonJS import\n * const client = new STSClient(config);\n * const command = new AssumeRoleCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link AssumeRoleCommandInput} for command's `input` shape.\n * @see {@link AssumeRoleCommandOutput} for command's `response` shape.\n * @see {@link STSClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass AssumeRoleCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_signing_1.getAwsAuthPlugin)(configuration));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"STSClient\";\n        const commandName = \"AssumeRoleCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.AssumeRoleRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.AssumeRoleResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_query_1.serializeAws_queryAssumeRoleCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_query_1.deserializeAws_queryAssumeRoleCommand)(output, context);\n    }\n}\nexports.AssumeRoleCommand = AssumeRoleCommand;\n//# sourceMappingURL=AssumeRoleCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AssumeRoleWithSAMLCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Returns a set of temporary security credentials for users who have been authenticated\n *          via a SAML authentication response. This operation provides a mechanism for tying an\n *          enterprise identity store or directory to role-based Amazon Web Services access without user-specific\n *          credentials or configuration. For a comparison of <code>AssumeRoleWithSAML</code> with the\n *          other API operations that produce temporary credentials, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html\">Requesting Temporary Security\n *             Credentials</a> and <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html#stsapi_comparison\">Comparing the\n *             STS API operations</a> in the <i>IAM User Guide</i>.</p>\n *          <p>The temporary security credentials returned by this operation consist of an access key\n *          ID, a secret access key, and a security token. Applications can use these temporary\n *          security credentials to sign calls to Amazon Web Services services.</p>\n *          <p>\n *             <b>Session Duration</b>\n *          </p>\n *          <p>By default, the temporary security credentials created by\n *             <code>AssumeRoleWithSAML</code> last for one hour. However, you can use the optional\n *             <code>DurationSeconds</code> parameter to specify the duration of your session. Your\n *          role session lasts for the duration that you specify, or until the time specified in the\n *          SAML authentication response's <code>SessionNotOnOrAfter</code> value, whichever is\n *          shorter. You can provide a <code>DurationSeconds</code> value from 900 seconds (15 minutes)\n *          up to the maximum session duration setting for the role. This setting can have a value from\n *          1 hour to 12 hours. To learn how to view the maximum value for your role, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use.html#id_roles_use_view-role-max-session\">View the\n *             Maximum Session Duration Setting for a Role</a> in the\n *             <i>IAM User Guide</i>. The maximum session duration limit applies when\n *          you use the <code>AssumeRole*</code> API operations or the <code>assume-role*</code> CLI\n *          commands. However the limit does not apply when you use those operations to create a\n *          console URL. For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use.html\">Using IAM Roles</a> in the\n *             <i>IAM User Guide</i>.</p>\n *          <note>\n *            <p>\n *                <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_terms-and-concepts.html#iam-term-role-chaining\">Role chaining</a> limits your CLI or Amazon Web Services API\n *                role session to a maximum of one hour. When you use the <code>AssumeRole</code> API\n *                operation to assume a role, you can specify the duration of your role session with\n *                the <code>DurationSeconds</code> parameter. You can specify a parameter value of up\n *                to 43200 seconds (12 hours), depending on the maximum session duration setting for\n *                your role. However, if you assume a role using role chaining and provide a\n *                <code>DurationSeconds</code> parameter value greater than one hour, the\n *                operation fails.</p>\n *          </note>\n *          <p>\n *             <b>Permissions</b>\n *          </p>\n *          <p>The temporary security credentials created by <code>AssumeRoleWithSAML</code> can be\n *          used to make API calls to any Amazon Web Services service with the following exception: you cannot call\n *          the STS <code>GetFederationToken</code> or <code>GetSessionToken</code> API\n *          operations.</p>\n *          <p>(Optional) You can pass inline or managed <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\">session policies</a> to\n *          this operation. You can pass a single JSON policy document to use as an inline session\n *          policy. You can also specify up to 10 managed policies to use as managed session policies.\n *          The plaintext that you use for both inline and managed session policies can't exceed 2,048\n *          characters. Passing policies to this operation returns new\n *          temporary credentials. The resulting session's permissions are the intersection of the\n *          role's identity-based policy and the session policies. You can use the role's temporary\n *          credentials in subsequent Amazon Web Services API calls to access resources in the account that owns\n *          the role. You cannot use session policies to grant more permissions than those allowed\n *          by the identity-based policy of the role that is being assumed. For more information, see\n *             <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\">Session\n *             Policies</a> in the <i>IAM User Guide</i>.</p>\n *          <p>Calling <code>AssumeRoleWithSAML</code> does not require the use of Amazon Web Services security\n *          credentials. The identity of the caller is validated by using keys in the metadata document\n *          that is uploaded for the SAML provider entity for your identity provider. </p>\n *          <important>\n *             <p>Calling <code>AssumeRoleWithSAML</code> can result in an entry in your CloudTrail logs.\n *             The entry includes the value in the <code>NameID</code> element of the SAML assertion.\n *             We recommend that you use a <code>NameIDType</code> that is not associated with any\n *             personally identifiable information (PII). For example, you could instead use the\n *             persistent identifier\n *             (<code>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</code>).</p>\n *          </important>\n *          <p>\n *             <b>Tags</b>\n *          </p>\n *          <p>(Optional) You can configure your IdP to pass attributes into your SAML assertion as\n *          session tags. Each session tag consists of a key name and an associated value. For more\n *          information about session tags, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_session-tags.html\">Passing Session Tags in STS</a> in the\n *             <i>IAM User Guide</i>.</p>\n *          <p>You can pass up to 50 session tags. The plaintext session tag keys can’t exceed 128\n *          characters and the values can’t exceed 256 characters. For these and additional limits, see\n *             <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-limits.html#reference_iam-limits-entity-length\">IAM\n *             and STS Character Limits</a> in the <i>IAM User Guide</i>.</p>\n *\n *          <note>\n *             <p>An Amazon Web Services conversion compresses the passed session policies and session tags into a\n *             packed binary format that has a separate limit. Your request can fail for this limit\n *             even if your plaintext meets the other requirements. The <code>PackedPolicySize</code>\n *             response element indicates by percentage how close the policies and tags for your\n *             request are to the upper size limit.\n *             </p>\n *          </note>\n *          <p>You can pass a session tag with the same key as a tag that is\n *          attached to the role. When you do, session tags override the role's tags with the same\n *          key.</p>\n *          <p>An administrator must grant you the permissions necessary to pass session tags. The\n *          administrator can also create granular permissions to allow you to pass only specific\n *          session tags. For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/tutorial_attribute-based-access-control.html\">Tutorial: Using Tags\n *             for Attribute-Based Access Control</a> in the\n *          <i>IAM User Guide</i>.</p>\n *          <p>You can set the session tags as transitive. Transitive tags persist during role\n *          chaining. For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_session-tags.html#id_session-tags_role-chaining\">Chaining Roles\n *             with Session Tags</a> in the <i>IAM User Guide</i>.</p>\n *          <p>\n *             <b>SAML Configuration</b>\n *          </p>\n *          <p>Before your application can call <code>AssumeRoleWithSAML</code>, you must configure\n *          your SAML identity provider (IdP) to issue the claims required by Amazon Web Services. Additionally, you\n *          must use Identity and Access Management (IAM) to create a SAML provider entity in your Amazon Web Services account that\n *          represents your identity provider. You must also create an IAM role that specifies this\n *          SAML provider in its trust policy. </p>\n *          <p>For more information, see the following resources:</p>\n *          <ul>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_saml.html\">About\n *                   SAML 2.0-based Federation</a> in the <i>IAM User Guide</i>.\n *             </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_create_saml.html\">Creating SAML Identity Providers</a> in the\n *                   <i>IAM User Guide</i>. </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_create_saml_relying-party.html\">Configuring\n *                   a Relying Party and Claims</a> in the <i>IAM User Guide</i>.\n *             </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_create_for-idp_saml.html\">Creating a Role for SAML 2.0 Federation</a> in the\n *                   <i>IAM User Guide</i>. </p>\n *             </li>\n *          </ul>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { STSClient, AssumeRoleWithSAMLCommand } from \"@aws-sdk/client-sts\"; // ES Modules import\n * // const { STSClient, AssumeRoleWithSAMLCommand } = require(\"@aws-sdk/client-sts\"); // CommonJS import\n * const client = new STSClient(config);\n * const command = new AssumeRoleWithSAMLCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link AssumeRoleWithSAMLCommandInput} for command's `input` shape.\n * @see {@link AssumeRoleWithSAMLCommandOutput} for command's `response` shape.\n * @see {@link STSClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass AssumeRoleWithSAMLCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"STSClient\";\n        const commandName = \"AssumeRoleWithSAMLCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.AssumeRoleWithSAMLRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.AssumeRoleWithSAMLResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_query_1.serializeAws_queryAssumeRoleWithSAMLCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_query_1.deserializeAws_queryAssumeRoleWithSAMLCommand)(output, context);\n    }\n}\nexports.AssumeRoleWithSAMLCommand = AssumeRoleWithSAMLCommand;\n//# sourceMappingURL=AssumeRoleWithSAMLCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AssumeRoleWithWebIdentityCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Returns a set of temporary security credentials for users who have been authenticated in\n *          a mobile or web application with a web identity provider. Example providers include Amazon Cognito,\n *          Login with Amazon, Facebook, Google, or any OpenID Connect-compatible identity\n *          provider.</p>\n *          <note>\n *             <p>For mobile applications, we recommend that you use Amazon Cognito. You can use Amazon Cognito with the\n *                <a href=\"http://aws.amazon.com/sdkforios/\">Amazon Web Services SDK for iOS Developer Guide</a> and the <a href=\"http://aws.amazon.com/sdkforandroid/\">Amazon Web Services SDK for Android Developer Guide</a> to uniquely\n *             identify a user. You can also supply the user with a consistent identity throughout the\n *             lifetime of an application.</p>\n *             <p>To learn more about Amazon Cognito, see <a href=\"https://docs.aws.amazon.com/mobile/sdkforandroid/developerguide/cognito-auth.html#d0e840\">Amazon Cognito Overview</a> in\n *                <i>Amazon Web Services SDK for Android Developer Guide</i> and <a href=\"https://docs.aws.amazon.com/mobile/sdkforios/developerguide/cognito-auth.html#d0e664\">Amazon Cognito Overview</a> in the\n *                <i>Amazon Web Services SDK for iOS Developer Guide</i>.</p>\n *          </note>\n *          <p>Calling <code>AssumeRoleWithWebIdentity</code> does not require the use of Amazon Web Services\n *          security credentials. Therefore, you can distribute an application (for example, on mobile\n *          devices) that requests temporary security credentials without including long-term Amazon Web Services\n *          credentials in the application. You also don't need to deploy server-based proxy services\n *          that use long-term Amazon Web Services credentials. Instead, the identity of the caller is validated by\n *          using a token from the web identity provider. For a comparison of\n *             <code>AssumeRoleWithWebIdentity</code> with the other API operations that produce\n *          temporary credentials, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html\">Requesting Temporary Security\n *             Credentials</a> and <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html#stsapi_comparison\">Comparing the\n *             STS API operations</a> in the <i>IAM User Guide</i>.</p>\n *          <p>The temporary security credentials returned by this API consist of an access key ID, a\n *          secret access key, and a security token. Applications can use these temporary security\n *          credentials to sign calls to Amazon Web Services service API operations.</p>\n *          <p>\n *             <b>Session Duration</b>\n *          </p>\n *          <p>By default, the temporary security credentials created by\n *             <code>AssumeRoleWithWebIdentity</code> last for one hour. However, you can use the\n *          optional <code>DurationSeconds</code> parameter to specify the duration of your session.\n *          You can provide a value from 900 seconds (15 minutes) up to the maximum session duration\n *          setting for the role. This setting can have a value from 1 hour to 12 hours. To learn how\n *          to view the maximum value for your role, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use.html#id_roles_use_view-role-max-session\">View the\n *             Maximum Session Duration Setting for a Role</a> in the\n *             <i>IAM User Guide</i>. The maximum session duration limit applies when\n *          you use the <code>AssumeRole*</code> API operations or the <code>assume-role*</code> CLI\n *          commands. However the limit does not apply when you use those operations to create a\n *          console URL. For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_use.html\">Using IAM Roles</a> in the\n *             <i>IAM User Guide</i>. </p>\n *          <p>\n *             <b>Permissions</b>\n *          </p>\n *          <p>The temporary security credentials created by <code>AssumeRoleWithWebIdentity</code> can\n *          be used to make API calls to any Amazon Web Services service with the following exception: you cannot\n *          call the STS <code>GetFederationToken</code> or <code>GetSessionToken</code> API\n *          operations.</p>\n *          <p>(Optional) You can pass inline or managed <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\">session policies</a> to\n *          this operation. You can pass a single JSON policy document to use as an inline session\n *          policy. You can also specify up to 10 managed policies to use as managed session policies.\n *          The plaintext that you use for both inline and managed session policies can't exceed 2,048\n *          characters. Passing policies to this operation returns new\n *          temporary credentials. The resulting session's permissions are the intersection of the\n *          role's identity-based policy and the session policies. You can use the role's temporary\n *          credentials in subsequent Amazon Web Services API calls to access resources in the account that owns\n *          the role. You cannot use session policies to grant more permissions than those allowed\n *          by the identity-based policy of the role that is being assumed. For more information, see\n *             <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\">Session\n *             Policies</a> in the <i>IAM User Guide</i>.</p>\n *          <p>\n *             <b>Tags</b>\n *          </p>\n *          <p>(Optional) You can configure your IdP to pass attributes into your web identity token as\n *          session tags. Each session tag consists of a key name and an associated value. For more\n *          information about session tags, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_session-tags.html\">Passing Session Tags in STS</a> in the\n *             <i>IAM User Guide</i>.</p>\n *          <p>You can pass up to 50 session tags. The plaintext session tag keys can’t exceed 128\n *          characters and the values can’t exceed 256 characters. For these and additional limits, see\n *             <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_iam-limits.html#reference_iam-limits-entity-length\">IAM\n *             and STS Character Limits</a> in the <i>IAM User Guide</i>.</p>\n *\n *          <note>\n *             <p>An Amazon Web Services conversion compresses the passed session policies and session tags into a\n *             packed binary format that has a separate limit. Your request can fail for this limit\n *             even if your plaintext meets the other requirements. The <code>PackedPolicySize</code>\n *             response element indicates by percentage how close the policies and tags for your\n *             request are to the upper size limit.\n *             </p>\n *          </note>\n *          <p>You can pass a session tag with the same key as a tag that is\n *          attached to the role. When you do, the session tag overrides the role tag with the same\n *          key.</p>\n *          <p>An administrator must grant you the permissions necessary to pass session tags. The\n *          administrator can also create granular permissions to allow you to pass only specific\n *          session tags. For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/tutorial_attribute-based-access-control.html\">Tutorial: Using Tags\n *             for Attribute-Based Access Control</a> in the\n *          <i>IAM User Guide</i>.</p>\n *          <p>You can set the session tags as transitive. Transitive tags persist during role\n *          chaining. For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_session-tags.html#id_session-tags_role-chaining\">Chaining Roles\n *             with Session Tags</a> in the <i>IAM User Guide</i>.</p>\n *          <p>\n *             <b>Identities</b>\n *          </p>\n *          <p>Before your application can call <code>AssumeRoleWithWebIdentity</code>, you must have\n *          an identity token from a supported identity provider and create a role that the application\n *          can assume. The role that your application assumes must trust the identity provider that is\n *          associated with the identity token. In other words, the identity provider must be specified\n *          in the role's trust policy. </p>\n *          <important>\n *             <p>Calling <code>AssumeRoleWithWebIdentity</code> can result in an entry in your\n *             CloudTrail logs. The entry includes the <a href=\"http://openid.net/specs/openid-connect-core-1_0.html#Claims\">Subject</a> of\n *             the provided web identity token. We recommend that you avoid using any personally\n *             identifiable information (PII) in this field. For example, you could instead use a GUID\n *             or a pairwise identifier, as <a href=\"http://openid.net/specs/openid-connect-core-1_0.html#SubjectIDTypes\">suggested\n *                in the OIDC specification</a>.</p>\n *          </important>\n *          <p>For more information about how to use web identity federation and the\n *             <code>AssumeRoleWithWebIdentity</code> API, see the following resources: </p>\n *          <ul>\n *             <li>\n *                <p>\n *                   <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_oidc_manual.html\">Using Web Identity Federation API Operations for Mobile Apps</a> and <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html#api_assumerolewithwebidentity\">Federation Through a Web-based Identity Provider</a>. </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"https://aws.amazon.com/blogs/aws/the-aws-web-identity-federation-playground/\"> Web Identity Federation Playground</a>. Walk through the process of\n *                authenticating through Login with Amazon, Facebook, or Google, getting temporary\n *                security credentials, and then using those credentials to make a request to Amazon Web Services.\n *             </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"http://aws.amazon.com/sdkforios/\">Amazon Web Services SDK for iOS Developer Guide</a> and <a href=\"http://aws.amazon.com/sdkforandroid/\">Amazon Web Services SDK for Android Developer Guide</a>. These toolkits\n *                contain sample apps that show how to invoke the identity providers. The toolkits then\n *                show how to use the information from these providers to get and use temporary\n *                security credentials. </p>\n *             </li>\n *             <li>\n *                <p>\n *                   <a href=\"http://aws.amazon.com/articles/web-identity-federation-with-mobile-applications\">Web Identity\n *                   Federation with Mobile Applications</a>. This article discusses web identity\n *                federation and shows an example of how to use web identity federation to get access\n *                to content in Amazon S3. </p>\n *             </li>\n *          </ul>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { STSClient, AssumeRoleWithWebIdentityCommand } from \"@aws-sdk/client-sts\"; // ES Modules import\n * // const { STSClient, AssumeRoleWithWebIdentityCommand } = require(\"@aws-sdk/client-sts\"); // CommonJS import\n * const client = new STSClient(config);\n * const command = new AssumeRoleWithWebIdentityCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link AssumeRoleWithWebIdentityCommandInput} for command's `input` shape.\n * @see {@link AssumeRoleWithWebIdentityCommandOutput} for command's `response` shape.\n * @see {@link STSClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass AssumeRoleWithWebIdentityCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"STSClient\";\n        const commandName = \"AssumeRoleWithWebIdentityCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.AssumeRoleWithWebIdentityRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.AssumeRoleWithWebIdentityResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_query_1.serializeAws_queryAssumeRoleWithWebIdentityCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_query_1.deserializeAws_queryAssumeRoleWithWebIdentityCommand)(output, context);\n    }\n}\nexports.AssumeRoleWithWebIdentityCommand = AssumeRoleWithWebIdentityCommand;\n//# sourceMappingURL=AssumeRoleWithWebIdentityCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DecodeAuthorizationMessageCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst middleware_signing_1 = require(\"@aws-sdk/middleware-signing\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Decodes additional information about the authorization status of a request from an\n *          encoded message returned in response to an Amazon Web Services request.</p>\n *          <p>For example, if a user is not authorized to perform an operation that he or she has\n *          requested, the request returns a <code>Client.UnauthorizedOperation</code> response (an\n *          HTTP 403 response). Some Amazon Web Services operations additionally return an encoded message that can\n *          provide details about this authorization failure. </p>\n *          <note>\n *             <p>Only certain Amazon Web Services operations return an encoded authorization message. The\n *             documentation for an individual operation indicates whether that operation returns an\n *             encoded message in addition to returning an HTTP code.</p>\n *          </note>\n *          <p>The message is encoded because the details of the authorization status can constitute\n *          privileged information that the user who requested the operation should not see. To decode\n *          an authorization status message, a user must be granted permissions via an IAM policy to\n *          request the <code>DecodeAuthorizationMessage</code>\n *             (<code>sts:DecodeAuthorizationMessage</code>) action. </p>\n *          <p>The decoded message includes the following type of information:</p>\n *          <ul>\n *             <li>\n *                <p>Whether the request was denied due to an explicit deny or due to the absence of an\n *                explicit allow. For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_evaluation-logic.html#policy-eval-denyallow\">Determining Whether a Request is Allowed or Denied</a> in the\n *                   <i>IAM User Guide</i>. </p>\n *             </li>\n *             <li>\n *                <p>The principal who made the request.</p>\n *             </li>\n *             <li>\n *                <p>The requested action.</p>\n *             </li>\n *             <li>\n *                <p>The requested resource.</p>\n *             </li>\n *             <li>\n *                <p>The values of condition keys in the context of the user's request.</p>\n *             </li>\n *          </ul>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { STSClient, DecodeAuthorizationMessageCommand } from \"@aws-sdk/client-sts\"; // ES Modules import\n * // const { STSClient, DecodeAuthorizationMessageCommand } = require(\"@aws-sdk/client-sts\"); // CommonJS import\n * const client = new STSClient(config);\n * const command = new DecodeAuthorizationMessageCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link DecodeAuthorizationMessageCommandInput} for command's `input` shape.\n * @see {@link DecodeAuthorizationMessageCommandOutput} for command's `response` shape.\n * @see {@link STSClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass DecodeAuthorizationMessageCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_signing_1.getAwsAuthPlugin)(configuration));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"STSClient\";\n        const commandName = \"DecodeAuthorizationMessageCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.DecodeAuthorizationMessageRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.DecodeAuthorizationMessageResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_query_1.serializeAws_queryDecodeAuthorizationMessageCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_query_1.deserializeAws_queryDecodeAuthorizationMessageCommand)(output, context);\n    }\n}\nexports.DecodeAuthorizationMessageCommand = DecodeAuthorizationMessageCommand;\n//# sourceMappingURL=DecodeAuthorizationMessageCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetAccessKeyInfoCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst middleware_signing_1 = require(\"@aws-sdk/middleware-signing\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Returns the account identifier for the specified access key ID.</p>\n *         <p>Access keys consist of two parts: an access key ID (for example,\n *                 <code>AKIAIOSFODNN7EXAMPLE</code>) and a secret access key (for example,\n *                 <code>wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY</code>). For more information about\n *             access keys, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_access-keys.html\">Managing Access Keys for IAM\n *                 Users</a> in the <i>IAM User Guide</i>.</p>\n *         <p>When you pass an access key ID to this operation, it returns the ID of the Amazon Web Services\n *             account to which the keys belong. Access key IDs beginning with <code>AKIA</code> are\n *             long-term credentials for an IAM user or the Amazon Web Services account root user. Access key IDs\n *             beginning with <code>ASIA</code> are temporary credentials that are created using STS\n *             operations. If the account in the response belongs to you, you can sign in as the root\n *             user and review your root user access keys. Then, you can pull a <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_getting-report.html\">credentials report</a> to learn which IAM user owns the keys. To learn who\n *             requested the temporary credentials for an <code>ASIA</code> access key, view the STS\n *             events in your <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/cloudtrail-integration.html\">CloudTrail logs</a> in the\n *                 <i>IAM User Guide</i>.</p>\n *         <p>This operation does not indicate the state of the access key. The key might be active,\n *             inactive, or deleted. Active keys might not have permissions to perform an operation.\n *             Providing a deleted access key might return an error that the key doesn't exist.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { STSClient, GetAccessKeyInfoCommand } from \"@aws-sdk/client-sts\"; // ES Modules import\n * // const { STSClient, GetAccessKeyInfoCommand } = require(\"@aws-sdk/client-sts\"); // CommonJS import\n * const client = new STSClient(config);\n * const command = new GetAccessKeyInfoCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link GetAccessKeyInfoCommandInput} for command's `input` shape.\n * @see {@link GetAccessKeyInfoCommandOutput} for command's `response` shape.\n * @see {@link STSClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass GetAccessKeyInfoCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_signing_1.getAwsAuthPlugin)(configuration));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"STSClient\";\n        const commandName = \"GetAccessKeyInfoCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.GetAccessKeyInfoRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.GetAccessKeyInfoResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_query_1.serializeAws_queryGetAccessKeyInfoCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_query_1.deserializeAws_queryGetAccessKeyInfoCommand)(output, context);\n    }\n}\nexports.GetAccessKeyInfoCommand = GetAccessKeyInfoCommand;\n//# sourceMappingURL=GetAccessKeyInfoCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetCallerIdentityCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst middleware_signing_1 = require(\"@aws-sdk/middleware-signing\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Returns details about the IAM user or role whose credentials are used to call the\n *             operation.</p>\n *         <note>\n *             <p>No permissions are required to perform this operation. If an administrator adds a\n *                 policy to your IAM user or role that explicitly denies access to the\n *                     <code>sts:GetCallerIdentity</code> action, you can still perform this operation.\n *                 Permissions are not required because the same information is returned when an IAM\n *                 user or role is denied access. To view an example response, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/troubleshoot_general.html#troubleshoot_general_access-denied-delete-mfa\">I Am Not Authorized to Perform: iam:DeleteVirtualMFADevice</a> in the\n *                     <i>IAM User Guide</i>.</p>\n *         </note>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { STSClient, GetCallerIdentityCommand } from \"@aws-sdk/client-sts\"; // ES Modules import\n * // const { STSClient, GetCallerIdentityCommand } = require(\"@aws-sdk/client-sts\"); // CommonJS import\n * const client = new STSClient(config);\n * const command = new GetCallerIdentityCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link GetCallerIdentityCommandInput} for command's `input` shape.\n * @see {@link GetCallerIdentityCommandOutput} for command's `response` shape.\n * @see {@link STSClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass GetCallerIdentityCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_signing_1.getAwsAuthPlugin)(configuration));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"STSClient\";\n        const commandName = \"GetCallerIdentityCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.GetCallerIdentityRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.GetCallerIdentityResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_query_1.serializeAws_queryGetCallerIdentityCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_query_1.deserializeAws_queryGetCallerIdentityCommand)(output, context);\n    }\n}\nexports.GetCallerIdentityCommand = GetCallerIdentityCommand;\n//# sourceMappingURL=GetCallerIdentityCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetFederationTokenCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst middleware_signing_1 = require(\"@aws-sdk/middleware-signing\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Returns a set of temporary security credentials (consisting of an access key ID, a\n *          secret access key, and a security token) for a federated user. A typical use is in a proxy\n *          application that gets temporary security credentials on behalf of distributed applications\n *          inside a corporate network. You must call the <code>GetFederationToken</code> operation\n *          using the long-term security credentials of an IAM user. As a result, this call is\n *          appropriate in contexts where those credentials can be safely stored, usually in a\n *          server-based application. For a comparison of <code>GetFederationToken</code> with the\n *          other API operations that produce temporary credentials, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html\">Requesting Temporary Security\n *             Credentials</a> and <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html#stsapi_comparison\">Comparing the\n *             STS API operations</a> in the <i>IAM User Guide</i>.</p>\n *          <note>\n *             <p>You can create a mobile-based or browser-based app that can authenticate users using\n *             a web identity provider like Login with Amazon, Facebook, Google, or an OpenID\n *             Connect-compatible identity provider. In this case, we recommend that you use <a href=\"http://aws.amazon.com/cognito/\">Amazon Cognito</a> or\n *                <code>AssumeRoleWithWebIdentity</code>. For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html#api_assumerolewithwebidentity\">Federation Through a Web-based Identity Provider</a> in the\n *                <i>IAM User Guide</i>.</p>\n *          </note>\n *          <p>You can also call <code>GetFederationToken</code> using the security credentials of an\n *          Amazon Web Services account root user, but we do not recommend it. Instead, we recommend that you create\n *          an IAM user for the purpose of the proxy application. Then attach a policy to the IAM\n *          user that limits federated users to only the actions and resources that they need to\n *          access. For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html\">IAM Best Practices</a> in the\n *             <i>IAM User Guide</i>. </p>\n *          <p>\n *             <b>Session duration</b>\n *          </p>\n *          <p>The temporary credentials are valid for the specified duration, from 900 seconds (15\n *          minutes) up to a maximum of 129,600 seconds (36 hours). The default session duration is\n *          43,200 seconds (12 hours). Temporary credentials that are obtained by using Amazon Web Services account\n *          root user credentials have a maximum duration of 3,600 seconds (1 hour).</p>\n *          <p>\n *             <b>Permissions</b>\n *          </p>\n *          <p>You can use the temporary credentials created by <code>GetFederationToken</code> in any\n *          Amazon Web Services service except the following:</p>\n *          <ul>\n *             <li>\n *                <p>You cannot call any IAM operations using the CLI or the Amazon Web Services API. </p>\n *             </li>\n *             <li>\n *                <p>You cannot call any STS operations except <code>GetCallerIdentity</code>.</p>\n *             </li>\n *          </ul>\n *          <p>You must pass an inline or managed <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\">session policy</a> to\n *          this operation. You can pass a single JSON policy document to use as an inline session\n *          policy. You can also specify up to 10 managed policies to use as managed session policies.\n *          The plaintext that you use for both inline and managed session policies can't exceed 2,048\n *          characters.</p>\n *          <p>Though the session policy parameters are optional, if you do not pass a policy, then the\n *          resulting federated user session has no permissions. When you pass session policies, the\n *          session permissions are the intersection of the IAM user policies and the session\n *          policies that you pass. This gives you a way to further restrict the permissions for a\n *          federated user. You cannot use session policies to grant more permissions than those that\n *          are defined in the permissions policy of the IAM user. For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\">Session\n *             Policies</a> in the <i>IAM User Guide</i>. For information about\n *          using <code>GetFederationToken</code> to create temporary security credentials, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html#api_getfederationtoken\">GetFederationToken—Federation Through a Custom Identity Broker</a>. </p>\n *          <p>You can use the credentials to access a resource that has a resource-based policy. If\n *          that policy specifically references the federated user session in the\n *             <code>Principal</code> element of the policy, the session has the permissions allowed by\n *          the policy. These permissions are granted in addition to the permissions granted by the\n *          session policies.</p>\n *          <p>\n *             <b>Tags</b>\n *          </p>\n *          <p>(Optional) You can pass tag key-value pairs to your session. These are called session\n *          tags. For more information about session tags, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_session-tags.html\">Passing Session Tags in STS</a> in the\n *             <i>IAM User Guide</i>.</p>\n *         <note>\n *             <p>You can create a mobile-based or browser-based app that can authenticate users\n *                 using a web identity provider like Login with Amazon, Facebook, Google, or an OpenID\n *                 Connect-compatible identity provider. In this case, we recommend that you use <a href=\"http://aws.amazon.com/cognito/\">Amazon Cognito</a> or\n *                     <code>AssumeRoleWithWebIdentity</code>. For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html#api_assumerolewithwebidentity\">Federation Through a Web-based Identity Provider</a> in the\n *                     <i>IAM User Guide</i>.</p>\n *         </note>\n *         <p>You can also call <code>GetFederationToken</code> using the security credentials of an\n *             Amazon Web Services account root user, but we do not recommend it. Instead, we recommend that you\n *             create an IAM user for the purpose of the proxy application. Then attach a policy to\n *             the IAM user that limits federated users to only the actions and resources that they\n *             need to access. For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html\">IAM Best Practices</a> in the\n *                 <i>IAM User Guide</i>. </p>\n *         <p>\n *             <b>Session duration</b>\n *          </p>\n *         <p>The temporary credentials are valid for the specified duration, from 900 seconds (15\n *             minutes) up to a maximum of 129,600 seconds (36 hours). The default session duration is\n *             43,200 seconds (12 hours). Temporary credentials that are obtained by using Amazon Web Services\n *             account root user credentials have a maximum duration of 3,600 seconds (1 hour).</p>\n *         <p>\n *             <b>Permissions</b>\n *         </p>\n *         <p>You can use the temporary credentials created by <code>GetFederationToken</code> in\n *             any Amazon Web Services service except the following:</p>\n *         <ul>\n *             <li>\n *                 <p>You cannot call any IAM operations using the CLI or the Amazon Web Services API.\n *                 </p>\n *             </li>\n *             <li>\n *                 <p>You cannot call any STS operations except\n *                     <code>GetCallerIdentity</code>.</p>\n *             </li>\n *          </ul>\n *         <p>You must pass an inline or managed <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\">session policy</a> to\n *             this operation. You can pass a single JSON policy document to use as an inline session\n *             policy. You can also specify up to 10 managed policies to use as managed session\n *             policies. The plain text that you use for both inline and managed session policies can't\n *             exceed 2,048 characters.</p>\n *         <p>Though the session policy parameters are optional, if you do not pass a policy, then\n *             the resulting federated user session has no permissions. When you pass session policies,\n *             the session permissions are the intersection of the IAM user policies and the session\n *             policies that you pass. This gives you a way to further restrict the permissions for a\n *             federated user. You cannot use session policies to grant more permissions than those\n *             that are defined in the permissions policy of the IAM user. For more information, see\n *                 <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html#policies_session\">Session Policies</a>\n *             in the <i>IAM User Guide</i>. For information about using\n *                 <code>GetFederationToken</code> to create temporary security credentials, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html#api_getfederationtoken\">GetFederationToken—Federation Through a Custom Identity Broker</a>. </p>\n *         <p>You can use the credentials to access a resource that has a resource-based policy. If\n *             that policy specifically references the federated user session in the\n *                 <code>Principal</code> element of the policy, the session has the permissions\n *             allowed by the policy. These permissions are granted in addition to the permissions\n *             granted by the session policies.</p>\n *         <p>\n *             <b>Tags</b>\n *          </p>\n *         <p>(Optional) You can pass tag key-value pairs to your session. These are called session\n *             tags. For more information about session tags, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_session-tags.html\">Passing Session Tags in STS</a> in\n *             the <i>IAM User Guide</i>.</p>\n *         <p>An administrator must grant you the permissions necessary to pass session tags. The\n *             administrator can also create granular permissions to allow you to pass only specific\n *             session tags. For more information, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/tutorial_attribute-based-access-control.html\">Tutorial: Using\n *                 Tags for Attribute-Based Access Control</a> in the\n *                 <i>IAM User Guide</i>.</p>\n *         <p>Tag key–value pairs are not case sensitive, but case is preserved. This means that you\n *             cannot have separate <code>Department</code> and <code>department</code> tag keys.\n *             Assume that the user that you are federating has the\n *                 <code>Department</code>=<code>Marketing</code> tag and you pass the\n *                 <code>department</code>=<code>engineering</code> session tag.\n *                 <code>Department</code> and <code>department</code> are not saved as separate tags,\n *             and the session tag passed in the request takes precedence over the user tag.</p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { STSClient, GetFederationTokenCommand } from \"@aws-sdk/client-sts\"; // ES Modules import\n * // const { STSClient, GetFederationTokenCommand } = require(\"@aws-sdk/client-sts\"); // CommonJS import\n * const client = new STSClient(config);\n * const command = new GetFederationTokenCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link GetFederationTokenCommandInput} for command's `input` shape.\n * @see {@link GetFederationTokenCommandOutput} for command's `response` shape.\n * @see {@link STSClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass GetFederationTokenCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_signing_1.getAwsAuthPlugin)(configuration));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"STSClient\";\n        const commandName = \"GetFederationTokenCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.GetFederationTokenRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.GetFederationTokenResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_query_1.serializeAws_queryGetFederationTokenCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_query_1.deserializeAws_queryGetFederationTokenCommand)(output, context);\n    }\n}\nexports.GetFederationTokenCommand = GetFederationTokenCommand;\n//# sourceMappingURL=GetFederationTokenCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetSessionTokenCommand = void 0;\nconst models_0_1 = require(\"../models/models_0\");\nconst Aws_query_1 = require(\"../protocols/Aws_query\");\nconst middleware_serde_1 = require(\"@aws-sdk/middleware-serde\");\nconst middleware_signing_1 = require(\"@aws-sdk/middleware-signing\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * <p>Returns a set of temporary credentials for an Amazon Web Services account or IAM user. The\n *          credentials consist of an access key ID, a secret access key, and a security token.\n *          Typically, you use <code>GetSessionToken</code> if you want to use MFA to protect\n *          programmatic calls to specific Amazon Web Services API operations like Amazon EC2 <code>StopInstances</code>.\n *          MFA-enabled IAM users would need to call <code>GetSessionToken</code> and submit an MFA\n *          code that is associated with their MFA device. Using the temporary security credentials\n *          that are returned from the call, IAM users can then make programmatic calls to API\n *          operations that require MFA authentication. If you do not supply a correct MFA code, then\n *          the API returns an access denied error. For a comparison of <code>GetSessionToken</code>\n *          with the other API operations that produce temporary credentials, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html\">Requesting\n *             Temporary Security Credentials</a> and <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html#stsapi_comparison\">Comparing the\n *             STS API operations</a> in the <i>IAM User Guide</i>.</p>\n *          <p>\n *             <b>Session Duration</b>\n *          </p>\n *          <p>The <code>GetSessionToken</code> operation must be called by using the long-term Amazon Web Services\n *          security credentials of the Amazon Web Services account root user or an IAM user. Credentials that are\n *          created by IAM users are valid for the duration that you specify. This duration can range\n *          from 900 seconds (15 minutes) up to a maximum of 129,600 seconds (36 hours), with a default\n *          of 43,200 seconds (12 hours). Credentials based on account credentials can range from 900\n *          seconds (15 minutes) up to 3,600 seconds (1 hour), with a default of 1 hour. </p>\n *          <p>\n *             <b>Permissions</b>\n *          </p>\n *          <p>The temporary security credentials created by <code>GetSessionToken</code> can be used\n *          to make API calls to any Amazon Web Services service with the following exceptions:</p>\n *          <ul>\n *             <li>\n *                <p>You cannot call any IAM API operations unless MFA authentication information is\n *                included in the request.</p>\n *             </li>\n *             <li>\n *                <p>You cannot call any STS API <i>except</i>\n *                   <code>AssumeRole</code> or <code>GetCallerIdentity</code>.</p>\n *             </li>\n *          </ul>\n *          <note>\n *             <p>We recommend that you do not call <code>GetSessionToken</code> with Amazon Web Services account\n *             root user credentials. Instead, follow our <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/best-practices.html#create-iam-users\">best practices</a> by\n *             creating one or more IAM users, giving them the necessary permissions, and using IAM\n *             users for everyday interaction with Amazon Web Services. </p>\n *          </note>\n *          <p>The credentials that are returned by <code>GetSessionToken</code> are based on\n *          permissions associated with the user whose credentials were used to call the operation. If\n *             <code>GetSessionToken</code> is called using Amazon Web Services account root user credentials, the\n *          temporary credentials have root user permissions. Similarly, if\n *             <code>GetSessionToken</code> is called using the credentials of an IAM user, the\n *          temporary credentials have the same permissions as the IAM user. </p>\n *          <p>For more information about using <code>GetSessionToken</code> to create temporary\n *          credentials, go to <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html#api_getsessiontoken\">Temporary\n *             Credentials for Users in Untrusted Environments</a> in the\n *             <i>IAM User Guide</i>. </p>\n * @example\n * Use a bare-bones client and the command you need to make an API call.\n * ```javascript\n * import { STSClient, GetSessionTokenCommand } from \"@aws-sdk/client-sts\"; // ES Modules import\n * // const { STSClient, GetSessionTokenCommand } = require(\"@aws-sdk/client-sts\"); // CommonJS import\n * const client = new STSClient(config);\n * const command = new GetSessionTokenCommand(input);\n * const response = await client.send(command);\n * ```\n *\n * @see {@link GetSessionTokenCommandInput} for command's `input` shape.\n * @see {@link GetSessionTokenCommandOutput} for command's `response` shape.\n * @see {@link STSClientResolvedConfig | config} for command's `input` shape.\n *\n */\nclass GetSessionTokenCommand extends smithy_client_1.Command {\n    // Start section: command_properties\n    // End section: command_properties\n    constructor(input) {\n        // Start section: command_constructor\n        super();\n        this.input = input;\n        // End section: command_constructor\n    }\n    /**\n     * @internal\n     */\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use((0, middleware_serde_1.getSerdePlugin)(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use((0, middleware_signing_1.getAwsAuthPlugin)(configuration));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"STSClient\";\n        const commandName = \"GetSessionTokenCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: models_0_1.GetSessionTokenRequest.filterSensitiveLog,\n            outputFilterSensitiveLog: models_0_1.GetSessionTokenResponse.filterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return (0, Aws_query_1.serializeAws_queryGetSessionTokenCommand)(input, context);\n    }\n    deserialize(output, context) {\n        return (0, Aws_query_1.deserializeAws_queryGetSessionTokenCommand)(output, context);\n    }\n}\nexports.GetSessionTokenCommand = GetSessionTokenCommand;\n//# sourceMappingURL=GetSessionTokenCommand.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decorateDefaultCredentialProvider = exports.getDefaultRoleAssumerWithWebIdentity = exports.getDefaultRoleAssumer = void 0;\n// Please do not touch this file. It's generated from template in:\n// https://github.com/aws/aws-sdk-js-v3/blob/main/codegen/smithy-aws-typescript-codegen/src/main/resources/software/amazon/smithy/aws/typescript/codegen/sts-client-defaultRoleAssumers.ts\nconst defaultStsRoleAssumers_1 = require(\"./defaultStsRoleAssumers\");\nconst STSClient_1 = require(\"./STSClient\");\n/**\n * The default role assumer that used by credential providers when sts:AssumeRole API is needed.\n */\nconst getDefaultRoleAssumer = (stsOptions = {}) => (0, defaultStsRoleAssumers_1.getDefaultRoleAssumer)(stsOptions, STSClient_1.STSClient);\nexports.getDefaultRoleAssumer = getDefaultRoleAssumer;\n/**\n * The default role assumer that used by credential providers when sts:AssumeRoleWithWebIdentity API is needed.\n */\nconst getDefaultRoleAssumerWithWebIdentity = (stsOptions = {}) => (0, defaultStsRoleAssumers_1.getDefaultRoleAssumerWithWebIdentity)(stsOptions, STSClient_1.STSClient);\nexports.getDefaultRoleAssumerWithWebIdentity = getDefaultRoleAssumerWithWebIdentity;\n/**\n * The default credential providers depend STS client to assume role with desired API: sts:assumeRole,\n * sts:assumeRoleWithWebIdentity, etc. This function decorates the default credential provider with role assumers which\n * encapsulates the process of calling STS commands. This can only be imported by AWS client packages to avoid circular\n * dependencies.\n *\n * @internal\n */\nconst decorateDefaultCredentialProvider = (provider) => (input) => provider({\n    roleAssumer: (0, exports.getDefaultRoleAssumer)(input),\n    roleAssumerWithWebIdentity: (0, exports.getDefaultRoleAssumerWithWebIdentity)(input),\n    ...input,\n});\nexports.decorateDefaultCredentialProvider = decorateDefaultCredentialProvider;\n//# sourceMappingURL=defaultRoleAssumers.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decorateDefaultCredentialProvider = exports.getDefaultRoleAssumerWithWebIdentity = exports.getDefaultRoleAssumer = void 0;\nconst AssumeRoleCommand_1 = require(\"./commands/AssumeRoleCommand\");\nconst AssumeRoleWithWebIdentityCommand_1 = require(\"./commands/AssumeRoleWithWebIdentityCommand\");\nconst ASSUME_ROLE_DEFAULT_REGION = \"us-east-1\";\n/**\n * Inject the fallback STS region of us-east-1.\n */\nconst decorateDefaultRegion = (region) => {\n    if (typeof region !== \"function\") {\n        return region === undefined ? ASSUME_ROLE_DEFAULT_REGION : region;\n    }\n    return async () => {\n        try {\n            return await region();\n        }\n        catch (e) {\n            return ASSUME_ROLE_DEFAULT_REGION;\n        }\n    };\n};\n/**\n * The default role assumer that used by credential providers when sts:AssumeRole API is needed.\n * @internal\n */\nconst getDefaultRoleAssumer = (stsOptions, stsClientCtor) => {\n    let stsClient;\n    let closureSourceCreds;\n    return async (sourceCreds, params) => {\n        closureSourceCreds = sourceCreds;\n        if (!stsClient) {\n            const { logger, region, requestHandler } = stsOptions;\n            stsClient = new stsClientCtor({\n                logger,\n                // A hack to make sts client uses the credential in current closure.\n                credentialDefaultProvider: () => async () => closureSourceCreds,\n                region: decorateDefaultRegion(region || stsOptions.region),\n                ...(requestHandler ? { requestHandler } : {}),\n            });\n        }\n        const { Credentials } = await stsClient.send(new AssumeRoleCommand_1.AssumeRoleCommand(params));\n        if (!Credentials || !Credentials.AccessKeyId || !Credentials.SecretAccessKey) {\n            throw new Error(`Invalid response from STS.assumeRole call with role ${params.RoleArn}`);\n        }\n        return {\n            accessKeyId: Credentials.AccessKeyId,\n            secretAccessKey: Credentials.SecretAccessKey,\n            sessionToken: Credentials.SessionToken,\n            expiration: Credentials.Expiration,\n        };\n    };\n};\nexports.getDefaultRoleAssumer = getDefaultRoleAssumer;\n/**\n * The default role assumer that used by credential providers when sts:AssumeRoleWithWebIdentity API is needed.\n * @internal\n */\nconst getDefaultRoleAssumerWithWebIdentity = (stsOptions, stsClientCtor) => {\n    let stsClient;\n    return async (params) => {\n        if (!stsClient) {\n            const { logger, region, requestHandler } = stsOptions;\n            stsClient = new stsClientCtor({\n                logger,\n                region: decorateDefaultRegion(region || stsOptions.region),\n                ...(requestHandler ? { requestHandler } : {}),\n            });\n        }\n        const { Credentials } = await stsClient.send(new AssumeRoleWithWebIdentityCommand_1.AssumeRoleWithWebIdentityCommand(params));\n        if (!Credentials || !Credentials.AccessKeyId || !Credentials.SecretAccessKey) {\n            throw new Error(`Invalid response from STS.assumeRoleWithWebIdentity call with role ${params.RoleArn}`);\n        }\n        return {\n            accessKeyId: Credentials.AccessKeyId,\n            secretAccessKey: Credentials.SecretAccessKey,\n            sessionToken: Credentials.SessionToken,\n            expiration: Credentials.Expiration,\n        };\n    };\n};\nexports.getDefaultRoleAssumerWithWebIdentity = getDefaultRoleAssumerWithWebIdentity;\n/**\n * The default credential providers depend STS client to assume role with desired API: sts:assumeRole,\n * sts:assumeRoleWithWebIdentity, etc. This function decorates the default credential provider with role assumers which\n * encapsulates the process of calling STS commands. This can only be imported by AWS client packages to avoid circular\n * dependencies.\n *\n * @internal\n */\nconst decorateDefaultCredentialProvider = (provider) => (input) => provider({\n    roleAssumer: (0, exports.getDefaultRoleAssumer)(input, input.stsClientCtor),\n    roleAssumerWithWebIdentity: (0, exports.getDefaultRoleAssumerWithWebIdentity)(input, input.stsClientCtor),\n    ...input,\n});\nexports.decorateDefaultCredentialProvider = decorateDefaultCredentialProvider;\n//# sourceMappingURL=defaultStsRoleAssumers.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultRegionInfoProvider = void 0;\nconst config_resolver_1 = require(\"@aws-sdk/config-resolver\");\nconst regionHash = {\n    \"aws-global\": {\n        hostname: \"sts.amazonaws.com\",\n        signingRegion: \"us-east-1\",\n    },\n    \"us-east-1-fips\": {\n        hostname: \"sts-fips.us-east-1.amazonaws.com\",\n        signingRegion: \"us-east-1\",\n    },\n    \"us-east-2-fips\": {\n        hostname: \"sts-fips.us-east-2.amazonaws.com\",\n        signingRegion: \"us-east-2\",\n    },\n    \"us-gov-east-1-fips\": {\n        hostname: \"sts.us-gov-east-1.amazonaws.com\",\n        signingRegion: \"us-gov-east-1\",\n    },\n    \"us-gov-west-1-fips\": {\n        hostname: \"sts.us-gov-west-1.amazonaws.com\",\n        signingRegion: \"us-gov-west-1\",\n    },\n    \"us-west-1-fips\": {\n        hostname: \"sts-fips.us-west-1.amazonaws.com\",\n        signingRegion: \"us-west-1\",\n    },\n    \"us-west-2-fips\": {\n        hostname: \"sts-fips.us-west-2.amazonaws.com\",\n        signingRegion: \"us-west-2\",\n    },\n};\nconst partitionHash = {\n    aws: {\n        regions: [\n            \"af-south-1\",\n            \"ap-east-1\",\n            \"ap-northeast-1\",\n            \"ap-northeast-2\",\n            \"ap-northeast-3\",\n            \"ap-south-1\",\n            \"ap-southeast-1\",\n            \"ap-southeast-2\",\n            \"aws-global\",\n            \"ca-central-1\",\n            \"eu-central-1\",\n            \"eu-north-1\",\n            \"eu-south-1\",\n            \"eu-west-1\",\n            \"eu-west-2\",\n            \"eu-west-3\",\n            \"me-south-1\",\n            \"sa-east-1\",\n            \"us-east-1\",\n            \"us-east-1-fips\",\n            \"us-east-2\",\n            \"us-east-2-fips\",\n            \"us-west-1\",\n            \"us-west-1-fips\",\n            \"us-west-2\",\n            \"us-west-2-fips\",\n        ],\n        hostname: \"sts.{region}.amazonaws.com\",\n    },\n    \"aws-cn\": {\n        regions: [\"cn-north-1\", \"cn-northwest-1\"],\n        hostname: \"sts.{region}.amazonaws.com.cn\",\n    },\n    \"aws-iso\": {\n        regions: [\"us-iso-east-1\"],\n        hostname: \"sts.{region}.c2s.ic.gov\",\n    },\n    \"aws-iso-b\": {\n        regions: [\"us-isob-east-1\"],\n        hostname: \"sts.{region}.sc2s.sgov.gov\",\n    },\n    \"aws-us-gov\": {\n        regions: [\"us-gov-east-1\", \"us-gov-east-1-fips\", \"us-gov-west-1\", \"us-gov-west-1-fips\"],\n        hostname: \"sts.{region}.amazonaws.com\",\n    },\n};\nconst defaultRegionInfoProvider = async (region, options) => (0, config_resolver_1.getRegionInfo)(region, {\n    ...options,\n    signingService: \"sts\",\n    regionHash,\n    partitionHash,\n});\nexports.defaultRegionInfoProvider = defaultRegionInfoProvider;\n//# sourceMappingURL=endpoints.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\n(0, tslib_1.__exportStar)(require(\"./STSClient\"), exports);\n(0, tslib_1.__exportStar)(require(\"./STS\"), exports);\n(0, tslib_1.__exportStar)(require(\"./commands/AssumeRoleCommand\"), exports);\n(0, tslib_1.__exportStar)(require(\"./commands/AssumeRoleWithSAMLCommand\"), exports);\n(0, tslib_1.__exportStar)(require(\"./commands/AssumeRoleWithWebIdentityCommand\"), exports);\n(0, tslib_1.__exportStar)(require(\"./commands/DecodeAuthorizationMessageCommand\"), exports);\n(0, tslib_1.__exportStar)(require(\"./commands/GetAccessKeyInfoCommand\"), exports);\n(0, tslib_1.__exportStar)(require(\"./commands/GetCallerIdentityCommand\"), exports);\n(0, tslib_1.__exportStar)(require(\"./commands/GetFederationTokenCommand\"), exports);\n(0, tslib_1.__exportStar)(require(\"./commands/GetSessionTokenCommand\"), exports);\n(0, tslib_1.__exportStar)(require(\"./defaultRoleAssumers\"), exports);\n(0, tslib_1.__exportStar)(require(\"./models/index\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\n(0, tslib_1.__exportStar)(require(\"./models_0\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetSessionTokenResponse = exports.GetSessionTokenRequest = exports.GetFederationTokenResponse = exports.FederatedUser = exports.GetFederationTokenRequest = exports.GetCallerIdentityResponse = exports.GetCallerIdentityRequest = exports.GetAccessKeyInfoResponse = exports.GetAccessKeyInfoRequest = exports.InvalidAuthorizationMessageException = exports.DecodeAuthorizationMessageResponse = exports.DecodeAuthorizationMessageRequest = exports.IDPCommunicationErrorException = exports.AssumeRoleWithWebIdentityResponse = exports.AssumeRoleWithWebIdentityRequest = exports.InvalidIdentityTokenException = exports.IDPRejectedClaimException = exports.AssumeRoleWithSAMLResponse = exports.AssumeRoleWithSAMLRequest = exports.RegionDisabledException = exports.PackedPolicyTooLargeException = exports.MalformedPolicyDocumentException = exports.ExpiredTokenException = exports.AssumeRoleResponse = exports.Credentials = exports.AssumeRoleRequest = exports.Tag = exports.PolicyDescriptorType = exports.AssumedRoleUser = void 0;\nvar AssumedRoleUser;\n(function (AssumedRoleUser) {\n    /**\n     * @internal\n     */\n    AssumedRoleUser.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(AssumedRoleUser = exports.AssumedRoleUser || (exports.AssumedRoleUser = {}));\nvar PolicyDescriptorType;\n(function (PolicyDescriptorType) {\n    /**\n     * @internal\n     */\n    PolicyDescriptorType.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(PolicyDescriptorType = exports.PolicyDescriptorType || (exports.PolicyDescriptorType = {}));\nvar Tag;\n(function (Tag) {\n    /**\n     * @internal\n     */\n    Tag.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(Tag = exports.Tag || (exports.Tag = {}));\nvar AssumeRoleRequest;\n(function (AssumeRoleRequest) {\n    /**\n     * @internal\n     */\n    AssumeRoleRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(AssumeRoleRequest = exports.AssumeRoleRequest || (exports.AssumeRoleRequest = {}));\nvar Credentials;\n(function (Credentials) {\n    /**\n     * @internal\n     */\n    Credentials.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(Credentials = exports.Credentials || (exports.Credentials = {}));\nvar AssumeRoleResponse;\n(function (AssumeRoleResponse) {\n    /**\n     * @internal\n     */\n    AssumeRoleResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(AssumeRoleResponse = exports.AssumeRoleResponse || (exports.AssumeRoleResponse = {}));\nvar ExpiredTokenException;\n(function (ExpiredTokenException) {\n    /**\n     * @internal\n     */\n    ExpiredTokenException.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(ExpiredTokenException = exports.ExpiredTokenException || (exports.ExpiredTokenException = {}));\nvar MalformedPolicyDocumentException;\n(function (MalformedPolicyDocumentException) {\n    /**\n     * @internal\n     */\n    MalformedPolicyDocumentException.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(MalformedPolicyDocumentException = exports.MalformedPolicyDocumentException || (exports.MalformedPolicyDocumentException = {}));\nvar PackedPolicyTooLargeException;\n(function (PackedPolicyTooLargeException) {\n    /**\n     * @internal\n     */\n    PackedPolicyTooLargeException.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(PackedPolicyTooLargeException = exports.PackedPolicyTooLargeException || (exports.PackedPolicyTooLargeException = {}));\nvar RegionDisabledException;\n(function (RegionDisabledException) {\n    /**\n     * @internal\n     */\n    RegionDisabledException.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(RegionDisabledException = exports.RegionDisabledException || (exports.RegionDisabledException = {}));\nvar AssumeRoleWithSAMLRequest;\n(function (AssumeRoleWithSAMLRequest) {\n    /**\n     * @internal\n     */\n    AssumeRoleWithSAMLRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(AssumeRoleWithSAMLRequest = exports.AssumeRoleWithSAMLRequest || (exports.AssumeRoleWithSAMLRequest = {}));\nvar AssumeRoleWithSAMLResponse;\n(function (AssumeRoleWithSAMLResponse) {\n    /**\n     * @internal\n     */\n    AssumeRoleWithSAMLResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(AssumeRoleWithSAMLResponse = exports.AssumeRoleWithSAMLResponse || (exports.AssumeRoleWithSAMLResponse = {}));\nvar IDPRejectedClaimException;\n(function (IDPRejectedClaimException) {\n    /**\n     * @internal\n     */\n    IDPRejectedClaimException.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(IDPRejectedClaimException = exports.IDPRejectedClaimException || (exports.IDPRejectedClaimException = {}));\nvar InvalidIdentityTokenException;\n(function (InvalidIdentityTokenException) {\n    /**\n     * @internal\n     */\n    InvalidIdentityTokenException.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(InvalidIdentityTokenException = exports.InvalidIdentityTokenException || (exports.InvalidIdentityTokenException = {}));\nvar AssumeRoleWithWebIdentityRequest;\n(function (AssumeRoleWithWebIdentityRequest) {\n    /**\n     * @internal\n     */\n    AssumeRoleWithWebIdentityRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(AssumeRoleWithWebIdentityRequest = exports.AssumeRoleWithWebIdentityRequest || (exports.AssumeRoleWithWebIdentityRequest = {}));\nvar AssumeRoleWithWebIdentityResponse;\n(function (AssumeRoleWithWebIdentityResponse) {\n    /**\n     * @internal\n     */\n    AssumeRoleWithWebIdentityResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(AssumeRoleWithWebIdentityResponse = exports.AssumeRoleWithWebIdentityResponse || (exports.AssumeRoleWithWebIdentityResponse = {}));\nvar IDPCommunicationErrorException;\n(function (IDPCommunicationErrorException) {\n    /**\n     * @internal\n     */\n    IDPCommunicationErrorException.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(IDPCommunicationErrorException = exports.IDPCommunicationErrorException || (exports.IDPCommunicationErrorException = {}));\nvar DecodeAuthorizationMessageRequest;\n(function (DecodeAuthorizationMessageRequest) {\n    /**\n     * @internal\n     */\n    DecodeAuthorizationMessageRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DecodeAuthorizationMessageRequest = exports.DecodeAuthorizationMessageRequest || (exports.DecodeAuthorizationMessageRequest = {}));\nvar DecodeAuthorizationMessageResponse;\n(function (DecodeAuthorizationMessageResponse) {\n    /**\n     * @internal\n     */\n    DecodeAuthorizationMessageResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(DecodeAuthorizationMessageResponse = exports.DecodeAuthorizationMessageResponse || (exports.DecodeAuthorizationMessageResponse = {}));\nvar InvalidAuthorizationMessageException;\n(function (InvalidAuthorizationMessageException) {\n    /**\n     * @internal\n     */\n    InvalidAuthorizationMessageException.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(InvalidAuthorizationMessageException = exports.InvalidAuthorizationMessageException || (exports.InvalidAuthorizationMessageException = {}));\nvar GetAccessKeyInfoRequest;\n(function (GetAccessKeyInfoRequest) {\n    /**\n     * @internal\n     */\n    GetAccessKeyInfoRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(GetAccessKeyInfoRequest = exports.GetAccessKeyInfoRequest || (exports.GetAccessKeyInfoRequest = {}));\nvar GetAccessKeyInfoResponse;\n(function (GetAccessKeyInfoResponse) {\n    /**\n     * @internal\n     */\n    GetAccessKeyInfoResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(GetAccessKeyInfoResponse = exports.GetAccessKeyInfoResponse || (exports.GetAccessKeyInfoResponse = {}));\nvar GetCallerIdentityRequest;\n(function (GetCallerIdentityRequest) {\n    /**\n     * @internal\n     */\n    GetCallerIdentityRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(GetCallerIdentityRequest = exports.GetCallerIdentityRequest || (exports.GetCallerIdentityRequest = {}));\nvar GetCallerIdentityResponse;\n(function (GetCallerIdentityResponse) {\n    /**\n     * @internal\n     */\n    GetCallerIdentityResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(GetCallerIdentityResponse = exports.GetCallerIdentityResponse || (exports.GetCallerIdentityResponse = {}));\nvar GetFederationTokenRequest;\n(function (GetFederationTokenRequest) {\n    /**\n     * @internal\n     */\n    GetFederationTokenRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(GetFederationTokenRequest = exports.GetFederationTokenRequest || (exports.GetFederationTokenRequest = {}));\nvar FederatedUser;\n(function (FederatedUser) {\n    /**\n     * @internal\n     */\n    FederatedUser.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(FederatedUser = exports.FederatedUser || (exports.FederatedUser = {}));\nvar GetFederationTokenResponse;\n(function (GetFederationTokenResponse) {\n    /**\n     * @internal\n     */\n    GetFederationTokenResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(GetFederationTokenResponse = exports.GetFederationTokenResponse || (exports.GetFederationTokenResponse = {}));\nvar GetSessionTokenRequest;\n(function (GetSessionTokenRequest) {\n    /**\n     * @internal\n     */\n    GetSessionTokenRequest.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(GetSessionTokenRequest = exports.GetSessionTokenRequest || (exports.GetSessionTokenRequest = {}));\nvar GetSessionTokenResponse;\n(function (GetSessionTokenResponse) {\n    /**\n     * @internal\n     */\n    GetSessionTokenResponse.filterSensitiveLog = (obj) => ({\n        ...obj,\n    });\n})(GetSessionTokenResponse = exports.GetSessionTokenResponse || (exports.GetSessionTokenResponse = {}));\n//# sourceMappingURL=models_0.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserializeAws_queryGetSessionTokenCommand = exports.deserializeAws_queryGetFederationTokenCommand = exports.deserializeAws_queryGetCallerIdentityCommand = exports.deserializeAws_queryGetAccessKeyInfoCommand = exports.deserializeAws_queryDecodeAuthorizationMessageCommand = exports.deserializeAws_queryAssumeRoleWithWebIdentityCommand = exports.deserializeAws_queryAssumeRoleWithSAMLCommand = exports.deserializeAws_queryAssumeRoleCommand = exports.serializeAws_queryGetSessionTokenCommand = exports.serializeAws_queryGetFederationTokenCommand = exports.serializeAws_queryGetCallerIdentityCommand = exports.serializeAws_queryGetAccessKeyInfoCommand = exports.serializeAws_queryDecodeAuthorizationMessageCommand = exports.serializeAws_queryAssumeRoleWithWebIdentityCommand = exports.serializeAws_queryAssumeRoleWithSAMLCommand = exports.serializeAws_queryAssumeRoleCommand = void 0;\nconst protocol_http_1 = require(\"@aws-sdk/protocol-http\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\nconst entities_1 = require(\"entities\");\nconst fast_xml_parser_1 = require(\"fast-xml-parser\");\nconst serializeAws_queryAssumeRoleCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryAssumeRoleRequest(input, context),\n        Action: \"AssumeRole\",\n        Version: \"2011-06-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryAssumeRoleCommand = serializeAws_queryAssumeRoleCommand;\nconst serializeAws_queryAssumeRoleWithSAMLCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryAssumeRoleWithSAMLRequest(input, context),\n        Action: \"AssumeRoleWithSAML\",\n        Version: \"2011-06-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryAssumeRoleWithSAMLCommand = serializeAws_queryAssumeRoleWithSAMLCommand;\nconst serializeAws_queryAssumeRoleWithWebIdentityCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryAssumeRoleWithWebIdentityRequest(input, context),\n        Action: \"AssumeRoleWithWebIdentity\",\n        Version: \"2011-06-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryAssumeRoleWithWebIdentityCommand = serializeAws_queryAssumeRoleWithWebIdentityCommand;\nconst serializeAws_queryDecodeAuthorizationMessageCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryDecodeAuthorizationMessageRequest(input, context),\n        Action: \"DecodeAuthorizationMessage\",\n        Version: \"2011-06-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryDecodeAuthorizationMessageCommand = serializeAws_queryDecodeAuthorizationMessageCommand;\nconst serializeAws_queryGetAccessKeyInfoCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryGetAccessKeyInfoRequest(input, context),\n        Action: \"GetAccessKeyInfo\",\n        Version: \"2011-06-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryGetAccessKeyInfoCommand = serializeAws_queryGetAccessKeyInfoCommand;\nconst serializeAws_queryGetCallerIdentityCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryGetCallerIdentityRequest(input, context),\n        Action: \"GetCallerIdentity\",\n        Version: \"2011-06-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryGetCallerIdentityCommand = serializeAws_queryGetCallerIdentityCommand;\nconst serializeAws_queryGetFederationTokenCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryGetFederationTokenRequest(input, context),\n        Action: \"GetFederationToken\",\n        Version: \"2011-06-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryGetFederationTokenCommand = serializeAws_queryGetFederationTokenCommand;\nconst serializeAws_queryGetSessionTokenCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryGetSessionTokenRequest(input, context),\n        Action: \"GetSessionToken\",\n        Version: \"2011-06-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexports.serializeAws_queryGetSessionTokenCommand = serializeAws_queryGetSessionTokenCommand;\nconst deserializeAws_queryAssumeRoleCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryAssumeRoleCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryAssumeRoleResponse(data.AssumeRoleResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryAssumeRoleCommand = deserializeAws_queryAssumeRoleCommand;\nconst deserializeAws_queryAssumeRoleCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ExpiredTokenException\":\n        case \"com.amazonaws.sts#ExpiredTokenException\":\n            response = {\n                ...(await deserializeAws_queryExpiredTokenExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"MalformedPolicyDocumentException\":\n        case \"com.amazonaws.sts#MalformedPolicyDocumentException\":\n            response = {\n                ...(await deserializeAws_queryMalformedPolicyDocumentExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"PackedPolicyTooLargeException\":\n        case \"com.amazonaws.sts#PackedPolicyTooLargeException\":\n            response = {\n                ...(await deserializeAws_queryPackedPolicyTooLargeExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"RegionDisabledException\":\n        case \"com.amazonaws.sts#RegionDisabledException\":\n            response = {\n                ...(await deserializeAws_queryRegionDisabledExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.Error.code || parsedBody.Error.Code || errorCode;\n            response = {\n                ...parsedBody.Error,\n                name: `${errorCode}`,\n                message: parsedBody.Error.message || parsedBody.Error.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_queryAssumeRoleWithSAMLCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryAssumeRoleWithSAMLCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryAssumeRoleWithSAMLResponse(data.AssumeRoleWithSAMLResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryAssumeRoleWithSAMLCommand = deserializeAws_queryAssumeRoleWithSAMLCommand;\nconst deserializeAws_queryAssumeRoleWithSAMLCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ExpiredTokenException\":\n        case \"com.amazonaws.sts#ExpiredTokenException\":\n            response = {\n                ...(await deserializeAws_queryExpiredTokenExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"IDPRejectedClaimException\":\n        case \"com.amazonaws.sts#IDPRejectedClaimException\":\n            response = {\n                ...(await deserializeAws_queryIDPRejectedClaimExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidIdentityTokenException\":\n        case \"com.amazonaws.sts#InvalidIdentityTokenException\":\n            response = {\n                ...(await deserializeAws_queryInvalidIdentityTokenExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"MalformedPolicyDocumentException\":\n        case \"com.amazonaws.sts#MalformedPolicyDocumentException\":\n            response = {\n                ...(await deserializeAws_queryMalformedPolicyDocumentExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"PackedPolicyTooLargeException\":\n        case \"com.amazonaws.sts#PackedPolicyTooLargeException\":\n            response = {\n                ...(await deserializeAws_queryPackedPolicyTooLargeExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"RegionDisabledException\":\n        case \"com.amazonaws.sts#RegionDisabledException\":\n            response = {\n                ...(await deserializeAws_queryRegionDisabledExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.Error.code || parsedBody.Error.Code || errorCode;\n            response = {\n                ...parsedBody.Error,\n                name: `${errorCode}`,\n                message: parsedBody.Error.message || parsedBody.Error.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_queryAssumeRoleWithWebIdentityCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryAssumeRoleWithWebIdentityCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryAssumeRoleWithWebIdentityResponse(data.AssumeRoleWithWebIdentityResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryAssumeRoleWithWebIdentityCommand = deserializeAws_queryAssumeRoleWithWebIdentityCommand;\nconst deserializeAws_queryAssumeRoleWithWebIdentityCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ExpiredTokenException\":\n        case \"com.amazonaws.sts#ExpiredTokenException\":\n            response = {\n                ...(await deserializeAws_queryExpiredTokenExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"IDPCommunicationErrorException\":\n        case \"com.amazonaws.sts#IDPCommunicationErrorException\":\n            response = {\n                ...(await deserializeAws_queryIDPCommunicationErrorExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"IDPRejectedClaimException\":\n        case \"com.amazonaws.sts#IDPRejectedClaimException\":\n            response = {\n                ...(await deserializeAws_queryIDPRejectedClaimExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"InvalidIdentityTokenException\":\n        case \"com.amazonaws.sts#InvalidIdentityTokenException\":\n            response = {\n                ...(await deserializeAws_queryInvalidIdentityTokenExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"MalformedPolicyDocumentException\":\n        case \"com.amazonaws.sts#MalformedPolicyDocumentException\":\n            response = {\n                ...(await deserializeAws_queryMalformedPolicyDocumentExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"PackedPolicyTooLargeException\":\n        case \"com.amazonaws.sts#PackedPolicyTooLargeException\":\n            response = {\n                ...(await deserializeAws_queryPackedPolicyTooLargeExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"RegionDisabledException\":\n        case \"com.amazonaws.sts#RegionDisabledException\":\n            response = {\n                ...(await deserializeAws_queryRegionDisabledExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.Error.code || parsedBody.Error.Code || errorCode;\n            response = {\n                ...parsedBody.Error,\n                name: `${errorCode}`,\n                message: parsedBody.Error.message || parsedBody.Error.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_queryDecodeAuthorizationMessageCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryDecodeAuthorizationMessageCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryDecodeAuthorizationMessageResponse(data.DecodeAuthorizationMessageResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryDecodeAuthorizationMessageCommand = deserializeAws_queryDecodeAuthorizationMessageCommand;\nconst deserializeAws_queryDecodeAuthorizationMessageCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidAuthorizationMessageException\":\n        case \"com.amazonaws.sts#InvalidAuthorizationMessageException\":\n            response = {\n                ...(await deserializeAws_queryInvalidAuthorizationMessageExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.Error.code || parsedBody.Error.Code || errorCode;\n            response = {\n                ...parsedBody.Error,\n                name: `${errorCode}`,\n                message: parsedBody.Error.message || parsedBody.Error.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_queryGetAccessKeyInfoCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryGetAccessKeyInfoCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryGetAccessKeyInfoResponse(data.GetAccessKeyInfoResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryGetAccessKeyInfoCommand = deserializeAws_queryGetAccessKeyInfoCommand;\nconst deserializeAws_queryGetAccessKeyInfoCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.Error.code || parsedBody.Error.Code || errorCode;\n            response = {\n                ...parsedBody.Error,\n                name: `${errorCode}`,\n                message: parsedBody.Error.message || parsedBody.Error.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_queryGetCallerIdentityCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryGetCallerIdentityCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryGetCallerIdentityResponse(data.GetCallerIdentityResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryGetCallerIdentityCommand = deserializeAws_queryGetCallerIdentityCommand;\nconst deserializeAws_queryGetCallerIdentityCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.Error.code || parsedBody.Error.Code || errorCode;\n            response = {\n                ...parsedBody.Error,\n                name: `${errorCode}`,\n                message: parsedBody.Error.message || parsedBody.Error.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_queryGetFederationTokenCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryGetFederationTokenCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryGetFederationTokenResponse(data.GetFederationTokenResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryGetFederationTokenCommand = deserializeAws_queryGetFederationTokenCommand;\nconst deserializeAws_queryGetFederationTokenCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"MalformedPolicyDocumentException\":\n        case \"com.amazonaws.sts#MalformedPolicyDocumentException\":\n            response = {\n                ...(await deserializeAws_queryMalformedPolicyDocumentExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"PackedPolicyTooLargeException\":\n        case \"com.amazonaws.sts#PackedPolicyTooLargeException\":\n            response = {\n                ...(await deserializeAws_queryPackedPolicyTooLargeExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        case \"RegionDisabledException\":\n        case \"com.amazonaws.sts#RegionDisabledException\":\n            response = {\n                ...(await deserializeAws_queryRegionDisabledExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.Error.code || parsedBody.Error.Code || errorCode;\n            response = {\n                ...parsedBody.Error,\n                name: `${errorCode}`,\n                message: parsedBody.Error.message || parsedBody.Error.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_queryGetSessionTokenCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryGetSessionTokenCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryGetSessionTokenResponse(data.GetSessionTokenResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nexports.deserializeAws_queryGetSessionTokenCommand = deserializeAws_queryGetSessionTokenCommand;\nconst deserializeAws_queryGetSessionTokenCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseBody(output.body, context),\n    };\n    let response;\n    let errorCode = \"UnknownError\";\n    errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"RegionDisabledException\":\n        case \"com.amazonaws.sts#RegionDisabledException\":\n            response = {\n                ...(await deserializeAws_queryRegionDisabledExceptionResponse(parsedOutput, context)),\n                name: errorCode,\n                $metadata: deserializeMetadata(output),\n            };\n            break;\n        default:\n            const parsedBody = parsedOutput.body;\n            errorCode = parsedBody.Error.code || parsedBody.Error.Code || errorCode;\n            response = {\n                ...parsedBody.Error,\n                name: `${errorCode}`,\n                message: parsedBody.Error.message || parsedBody.Error.Message || errorCode,\n                $fault: \"client\",\n                $metadata: deserializeMetadata(output),\n            };\n    }\n    const message = response.message || response.Message || errorCode;\n    response.message = message;\n    delete response.Message;\n    return Promise.reject(Object.assign(new Error(message), response));\n};\nconst deserializeAws_queryExpiredTokenExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryExpiredTokenException(body.Error, context);\n    const contents = {\n        name: \"ExpiredTokenException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    };\n    return contents;\n};\nconst deserializeAws_queryIDPCommunicationErrorExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryIDPCommunicationErrorException(body.Error, context);\n    const contents = {\n        name: \"IDPCommunicationErrorException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    };\n    return contents;\n};\nconst deserializeAws_queryIDPRejectedClaimExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryIDPRejectedClaimException(body.Error, context);\n    const contents = {\n        name: \"IDPRejectedClaimException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    };\n    return contents;\n};\nconst deserializeAws_queryInvalidAuthorizationMessageExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryInvalidAuthorizationMessageException(body.Error, context);\n    const contents = {\n        name: \"InvalidAuthorizationMessageException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    };\n    return contents;\n};\nconst deserializeAws_queryInvalidIdentityTokenExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryInvalidIdentityTokenException(body.Error, context);\n    const contents = {\n        name: \"InvalidIdentityTokenException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    };\n    return contents;\n};\nconst deserializeAws_queryMalformedPolicyDocumentExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryMalformedPolicyDocumentException(body.Error, context);\n    const contents = {\n        name: \"MalformedPolicyDocumentException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    };\n    return contents;\n};\nconst deserializeAws_queryPackedPolicyTooLargeExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryPackedPolicyTooLargeException(body.Error, context);\n    const contents = {\n        name: \"PackedPolicyTooLargeException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    };\n    return contents;\n};\nconst deserializeAws_queryRegionDisabledExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryRegionDisabledException(body.Error, context);\n    const contents = {\n        name: \"RegionDisabledException\",\n        $fault: \"client\",\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    };\n    return contents;\n};\nconst serializeAws_queryAssumeRoleRequest = (input, context) => {\n    const entries = {};\n    if (input.RoleArn !== undefined && input.RoleArn !== null) {\n        entries[\"RoleArn\"] = input.RoleArn;\n    }\n    if (input.RoleSessionName !== undefined && input.RoleSessionName !== null) {\n        entries[\"RoleSessionName\"] = input.RoleSessionName;\n    }\n    if (input.PolicyArns !== undefined && input.PolicyArns !== null) {\n        const memberEntries = serializeAws_querypolicyDescriptorListType(input.PolicyArns, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `PolicyArns.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.Policy !== undefined && input.Policy !== null) {\n        entries[\"Policy\"] = input.Policy;\n    }\n    if (input.DurationSeconds !== undefined && input.DurationSeconds !== null) {\n        entries[\"DurationSeconds\"] = input.DurationSeconds;\n    }\n    if (input.Tags !== undefined && input.Tags !== null) {\n        const memberEntries = serializeAws_querytagListType(input.Tags, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Tags.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.TransitiveTagKeys !== undefined && input.TransitiveTagKeys !== null) {\n        const memberEntries = serializeAws_querytagKeyListType(input.TransitiveTagKeys, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `TransitiveTagKeys.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.ExternalId !== undefined && input.ExternalId !== null) {\n        entries[\"ExternalId\"] = input.ExternalId;\n    }\n    if (input.SerialNumber !== undefined && input.SerialNumber !== null) {\n        entries[\"SerialNumber\"] = input.SerialNumber;\n    }\n    if (input.TokenCode !== undefined && input.TokenCode !== null) {\n        entries[\"TokenCode\"] = input.TokenCode;\n    }\n    if (input.SourceIdentity !== undefined && input.SourceIdentity !== null) {\n        entries[\"SourceIdentity\"] = input.SourceIdentity;\n    }\n    return entries;\n};\nconst serializeAws_queryAssumeRoleWithSAMLRequest = (input, context) => {\n    const entries = {};\n    if (input.RoleArn !== undefined && input.RoleArn !== null) {\n        entries[\"RoleArn\"] = input.RoleArn;\n    }\n    if (input.PrincipalArn !== undefined && input.PrincipalArn !== null) {\n        entries[\"PrincipalArn\"] = input.PrincipalArn;\n    }\n    if (input.SAMLAssertion !== undefined && input.SAMLAssertion !== null) {\n        entries[\"SAMLAssertion\"] = input.SAMLAssertion;\n    }\n    if (input.PolicyArns !== undefined && input.PolicyArns !== null) {\n        const memberEntries = serializeAws_querypolicyDescriptorListType(input.PolicyArns, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `PolicyArns.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.Policy !== undefined && input.Policy !== null) {\n        entries[\"Policy\"] = input.Policy;\n    }\n    if (input.DurationSeconds !== undefined && input.DurationSeconds !== null) {\n        entries[\"DurationSeconds\"] = input.DurationSeconds;\n    }\n    return entries;\n};\nconst serializeAws_queryAssumeRoleWithWebIdentityRequest = (input, context) => {\n    const entries = {};\n    if (input.RoleArn !== undefined && input.RoleArn !== null) {\n        entries[\"RoleArn\"] = input.RoleArn;\n    }\n    if (input.RoleSessionName !== undefined && input.RoleSessionName !== null) {\n        entries[\"RoleSessionName\"] = input.RoleSessionName;\n    }\n    if (input.WebIdentityToken !== undefined && input.WebIdentityToken !== null) {\n        entries[\"WebIdentityToken\"] = input.WebIdentityToken;\n    }\n    if (input.ProviderId !== undefined && input.ProviderId !== null) {\n        entries[\"ProviderId\"] = input.ProviderId;\n    }\n    if (input.PolicyArns !== undefined && input.PolicyArns !== null) {\n        const memberEntries = serializeAws_querypolicyDescriptorListType(input.PolicyArns, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `PolicyArns.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.Policy !== undefined && input.Policy !== null) {\n        entries[\"Policy\"] = input.Policy;\n    }\n    if (input.DurationSeconds !== undefined && input.DurationSeconds !== null) {\n        entries[\"DurationSeconds\"] = input.DurationSeconds;\n    }\n    return entries;\n};\nconst serializeAws_queryDecodeAuthorizationMessageRequest = (input, context) => {\n    const entries = {};\n    if (input.EncodedMessage !== undefined && input.EncodedMessage !== null) {\n        entries[\"EncodedMessage\"] = input.EncodedMessage;\n    }\n    return entries;\n};\nconst serializeAws_queryGetAccessKeyInfoRequest = (input, context) => {\n    const entries = {};\n    if (input.AccessKeyId !== undefined && input.AccessKeyId !== null) {\n        entries[\"AccessKeyId\"] = input.AccessKeyId;\n    }\n    return entries;\n};\nconst serializeAws_queryGetCallerIdentityRequest = (input, context) => {\n    const entries = {};\n    return entries;\n};\nconst serializeAws_queryGetFederationTokenRequest = (input, context) => {\n    const entries = {};\n    if (input.Name !== undefined && input.Name !== null) {\n        entries[\"Name\"] = input.Name;\n    }\n    if (input.Policy !== undefined && input.Policy !== null) {\n        entries[\"Policy\"] = input.Policy;\n    }\n    if (input.PolicyArns !== undefined && input.PolicyArns !== null) {\n        const memberEntries = serializeAws_querypolicyDescriptorListType(input.PolicyArns, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `PolicyArns.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.DurationSeconds !== undefined && input.DurationSeconds !== null) {\n        entries[\"DurationSeconds\"] = input.DurationSeconds;\n    }\n    if (input.Tags !== undefined && input.Tags !== null) {\n        const memberEntries = serializeAws_querytagListType(input.Tags, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Tags.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst serializeAws_queryGetSessionTokenRequest = (input, context) => {\n    const entries = {};\n    if (input.DurationSeconds !== undefined && input.DurationSeconds !== null) {\n        entries[\"DurationSeconds\"] = input.DurationSeconds;\n    }\n    if (input.SerialNumber !== undefined && input.SerialNumber !== null) {\n        entries[\"SerialNumber\"] = input.SerialNumber;\n    }\n    if (input.TokenCode !== undefined && input.TokenCode !== null) {\n        entries[\"TokenCode\"] = input.TokenCode;\n    }\n    return entries;\n};\nconst serializeAws_querypolicyDescriptorListType = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (let entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        const memberEntries = serializeAws_queryPolicyDescriptorType(entry, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            entries[`member.${counter}.${key}`] = value;\n        });\n        counter++;\n    }\n    return entries;\n};\nconst serializeAws_queryPolicyDescriptorType = (input, context) => {\n    const entries = {};\n    if (input.arn !== undefined && input.arn !== null) {\n        entries[\"arn\"] = input.arn;\n    }\n    return entries;\n};\nconst serializeAws_queryTag = (input, context) => {\n    const entries = {};\n    if (input.Key !== undefined && input.Key !== null) {\n        entries[\"Key\"] = input.Key;\n    }\n    if (input.Value !== undefined && input.Value !== null) {\n        entries[\"Value\"] = input.Value;\n    }\n    return entries;\n};\nconst serializeAws_querytagKeyListType = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (let entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        entries[`member.${counter}`] = entry;\n        counter++;\n    }\n    return entries;\n};\nconst serializeAws_querytagListType = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (let entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        const memberEntries = serializeAws_queryTag(entry, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            entries[`member.${counter}.${key}`] = value;\n        });\n        counter++;\n    }\n    return entries;\n};\nconst deserializeAws_queryAssumedRoleUser = (output, context) => {\n    let contents = {\n        AssumedRoleId: undefined,\n        Arn: undefined,\n    };\n    if (output[\"AssumedRoleId\"] !== undefined) {\n        contents.AssumedRoleId = (0, smithy_client_1.expectString)(output[\"AssumedRoleId\"]);\n    }\n    if (output[\"Arn\"] !== undefined) {\n        contents.Arn = (0, smithy_client_1.expectString)(output[\"Arn\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryAssumeRoleResponse = (output, context) => {\n    let contents = {\n        Credentials: undefined,\n        AssumedRoleUser: undefined,\n        PackedPolicySize: undefined,\n        SourceIdentity: undefined,\n    };\n    if (output[\"Credentials\"] !== undefined) {\n        contents.Credentials = deserializeAws_queryCredentials(output[\"Credentials\"], context);\n    }\n    if (output[\"AssumedRoleUser\"] !== undefined) {\n        contents.AssumedRoleUser = deserializeAws_queryAssumedRoleUser(output[\"AssumedRoleUser\"], context);\n    }\n    if (output[\"PackedPolicySize\"] !== undefined) {\n        contents.PackedPolicySize = (0, smithy_client_1.strictParseInt32)(output[\"PackedPolicySize\"]);\n    }\n    if (output[\"SourceIdentity\"] !== undefined) {\n        contents.SourceIdentity = (0, smithy_client_1.expectString)(output[\"SourceIdentity\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryAssumeRoleWithSAMLResponse = (output, context) => {\n    let contents = {\n        Credentials: undefined,\n        AssumedRoleUser: undefined,\n        PackedPolicySize: undefined,\n        Subject: undefined,\n        SubjectType: undefined,\n        Issuer: undefined,\n        Audience: undefined,\n        NameQualifier: undefined,\n        SourceIdentity: undefined,\n    };\n    if (output[\"Credentials\"] !== undefined) {\n        contents.Credentials = deserializeAws_queryCredentials(output[\"Credentials\"], context);\n    }\n    if (output[\"AssumedRoleUser\"] !== undefined) {\n        contents.AssumedRoleUser = deserializeAws_queryAssumedRoleUser(output[\"AssumedRoleUser\"], context);\n    }\n    if (output[\"PackedPolicySize\"] !== undefined) {\n        contents.PackedPolicySize = (0, smithy_client_1.strictParseInt32)(output[\"PackedPolicySize\"]);\n    }\n    if (output[\"Subject\"] !== undefined) {\n        contents.Subject = (0, smithy_client_1.expectString)(output[\"Subject\"]);\n    }\n    if (output[\"SubjectType\"] !== undefined) {\n        contents.SubjectType = (0, smithy_client_1.expectString)(output[\"SubjectType\"]);\n    }\n    if (output[\"Issuer\"] !== undefined) {\n        contents.Issuer = (0, smithy_client_1.expectString)(output[\"Issuer\"]);\n    }\n    if (output[\"Audience\"] !== undefined) {\n        contents.Audience = (0, smithy_client_1.expectString)(output[\"Audience\"]);\n    }\n    if (output[\"NameQualifier\"] !== undefined) {\n        contents.NameQualifier = (0, smithy_client_1.expectString)(output[\"NameQualifier\"]);\n    }\n    if (output[\"SourceIdentity\"] !== undefined) {\n        contents.SourceIdentity = (0, smithy_client_1.expectString)(output[\"SourceIdentity\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryAssumeRoleWithWebIdentityResponse = (output, context) => {\n    let contents = {\n        Credentials: undefined,\n        SubjectFromWebIdentityToken: undefined,\n        AssumedRoleUser: undefined,\n        PackedPolicySize: undefined,\n        Provider: undefined,\n        Audience: undefined,\n        SourceIdentity: undefined,\n    };\n    if (output[\"Credentials\"] !== undefined) {\n        contents.Credentials = deserializeAws_queryCredentials(output[\"Credentials\"], context);\n    }\n    if (output[\"SubjectFromWebIdentityToken\"] !== undefined) {\n        contents.SubjectFromWebIdentityToken = (0, smithy_client_1.expectString)(output[\"SubjectFromWebIdentityToken\"]);\n    }\n    if (output[\"AssumedRoleUser\"] !== undefined) {\n        contents.AssumedRoleUser = deserializeAws_queryAssumedRoleUser(output[\"AssumedRoleUser\"], context);\n    }\n    if (output[\"PackedPolicySize\"] !== undefined) {\n        contents.PackedPolicySize = (0, smithy_client_1.strictParseInt32)(output[\"PackedPolicySize\"]);\n    }\n    if (output[\"Provider\"] !== undefined) {\n        contents.Provider = (0, smithy_client_1.expectString)(output[\"Provider\"]);\n    }\n    if (output[\"Audience\"] !== undefined) {\n        contents.Audience = (0, smithy_client_1.expectString)(output[\"Audience\"]);\n    }\n    if (output[\"SourceIdentity\"] !== undefined) {\n        contents.SourceIdentity = (0, smithy_client_1.expectString)(output[\"SourceIdentity\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryCredentials = (output, context) => {\n    let contents = {\n        AccessKeyId: undefined,\n        SecretAccessKey: undefined,\n        SessionToken: undefined,\n        Expiration: undefined,\n    };\n    if (output[\"AccessKeyId\"] !== undefined) {\n        contents.AccessKeyId = (0, smithy_client_1.expectString)(output[\"AccessKeyId\"]);\n    }\n    if (output[\"SecretAccessKey\"] !== undefined) {\n        contents.SecretAccessKey = (0, smithy_client_1.expectString)(output[\"SecretAccessKey\"]);\n    }\n    if (output[\"SessionToken\"] !== undefined) {\n        contents.SessionToken = (0, smithy_client_1.expectString)(output[\"SessionToken\"]);\n    }\n    if (output[\"Expiration\"] !== undefined) {\n        contents.Expiration = new Date(output[\"Expiration\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryDecodeAuthorizationMessageResponse = (output, context) => {\n    let contents = {\n        DecodedMessage: undefined,\n    };\n    if (output[\"DecodedMessage\"] !== undefined) {\n        contents.DecodedMessage = (0, smithy_client_1.expectString)(output[\"DecodedMessage\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryExpiredTokenException = (output, context) => {\n    let contents = {\n        message: undefined,\n    };\n    if (output[\"message\"] !== undefined) {\n        contents.message = (0, smithy_client_1.expectString)(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryFederatedUser = (output, context) => {\n    let contents = {\n        FederatedUserId: undefined,\n        Arn: undefined,\n    };\n    if (output[\"FederatedUserId\"] !== undefined) {\n        contents.FederatedUserId = (0, smithy_client_1.expectString)(output[\"FederatedUserId\"]);\n    }\n    if (output[\"Arn\"] !== undefined) {\n        contents.Arn = (0, smithy_client_1.expectString)(output[\"Arn\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryGetAccessKeyInfoResponse = (output, context) => {\n    let contents = {\n        Account: undefined,\n    };\n    if (output[\"Account\"] !== undefined) {\n        contents.Account = (0, smithy_client_1.expectString)(output[\"Account\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryGetCallerIdentityResponse = (output, context) => {\n    let contents = {\n        UserId: undefined,\n        Account: undefined,\n        Arn: undefined,\n    };\n    if (output[\"UserId\"] !== undefined) {\n        contents.UserId = (0, smithy_client_1.expectString)(output[\"UserId\"]);\n    }\n    if (output[\"Account\"] !== undefined) {\n        contents.Account = (0, smithy_client_1.expectString)(output[\"Account\"]);\n    }\n    if (output[\"Arn\"] !== undefined) {\n        contents.Arn = (0, smithy_client_1.expectString)(output[\"Arn\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryGetFederationTokenResponse = (output, context) => {\n    let contents = {\n        Credentials: undefined,\n        FederatedUser: undefined,\n        PackedPolicySize: undefined,\n    };\n    if (output[\"Credentials\"] !== undefined) {\n        contents.Credentials = deserializeAws_queryCredentials(output[\"Credentials\"], context);\n    }\n    if (output[\"FederatedUser\"] !== undefined) {\n        contents.FederatedUser = deserializeAws_queryFederatedUser(output[\"FederatedUser\"], context);\n    }\n    if (output[\"PackedPolicySize\"] !== undefined) {\n        contents.PackedPolicySize = (0, smithy_client_1.strictParseInt32)(output[\"PackedPolicySize\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryGetSessionTokenResponse = (output, context) => {\n    let contents = {\n        Credentials: undefined,\n    };\n    if (output[\"Credentials\"] !== undefined) {\n        contents.Credentials = deserializeAws_queryCredentials(output[\"Credentials\"], context);\n    }\n    return contents;\n};\nconst deserializeAws_queryIDPCommunicationErrorException = (output, context) => {\n    let contents = {\n        message: undefined,\n    };\n    if (output[\"message\"] !== undefined) {\n        contents.message = (0, smithy_client_1.expectString)(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryIDPRejectedClaimException = (output, context) => {\n    let contents = {\n        message: undefined,\n    };\n    if (output[\"message\"] !== undefined) {\n        contents.message = (0, smithy_client_1.expectString)(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryInvalidAuthorizationMessageException = (output, context) => {\n    let contents = {\n        message: undefined,\n    };\n    if (output[\"message\"] !== undefined) {\n        contents.message = (0, smithy_client_1.expectString)(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryInvalidIdentityTokenException = (output, context) => {\n    let contents = {\n        message: undefined,\n    };\n    if (output[\"message\"] !== undefined) {\n        contents.message = (0, smithy_client_1.expectString)(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryMalformedPolicyDocumentException = (output, context) => {\n    let contents = {\n        message: undefined,\n    };\n    if (output[\"message\"] !== undefined) {\n        contents.message = (0, smithy_client_1.expectString)(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryPackedPolicyTooLargeException = (output, context) => {\n    let contents = {\n        message: undefined,\n    };\n    if (output[\"message\"] !== undefined) {\n        contents.message = (0, smithy_client_1.expectString)(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryRegionDisabledException = (output, context) => {\n    let contents = {\n        message: undefined,\n    };\n    if (output[\"message\"] !== undefined) {\n        contents.message = (0, smithy_client_1.expectString)(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeMetadata = (output) => {\n    var _a;\n    return ({\n        httpStatusCode: output.statusCode,\n        requestId: (_a = output.headers[\"x-amzn-requestid\"]) !== null && _a !== void 0 ? _a : output.headers[\"x-amzn-request-id\"],\n        extendedRequestId: output.headers[\"x-amz-id-2\"],\n        cfId: output.headers[\"x-amz-cf-id\"],\n    });\n};\n// Collect low-level response body stream to Uint8Array.\nconst collectBody = (streamBody = new Uint8Array(), context) => {\n    if (streamBody instanceof Uint8Array) {\n        return Promise.resolve(streamBody);\n    }\n    return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n};\n// Encode Uint8Array data into string with utf-8.\nconst collectBodyString = (streamBody, context) => collectBody(streamBody, context).then((body) => context.utf8Encoder(body));\nconst buildHttpRpcRequest = async (context, headers, path, resolvedHostname, body) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const contents = {\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        path: basePath.endsWith(\"/\") ? basePath.slice(0, -1) + path : basePath + path,\n        headers,\n    };\n    if (resolvedHostname !== undefined) {\n        contents.hostname = resolvedHostname;\n    }\n    if (body !== undefined) {\n        contents.body = body;\n    }\n    return new protocol_http_1.HttpRequest(contents);\n};\nconst parseBody = (streamBody, context) => collectBodyString(streamBody, context).then((encoded) => {\n    if (encoded.length) {\n        const parsedObj = (0, fast_xml_parser_1.parse)(encoded, {\n            attributeNamePrefix: \"\",\n            ignoreAttributes: false,\n            parseNodeValue: false,\n            trimValues: false,\n            tagValueProcessor: (val) => (val.trim() === \"\" && val.includes(\"\\n\") ? \"\" : (0, entities_1.decodeHTML)(val)),\n        });\n        const textNodeName = \"#text\";\n        const key = Object.keys(parsedObj)[0];\n        const parsedObjToReturn = parsedObj[key];\n        if (parsedObjToReturn[textNodeName]) {\n            parsedObjToReturn[key] = parsedObjToReturn[textNodeName];\n            delete parsedObjToReturn[textNodeName];\n        }\n        return (0, smithy_client_1.getValueFromTextNode)(parsedObjToReturn);\n    }\n    return {};\n});\nconst buildFormUrlencodedString = (formEntries) => Object.entries(formEntries)\n    .map(([key, value]) => (0, smithy_client_1.extendedEncodeURIComponent)(key) + \"=\" + (0, smithy_client_1.extendedEncodeURIComponent)(value))\n    .join(\"&\");\nconst loadQueryErrorCode = (output, data) => {\n    if (data.Error.Code !== undefined) {\n        return data.Error.Code;\n    }\n    if (output.statusCode == 404) {\n        return \"NotFound\";\n    }\n    return \"\";\n};\n//# sourceMappingURL=Aws_query.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRuntimeConfig = void 0;\nconst tslib_1 = require(\"tslib\");\nconst package_json_1 = (0, tslib_1.__importDefault)(require(\"./package.json\"));\nconst defaultStsRoleAssumers_1 = require(\"./defaultStsRoleAssumers\");\nconst config_resolver_1 = require(\"@aws-sdk/config-resolver\");\nconst credential_provider_node_1 = require(\"@aws-sdk/credential-provider-node\");\nconst hash_node_1 = require(\"@aws-sdk/hash-node\");\nconst middleware_retry_1 = require(\"@aws-sdk/middleware-retry\");\nconst node_config_provider_1 = require(\"@aws-sdk/node-config-provider\");\nconst node_http_handler_1 = require(\"@aws-sdk/node-http-handler\");\nconst util_base64_node_1 = require(\"@aws-sdk/util-base64-node\");\nconst util_body_length_node_1 = require(\"@aws-sdk/util-body-length-node\");\nconst util_user_agent_node_1 = require(\"@aws-sdk/util-user-agent-node\");\nconst util_utf8_node_1 = require(\"@aws-sdk/util-utf8-node\");\nconst runtimeConfig_shared_1 = require(\"./runtimeConfig.shared\");\nconst smithy_client_1 = require(\"@aws-sdk/smithy-client\");\n/**\n * @internal\n */\nconst getRuntimeConfig = (config) => {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o;\n    (0, smithy_client_1.emitWarningIfUnsupportedVersion)(process.version);\n    const clientSharedValues = (0, runtimeConfig_shared_1.getRuntimeConfig)(config);\n    return {\n        ...clientSharedValues,\n        ...config,\n        runtime: \"node\",\n        base64Decoder: (_a = config === null || config === void 0 ? void 0 : config.base64Decoder) !== null && _a !== void 0 ? _a : util_base64_node_1.fromBase64,\n        base64Encoder: (_b = config === null || config === void 0 ? void 0 : config.base64Encoder) !== null && _b !== void 0 ? _b : util_base64_node_1.toBase64,\n        bodyLengthChecker: (_c = config === null || config === void 0 ? void 0 : config.bodyLengthChecker) !== null && _c !== void 0 ? _c : util_body_length_node_1.calculateBodyLength,\n        credentialDefaultProvider: (_d = config === null || config === void 0 ? void 0 : config.credentialDefaultProvider) !== null && _d !== void 0 ? _d : (0, defaultStsRoleAssumers_1.decorateDefaultCredentialProvider)(credential_provider_node_1.defaultProvider),\n        defaultUserAgentProvider: (_e = config === null || config === void 0 ? void 0 : config.defaultUserAgentProvider) !== null && _e !== void 0 ? _e : (0, util_user_agent_node_1.defaultUserAgent)({ serviceId: clientSharedValues.serviceId, clientVersion: package_json_1.default.version }),\n        maxAttempts: (_f = config === null || config === void 0 ? void 0 : config.maxAttempts) !== null && _f !== void 0 ? _f : (0, node_config_provider_1.loadConfig)(middleware_retry_1.NODE_MAX_ATTEMPT_CONFIG_OPTIONS),\n        region: (_g = config === null || config === void 0 ? void 0 : config.region) !== null && _g !== void 0 ? _g : (0, node_config_provider_1.loadConfig)(config_resolver_1.NODE_REGION_CONFIG_OPTIONS, config_resolver_1.NODE_REGION_CONFIG_FILE_OPTIONS),\n        requestHandler: (_h = config === null || config === void 0 ? void 0 : config.requestHandler) !== null && _h !== void 0 ? _h : new node_http_handler_1.NodeHttpHandler(),\n        retryMode: (_j = config === null || config === void 0 ? void 0 : config.retryMode) !== null && _j !== void 0 ? _j : (0, node_config_provider_1.loadConfig)(middleware_retry_1.NODE_RETRY_MODE_CONFIG_OPTIONS),\n        sha256: (_k = config === null || config === void 0 ? void 0 : config.sha256) !== null && _k !== void 0 ? _k : hash_node_1.Hash.bind(null, \"sha256\"),\n        streamCollector: (_l = config === null || config === void 0 ? void 0 : config.streamCollector) !== null && _l !== void 0 ? _l : node_http_handler_1.streamCollector,\n        utf8Decoder: (_m = config === null || config === void 0 ? void 0 : config.utf8Decoder) !== null && _m !== void 0 ? _m : util_utf8_node_1.fromUtf8,\n        utf8Encoder: (_o = config === null || config === void 0 ? void 0 : config.utf8Encoder) !== null && _o !== void 0 ? _o : util_utf8_node_1.toUtf8,\n    };\n};\nexports.getRuntimeConfig = getRuntimeConfig;\n//# sourceMappingURL=runtimeConfig.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRuntimeConfig = void 0;\nconst endpoints_1 = require(\"./endpoints\");\nconst url_parser_1 = require(\"@aws-sdk/url-parser\");\n/**\n * @internal\n */\nconst getRuntimeConfig = (config) => {\n    var _a, _b, _c, _d, _e;\n    return ({\n        apiVersion: \"2011-06-15\",\n        disableHostPrefix: (_a = config === null || config === void 0 ? void 0 : config.disableHostPrefix) !== null && _a !== void 0 ? _a : false,\n        logger: (_b = config === null || config === void 0 ? void 0 : config.logger) !== null && _b !== void 0 ? _b : {},\n        regionInfoProvider: (_c = config === null || config === void 0 ? void 0 : config.regionInfoProvider) !== null && _c !== void 0 ? _c : endpoints_1.defaultRegionInfoProvider,\n        serviceId: (_d = config === null || config === void 0 ? void 0 : config.serviceId) !== null && _d !== void 0 ? _d : \"STS\",\n        urlParser: (_e = config === null || config === void 0 ? void 0 : config.urlParser) !== null && _e !== void 0 ? _e : url_parser_1.parseUrl,\n    });\n};\nexports.getRuntimeConfig = getRuntimeConfig;\n//# sourceMappingURL=runtimeConfig.shared.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\n(0, tslib_1.__exportStar)(require(\"./resolveCustomEndpointsConfig\"), exports);\n(0, tslib_1.__exportStar)(require(\"./resolveEndpointsConfig\"), exports);\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvZW5kcG9pbnRzQ29uZmlnL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLDhFQUErQztBQUMvQyx3RUFBeUMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tIFwiLi9yZXNvbHZlQ3VzdG9tRW5kcG9pbnRzQ29uZmlnXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9yZXNvbHZlRW5kcG9pbnRzQ29uZmlnXCI7XG4iXX0=","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveCustomEndpointsConfig = void 0;\nconst normalizeEndpoint_1 = require(\"./utils/normalizeEndpoint\");\nconst resolveCustomEndpointsConfig = (input) => {\n    var _a;\n    return ({\n        ...input,\n        tls: (_a = input.tls) !== null && _a !== void 0 ? _a : true,\n        endpoint: (0, normalizeEndpoint_1.normalizeEndpoint)(input),\n        isCustomEndpoint: true,\n    });\n};\nexports.resolveCustomEndpointsConfig = resolveCustomEndpointsConfig;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVzb2x2ZUN1c3RvbUVuZHBvaW50c0NvbmZpZy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9lbmRwb2ludHNDb25maWcvcmVzb2x2ZUN1c3RvbUVuZHBvaW50c0NvbmZpZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFHQSxpRUFBOEQ7QUFxQnZELE1BQU0sNEJBQTRCLEdBQUcsQ0FDMUMsS0FBMEQsRUFDdkIsRUFBRTs7SUFBQyxPQUFBLENBQUM7UUFDdkMsR0FBRyxLQUFLO1FBQ1IsR0FBRyxFQUFFLE1BQUEsS0FBSyxDQUFDLEdBQUcsbUNBQUksSUFBSTtRQUN0QixRQUFRLEVBQUUsSUFBQSxxQ0FBaUIsRUFBQyxLQUFLLENBQUM7UUFDbEMsZ0JBQWdCLEVBQUUsSUFBSTtLQUN2QixDQUFDLENBQUE7Q0FBQSxDQUFDO0FBUFUsUUFBQSw0QkFBNEIsZ0NBT3RDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRW5kcG9pbnQsIFByb3ZpZGVyLCBVcmxQYXJzZXIgfSBmcm9tIFwiQGF3cy1zZGsvdHlwZXNcIjtcblxuaW1wb3J0IHsgRW5kcG9pbnRzSW5wdXRDb25maWcsIEVuZHBvaW50c1Jlc29sdmVkQ29uZmlnIH0gZnJvbSBcIi4vcmVzb2x2ZUVuZHBvaW50c0NvbmZpZ1wiO1xuaW1wb3J0IHsgbm9ybWFsaXplRW5kcG9pbnQgfSBmcm9tIFwiLi91dGlscy9ub3JtYWxpemVFbmRwb2ludFwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIEN1c3RvbUVuZHBvaW50c0lucHV0Q29uZmlnIGV4dGVuZHMgRW5kcG9pbnRzSW5wdXRDb25maWcge1xuICAvKipcbiAgICogVGhlIGZ1bGx5IHF1YWxpZmllZCBlbmRwb2ludCBvZiB0aGUgd2Vic2VydmljZS5cbiAgICovXG4gIGVuZHBvaW50OiBzdHJpbmcgfCBFbmRwb2ludCB8IFByb3ZpZGVyPEVuZHBvaW50Pjtcbn1cblxuaW50ZXJmYWNlIFByZXZpb3VzbHlSZXNvbHZlZCB7XG4gIHVybFBhcnNlcjogVXJsUGFyc2VyO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIEN1c3RvbUVuZHBvaW50c1Jlc29sdmVkQ29uZmlnIGV4dGVuZHMgRW5kcG9pbnRzUmVzb2x2ZWRDb25maWcge1xuICAvKipcbiAgICogV2hldGhlciB0aGUgZW5kcG9pbnQgaXMgc3BlY2lmaWVkIGJ5IGNhbGxlci5cbiAgICogQGludGVybmFsXG4gICAqL1xuICBpc0N1c3RvbUVuZHBvaW50OiB0cnVlO1xufVxuXG5leHBvcnQgY29uc3QgcmVzb2x2ZUN1c3RvbUVuZHBvaW50c0NvbmZpZyA9IDxUPihcbiAgaW5wdXQ6IFQgJiBDdXN0b21FbmRwb2ludHNJbnB1dENvbmZpZyAmIFByZXZpb3VzbHlSZXNvbHZlZFxuKTogVCAmIEN1c3RvbUVuZHBvaW50c1Jlc29sdmVkQ29uZmlnID0+ICh7XG4gIC4uLmlucHV0LFxuICB0bHM6IGlucHV0LnRscyA/PyB0cnVlLFxuICBlbmRwb2ludDogbm9ybWFsaXplRW5kcG9pbnQoaW5wdXQpLFxuICBpc0N1c3RvbUVuZHBvaW50OiB0cnVlLFxufSk7XG4iXX0=","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveEndpointsConfig = void 0;\nconst getEndpointFromRegion_1 = require(\"./utils/getEndpointFromRegion\");\nconst normalizeEndpoint_1 = require(\"./utils/normalizeEndpoint\");\nconst resolveEndpointsConfig = (input) => {\n    var _a;\n    return ({\n        ...input,\n        tls: (_a = input.tls) !== null && _a !== void 0 ? _a : true,\n        endpoint: input.endpoint\n            ? (0, normalizeEndpoint_1.normalizeEndpoint)({ ...input, endpoint: input.endpoint })\n            : () => (0, getEndpointFromRegion_1.getEndpointFromRegion)(input),\n        isCustomEndpoint: input.endpoint ? true : false,\n    });\n};\nexports.resolveEndpointsConfig = resolveEndpointsConfig;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVzb2x2ZUVuZHBvaW50c0NvbmZpZy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9lbmRwb2ludHNDb25maWcvcmVzb2x2ZUVuZHBvaW50c0NvbmZpZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFFQSx5RUFBc0U7QUFDdEUsaUVBQThEO0FBaUN2RCxNQUFNLHNCQUFzQixHQUFHLENBQ3BDLEtBQW9ELEVBQ3ZCLEVBQUU7O0lBQUMsT0FBQSxDQUFDO1FBQ2pDLEdBQUcsS0FBSztRQUNSLEdBQUcsRUFBRSxNQUFBLEtBQUssQ0FBQyxHQUFHLG1DQUFJLElBQUk7UUFDdEIsUUFBUSxFQUFFLEtBQUssQ0FBQyxRQUFRO1lBQ3RCLENBQUMsQ0FBQyxJQUFBLHFDQUFpQixFQUFDLEVBQUUsR0FBRyxLQUFLLEVBQUUsUUFBUSxFQUFFLEtBQUssQ0FBQyxRQUFRLEVBQUUsQ0FBQztZQUMzRCxDQUFDLENBQUMsR0FBRyxFQUFFLENBQUMsSUFBQSw2Q0FBcUIsRUFBQyxLQUFLLENBQUM7UUFDdEMsZ0JBQWdCLEVBQUUsS0FBSyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxLQUFLO0tBQ2hELENBQUMsQ0FBQTtDQUFBLENBQUM7QUFUVSxRQUFBLHNCQUFzQiwwQkFTaEMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFbmRwb2ludCwgUHJvdmlkZXIsIFJlZ2lvbkluZm9Qcm92aWRlciwgVXJsUGFyc2VyIH0gZnJvbSBcIkBhd3Mtc2RrL3R5cGVzXCI7XG5cbmltcG9ydCB7IGdldEVuZHBvaW50RnJvbVJlZ2lvbiB9IGZyb20gXCIuL3V0aWxzL2dldEVuZHBvaW50RnJvbVJlZ2lvblwiO1xuaW1wb3J0IHsgbm9ybWFsaXplRW5kcG9pbnQgfSBmcm9tIFwiLi91dGlscy9ub3JtYWxpemVFbmRwb2ludFwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIEVuZHBvaW50c0lucHV0Q29uZmlnIHtcbiAgLyoqXG4gICAqIFRoZSBmdWxseSBxdWFsaWZpZWQgZW5kcG9pbnQgb2YgdGhlIHdlYnNlcnZpY2UuIFRoaXMgaXMgb25seSByZXF1aXJlZCB3aGVuIHVzaW5nIGEgY3VzdG9tIGVuZHBvaW50IChmb3IgZXhhbXBsZSwgd2hlbiB1c2luZyBhIGxvY2FsIHZlcnNpb24gb2YgUzMpLlxuICAgKi9cbiAgZW5kcG9pbnQ/OiBzdHJpbmcgfCBFbmRwb2ludCB8IFByb3ZpZGVyPEVuZHBvaW50PjtcblxuICAvKipcbiAgICogV2hldGhlciBUTFMgaXMgZW5hYmxlZCBmb3IgcmVxdWVzdHMuXG4gICAqL1xuICB0bHM/OiBib29sZWFuO1xufVxuXG5pbnRlcmZhY2UgUHJldmlvdXNseVJlc29sdmVkIHtcbiAgcmVnaW9uSW5mb1Byb3ZpZGVyOiBSZWdpb25JbmZvUHJvdmlkZXI7XG4gIHVybFBhcnNlcjogVXJsUGFyc2VyO1xuICByZWdpb246IFByb3ZpZGVyPHN0cmluZz47XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgRW5kcG9pbnRzUmVzb2x2ZWRDb25maWcgZXh0ZW5kcyBSZXF1aXJlZDxFbmRwb2ludHNJbnB1dENvbmZpZz4ge1xuICAvKipcbiAgICogUmVzb2x2ZWQgdmFsdWUgZm9yIGlucHV0IHtAbGluayBFbmRwb2ludHNSZXNvbHZlZENvbmZpZy5lbmRwb2ludH1cbiAgICovXG4gIGVuZHBvaW50OiBQcm92aWRlcjxFbmRwb2ludD47XG5cbiAgLyoqXG4gICAqIFdoZXRoZXIgdGhlIGVuZHBvaW50IGlzIHNwZWNpZmllZCBieSBjYWxsZXIuXG4gICAqIEBpbnRlcm5hbFxuICAgKi9cbiAgaXNDdXN0b21FbmRwb2ludDogYm9vbGVhbjtcbn1cblxuZXhwb3J0IGNvbnN0IHJlc29sdmVFbmRwb2ludHNDb25maWcgPSA8VD4oXG4gIGlucHV0OiBUICYgRW5kcG9pbnRzSW5wdXRDb25maWcgJiBQcmV2aW91c2x5UmVzb2x2ZWRcbik6IFQgJiBFbmRwb2ludHNSZXNvbHZlZENvbmZpZyA9PiAoe1xuICAuLi5pbnB1dCxcbiAgdGxzOiBpbnB1dC50bHMgPz8gdHJ1ZSxcbiAgZW5kcG9pbnQ6IGlucHV0LmVuZHBvaW50XG4gICAgPyBub3JtYWxpemVFbmRwb2ludCh7IC4uLmlucHV0LCBlbmRwb2ludDogaW5wdXQuZW5kcG9pbnQgfSlcbiAgICA6ICgpID0+IGdldEVuZHBvaW50RnJvbVJlZ2lvbihpbnB1dCksXG4gIGlzQ3VzdG9tRW5kcG9pbnQ6IGlucHV0LmVuZHBvaW50ID8gdHJ1ZSA6IGZhbHNlLFxufSk7XG4iXX0=","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getEndpointFromRegion = void 0;\nconst getEndpointFromRegion = async (input) => {\n    var _a;\n    const { tls = true } = input;\n    const region = await input.region();\n    const dnsHostRegex = new RegExp(/^([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]{0,61}[a-zA-Z0-9])$/);\n    if (!dnsHostRegex.test(region)) {\n        throw new Error(\"Invalid region in client config\");\n    }\n    const { hostname } = (_a = (await input.regionInfoProvider(region))) !== null && _a !== void 0 ? _a : {};\n    if (!hostname) {\n        throw new Error(\"Cannot resolve hostname from client config\");\n    }\n    return input.urlParser(`${tls ? \"https:\" : \"http:\"}//${hostname}`);\n};\nexports.getEndpointFromRegion = getEndpointFromRegion;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0RW5kcG9pbnRGcm9tUmVnaW9uLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2VuZHBvaW50c0NvbmZpZy91dGlscy9nZXRFbmRwb2ludEZyb21SZWdpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBU08sTUFBTSxxQkFBcUIsR0FBRyxLQUFLLEVBQUUsS0FBbUMsRUFBRSxFQUFFOztJQUNqRixNQUFNLEVBQUUsR0FBRyxHQUFHLElBQUksRUFBRSxHQUFHLEtBQUssQ0FBQztJQUM3QixNQUFNLE1BQU0sR0FBRyxNQUFNLEtBQUssQ0FBQyxNQUFNLEVBQUUsQ0FBQztJQUVwQyxNQUFNLFlBQVksR0FBRyxJQUFJLE1BQU0sQ0FBQywwREFBMEQsQ0FBQyxDQUFDO0lBQzVGLElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxFQUFFO1FBQzlCLE1BQU0sSUFBSSxLQUFLLENBQUMsaUNBQWlDLENBQUMsQ0FBQztLQUNwRDtJQUVELE1BQU0sRUFBRSxRQUFRLEVBQUUsR0FBRyxNQUFBLENBQUMsTUFBTSxLQUFLLENBQUMsa0JBQWtCLENBQUMsTUFBTSxDQUFDLENBQUMsbUNBQUksRUFBRSxDQUFDO0lBQ3BFLElBQUksQ0FBQyxRQUFRLEVBQUU7UUFDYixNQUFNLElBQUksS0FBSyxDQUFDLDRDQUE0QyxDQUFDLENBQUM7S0FDL0Q7SUFFRCxPQUFPLEtBQUssQ0FBQyxTQUFTLENBQUMsR0FBRyxHQUFHLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsT0FBTyxLQUFLLFFBQVEsRUFBRSxDQUFDLENBQUM7QUFDckUsQ0FBQyxDQUFDO0FBZlcsUUFBQSxxQkFBcUIseUJBZWhDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUHJvdmlkZXIsIFJlZ2lvbkluZm9Qcm92aWRlciwgVXJsUGFyc2VyIH0gZnJvbSBcIkBhd3Mtc2RrL3R5cGVzXCI7XG5cbmludGVyZmFjZSBHZXRFbmRwb2ludEZyb21SZWdpb25PcHRpb25zIHtcbiAgcmVnaW9uOiBQcm92aWRlcjxzdHJpbmc+O1xuICB0bHM/OiBib29sZWFuO1xuICByZWdpb25JbmZvUHJvdmlkZXI6IFJlZ2lvbkluZm9Qcm92aWRlcjtcbiAgdXJsUGFyc2VyOiBVcmxQYXJzZXI7XG59XG5cbmV4cG9ydCBjb25zdCBnZXRFbmRwb2ludEZyb21SZWdpb24gPSBhc3luYyAoaW5wdXQ6IEdldEVuZHBvaW50RnJvbVJlZ2lvbk9wdGlvbnMpID0+IHtcbiAgY29uc3QgeyB0bHMgPSB0cnVlIH0gPSBpbnB1dDtcbiAgY29uc3QgcmVnaW9uID0gYXdhaXQgaW5wdXQucmVnaW9uKCk7XG5cbiAgY29uc3QgZG5zSG9zdFJlZ2V4ID0gbmV3IFJlZ0V4cCgvXihbYS16QS1aMC05XXxbYS16QS1aMC05XVthLXpBLVowLTktXXswLDYxfVthLXpBLVowLTldKSQvKTtcbiAgaWYgKCFkbnNIb3N0UmVnZXgudGVzdChyZWdpb24pKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCByZWdpb24gaW4gY2xpZW50IGNvbmZpZ1wiKTtcbiAgfVxuXG4gIGNvbnN0IHsgaG9zdG5hbWUgfSA9IChhd2FpdCBpbnB1dC5yZWdpb25JbmZvUHJvdmlkZXIocmVnaW9uKSkgPz8ge307XG4gIGlmICghaG9zdG5hbWUpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJDYW5ub3QgcmVzb2x2ZSBob3N0bmFtZSBmcm9tIGNsaWVudCBjb25maWdcIik7XG4gIH1cblxuICByZXR1cm4gaW5wdXQudXJsUGFyc2VyKGAke3RscyA/IFwiaHR0cHM6XCIgOiBcImh0dHA6XCJ9Ly8ke2hvc3RuYW1lfWApO1xufTtcbiJdfQ==","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.normalizeEndpoint = void 0;\nconst normalizeEndpoint = ({ endpoint, urlParser }) => {\n    if (typeof endpoint === \"string\") {\n        const promisified = Promise.resolve(urlParser(endpoint));\n        return () => promisified;\n    }\n    else if (typeof endpoint === \"object\") {\n        const promisified = Promise.resolve(endpoint);\n        return () => promisified;\n    }\n    return endpoint;\n};\nexports.normalizeEndpoint = normalizeEndpoint;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm9ybWFsaXplRW5kcG9pbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvZW5kcG9pbnRzQ29uZmlnL3V0aWxzL25vcm1hbGl6ZUVuZHBvaW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQU9PLE1BQU0saUJBQWlCLEdBQUcsQ0FBQyxFQUFFLFFBQVEsRUFBRSxTQUFTLEVBQTRCLEVBQXNCLEVBQUU7SUFDekcsSUFBSSxPQUFPLFFBQVEsS0FBSyxRQUFRLEVBQUU7UUFDaEMsTUFBTSxXQUFXLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztRQUN6RCxPQUFPLEdBQUcsRUFBRSxDQUFDLFdBQVcsQ0FBQztLQUMxQjtTQUFNLElBQUksT0FBTyxRQUFRLEtBQUssUUFBUSxFQUFFO1FBQ3ZDLE1BQU0sV0FBVyxHQUFHLE9BQU8sQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUM7UUFDOUMsT0FBTyxHQUFHLEVBQUUsQ0FBQyxXQUFXLENBQUM7S0FDMUI7SUFDRCxPQUFPLFFBQVEsQ0FBQztBQUNsQixDQUFDLENBQUM7QUFUVyxRQUFBLGlCQUFpQixxQkFTNUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFbmRwb2ludCwgUHJvdmlkZXIsIFVybFBhcnNlciB9IGZyb20gXCJAYXdzLXNkay90eXBlc1wiO1xuXG5pbnRlcmZhY2UgTm9ybWFsaXplRW5kcG9pbnRPcHRpb25zIHtcbiAgZW5kcG9pbnQ6IHN0cmluZyB8IEVuZHBvaW50IHwgUHJvdmlkZXI8RW5kcG9pbnQ+O1xuICB1cmxQYXJzZXI6IFVybFBhcnNlcjtcbn1cblxuZXhwb3J0IGNvbnN0IG5vcm1hbGl6ZUVuZHBvaW50ID0gKHsgZW5kcG9pbnQsIHVybFBhcnNlciB9OiBOb3JtYWxpemVFbmRwb2ludE9wdGlvbnMpOiBQcm92aWRlcjxFbmRwb2ludD4gPT4ge1xuICBpZiAodHlwZW9mIGVuZHBvaW50ID09PSBcInN0cmluZ1wiKSB7XG4gICAgY29uc3QgcHJvbWlzaWZpZWQgPSBQcm9taXNlLnJlc29sdmUodXJsUGFyc2VyKGVuZHBvaW50KSk7XG4gICAgcmV0dXJuICgpID0+IHByb21pc2lmaWVkO1xuICB9IGVsc2UgaWYgKHR5cGVvZiBlbmRwb2ludCA9PT0gXCJvYmplY3RcIikge1xuICAgIGNvbnN0IHByb21pc2lmaWVkID0gUHJvbWlzZS5yZXNvbHZlKGVuZHBvaW50KTtcbiAgICByZXR1cm4gKCkgPT4gcHJvbWlzaWZpZWQ7XG4gIH1cbiAgcmV0dXJuIGVuZHBvaW50O1xufTtcbiJdfQ==","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\n(0, tslib_1.__exportStar)(require(\"./endpointsConfig\"), exports);\n(0, tslib_1.__exportStar)(require(\"./regionConfig\"), exports);\n(0, tslib_1.__exportStar)(require(\"./regionInfo\"), exports);\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsaUVBQWtDO0FBQ2xDLDhEQUErQjtBQUMvQiw0REFBNkIiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tIFwiLi9lbmRwb2ludHNDb25maWdcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3JlZ2lvbkNvbmZpZ1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vcmVnaW9uSW5mb1wiO1xuIl19","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NODE_REGION_CONFIG_FILE_OPTIONS = exports.NODE_REGION_CONFIG_OPTIONS = exports.REGION_INI_NAME = exports.REGION_ENV_NAME = void 0;\nexports.REGION_ENV_NAME = \"AWS_REGION\";\nexports.REGION_INI_NAME = \"region\";\nexports.NODE_REGION_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => env[exports.REGION_ENV_NAME],\n    configFileSelector: (profile) => profile[exports.REGION_INI_NAME],\n    default: () => {\n        throw new Error(\"Region is missing\");\n    },\n};\nexports.NODE_REGION_CONFIG_FILE_OPTIONS = {\n    preferredFile: \"credentials\",\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlnLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3JlZ2lvbkNvbmZpZy9jb25maWcudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBRWEsUUFBQSxlQUFlLEdBQUcsWUFBWSxDQUFDO0FBQy9CLFFBQUEsZUFBZSxHQUFHLFFBQVEsQ0FBQztBQUUzQixRQUFBLDBCQUEwQixHQUFrQztJQUN2RSwyQkFBMkIsRUFBRSxDQUFDLEdBQUcsRUFBRSxFQUFFLENBQUMsR0FBRyxDQUFDLHVCQUFlLENBQUM7SUFDMUQsa0JBQWtCLEVBQUUsQ0FBQyxPQUFPLEVBQUUsRUFBRSxDQUFDLE9BQU8sQ0FBQyx1QkFBZSxDQUFDO0lBQ3pELE9BQU8sRUFBRSxHQUFHLEVBQUU7UUFDWixNQUFNLElBQUksS0FBSyxDQUFDLG1CQUFtQixDQUFDLENBQUM7SUFDdkMsQ0FBQztDQUNGLENBQUM7QUFFVyxRQUFBLCtCQUErQixHQUF1QjtJQUNqRSxhQUFhLEVBQUUsYUFBYTtDQUM3QixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTG9hZGVkQ29uZmlnU2VsZWN0b3JzLCBMb2NhbENvbmZpZ09wdGlvbnMgfSBmcm9tIFwiQGF3cy1zZGsvbm9kZS1jb25maWctcHJvdmlkZXJcIjtcblxuZXhwb3J0IGNvbnN0IFJFR0lPTl9FTlZfTkFNRSA9IFwiQVdTX1JFR0lPTlwiO1xuZXhwb3J0IGNvbnN0IFJFR0lPTl9JTklfTkFNRSA9IFwicmVnaW9uXCI7XG5cbmV4cG9ydCBjb25zdCBOT0RFX1JFR0lPTl9DT05GSUdfT1BUSU9OUzogTG9hZGVkQ29uZmlnU2VsZWN0b3JzPHN0cmluZz4gPSB7XG4gIGVudmlyb25tZW50VmFyaWFibGVTZWxlY3RvcjogKGVudikgPT4gZW52W1JFR0lPTl9FTlZfTkFNRV0sXG4gIGNvbmZpZ0ZpbGVTZWxlY3RvcjogKHByb2ZpbGUpID0+IHByb2ZpbGVbUkVHSU9OX0lOSV9OQU1FXSxcbiAgZGVmYXVsdDogKCkgPT4ge1xuICAgIHRocm93IG5ldyBFcnJvcihcIlJlZ2lvbiBpcyBtaXNzaW5nXCIpO1xuICB9LFxufTtcblxuZXhwb3J0IGNvbnN0IE5PREVfUkVHSU9OX0NPTkZJR19GSUxFX09QVElPTlM6IExvY2FsQ29uZmlnT3B0aW9ucyA9IHtcbiAgcHJlZmVycmVkRmlsZTogXCJjcmVkZW50aWFsc1wiLFxufTtcbiJdfQ==","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\n(0, tslib_1.__exportStar)(require(\"./config\"), exports);\n(0, tslib_1.__exportStar)(require(\"./resolveRegionConfig\"), exports);\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcmVnaW9uQ29uZmlnL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLHdEQUF5QjtBQUN6QixxRUFBc0MiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tIFwiLi9jb25maWdcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3Jlc29sdmVSZWdpb25Db25maWdcIjtcbiJdfQ==","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.normalizeRegion = void 0;\nconst normalizeRegion = (region) => {\n    if (typeof region === \"string\") {\n        const promisified = Promise.resolve(region);\n        return () => promisified;\n    }\n    return region;\n};\nexports.normalizeRegion = normalizeRegion;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm9ybWFsaXplUmVnaW9uLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3JlZ2lvbkNvbmZpZy9ub3JtYWxpemVSZWdpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBRU8sTUFBTSxlQUFlLEdBQUcsQ0FBQyxNQUFpQyxFQUFvQixFQUFFO0lBQ3JGLElBQUksT0FBTyxNQUFNLEtBQUssUUFBUSxFQUFFO1FBQzlCLE1BQU0sV0FBVyxHQUFHLE9BQU8sQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUM7UUFDNUMsT0FBTyxHQUFHLEVBQUUsQ0FBQyxXQUFXLENBQUM7S0FDMUI7SUFDRCxPQUFPLE1BQTBCLENBQUM7QUFDcEMsQ0FBQyxDQUFDO0FBTlcsUUFBQSxlQUFlLG1CQU0xQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFByb3ZpZGVyIH0gZnJvbSBcIkBhd3Mtc2RrL3R5cGVzXCI7XG5cbmV4cG9ydCBjb25zdCBub3JtYWxpemVSZWdpb24gPSAocmVnaW9uOiBzdHJpbmcgfCBQcm92aWRlcjxzdHJpbmc+KTogUHJvdmlkZXI8c3RyaW5nPiA9PiB7XG4gIGlmICh0eXBlb2YgcmVnaW9uID09PSBcInN0cmluZ1wiKSB7XG4gICAgY29uc3QgcHJvbWlzaWZpZWQgPSBQcm9taXNlLnJlc29sdmUocmVnaW9uKTtcbiAgICByZXR1cm4gKCkgPT4gcHJvbWlzaWZpZWQ7XG4gIH1cbiAgcmV0dXJuIHJlZ2lvbiBhcyBQcm92aWRlcjxzdHJpbmc+O1xufTtcbiJdfQ==","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveRegionConfig = void 0;\nconst normalizeRegion_1 = require(\"./normalizeRegion\");\nconst resolveRegionConfig = (input) => {\n    if (!input.region) {\n        throw new Error(\"Region is missing\");\n    }\n    return {\n        ...input,\n        region: (0, normalizeRegion_1.normalizeRegion)(input.region),\n    };\n};\nexports.resolveRegionConfig = resolveRegionConfig;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVzb2x2ZVJlZ2lvbkNvbmZpZy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9yZWdpb25Db25maWcvcmVzb2x2ZVJlZ2lvbkNvbmZpZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFFQSx1REFBb0Q7QUFrQjdDLE1BQU0sbUJBQW1CLEdBQUcsQ0FBSSxLQUFpRCxFQUE0QixFQUFFO0lBQ3BILElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxFQUFFO1FBQ2pCLE1BQU0sSUFBSSxLQUFLLENBQUMsbUJBQW1CLENBQUMsQ0FBQztLQUN0QztJQUNELE9BQU87UUFDTCxHQUFHLEtBQUs7UUFDUixNQUFNLEVBQUUsSUFBQSxpQ0FBZSxFQUFDLEtBQUssQ0FBQyxNQUFPLENBQUM7S0FDdkMsQ0FBQztBQUNKLENBQUMsQ0FBQztBQVJXLFFBQUEsbUJBQW1CLHVCQVE5QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFByb3ZpZGVyIH0gZnJvbSBcIkBhd3Mtc2RrL3R5cGVzXCI7XG5cbmltcG9ydCB7IG5vcm1hbGl6ZVJlZ2lvbiB9IGZyb20gXCIuL25vcm1hbGl6ZVJlZ2lvblwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIFJlZ2lvbklucHV0Q29uZmlnIHtcbiAgLyoqXG4gICAqIFRoZSBBV1MgcmVnaW9uIHRvIHdoaWNoIHRoaXMgY2xpZW50IHdpbGwgc2VuZCByZXF1ZXN0c1xuICAgKi9cbiAgcmVnaW9uPzogc3RyaW5nIHwgUHJvdmlkZXI8c3RyaW5nPjtcbn1cblxuaW50ZXJmYWNlIFByZXZpb3VzbHlSZXNvbHZlZCB7fVxuXG5leHBvcnQgaW50ZXJmYWNlIFJlZ2lvblJlc29sdmVkQ29uZmlnIHtcbiAgLyoqXG4gICAqIFJlc29sdmVkIHZhbHVlIGZvciBpbnB1dCBjb25maWcge0BsaW5rIFJlZ2lvbklucHV0Q29uZmlnLnJlZ2lvbn1cbiAgICovXG4gIHJlZ2lvbjogUHJvdmlkZXI8c3RyaW5nPjtcbn1cblxuZXhwb3J0IGNvbnN0IHJlc29sdmVSZWdpb25Db25maWcgPSA8VD4oaW5wdXQ6IFQgJiBSZWdpb25JbnB1dENvbmZpZyAmIFByZXZpb3VzbHlSZXNvbHZlZCk6IFQgJiBSZWdpb25SZXNvbHZlZENvbmZpZyA9PiB7XG4gIGlmICghaW5wdXQucmVnaW9uKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiUmVnaW9uIGlzIG1pc3NpbmdcIik7XG4gIH1cbiAgcmV0dXJuIHtcbiAgICAuLi5pbnB1dCxcbiAgICByZWdpb246IG5vcm1hbGl6ZVJlZ2lvbihpbnB1dC5yZWdpb24hKSxcbiAgfTtcbn07XG4iXX0=","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getHostnameTemplate = void 0;\nconst getResolvedPartition_1 = require(\"./getResolvedPartition\");\nconst AWS_TEMPLATE = \"{signingService}.{region}.amazonaws.com\";\nconst getHostnameTemplate = (region, { signingService, partitionHash }) => {\n    var _a, _b;\n    return (_b = (_a = partitionHash[(0, getResolvedPartition_1.getResolvedPartition)(region, { partitionHash })]) === null || _a === void 0 ? void 0 : _a.hostname) !== null && _b !== void 0 ? _b : AWS_TEMPLATE.replace(\"{signingService}\", signingService);\n};\nexports.getHostnameTemplate = getHostnameTemplate;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0SG9zdG5hbWVUZW1wbGF0ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9yZWdpb25JbmZvL2dldEhvc3RuYW1lVGVtcGxhdGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsaUVBQTJGO0FBRTNGLE1BQU0sWUFBWSxHQUFHLHlDQUF5QyxDQUFDO0FBU3hELE1BQU0sbUJBQW1CLEdBQUcsQ0FBQyxNQUFjLEVBQUUsRUFBRSxjQUFjLEVBQUUsYUFBYSxFQUE4QixFQUFFLEVBQUU7O0lBQ25ILE9BQUEsTUFBQSxNQUFBLGFBQWEsQ0FBQyxJQUFBLDJDQUFvQixFQUFDLE1BQU0sRUFBRSxFQUFFLGFBQWEsRUFBRSxDQUFDLENBQUMsMENBQUUsUUFBUSxtQ0FDeEUsWUFBWSxDQUFDLE9BQU8sQ0FBQyxrQkFBa0IsRUFBRSxjQUFjLENBQUMsQ0FBQTtDQUFBLENBQUM7QUFGOUMsUUFBQSxtQkFBbUIsdUJBRTJCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0UmVzb2x2ZWRQYXJ0aXRpb24sIEdldFJlc29sdmVkUGFydGl0aW9uT3B0aW9ucyB9IGZyb20gXCIuL2dldFJlc29sdmVkUGFydGl0aW9uXCI7XG5cbmNvbnN0IEFXU19URU1QTEFURSA9IFwie3NpZ25pbmdTZXJ2aWNlfS57cmVnaW9ufS5hbWF6b25hd3MuY29tXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgR2V0SG9zdG5hbWVUZW1wbGF0ZU9wdGlvbnMgZXh0ZW5kcyBHZXRSZXNvbHZlZFBhcnRpdGlvbk9wdGlvbnMge1xuICAvKipcbiAgICogVGhlIG5hbWUgdG8gYmUgdXNlZCB3aGlsZSBzaWduaW5nIHRoZSBzZXJ2aWNlIHJlcXVlc3QuXG4gICAqL1xuICBzaWduaW5nU2VydmljZTogc3RyaW5nO1xufVxuXG5leHBvcnQgY29uc3QgZ2V0SG9zdG5hbWVUZW1wbGF0ZSA9IChyZWdpb246IHN0cmluZywgeyBzaWduaW5nU2VydmljZSwgcGFydGl0aW9uSGFzaCB9OiBHZXRIb3N0bmFtZVRlbXBsYXRlT3B0aW9ucykgPT5cbiAgcGFydGl0aW9uSGFzaFtnZXRSZXNvbHZlZFBhcnRpdGlvbihyZWdpb24sIHsgcGFydGl0aW9uSGFzaCB9KV0/Lmhvc3RuYW1lID8/XG4gIEFXU19URU1QTEFURS5yZXBsYWNlKFwie3NpZ25pbmdTZXJ2aWNlfVwiLCBzaWduaW5nU2VydmljZSk7XG4iXX0=","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRegionInfo = void 0;\nconst getResolvedHostname_1 = require(\"./getResolvedHostname\");\nconst getResolvedPartition_1 = require(\"./getResolvedPartition\");\nconst getRegionInfo = (region, { signingService, regionHash, partitionHash }) => {\n    var _a, _b, _c, _d;\n    const partition = (0, getResolvedPartition_1.getResolvedPartition)(region, { partitionHash });\n    const resolvedRegion = (_b = (_a = partitionHash[partition]) === null || _a === void 0 ? void 0 : _a.endpoint) !== null && _b !== void 0 ? _b : region;\n    return {\n        partition,\n        signingService,\n        hostname: (0, getResolvedHostname_1.getResolvedHostname)(resolvedRegion, { signingService, regionHash, partitionHash }),\n        ...(((_c = regionHash[resolvedRegion]) === null || _c === void 0 ? void 0 : _c.signingRegion) && {\n            signingRegion: regionHash[resolvedRegion].signingRegion,\n        }),\n        ...(((_d = regionHash[resolvedRegion]) === null || _d === void 0 ? void 0 : _d.signingService) && {\n            signingService: regionHash[resolvedRegion].signingService,\n        }),\n    };\n};\nexports.getRegionInfo = getRegionInfo;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0UmVnaW9uSW5mby5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9yZWdpb25JbmZvL2dldFJlZ2lvbkluZm8udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBRUEsK0RBQW9HO0FBQ3BHLGlFQUE2RTtBQU10RSxNQUFNLGFBQWEsR0FBRyxDQUMzQixNQUFjLEVBQ2QsRUFBRSxjQUFjLEVBQUUsVUFBVSxFQUFFLGFBQWEsRUFBd0IsRUFDdkQsRUFBRTs7SUFDZCxNQUFNLFNBQVMsR0FBRyxJQUFBLDJDQUFvQixFQUFDLE1BQU0sRUFBRSxFQUFFLGFBQWEsRUFBRSxDQUFDLENBQUM7SUFDbEUsTUFBTSxjQUFjLEdBQUcsTUFBQSxNQUFBLGFBQWEsQ0FBQyxTQUFTLENBQUMsMENBQUUsUUFBUSxtQ0FBSSxNQUFNLENBQUM7SUFDcEUsT0FBTztRQUNMLFNBQVM7UUFDVCxjQUFjO1FBQ2QsUUFBUSxFQUFFLElBQUEseUNBQW1CLEVBQUMsY0FBYyxFQUFFLEVBQUUsY0FBYyxFQUFFLFVBQVUsRUFBRSxhQUFhLEVBQUUsQ0FBQztRQUM1RixHQUFHLENBQUMsQ0FBQSxNQUFBLFVBQVUsQ0FBQyxjQUFjLENBQUMsMENBQUUsYUFBYSxLQUFJO1lBQy9DLGFBQWEsRUFBRSxVQUFVLENBQUMsY0FBYyxDQUFDLENBQUMsYUFBYTtTQUN4RCxDQUFDO1FBQ0YsR0FBRyxDQUFDLENBQUEsTUFBQSxVQUFVLENBQUMsY0FBYyxDQUFDLDBDQUFFLGNBQWMsS0FBSTtZQUNoRCxjQUFjLEVBQUUsVUFBVSxDQUFDLGNBQWMsQ0FBQyxDQUFDLGNBQWM7U0FDMUQsQ0FBQztLQUNILENBQUM7QUFDSixDQUFDLENBQUM7QUFqQlcsUUFBQSxhQUFhLGlCQWlCeEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSZWdpb25JbmZvIH0gZnJvbSBcIkBhd3Mtc2RrL3R5cGVzXCI7XG5cbmltcG9ydCB7IGdldFJlc29sdmVkSG9zdG5hbWUsIEdldFJlc29sdmVkSG9zdG5hbWVPcHRpb25zLCBSZWdpb25IYXNoIH0gZnJvbSBcIi4vZ2V0UmVzb2x2ZWRIb3N0bmFtZVwiO1xuaW1wb3J0IHsgZ2V0UmVzb2x2ZWRQYXJ0aXRpb24sIFBhcnRpdGlvbkhhc2ggfSBmcm9tIFwiLi9nZXRSZXNvbHZlZFBhcnRpdGlvblwiO1xuXG5leHBvcnQgeyBSZWdpb25IYXNoLCBQYXJ0aXRpb25IYXNoIH07XG5cbmV4cG9ydCBpbnRlcmZhY2UgR2V0UmVnaW9uSW5mb09wdGlvbnMgZXh0ZW5kcyBHZXRSZXNvbHZlZEhvc3RuYW1lT3B0aW9ucyB7fVxuXG5leHBvcnQgY29uc3QgZ2V0UmVnaW9uSW5mbyA9IChcbiAgcmVnaW9uOiBzdHJpbmcsXG4gIHsgc2lnbmluZ1NlcnZpY2UsIHJlZ2lvbkhhc2gsIHBhcnRpdGlvbkhhc2ggfTogR2V0UmVnaW9uSW5mb09wdGlvbnNcbik6IFJlZ2lvbkluZm8gPT4ge1xuICBjb25zdCBwYXJ0aXRpb24gPSBnZXRSZXNvbHZlZFBhcnRpdGlvbihyZWdpb24sIHsgcGFydGl0aW9uSGFzaCB9KTtcbiAgY29uc3QgcmVzb2x2ZWRSZWdpb24gPSBwYXJ0aXRpb25IYXNoW3BhcnRpdGlvbl0/LmVuZHBvaW50ID8/IHJlZ2lvbjtcbiAgcmV0dXJuIHtcbiAgICBwYXJ0aXRpb24sXG4gICAgc2lnbmluZ1NlcnZpY2UsXG4gICAgaG9zdG5hbWU6IGdldFJlc29sdmVkSG9zdG5hbWUocmVzb2x2ZWRSZWdpb24sIHsgc2lnbmluZ1NlcnZpY2UsIHJlZ2lvbkhhc2gsIHBhcnRpdGlvbkhhc2ggfSksXG4gICAgLi4uKHJlZ2lvbkhhc2hbcmVzb2x2ZWRSZWdpb25dPy5zaWduaW5nUmVnaW9uICYmIHtcbiAgICAgIHNpZ25pbmdSZWdpb246IHJlZ2lvbkhhc2hbcmVzb2x2ZWRSZWdpb25dLnNpZ25pbmdSZWdpb24sXG4gICAgfSksXG4gICAgLi4uKHJlZ2lvbkhhc2hbcmVzb2x2ZWRSZWdpb25dPy5zaWduaW5nU2VydmljZSAmJiB7XG4gICAgICBzaWduaW5nU2VydmljZTogcmVnaW9uSGFzaFtyZXNvbHZlZFJlZ2lvbl0uc2lnbmluZ1NlcnZpY2UsXG4gICAgfSksXG4gIH07XG59O1xuIl19","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getResolvedHostname = void 0;\nconst getHostnameTemplate_1 = require(\"./getHostnameTemplate\");\nconst getResolvedHostname = (region, { signingService, regionHash, partitionHash }) => {\n    var _a, _b;\n    return (_b = (_a = regionHash[region]) === null || _a === void 0 ? void 0 : _a.hostname) !== null && _b !== void 0 ? _b : (0, getHostnameTemplate_1.getHostnameTemplate)(region, { signingService, partitionHash }).replace(\"{region}\", region);\n};\nexports.getResolvedHostname = getResolvedHostname;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0UmVzb2x2ZWRIb3N0bmFtZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9yZWdpb25JbmZvL2dldFJlc29sdmVkSG9zdG5hbWUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBRUEsK0RBQXdGO0FBYWpGLE1BQU0sbUJBQW1CLEdBQUcsQ0FDakMsTUFBYyxFQUNkLEVBQUUsY0FBYyxFQUFFLFVBQVUsRUFBRSxhQUFhLEVBQThCLEVBQ3pFLEVBQUU7O0lBQ0YsT0FBQSxNQUFBLE1BQUEsVUFBVSxDQUFDLE1BQU0sQ0FBQywwQ0FBRSxRQUFRLG1DQUM1QixJQUFBLHlDQUFtQixFQUFDLE1BQU0sRUFBRSxFQUFFLGNBQWMsRUFBRSxhQUFhLEVBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxVQUFVLEVBQUUsTUFBTSxDQUFDLENBQUE7Q0FBQSxDQUFDO0FBTGhGLFFBQUEsbUJBQW1CLHVCQUs2RCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFJlZ2lvbkluZm8gfSBmcm9tIFwiQGF3cy1zZGsvdHlwZXNcIjtcblxuaW1wb3J0IHsgZ2V0SG9zdG5hbWVUZW1wbGF0ZSwgR2V0SG9zdG5hbWVUZW1wbGF0ZU9wdGlvbnMgfSBmcm9tIFwiLi9nZXRIb3N0bmFtZVRlbXBsYXRlXCI7XG5pbXBvcnQgeyBHZXRSZXNvbHZlZFBhcnRpdGlvbk9wdGlvbnMgfSBmcm9tIFwiLi9nZXRSZXNvbHZlZFBhcnRpdGlvblwiO1xuXG5leHBvcnQgdHlwZSBSZWdpb25IYXNoID0geyBba2V5OiBzdHJpbmddOiBQYXJ0aWFsPE9taXQ8UmVnaW9uSW5mbywgXCJwYXJ0aXRpb25cIiB8IFwicGF0aFwiPj4gfTtcblxuZXhwb3J0IGludGVyZmFjZSBHZXRSZXNvbHZlZEhvc3RuYW1lT3B0aW9ucyBleHRlbmRzIEdldEhvc3RuYW1lVGVtcGxhdGVPcHRpb25zLCBHZXRSZXNvbHZlZFBhcnRpdGlvbk9wdGlvbnMge1xuICAvKipcbiAgICogVGhlIGhhc2ggb2YgcmVnaW9uIHdpdGggdGhlIGluZm9ybWF0aW9uIHNwZWNpZmljIHRvIHRoYXQgcmVnaW9uLlxuICAgKiBUaGUgaW5mb3JtYXRpb24gY2FuIGluY2x1ZGUgaG9zdG5hbWUsIHNpZ25pbmdTZXJ2aWNlIGFuZCBzaWduaW5nUmVnaW9uLlxuICAgKi9cbiAgcmVnaW9uSGFzaDogUmVnaW9uSGFzaDtcbn1cblxuZXhwb3J0IGNvbnN0IGdldFJlc29sdmVkSG9zdG5hbWUgPSAoXG4gIHJlZ2lvbjogc3RyaW5nLFxuICB7IHNpZ25pbmdTZXJ2aWNlLCByZWdpb25IYXNoLCBwYXJ0aXRpb25IYXNoIH06IEdldFJlc29sdmVkSG9zdG5hbWVPcHRpb25zXG4pID0+XG4gIHJlZ2lvbkhhc2hbcmVnaW9uXT8uaG9zdG5hbWUgPz9cbiAgZ2V0SG9zdG5hbWVUZW1wbGF0ZShyZWdpb24sIHsgc2lnbmluZ1NlcnZpY2UsIHBhcnRpdGlvbkhhc2ggfSkucmVwbGFjZShcIntyZWdpb259XCIsIHJlZ2lvbik7XG4iXX0=","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getResolvedPartition = void 0;\nconst getResolvedPartition = (region, { partitionHash }) => { var _a; return (_a = Object.keys(partitionHash || {}).find((key) => partitionHash[key].regions.includes(region))) !== null && _a !== void 0 ? _a : \"aws\"; };\nexports.getResolvedPartition = getResolvedPartition;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0UmVzb2x2ZWRQYXJ0aXRpb24uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcmVnaW9uSW5mby9nZXRSZXNvbHZlZFBhcnRpdGlvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFXTyxNQUFNLG9CQUFvQixHQUFHLENBQUMsTUFBYyxFQUFFLEVBQUUsYUFBYSxFQUErQixFQUFFLEVBQUUsV0FDckcsT0FBQSxNQUFBLE1BQU0sQ0FBQyxJQUFJLENBQUMsYUFBYSxJQUFJLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLEdBQUcsRUFBRSxFQUFFLENBQUMsYUFBYSxDQUFDLEdBQUcsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLENBQUMsbUNBQUksS0FBSyxDQUFBLEVBQUEsQ0FBQztBQUQxRixRQUFBLG9CQUFvQix3QkFDc0UiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgdHlwZSBQYXJ0aXRpb25IYXNoID0geyBba2V5OiBzdHJpbmddOiB7IHJlZ2lvbnM6IHN0cmluZ1tdOyBob3N0bmFtZT86IHN0cmluZzsgZW5kcG9pbnQ/OiBzdHJpbmcgfSB9O1xuXG5leHBvcnQgaW50ZXJmYWNlIEdldFJlc29sdmVkUGFydGl0aW9uT3B0aW9ucyB7XG4gIC8qKlxuICAgKiBUaGUgaGFzaCBvZiBwYXJ0aXRpb24gd2l0aCB0aGUgaW5mb3JtYXRpb24gc3BlY2lmaWMgdG8gdGhhdCBwYXJ0aXRpb24uXG4gICAqIFRoZSBpbmZvcm1hdGlvbiBpbmNsdWRlcyB0aGUgbGlzdCBvZiByZWdpb25zIGJlbG9uZ2luZyB0byB0aGF0IHBhcnRpdGlvbixcbiAgICogYW5kIHRoZSBob3N0bmFtZSB0byBiZSB1c2VkIGZvciB0aGUgcGFydGl0aW9uLlxuICAgKi9cbiAgcGFydGl0aW9uSGFzaDogUGFydGl0aW9uSGFzaDtcbn1cblxuZXhwb3J0IGNvbnN0IGdldFJlc29sdmVkUGFydGl0aW9uID0gKHJlZ2lvbjogc3RyaW5nLCB7IHBhcnRpdGlvbkhhc2ggfTogR2V0UmVzb2x2ZWRQYXJ0aXRpb25PcHRpb25zKSA9PlxuICBPYmplY3Qua2V5cyhwYXJ0aXRpb25IYXNoIHx8IHt9KS5maW5kKChrZXkpID0+IHBhcnRpdGlvbkhhc2hba2V5XS5yZWdpb25zLmluY2x1ZGVzKHJlZ2lvbikpID8/IFwiYXdzXCI7XG4iXX0=","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\n(0, tslib_1.__exportStar)(require(\"./getRegionInfo\"), exports);\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcmVnaW9uSW5mby9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSwrREFBZ0MiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tIFwiLi9nZXRSZWdpb25JbmZvXCI7XG4iXX0=","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromEnv = exports.ENV_EXPIRATION = exports.ENV_SESSION = exports.ENV_SECRET = exports.ENV_KEY = void 0;\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nexports.ENV_KEY = \"AWS_ACCESS_KEY_ID\";\nexports.ENV_SECRET = \"AWS_SECRET_ACCESS_KEY\";\nexports.ENV_SESSION = \"AWS_SESSION_TOKEN\";\nexports.ENV_EXPIRATION = \"AWS_CREDENTIAL_EXPIRATION\";\n/**\n * Source AWS credentials from known environment variables. If either the\n * `AWS_ACCESS_KEY_ID` or `AWS_SECRET_ACCESS_KEY` environment variable is not\n * set in this process, the provider will return a rejected promise.\n */\nfunction fromEnv() {\n    return () => {\n        const accessKeyId = process.env[exports.ENV_KEY];\n        const secretAccessKey = process.env[exports.ENV_SECRET];\n        const expiry = process.env[exports.ENV_EXPIRATION];\n        if (accessKeyId && secretAccessKey) {\n            return Promise.resolve({\n                accessKeyId,\n                secretAccessKey,\n                sessionToken: process.env[exports.ENV_SESSION],\n                expiration: expiry ? new Date(expiry) : undefined,\n            });\n        }\n        return Promise.reject(new property_provider_1.CredentialsProviderError(\"Unable to find environment variable credentials.\"));\n    };\n}\nexports.fromEnv = fromEnv;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsa0VBQXNFO0FBR3pELFFBQUEsT0FBTyxHQUFHLG1CQUFtQixDQUFDO0FBQzlCLFFBQUEsVUFBVSxHQUFHLHVCQUF1QixDQUFDO0FBQ3JDLFFBQUEsV0FBVyxHQUFHLG1CQUFtQixDQUFDO0FBQ2xDLFFBQUEsY0FBYyxHQUFHLDJCQUEyQixDQUFDO0FBRTFEOzs7O0dBSUc7QUFDSCxTQUFnQixPQUFPO0lBQ3JCLE9BQU8sR0FBRyxFQUFFO1FBQ1YsTUFBTSxXQUFXLEdBQXVCLE9BQU8sQ0FBQyxHQUFHLENBQUMsZUFBTyxDQUFDLENBQUM7UUFDN0QsTUFBTSxlQUFlLEdBQXVCLE9BQU8sQ0FBQyxHQUFHLENBQUMsa0JBQVUsQ0FBQyxDQUFDO1FBQ3BFLE1BQU0sTUFBTSxHQUF1QixPQUFPLENBQUMsR0FBRyxDQUFDLHNCQUFjLENBQUMsQ0FBQztRQUMvRCxJQUFJLFdBQVcsSUFBSSxlQUFlLEVBQUU7WUFDbEMsT0FBTyxPQUFPLENBQUMsT0FBTyxDQUFDO2dCQUNyQixXQUFXO2dCQUNYLGVBQWU7Z0JBQ2YsWUFBWSxFQUFFLE9BQU8sQ0FBQyxHQUFHLENBQUMsbUJBQVcsQ0FBQztnQkFDdEMsVUFBVSxFQUFFLE1BQU0sQ0FBQyxDQUFDLENBQUMsSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLFNBQVM7YUFDbEQsQ0FBQyxDQUFDO1NBQ0o7UUFFRCxPQUFPLE9BQU8sQ0FBQyxNQUFNLENBQUMsSUFBSSw0Q0FBd0IsQ0FBQyxrREFBa0QsQ0FBQyxDQUFDLENBQUM7SUFDMUcsQ0FBQyxDQUFDO0FBQ0osQ0FBQztBQWhCRCwwQkFnQkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDcmVkZW50aWFsc1Byb3ZpZGVyRXJyb3IgfSBmcm9tIFwiQGF3cy1zZGsvcHJvcGVydHktcHJvdmlkZXJcIjtcbmltcG9ydCB7IENyZWRlbnRpYWxQcm92aWRlciB9IGZyb20gXCJAYXdzLXNkay90eXBlc1wiO1xuXG5leHBvcnQgY29uc3QgRU5WX0tFWSA9IFwiQVdTX0FDQ0VTU19LRVlfSURcIjtcbmV4cG9ydCBjb25zdCBFTlZfU0VDUkVUID0gXCJBV1NfU0VDUkVUX0FDQ0VTU19LRVlcIjtcbmV4cG9ydCBjb25zdCBFTlZfU0VTU0lPTiA9IFwiQVdTX1NFU1NJT05fVE9LRU5cIjtcbmV4cG9ydCBjb25zdCBFTlZfRVhQSVJBVElPTiA9IFwiQVdTX0NSRURFTlRJQUxfRVhQSVJBVElPTlwiO1xuXG4vKipcbiAqIFNvdXJjZSBBV1MgY3JlZGVudGlhbHMgZnJvbSBrbm93biBlbnZpcm9ubWVudCB2YXJpYWJsZXMuIElmIGVpdGhlciB0aGVcbiAqIGBBV1NfQUNDRVNTX0tFWV9JRGAgb3IgYEFXU19TRUNSRVRfQUNDRVNTX0tFWWAgZW52aXJvbm1lbnQgdmFyaWFibGUgaXMgbm90XG4gKiBzZXQgaW4gdGhpcyBwcm9jZXNzLCB0aGUgcHJvdmlkZXIgd2lsbCByZXR1cm4gYSByZWplY3RlZCBwcm9taXNlLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZnJvbUVudigpOiBDcmVkZW50aWFsUHJvdmlkZXIge1xuICByZXR1cm4gKCkgPT4ge1xuICAgIGNvbnN0IGFjY2Vzc0tleUlkOiBzdHJpbmcgfCB1bmRlZmluZWQgPSBwcm9jZXNzLmVudltFTlZfS0VZXTtcbiAgICBjb25zdCBzZWNyZXRBY2Nlc3NLZXk6IHN0cmluZyB8IHVuZGVmaW5lZCA9IHByb2Nlc3MuZW52W0VOVl9TRUNSRVRdO1xuICAgIGNvbnN0IGV4cGlyeTogc3RyaW5nIHwgdW5kZWZpbmVkID0gcHJvY2Vzcy5lbnZbRU5WX0VYUElSQVRJT05dO1xuICAgIGlmIChhY2Nlc3NLZXlJZCAmJiBzZWNyZXRBY2Nlc3NLZXkpIHtcbiAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoe1xuICAgICAgICBhY2Nlc3NLZXlJZCxcbiAgICAgICAgc2VjcmV0QWNjZXNzS2V5LFxuICAgICAgICBzZXNzaW9uVG9rZW46IHByb2Nlc3MuZW52W0VOVl9TRVNTSU9OXSxcbiAgICAgICAgZXhwaXJhdGlvbjogZXhwaXJ5ID8gbmV3IERhdGUoZXhwaXJ5KSA6IHVuZGVmaW5lZCxcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIHJldHVybiBQcm9taXNlLnJlamVjdChuZXcgQ3JlZGVudGlhbHNQcm92aWRlckVycm9yKFwiVW5hYmxlIHRvIGZpbmQgZW52aXJvbm1lbnQgdmFyaWFibGUgY3JlZGVudGlhbHMuXCIpKTtcbiAgfTtcbn1cbiJdfQ==","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Endpoint = void 0;\nvar Endpoint;\n(function (Endpoint) {\n    Endpoint[\"IPv4\"] = \"http://169.254.169.254\";\n    Endpoint[\"IPv6\"] = \"http://[fd00:ec2::254]\";\n})(Endpoint = exports.Endpoint || (exports.Endpoint = {}));\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRW5kcG9pbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvY29uZmlnL0VuZHBvaW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLElBQVksUUFHWDtBQUhELFdBQVksUUFBUTtJQUNsQiwyQ0FBK0IsQ0FBQTtJQUMvQiwyQ0FBK0IsQ0FBQTtBQUNqQyxDQUFDLEVBSFcsUUFBUSxHQUFSLGdCQUFRLEtBQVIsZ0JBQVEsUUFHbkIiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZW51bSBFbmRwb2ludCB7XG4gIElQdjQgPSBcImh0dHA6Ly8xNjkuMjU0LjE2OS4yNTRcIixcbiAgSVB2NiA9IFwiaHR0cDovL1tmZDAwOmVjMjo6MjU0XVwiLFxufVxuIl19","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ENDPOINT_CONFIG_OPTIONS = exports.CONFIG_ENDPOINT_NAME = exports.ENV_ENDPOINT_NAME = void 0;\nexports.ENV_ENDPOINT_NAME = \"AWS_EC2_METADATA_SERVICE_ENDPOINT\";\nexports.CONFIG_ENDPOINT_NAME = \"ec2_metadata_service_endpoint\";\nexports.ENDPOINT_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => env[exports.ENV_ENDPOINT_NAME],\n    configFileSelector: (profile) => profile[exports.CONFIG_ENDPOINT_NAME],\n    default: undefined,\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRW5kcG9pbnRDb25maWdPcHRpb25zLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2NvbmZpZy9FbmRwb2ludENvbmZpZ09wdGlvbnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBRWEsUUFBQSxpQkFBaUIsR0FBRyxtQ0FBbUMsQ0FBQztBQUN4RCxRQUFBLG9CQUFvQixHQUFHLCtCQUErQixDQUFDO0FBRXZELFFBQUEsdUJBQXVCLEdBQThDO0lBQ2hGLDJCQUEyQixFQUFFLENBQUMsR0FBRyxFQUFFLEVBQUUsQ0FBQyxHQUFHLENBQUMseUJBQWlCLENBQUM7SUFDNUQsa0JBQWtCLEVBQUUsQ0FBQyxPQUFPLEVBQUUsRUFBRSxDQUFDLE9BQU8sQ0FBQyw0QkFBb0IsQ0FBQztJQUM5RCxPQUFPLEVBQUUsU0FBUztDQUNuQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTG9hZGVkQ29uZmlnU2VsZWN0b3JzIH0gZnJvbSBcIkBhd3Mtc2RrL25vZGUtY29uZmlnLXByb3ZpZGVyXCI7XG5cbmV4cG9ydCBjb25zdCBFTlZfRU5EUE9JTlRfTkFNRSA9IFwiQVdTX0VDMl9NRVRBREFUQV9TRVJWSUNFX0VORFBPSU5UXCI7XG5leHBvcnQgY29uc3QgQ09ORklHX0VORFBPSU5UX05BTUUgPSBcImVjMl9tZXRhZGF0YV9zZXJ2aWNlX2VuZHBvaW50XCI7XG5cbmV4cG9ydCBjb25zdCBFTkRQT0lOVF9DT05GSUdfT1BUSU9OUzogTG9hZGVkQ29uZmlnU2VsZWN0b3JzPHN0cmluZyB8IHVuZGVmaW5lZD4gPSB7XG4gIGVudmlyb25tZW50VmFyaWFibGVTZWxlY3RvcjogKGVudikgPT4gZW52W0VOVl9FTkRQT0lOVF9OQU1FXSxcbiAgY29uZmlnRmlsZVNlbGVjdG9yOiAocHJvZmlsZSkgPT4gcHJvZmlsZVtDT05GSUdfRU5EUE9JTlRfTkFNRV0sXG4gIGRlZmF1bHQ6IHVuZGVmaW5lZCxcbn07XG4iXX0=","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EndpointMode = void 0;\nvar EndpointMode;\n(function (EndpointMode) {\n    EndpointMode[\"IPv4\"] = \"IPv4\";\n    EndpointMode[\"IPv6\"] = \"IPv6\";\n})(EndpointMode = exports.EndpointMode || (exports.EndpointMode = {}));\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRW5kcG9pbnRNb2RlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2NvbmZpZy9FbmRwb2ludE1vZGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsSUFBWSxZQUdYO0FBSEQsV0FBWSxZQUFZO0lBQ3RCLDZCQUFhLENBQUE7SUFDYiw2QkFBYSxDQUFBO0FBQ2YsQ0FBQyxFQUhXLFlBQVksR0FBWixvQkFBWSxLQUFaLG9CQUFZLFFBR3ZCIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGVudW0gRW5kcG9pbnRNb2RlIHtcbiAgSVB2NCA9IFwiSVB2NFwiLFxuICBJUHY2ID0gXCJJUHY2XCIsXG59XG4iXX0=","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ENDPOINT_MODE_CONFIG_OPTIONS = exports.CONFIG_ENDPOINT_MODE_NAME = exports.ENV_ENDPOINT_MODE_NAME = void 0;\nconst EndpointMode_1 = require(\"./EndpointMode\");\nexports.ENV_ENDPOINT_MODE_NAME = \"AWS_EC2_METADATA_SERVICE_ENDPOINT_MODE\";\nexports.CONFIG_ENDPOINT_MODE_NAME = \"ec2_metadata_service_endpoint_mode\";\nexports.ENDPOINT_MODE_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => env[exports.ENV_ENDPOINT_MODE_NAME],\n    configFileSelector: (profile) => profile[exports.CONFIG_ENDPOINT_MODE_NAME],\n    default: EndpointMode_1.EndpointMode.IPv4,\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRW5kcG9pbnRNb2RlQ29uZmlnT3B0aW9ucy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9jb25maWcvRW5kcG9pbnRNb2RlQ29uZmlnT3B0aW9ucy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFFQSxpREFBOEM7QUFFakMsUUFBQSxzQkFBc0IsR0FBRyx3Q0FBd0MsQ0FBQztBQUNsRSxRQUFBLHlCQUF5QixHQUFHLG9DQUFvQyxDQUFDO0FBRWpFLFFBQUEsNEJBQTRCLEdBQThDO0lBQ3JGLDJCQUEyQixFQUFFLENBQUMsR0FBRyxFQUFFLEVBQUUsQ0FBQyxHQUFHLENBQUMsOEJBQXNCLENBQUM7SUFDakUsa0JBQWtCLEVBQUUsQ0FBQyxPQUFPLEVBQUUsRUFBRSxDQUFDLE9BQU8sQ0FBQyxpQ0FBeUIsQ0FBQztJQUNuRSxPQUFPLEVBQUUsMkJBQVksQ0FBQyxJQUFJO0NBQzNCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBMb2FkZWRDb25maWdTZWxlY3RvcnMgfSBmcm9tIFwiQGF3cy1zZGsvbm9kZS1jb25maWctcHJvdmlkZXJcIjtcblxuaW1wb3J0IHsgRW5kcG9pbnRNb2RlIH0gZnJvbSBcIi4vRW5kcG9pbnRNb2RlXCI7XG5cbmV4cG9ydCBjb25zdCBFTlZfRU5EUE9JTlRfTU9ERV9OQU1FID0gXCJBV1NfRUMyX01FVEFEQVRBX1NFUlZJQ0VfRU5EUE9JTlRfTU9ERVwiO1xuZXhwb3J0IGNvbnN0IENPTkZJR19FTkRQT0lOVF9NT0RFX05BTUUgPSBcImVjMl9tZXRhZGF0YV9zZXJ2aWNlX2VuZHBvaW50X21vZGVcIjtcblxuZXhwb3J0IGNvbnN0IEVORFBPSU5UX01PREVfQ09ORklHX09QVElPTlM6IExvYWRlZENvbmZpZ1NlbGVjdG9yczxzdHJpbmcgfCB1bmRlZmluZWQ+ID0ge1xuICBlbnZpcm9ubWVudFZhcmlhYmxlU2VsZWN0b3I6IChlbnYpID0+IGVudltFTlZfRU5EUE9JTlRfTU9ERV9OQU1FXSxcbiAgY29uZmlnRmlsZVNlbGVjdG9yOiAocHJvZmlsZSkgPT4gcHJvZmlsZVtDT05GSUdfRU5EUE9JTlRfTU9ERV9OQU1FXSxcbiAgZGVmYXVsdDogRW5kcG9pbnRNb2RlLklQdjQsXG59O1xuIl19","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromContainerMetadata = exports.ENV_CMDS_AUTH_TOKEN = exports.ENV_CMDS_RELATIVE_URI = exports.ENV_CMDS_FULL_URI = void 0;\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nconst url_1 = require(\"url\");\nconst httpRequest_1 = require(\"./remoteProvider/httpRequest\");\nconst ImdsCredentials_1 = require(\"./remoteProvider/ImdsCredentials\");\nconst RemoteProviderInit_1 = require(\"./remoteProvider/RemoteProviderInit\");\nconst retry_1 = require(\"./remoteProvider/retry\");\nexports.ENV_CMDS_FULL_URI = \"AWS_CONTAINER_CREDENTIALS_FULL_URI\";\nexports.ENV_CMDS_RELATIVE_URI = \"AWS_CONTAINER_CREDENTIALS_RELATIVE_URI\";\nexports.ENV_CMDS_AUTH_TOKEN = \"AWS_CONTAINER_AUTHORIZATION_TOKEN\";\n/**\n * Creates a credential provider that will source credentials from the ECS\n * Container Metadata Service\n */\nconst fromContainerMetadata = (init = {}) => {\n    const { timeout, maxRetries } = (0, RemoteProviderInit_1.providerConfigFromInit)(init);\n    return () => (0, retry_1.retry)(async () => {\n        const requestOptions = await getCmdsUri();\n        const credsResponse = JSON.parse(await requestFromEcsImds(timeout, requestOptions));\n        if (!(0, ImdsCredentials_1.isImdsCredentials)(credsResponse)) {\n            throw new property_provider_1.CredentialsProviderError(\"Invalid response received from instance metadata service.\");\n        }\n        return (0, ImdsCredentials_1.fromImdsCredentials)(credsResponse);\n    }, maxRetries);\n};\nexports.fromContainerMetadata = fromContainerMetadata;\nconst requestFromEcsImds = async (timeout, options) => {\n    if (process.env[exports.ENV_CMDS_AUTH_TOKEN]) {\n        options.headers = {\n            ...options.headers,\n            Authorization: process.env[exports.ENV_CMDS_AUTH_TOKEN],\n        };\n    }\n    const buffer = await (0, httpRequest_1.httpRequest)({\n        ...options,\n        timeout,\n    });\n    return buffer.toString();\n};\nconst CMDS_IP = \"169.254.170.2\";\nconst GREENGRASS_HOSTS = {\n    localhost: true,\n    \"127.0.0.1\": true,\n};\nconst GREENGRASS_PROTOCOLS = {\n    \"http:\": true,\n    \"https:\": true,\n};\nconst getCmdsUri = async () => {\n    if (process.env[exports.ENV_CMDS_RELATIVE_URI]) {\n        return {\n            hostname: CMDS_IP,\n            path: process.env[exports.ENV_CMDS_RELATIVE_URI],\n        };\n    }\n    if (process.env[exports.ENV_CMDS_FULL_URI]) {\n        const parsed = (0, url_1.parse)(process.env[exports.ENV_CMDS_FULL_URI]);\n        if (!parsed.hostname || !(parsed.hostname in GREENGRASS_HOSTS)) {\n            throw new property_provider_1.CredentialsProviderError(`${parsed.hostname} is not a valid container metadata service hostname`, false);\n        }\n        if (!parsed.protocol || !(parsed.protocol in GREENGRASS_PROTOCOLS)) {\n            throw new property_provider_1.CredentialsProviderError(`${parsed.protocol} is not a valid container metadata service protocol`, false);\n        }\n        return {\n            ...parsed,\n            port: parsed.port ? parseInt(parsed.port, 10) : undefined,\n        };\n    }\n    throw new property_provider_1.CredentialsProviderError(\"The container metadata credential provider cannot be used unless\" +\n        ` the ${exports.ENV_CMDS_RELATIVE_URI} or ${exports.ENV_CMDS_FULL_URI} environment` +\n        \" variable is set\", false);\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZnJvbUNvbnRhaW5lck1ldGFkYXRhLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2Zyb21Db250YWluZXJNZXRhZGF0YS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSxrRUFBc0U7QUFHdEUsNkJBQTRCO0FBRTVCLDhEQUEyRDtBQUMzRCxzRUFBMEY7QUFDMUYsNEVBQWlHO0FBQ2pHLGtEQUErQztBQUVsQyxRQUFBLGlCQUFpQixHQUFHLG9DQUFvQyxDQUFDO0FBQ3pELFFBQUEscUJBQXFCLEdBQUcsd0NBQXdDLENBQUM7QUFDakUsUUFBQSxtQkFBbUIsR0FBRyxtQ0FBbUMsQ0FBQztBQUV2RTs7O0dBR0c7QUFDSSxNQUFNLHFCQUFxQixHQUFHLENBQUMsT0FBMkIsRUFBRSxFQUFzQixFQUFFO0lBQ3pGLE1BQU0sRUFBRSxPQUFPLEVBQUUsVUFBVSxFQUFFLEdBQUcsSUFBQSwyQ0FBc0IsRUFBQyxJQUFJLENBQUMsQ0FBQztJQUM3RCxPQUFPLEdBQUcsRUFBRSxDQUNWLElBQUEsYUFBSyxFQUFDLEtBQUssSUFBSSxFQUFFO1FBQ2YsTUFBTSxjQUFjLEdBQUcsTUFBTSxVQUFVLEVBQUUsQ0FBQztRQUMxQyxNQUFNLGFBQWEsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sa0JBQWtCLENBQUMsT0FBTyxFQUFFLGNBQWMsQ0FBQyxDQUFDLENBQUM7UUFDcEYsSUFBSSxDQUFDLElBQUEsbUNBQWlCLEVBQUMsYUFBYSxDQUFDLEVBQUU7WUFDckMsTUFBTSxJQUFJLDRDQUF3QixDQUFDLDJEQUEyRCxDQUFDLENBQUM7U0FDakc7UUFDRCxPQUFPLElBQUEscUNBQW1CLEVBQUMsYUFBYSxDQUFDLENBQUM7SUFDNUMsQ0FBQyxFQUFFLFVBQVUsQ0FBQyxDQUFDO0FBQ25CLENBQUMsQ0FBQztBQVhXLFFBQUEscUJBQXFCLHlCQVdoQztBQUVGLE1BQU0sa0JBQWtCLEdBQUcsS0FBSyxFQUFFLE9BQWUsRUFBRSxPQUF1QixFQUFtQixFQUFFO0lBQzdGLElBQUksT0FBTyxDQUFDLEdBQUcsQ0FBQywyQkFBbUIsQ0FBQyxFQUFFO1FBQ3BDLE9BQU8sQ0FBQyxPQUFPLEdBQUc7WUFDaEIsR0FBRyxPQUFPLENBQUMsT0FBTztZQUNsQixhQUFhLEVBQUUsT0FBTyxDQUFDLEdBQUcsQ0FBQywyQkFBbUIsQ0FBQztTQUNoRCxDQUFDO0tBQ0g7SUFFRCxNQUFNLE1BQU0sR0FBRyxNQUFNLElBQUEseUJBQVcsRUFBQztRQUMvQixHQUFHLE9BQU87UUFDVixPQUFPO0tBQ1IsQ0FBQyxDQUFDO0lBQ0gsT0FBTyxNQUFNLENBQUMsUUFBUSxFQUFFLENBQUM7QUFDM0IsQ0FBQyxDQUFDO0FBRUYsTUFBTSxPQUFPLEdBQUcsZUFBZSxDQUFDO0FBQ2hDLE1BQU0sZ0JBQWdCLEdBQUc7SUFDdkIsU0FBUyxFQUFFLElBQUk7SUFDZixXQUFXLEVBQUUsSUFBSTtDQUNsQixDQUFDO0FBQ0YsTUFBTSxvQkFBb0IsR0FBRztJQUMzQixPQUFPLEVBQUUsSUFBSTtJQUNiLFFBQVEsRUFBRSxJQUFJO0NBQ2YsQ0FBQztBQUVGLE1BQU0sVUFBVSxHQUFHLEtBQUssSUFBNkIsRUFBRTtJQUNyRCxJQUFJLE9BQU8sQ0FBQyxHQUFHLENBQUMsNkJBQXFCLENBQUMsRUFBRTtRQUN0QyxPQUFPO1lBQ0wsUUFBUSxFQUFFLE9BQU87WUFDakIsSUFBSSxFQUFFLE9BQU8sQ0FBQyxHQUFHLENBQUMsNkJBQXFCLENBQUM7U0FDekMsQ0FBQztLQUNIO0lBRUQsSUFBSSxPQUFPLENBQUMsR0FBRyxDQUFDLHlCQUFpQixDQUFDLEVBQUU7UUFDbEMsTUFBTSxNQUFNLEdBQUcsSUFBQSxXQUFLLEVBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyx5QkFBaUIsQ0FBRSxDQUFDLENBQUM7UUFDdEQsSUFBSSxDQUFDLE1BQU0sQ0FBQyxRQUFRLElBQUksQ0FBQyxDQUFDLE1BQU0sQ0FBQyxRQUFRLElBQUksZ0JBQWdCLENBQUMsRUFBRTtZQUM5RCxNQUFNLElBQUksNENBQXdCLENBQ2hDLEdBQUcsTUFBTSxDQUFDLFFBQVEscURBQXFELEVBQ3ZFLEtBQUssQ0FDTixDQUFDO1NBQ0g7UUFFRCxJQUFJLENBQUMsTUFBTSxDQUFDLFFBQVEsSUFBSSxDQUFDLENBQUMsTUFBTSxDQUFDLFFBQVEsSUFBSSxvQkFBb0IsQ0FBQyxFQUFFO1lBQ2xFLE1BQU0sSUFBSSw0Q0FBd0IsQ0FDaEMsR0FBRyxNQUFNLENBQUMsUUFBUSxxREFBcUQsRUFDdkUsS0FBSyxDQUNOLENBQUM7U0FDSDtRQUVELE9BQU87WUFDTCxHQUFHLE1BQU07WUFDVCxJQUFJLEVBQUUsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLFNBQVM7U0FDMUQsQ0FBQztLQUNIO0lBRUQsTUFBTSxJQUFJLDRDQUF3QixDQUNoQyxrRUFBa0U7UUFDaEUsUUFBUSw2QkFBcUIsT0FBTyx5QkFBaUIsY0FBYztRQUNuRSxrQkFBa0IsRUFDcEIsS0FBSyxDQUNOLENBQUM7QUFDSixDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDcmVkZW50aWFsc1Byb3ZpZGVyRXJyb3IgfSBmcm9tIFwiQGF3cy1zZGsvcHJvcGVydHktcHJvdmlkZXJcIjtcbmltcG9ydCB7IENyZWRlbnRpYWxQcm92aWRlciB9IGZyb20gXCJAYXdzLXNkay90eXBlc1wiO1xuaW1wb3J0IHsgUmVxdWVzdE9wdGlvbnMgfSBmcm9tIFwiaHR0cFwiO1xuaW1wb3J0IHsgcGFyc2UgfSBmcm9tIFwidXJsXCI7XG5cbmltcG9ydCB7IGh0dHBSZXF1ZXN0IH0gZnJvbSBcIi4vcmVtb3RlUHJvdmlkZXIvaHR0cFJlcXVlc3RcIjtcbmltcG9ydCB7IGZyb21JbWRzQ3JlZGVudGlhbHMsIGlzSW1kc0NyZWRlbnRpYWxzIH0gZnJvbSBcIi4vcmVtb3RlUHJvdmlkZXIvSW1kc0NyZWRlbnRpYWxzXCI7XG5pbXBvcnQgeyBwcm92aWRlckNvbmZpZ0Zyb21Jbml0LCBSZW1vdGVQcm92aWRlckluaXQgfSBmcm9tIFwiLi9yZW1vdGVQcm92aWRlci9SZW1vdGVQcm92aWRlckluaXRcIjtcbmltcG9ydCB7IHJldHJ5IH0gZnJvbSBcIi4vcmVtb3RlUHJvdmlkZXIvcmV0cnlcIjtcblxuZXhwb3J0IGNvbnN0IEVOVl9DTURTX0ZVTExfVVJJID0gXCJBV1NfQ09OVEFJTkVSX0NSRURFTlRJQUxTX0ZVTExfVVJJXCI7XG5leHBvcnQgY29uc3QgRU5WX0NNRFNfUkVMQVRJVkVfVVJJID0gXCJBV1NfQ09OVEFJTkVSX0NSRURFTlRJQUxTX1JFTEFUSVZFX1VSSVwiO1xuZXhwb3J0IGNvbnN0IEVOVl9DTURTX0FVVEhfVE9LRU4gPSBcIkFXU19DT05UQUlORVJfQVVUSE9SSVpBVElPTl9UT0tFTlwiO1xuXG4vKipcbiAqIENyZWF0ZXMgYSBjcmVkZW50aWFsIHByb3ZpZGVyIHRoYXQgd2lsbCBzb3VyY2UgY3JlZGVudGlhbHMgZnJvbSB0aGUgRUNTXG4gKiBDb250YWluZXIgTWV0YWRhdGEgU2VydmljZVxuICovXG5leHBvcnQgY29uc3QgZnJvbUNvbnRhaW5lck1ldGFkYXRhID0gKGluaXQ6IFJlbW90ZVByb3ZpZGVySW5pdCA9IHt9KTogQ3JlZGVudGlhbFByb3ZpZGVyID0+IHtcbiAgY29uc3QgeyB0aW1lb3V0LCBtYXhSZXRyaWVzIH0gPSBwcm92aWRlckNvbmZpZ0Zyb21Jbml0KGluaXQpO1xuICByZXR1cm4gKCkgPT5cbiAgICByZXRyeShhc3luYyAoKSA9PiB7XG4gICAgICBjb25zdCByZXF1ZXN0T3B0aW9ucyA9IGF3YWl0IGdldENtZHNVcmkoKTtcbiAgICAgIGNvbnN0IGNyZWRzUmVzcG9uc2UgPSBKU09OLnBhcnNlKGF3YWl0IHJlcXVlc3RGcm9tRWNzSW1kcyh0aW1lb3V0LCByZXF1ZXN0T3B0aW9ucykpO1xuICAgICAgaWYgKCFpc0ltZHNDcmVkZW50aWFscyhjcmVkc1Jlc3BvbnNlKSkge1xuICAgICAgICB0aHJvdyBuZXcgQ3JlZGVudGlhbHNQcm92aWRlckVycm9yKFwiSW52YWxpZCByZXNwb25zZSByZWNlaXZlZCBmcm9tIGluc3RhbmNlIG1ldGFkYXRhIHNlcnZpY2UuXCIpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGZyb21JbWRzQ3JlZGVudGlhbHMoY3JlZHNSZXNwb25zZSk7XG4gICAgfSwgbWF4UmV0cmllcyk7XG59O1xuXG5jb25zdCByZXF1ZXN0RnJvbUVjc0ltZHMgPSBhc3luYyAodGltZW91dDogbnVtYmVyLCBvcHRpb25zOiBSZXF1ZXN0T3B0aW9ucyk6IFByb21pc2U8c3RyaW5nPiA9PiB7XG4gIGlmIChwcm9jZXNzLmVudltFTlZfQ01EU19BVVRIX1RPS0VOXSkge1xuICAgIG9wdGlvbnMuaGVhZGVycyA9IHtcbiAgICAgIC4uLm9wdGlvbnMuaGVhZGVycyxcbiAgICAgIEF1dGhvcml6YXRpb246IHByb2Nlc3MuZW52W0VOVl9DTURTX0FVVEhfVE9LRU5dLFxuICAgIH07XG4gIH1cblxuICBjb25zdCBidWZmZXIgPSBhd2FpdCBodHRwUmVxdWVzdCh7XG4gICAgLi4ub3B0aW9ucyxcbiAgICB0aW1lb3V0LFxuICB9KTtcbiAgcmV0dXJuIGJ1ZmZlci50b1N0cmluZygpO1xufTtcblxuY29uc3QgQ01EU19JUCA9IFwiMTY5LjI1NC4xNzAuMlwiO1xuY29uc3QgR1JFRU5HUkFTU19IT1NUUyA9IHtcbiAgbG9jYWxob3N0OiB0cnVlLFxuICBcIjEyNy4wLjAuMVwiOiB0cnVlLFxufTtcbmNvbnN0IEdSRUVOR1JBU1NfUFJPVE9DT0xTID0ge1xuICBcImh0dHA6XCI6IHRydWUsXG4gIFwiaHR0cHM6XCI6IHRydWUsXG59O1xuXG5jb25zdCBnZXRDbWRzVXJpID0gYXN5bmMgKCk6IFByb21pc2U8UmVxdWVzdE9wdGlvbnM+ID0+IHtcbiAgaWYgKHByb2Nlc3MuZW52W0VOVl9DTURTX1JFTEFUSVZFX1VSSV0pIHtcbiAgICByZXR1cm4ge1xuICAgICAgaG9zdG5hbWU6IENNRFNfSVAsXG4gICAgICBwYXRoOiBwcm9jZXNzLmVudltFTlZfQ01EU19SRUxBVElWRV9VUkldLFxuICAgIH07XG4gIH1cblxuICBpZiAocHJvY2Vzcy5lbnZbRU5WX0NNRFNfRlVMTF9VUkldKSB7XG4gICAgY29uc3QgcGFyc2VkID0gcGFyc2UocHJvY2Vzcy5lbnZbRU5WX0NNRFNfRlVMTF9VUkldISk7XG4gICAgaWYgKCFwYXJzZWQuaG9zdG5hbWUgfHwgIShwYXJzZWQuaG9zdG5hbWUgaW4gR1JFRU5HUkFTU19IT1NUUykpIHtcbiAgICAgIHRocm93IG5ldyBDcmVkZW50aWFsc1Byb3ZpZGVyRXJyb3IoXG4gICAgICAgIGAke3BhcnNlZC5ob3N0bmFtZX0gaXMgbm90IGEgdmFsaWQgY29udGFpbmVyIG1ldGFkYXRhIHNlcnZpY2UgaG9zdG5hbWVgLFxuICAgICAgICBmYWxzZVxuICAgICAgKTtcbiAgICB9XG5cbiAgICBpZiAoIXBhcnNlZC5wcm90b2NvbCB8fCAhKHBhcnNlZC5wcm90b2NvbCBpbiBHUkVFTkdSQVNTX1BST1RPQ09MUykpIHtcbiAgICAgIHRocm93IG5ldyBDcmVkZW50aWFsc1Byb3ZpZGVyRXJyb3IoXG4gICAgICAgIGAke3BhcnNlZC5wcm90b2NvbH0gaXMgbm90IGEgdmFsaWQgY29udGFpbmVyIG1ldGFkYXRhIHNlcnZpY2UgcHJvdG9jb2xgLFxuICAgICAgICBmYWxzZVxuICAgICAgKTtcbiAgICB9XG5cbiAgICByZXR1cm4ge1xuICAgICAgLi4ucGFyc2VkLFxuICAgICAgcG9ydDogcGFyc2VkLnBvcnQgPyBwYXJzZUludChwYXJzZWQucG9ydCwgMTApIDogdW5kZWZpbmVkLFxuICAgIH07XG4gIH1cblxuICB0aHJvdyBuZXcgQ3JlZGVudGlhbHNQcm92aWRlckVycm9yKFxuICAgIFwiVGhlIGNvbnRhaW5lciBtZXRhZGF0YSBjcmVkZW50aWFsIHByb3ZpZGVyIGNhbm5vdCBiZSB1c2VkIHVubGVzc1wiICtcbiAgICAgIGAgdGhlICR7RU5WX0NNRFNfUkVMQVRJVkVfVVJJfSBvciAke0VOVl9DTURTX0ZVTExfVVJJfSBlbnZpcm9ubWVudGAgK1xuICAgICAgXCIgdmFyaWFibGUgaXMgc2V0XCIsXG4gICAgZmFsc2VcbiAgKTtcbn07XG4iXX0=","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromInstanceMetadata = void 0;\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nconst httpRequest_1 = require(\"./remoteProvider/httpRequest\");\nconst ImdsCredentials_1 = require(\"./remoteProvider/ImdsCredentials\");\nconst RemoteProviderInit_1 = require(\"./remoteProvider/RemoteProviderInit\");\nconst retry_1 = require(\"./remoteProvider/retry\");\nconst getInstanceMetadataEndpoint_1 = require(\"./utils/getInstanceMetadataEndpoint\");\nconst IMDS_PATH = \"/latest/meta-data/iam/security-credentials/\";\nconst IMDS_TOKEN_PATH = \"/latest/api/token\";\n/**\n * Creates a credential provider that will source credentials from the EC2\n * Instance Metadata Service\n */\nconst fromInstanceMetadata = (init = {}) => {\n    // when set to true, metadata service will not fetch token\n    let disableFetchToken = false;\n    const { timeout, maxRetries } = (0, RemoteProviderInit_1.providerConfigFromInit)(init);\n    const getCredentials = async (maxRetries, options) => {\n        const profile = (await (0, retry_1.retry)(async () => {\n            let profile;\n            try {\n                profile = await getProfile(options);\n            }\n            catch (err) {\n                if (err.statusCode === 401) {\n                    disableFetchToken = false;\n                }\n                throw err;\n            }\n            return profile;\n        }, maxRetries)).trim();\n        return (0, retry_1.retry)(async () => {\n            let creds;\n            try {\n                creds = await getCredentialsFromProfile(profile, options);\n            }\n            catch (err) {\n                if (err.statusCode === 401) {\n                    disableFetchToken = false;\n                }\n                throw err;\n            }\n            return creds;\n        }, maxRetries);\n    };\n    return async () => {\n        const endpoint = await (0, getInstanceMetadataEndpoint_1.getInstanceMetadataEndpoint)();\n        if (disableFetchToken) {\n            return getCredentials(maxRetries, { ...endpoint, timeout });\n        }\n        else {\n            let token;\n            try {\n                token = (await getMetadataToken({ ...endpoint, timeout })).toString();\n            }\n            catch (error) {\n                if ((error === null || error === void 0 ? void 0 : error.statusCode) === 400) {\n                    throw Object.assign(error, {\n                        message: \"EC2 Metadata token request returned error\",\n                    });\n                }\n                else if (error.message === \"TimeoutError\" || [403, 404, 405].includes(error.statusCode)) {\n                    disableFetchToken = true;\n                }\n                return getCredentials(maxRetries, { ...endpoint, timeout });\n            }\n            return getCredentials(maxRetries, {\n                ...endpoint,\n                headers: {\n                    \"x-aws-ec2-metadata-token\": token,\n                },\n                timeout,\n            });\n        }\n    };\n};\nexports.fromInstanceMetadata = fromInstanceMetadata;\nconst getMetadataToken = async (options) => (0, httpRequest_1.httpRequest)({\n    ...options,\n    path: IMDS_TOKEN_PATH,\n    method: \"PUT\",\n    headers: {\n        \"x-aws-ec2-metadata-token-ttl-seconds\": \"21600\",\n    },\n});\nconst getProfile = async (options) => (await (0, httpRequest_1.httpRequest)({ ...options, path: IMDS_PATH })).toString();\nconst getCredentialsFromProfile = async (profile, options) => {\n    const credsResponse = JSON.parse((await (0, httpRequest_1.httpRequest)({\n        ...options,\n        path: IMDS_PATH + profile,\n    })).toString());\n    if (!(0, ImdsCredentials_1.isImdsCredentials)(credsResponse)) {\n        throw new property_provider_1.CredentialsProviderError(\"Invalid response received from instance metadata service.\");\n    }\n    return (0, ImdsCredentials_1.fromImdsCredentials)(credsResponse);\n};\n//# sourceMappingURL=data:application/json;base64,","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\n(0, tslib_1.__exportStar)(require(\"./fromContainerMetadata\"), exports);\n(0, tslib_1.__exportStar)(require(\"./fromInstanceMetadata\"), exports);\n(0, tslib_1.__exportStar)(require(\"./remoteProvider/RemoteProviderInit\"), exports);\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsdUVBQXdDO0FBQ3hDLHNFQUF1QztBQUN2QyxtRkFBb0QiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tIFwiLi9mcm9tQ29udGFpbmVyTWV0YWRhdGFcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2Zyb21JbnN0YW5jZU1ldGFkYXRhXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9yZW1vdGVQcm92aWRlci9SZW1vdGVQcm92aWRlckluaXRcIjtcbiJdfQ==","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromImdsCredentials = exports.isImdsCredentials = void 0;\nconst isImdsCredentials = (arg) => Boolean(arg) &&\n    typeof arg === \"object\" &&\n    typeof arg.AccessKeyId === \"string\" &&\n    typeof arg.SecretAccessKey === \"string\" &&\n    typeof arg.Token === \"string\" &&\n    typeof arg.Expiration === \"string\";\nexports.isImdsCredentials = isImdsCredentials;\nconst fromImdsCredentials = (creds) => ({\n    accessKeyId: creds.AccessKeyId,\n    secretAccessKey: creds.SecretAccessKey,\n    sessionToken: creds.Token,\n    expiration: new Date(creds.Expiration),\n});\nexports.fromImdsCredentials = fromImdsCredentials;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSW1kc0NyZWRlbnRpYWxzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3JlbW90ZVByb3ZpZGVyL0ltZHNDcmVkZW50aWFscy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFTTyxNQUFNLGlCQUFpQixHQUFHLENBQUMsR0FBUSxFQUEwQixFQUFFLENBQ3BFLE9BQU8sQ0FBQyxHQUFHLENBQUM7SUFDWixPQUFPLEdBQUcsS0FBSyxRQUFRO0lBQ3ZCLE9BQU8sR0FBRyxDQUFDLFdBQVcsS0FBSyxRQUFRO0lBQ25DLE9BQU8sR0FBRyxDQUFDLGVBQWUsS0FBSyxRQUFRO0lBQ3ZDLE9BQU8sR0FBRyxDQUFDLEtBQUssS0FBSyxRQUFRO0lBQzdCLE9BQU8sR0FBRyxDQUFDLFVBQVUsS0FBSyxRQUFRLENBQUM7QUFOeEIsUUFBQSxpQkFBaUIscUJBTU87QUFFOUIsTUFBTSxtQkFBbUIsR0FBRyxDQUFDLEtBQXNCLEVBQWUsRUFBRSxDQUFDLENBQUM7SUFDM0UsV0FBVyxFQUFFLEtBQUssQ0FBQyxXQUFXO0lBQzlCLGVBQWUsRUFBRSxLQUFLLENBQUMsZUFBZTtJQUN0QyxZQUFZLEVBQUUsS0FBSyxDQUFDLEtBQUs7SUFDekIsVUFBVSxFQUFFLElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxVQUFVLENBQUM7Q0FDdkMsQ0FBQyxDQUFDO0FBTFUsUUFBQSxtQkFBbUIsdUJBSzdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ3JlZGVudGlhbHMgfSBmcm9tIFwiQGF3cy1zZGsvdHlwZXNcIjtcblxuZXhwb3J0IGludGVyZmFjZSBJbWRzQ3JlZGVudGlhbHMge1xuICBBY2Nlc3NLZXlJZDogc3RyaW5nO1xuICBTZWNyZXRBY2Nlc3NLZXk6IHN0cmluZztcbiAgVG9rZW46IHN0cmluZztcbiAgRXhwaXJhdGlvbjogc3RyaW5nO1xufVxuXG5leHBvcnQgY29uc3QgaXNJbWRzQ3JlZGVudGlhbHMgPSAoYXJnOiBhbnkpOiBhcmcgaXMgSW1kc0NyZWRlbnRpYWxzID0+XG4gIEJvb2xlYW4oYXJnKSAmJlxuICB0eXBlb2YgYXJnID09PSBcIm9iamVjdFwiICYmXG4gIHR5cGVvZiBhcmcuQWNjZXNzS2V5SWQgPT09IFwic3RyaW5nXCIgJiZcbiAgdHlwZW9mIGFyZy5TZWNyZXRBY2Nlc3NLZXkgPT09IFwic3RyaW5nXCIgJiZcbiAgdHlwZW9mIGFyZy5Ub2tlbiA9PT0gXCJzdHJpbmdcIiAmJlxuICB0eXBlb2YgYXJnLkV4cGlyYXRpb24gPT09IFwic3RyaW5nXCI7XG5cbmV4cG9ydCBjb25zdCBmcm9tSW1kc0NyZWRlbnRpYWxzID0gKGNyZWRzOiBJbWRzQ3JlZGVudGlhbHMpOiBDcmVkZW50aWFscyA9PiAoe1xuICBhY2Nlc3NLZXlJZDogY3JlZHMuQWNjZXNzS2V5SWQsXG4gIHNlY3JldEFjY2Vzc0tleTogY3JlZHMuU2VjcmV0QWNjZXNzS2V5LFxuICBzZXNzaW9uVG9rZW46IGNyZWRzLlRva2VuLFxuICBleHBpcmF0aW9uOiBuZXcgRGF0ZShjcmVkcy5FeHBpcmF0aW9uKSxcbn0pO1xuIl19","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.providerConfigFromInit = exports.DEFAULT_MAX_RETRIES = exports.DEFAULT_TIMEOUT = void 0;\nexports.DEFAULT_TIMEOUT = 1000;\n// The default in AWS SDK for Python and CLI (botocore) is no retry or one attempt\n// https://github.com/boto/botocore/blob/646c61a7065933e75bab545b785e6098bc94c081/botocore/utils.py#L273\nexports.DEFAULT_MAX_RETRIES = 0;\nconst providerConfigFromInit = ({ maxRetries = exports.DEFAULT_MAX_RETRIES, timeout = exports.DEFAULT_TIMEOUT, }) => ({ maxRetries, timeout });\nexports.providerConfigFromInit = providerConfigFromInit;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmVtb3RlUHJvdmlkZXJJbml0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3JlbW90ZVByb3ZpZGVyL1JlbW90ZVByb3ZpZGVySW5pdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBYSxRQUFBLGVBQWUsR0FBRyxJQUFJLENBQUM7QUFFcEMsa0ZBQWtGO0FBQ2xGLHdHQUF3RztBQUMzRixRQUFBLG1CQUFtQixHQUFHLENBQUMsQ0FBQztBQWdCOUIsTUFBTSxzQkFBc0IsR0FBRyxDQUFDLEVBQ3JDLFVBQVUsR0FBRywyQkFBbUIsRUFDaEMsT0FBTyxHQUFHLHVCQUFlLEdBQ04sRUFBd0IsRUFBRSxDQUFDLENBQUMsRUFBRSxVQUFVLEVBQUUsT0FBTyxFQUFFLENBQUMsQ0FBQztBQUg3RCxRQUFBLHNCQUFzQiwwQkFHdUMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgREVGQVVMVF9USU1FT1VUID0gMTAwMDtcblxuLy8gVGhlIGRlZmF1bHQgaW4gQVdTIFNESyBmb3IgUHl0aG9uIGFuZCBDTEkgKGJvdG9jb3JlKSBpcyBubyByZXRyeSBvciBvbmUgYXR0ZW1wdFxuLy8gaHR0cHM6Ly9naXRodWIuY29tL2JvdG8vYm90b2NvcmUvYmxvYi82NDZjNjFhNzA2NTkzM2U3NWJhYjU0NWI3ODVlNjA5OGJjOTRjMDgxL2JvdG9jb3JlL3V0aWxzLnB5I0wyNzNcbmV4cG9ydCBjb25zdCBERUZBVUxUX01BWF9SRVRSSUVTID0gMDtcblxuZXhwb3J0IGludGVyZmFjZSBSZW1vdGVQcm92aWRlckNvbmZpZyB7XG4gIC8qKlxuICAgKiBUaGUgY29ubmVjdGlvbiB0aW1lb3V0IChpbiBtaWxsaXNlY29uZHMpXG4gICAqL1xuICB0aW1lb3V0OiBudW1iZXI7XG5cbiAgLyoqXG4gICAqIFRoZSBtYXhpbXVtIG51bWJlciBvZiB0aW1lcyB0aGUgSFRUUCBjb25uZWN0aW9uIHNob3VsZCBiZSByZXRyaWVkXG4gICAqL1xuICBtYXhSZXRyaWVzOiBudW1iZXI7XG59XG5cbmV4cG9ydCB0eXBlIFJlbW90ZVByb3ZpZGVySW5pdCA9IFBhcnRpYWw8UmVtb3RlUHJvdmlkZXJDb25maWc+O1xuXG5leHBvcnQgY29uc3QgcHJvdmlkZXJDb25maWdGcm9tSW5pdCA9ICh7XG4gIG1heFJldHJpZXMgPSBERUZBVUxUX01BWF9SRVRSSUVTLFxuICB0aW1lb3V0ID0gREVGQVVMVF9USU1FT1VULFxufTogUmVtb3RlUHJvdmlkZXJJbml0KTogUmVtb3RlUHJvdmlkZXJDb25maWcgPT4gKHsgbWF4UmV0cmllcywgdGltZW91dCB9KTtcbiJdfQ==","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.httpRequest = void 0;\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nconst buffer_1 = require(\"buffer\");\nconst http_1 = require(\"http\");\n/**\n * @internal\n */\nfunction httpRequest(options) {\n    return new Promise((resolve, reject) => {\n        var _a;\n        const req = (0, http_1.request)({\n            method: \"GET\",\n            ...options,\n            // Node.js http module doesn't accept hostname with square brackets\n            // Refs: https://github.com/nodejs/node/issues/39738\n            hostname: (_a = options.hostname) === null || _a === void 0 ? void 0 : _a.replace(/^\\[(.+)\\]$/, \"$1\"),\n        });\n        req.on(\"error\", (err) => {\n            reject(Object.assign(new property_provider_1.ProviderError(\"Unable to connect to instance metadata service\"), err));\n            req.destroy();\n        });\n        req.on(\"timeout\", () => {\n            reject(new property_provider_1.ProviderError(\"TimeoutError from instance metadata service\"));\n            req.destroy();\n        });\n        req.on(\"response\", (res) => {\n            const { statusCode = 400 } = res;\n            if (statusCode < 200 || 300 <= statusCode) {\n                reject(Object.assign(new property_provider_1.ProviderError(\"Error response received from instance metadata service\"), { statusCode }));\n                req.destroy();\n            }\n            const chunks = [];\n            res.on(\"data\", (chunk) => {\n                chunks.push(chunk);\n            });\n            res.on(\"end\", () => {\n                resolve(buffer_1.Buffer.concat(chunks));\n                req.destroy();\n            });\n        });\n        req.end();\n    });\n}\nexports.httpRequest = httpRequest;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaHR0cFJlcXVlc3QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcmVtb3RlUHJvdmlkZXIvaHR0cFJlcXVlc3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsa0VBQTJEO0FBQzNELG1DQUFnQztBQUNoQywrQkFBZ0U7QUFFaEU7O0dBRUc7QUFDSCxTQUFnQixXQUFXLENBQUMsT0FBdUI7SUFDakQsT0FBTyxJQUFJLE9BQU8sQ0FBQyxDQUFDLE9BQU8sRUFBRSxNQUFNLEVBQUUsRUFBRTs7UUFDckMsTUFBTSxHQUFHLEdBQUcsSUFBQSxjQUFPLEVBQUM7WUFDbEIsTUFBTSxFQUFFLEtBQUs7WUFDYixHQUFHLE9BQU87WUFDVixtRUFBbUU7WUFDbkUsb0RBQW9EO1lBQ3BELFFBQVEsRUFBRSxNQUFBLE9BQU8sQ0FBQyxRQUFRLDBDQUFFLE9BQU8sQ0FBQyxZQUFZLEVBQUUsSUFBSSxDQUFDO1NBQ3hELENBQUMsQ0FBQztRQUVILEdBQUcsQ0FBQyxFQUFFLENBQUMsT0FBTyxFQUFFLENBQUMsR0FBRyxFQUFFLEVBQUU7WUFDdEIsTUFBTSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxpQ0FBYSxDQUFDLGdEQUFnRCxDQUFDLEVBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQztZQUNoRyxHQUFHLENBQUMsT0FBTyxFQUFFLENBQUM7UUFDaEIsQ0FBQyxDQUFDLENBQUM7UUFFSCxHQUFHLENBQUMsRUFBRSxDQUFDLFNBQVMsRUFBRSxHQUFHLEVBQUU7WUFDckIsTUFBTSxDQUFDLElBQUksaUNBQWEsQ0FBQyw2Q0FBNkMsQ0FBQyxDQUFDLENBQUM7WUFDekUsR0FBRyxDQUFDLE9BQU8sRUFBRSxDQUFDO1FBQ2hCLENBQUMsQ0FBQyxDQUFDO1FBRUgsR0FBRyxDQUFDLEVBQUUsQ0FBQyxVQUFVLEVBQUUsQ0FBQyxHQUFvQixFQUFFLEVBQUU7WUFDMUMsTUFBTSxFQUFFLFVBQVUsR0FBRyxHQUFHLEVBQUUsR0FBRyxHQUFHLENBQUM7WUFDakMsSUFBSSxVQUFVLEdBQUcsR0FBRyxJQUFJLEdBQUcsSUFBSSxVQUFVLEVBQUU7Z0JBQ3pDLE1BQU0sQ0FDSixNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksaUNBQWEsQ0FBQyx3REFBd0QsQ0FBQyxFQUFFLEVBQUUsVUFBVSxFQUFFLENBQUMsQ0FDM0csQ0FBQztnQkFDRixHQUFHLENBQUMsT0FBTyxFQUFFLENBQUM7YUFDZjtZQUVELE1BQU0sTUFBTSxHQUFrQixFQUFFLENBQUM7WUFDakMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxLQUFLLEVBQUUsRUFBRTtnQkFDdkIsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFlLENBQUMsQ0FBQztZQUMvQixDQUFDLENBQUMsQ0FBQztZQUNILEdBQUcsQ0FBQyxFQUFFLENBQUMsS0FBSyxFQUFFLEdBQUcsRUFBRTtnQkFDakIsT0FBTyxDQUFDLGVBQU0sQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztnQkFDL0IsR0FBRyxDQUFDLE9BQU8sRUFBRSxDQUFDO1lBQ2hCLENBQUMsQ0FBQyxDQUFDO1FBQ0wsQ0FBQyxDQUFDLENBQUM7UUFFSCxHQUFHLENBQUMsR0FBRyxFQUFFLENBQUM7SUFDWixDQUFDLENBQUMsQ0FBQztBQUNMLENBQUM7QUF6Q0Qsa0NBeUNDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUHJvdmlkZXJFcnJvciB9IGZyb20gXCJAYXdzLXNkay9wcm9wZXJ0eS1wcm92aWRlclwiO1xuaW1wb3J0IHsgQnVmZmVyIH0gZnJvbSBcImJ1ZmZlclwiO1xuaW1wb3J0IHsgSW5jb21pbmdNZXNzYWdlLCByZXF1ZXN0LCBSZXF1ZXN0T3B0aW9ucyB9IGZyb20gXCJodHRwXCI7XG5cbi8qKlxuICogQGludGVybmFsXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBodHRwUmVxdWVzdChvcHRpb25zOiBSZXF1ZXN0T3B0aW9ucyk6IFByb21pc2U8QnVmZmVyPiB7XG4gIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgY29uc3QgcmVxID0gcmVxdWVzdCh7XG4gICAgICBtZXRob2Q6IFwiR0VUXCIsXG4gICAgICAuLi5vcHRpb25zLFxuICAgICAgLy8gTm9kZS5qcyBodHRwIG1vZHVsZSBkb2Vzbid0IGFjY2VwdCBob3N0bmFtZSB3aXRoIHNxdWFyZSBicmFja2V0c1xuICAgICAgLy8gUmVmczogaHR0cHM6Ly9naXRodWIuY29tL25vZGVqcy9ub2RlL2lzc3Vlcy8zOTczOFxuICAgICAgaG9zdG5hbWU6IG9wdGlvbnMuaG9zdG5hbWU/LnJlcGxhY2UoL15cXFsoLispXFxdJC8sIFwiJDFcIiksXG4gICAgfSk7XG5cbiAgICByZXEub24oXCJlcnJvclwiLCAoZXJyKSA9PiB7XG4gICAgICByZWplY3QoT2JqZWN0LmFzc2lnbihuZXcgUHJvdmlkZXJFcnJvcihcIlVuYWJsZSB0byBjb25uZWN0IHRvIGluc3RhbmNlIG1ldGFkYXRhIHNlcnZpY2VcIiksIGVycikpO1xuICAgICAgcmVxLmRlc3Ryb3koKTtcbiAgICB9KTtcblxuICAgIHJlcS5vbihcInRpbWVvdXRcIiwgKCkgPT4ge1xuICAgICAgcmVqZWN0KG5ldyBQcm92aWRlckVycm9yKFwiVGltZW91dEVycm9yIGZyb20gaW5zdGFuY2UgbWV0YWRhdGEgc2VydmljZVwiKSk7XG4gICAgICByZXEuZGVzdHJveSgpO1xuICAgIH0pO1xuXG4gICAgcmVxLm9uKFwicmVzcG9uc2VcIiwgKHJlczogSW5jb21pbmdNZXNzYWdlKSA9PiB7XG4gICAgICBjb25zdCB7IHN0YXR1c0NvZGUgPSA0MDAgfSA9IHJlcztcbiAgICAgIGlmIChzdGF0dXNDb2RlIDwgMjAwIHx8IDMwMCA8PSBzdGF0dXNDb2RlKSB7XG4gICAgICAgIHJlamVjdChcbiAgICAgICAgICBPYmplY3QuYXNzaWduKG5ldyBQcm92aWRlckVycm9yKFwiRXJyb3IgcmVzcG9uc2UgcmVjZWl2ZWQgZnJvbSBpbnN0YW5jZSBtZXRhZGF0YSBzZXJ2aWNlXCIpLCB7IHN0YXR1c0NvZGUgfSlcbiAgICAgICAgKTtcbiAgICAgICAgcmVxLmRlc3Ryb3koKTtcbiAgICAgIH1cblxuICAgICAgY29uc3QgY2h1bmtzOiBBcnJheTxCdWZmZXI+ID0gW107XG4gICAgICByZXMub24oXCJkYXRhXCIsIChjaHVuaykgPT4ge1xuICAgICAgICBjaHVua3MucHVzaChjaHVuayBhcyBCdWZmZXIpO1xuICAgICAgfSk7XG4gICAgICByZXMub24oXCJlbmRcIiwgKCkgPT4ge1xuICAgICAgICByZXNvbHZlKEJ1ZmZlci5jb25jYXQoY2h1bmtzKSk7XG4gICAgICAgIHJlcS5kZXN0cm95KCk7XG4gICAgICB9KTtcbiAgICB9KTtcblxuICAgIHJlcS5lbmQoKTtcbiAgfSk7XG59XG4iXX0=","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.retry = void 0;\n/**\n * @internal\n */\nconst retry = (toRetry, maxRetries) => {\n    let promise = toRetry();\n    for (let i = 0; i < maxRetries; i++) {\n        promise = promise.catch(toRetry);\n    }\n    return promise;\n};\nexports.retry = retry;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmV0cnkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvcmVtb3RlUHJvdmlkZXIvcmV0cnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBSUE7O0dBRUc7QUFDSSxNQUFNLEtBQUssR0FBRyxDQUFJLE9BQTZCLEVBQUUsVUFBa0IsRUFBYyxFQUFFO0lBQ3hGLElBQUksT0FBTyxHQUFHLE9BQU8sRUFBRSxDQUFDO0lBQ3hCLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxVQUFVLEVBQUUsQ0FBQyxFQUFFLEVBQUU7UUFDbkMsT0FBTyxHQUFHLE9BQU8sQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUM7S0FDbEM7SUFFRCxPQUFPLE9BQU8sQ0FBQztBQUNqQixDQUFDLENBQUM7QUFQVyxRQUFBLEtBQUssU0FPaEIiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgaW50ZXJmYWNlIFJldHJ5YWJsZVByb3ZpZGVyPFQ+IHtcbiAgKCk6IFByb21pc2U8VD47XG59XG5cbi8qKlxuICogQGludGVybmFsXG4gKi9cbmV4cG9ydCBjb25zdCByZXRyeSA9IDxUPih0b1JldHJ5OiBSZXRyeWFibGVQcm92aWRlcjxUPiwgbWF4UmV0cmllczogbnVtYmVyKTogUHJvbWlzZTxUPiA9PiB7XG4gIGxldCBwcm9taXNlID0gdG9SZXRyeSgpO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IG1heFJldHJpZXM7IGkrKykge1xuICAgIHByb21pc2UgPSBwcm9taXNlLmNhdGNoKHRvUmV0cnkpO1xuICB9XG5cbiAgcmV0dXJuIHByb21pc2U7XG59O1xuIl19","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getInstanceMetadataEndpoint = void 0;\nconst node_config_provider_1 = require(\"@aws-sdk/node-config-provider\");\nconst url_parser_1 = require(\"@aws-sdk/url-parser\");\nconst Endpoint_1 = require(\"../config/Endpoint\");\nconst EndpointConfigOptions_1 = require(\"../config/EndpointConfigOptions\");\nconst EndpointMode_1 = require(\"../config/EndpointMode\");\nconst EndpointModeConfigOptions_1 = require(\"../config/EndpointModeConfigOptions\");\n/**\n * Returns the host to use for instance metadata service call.\n *\n * The host is read from endpoint which can be set either in\n * {@link ENV_ENDPOINT_NAME} environment variable or {@link CONFIG_ENDPOINT_NAME}\n * configuration property.\n *\n * If endpoint is not set, then endpoint mode is read either from\n * {@link ENV_ENDPOINT_MODE_NAME} environment variable or {@link CONFIG_ENDPOINT_MODE_NAME}\n * configuration property. If endpoint mode is not set, then default endpoint mode\n * {@link EndpointMode.IPv4} is used.\n *\n * If endpoint mode is set to {@link EndpointMode.IPv4}, then the host is {@link Endpoint.IPv4}.\n * If endpoint mode is set to {@link EndpointMode.IPv6}, then the host is {@link Endpoint.IPv6}.\n *\n * @returns Host to use for instance metadata service call.\n */\nconst getInstanceMetadataEndpoint = async () => (0, url_parser_1.parseUrl)((await getFromEndpointConfig()) || (await getFromEndpointModeConfig()));\nexports.getInstanceMetadataEndpoint = getInstanceMetadataEndpoint;\nconst getFromEndpointConfig = async () => (0, node_config_provider_1.loadConfig)(EndpointConfigOptions_1.ENDPOINT_CONFIG_OPTIONS)();\nconst getFromEndpointModeConfig = async () => {\n    const endpointMode = await (0, node_config_provider_1.loadConfig)(EndpointModeConfigOptions_1.ENDPOINT_MODE_CONFIG_OPTIONS)();\n    switch (endpointMode) {\n        case EndpointMode_1.EndpointMode.IPv4:\n            return Endpoint_1.Endpoint.IPv4;\n        case EndpointMode_1.EndpointMode.IPv6:\n            return Endpoint_1.Endpoint.IPv6;\n        default:\n            throw new Error(`Unsupported endpoint mode: ${endpointMode}.` + ` Select from ${Object.values(EndpointMode_1.EndpointMode)}`);\n    }\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0SW5zdGFuY2VNZXRhZGF0YUVuZHBvaW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3V0aWxzL2dldEluc3RhbmNlTWV0YWRhdGFFbmRwb2ludC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSx3RUFBMkQ7QUFFM0Qsb0RBQStDO0FBRS9DLGlEQUEwRTtBQUMxRSwyRUFBbUg7QUFDbkgseURBQXNEO0FBQ3RELG1GQUk2QztBQUU3Qzs7Ozs7Ozs7Ozs7Ozs7OztHQWdCRztBQUNJLE1BQU0sMkJBQTJCLEdBQUcsS0FBSyxJQUF1QixFQUFFLENBQ3ZFLElBQUEscUJBQVEsRUFBQyxDQUFDLE1BQU0scUJBQXFCLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSx5QkFBeUIsRUFBRSxDQUFDLENBQUMsQ0FBQztBQUR0RSxRQUFBLDJCQUEyQiwrQkFDMkM7QUFFbkYsTUFBTSxxQkFBcUIsR0FBRyxLQUFLLElBQWlDLEVBQUUsQ0FBQyxJQUFBLGlDQUFVLEVBQUMsK0NBQXVCLENBQUMsRUFBRSxDQUFDO0FBRTdHLE1BQU0seUJBQXlCLEdBQUcsS0FBSyxJQUFxQixFQUFFO0lBQzVELE1BQU0sWUFBWSxHQUFHLE1BQU0sSUFBQSxpQ0FBVSxFQUFDLHdEQUE0QixDQUFDLEVBQUUsQ0FBQztJQUN0RSxRQUFRLFlBQVksRUFBRTtRQUNwQixLQUFLLDJCQUFZLENBQUMsSUFBSTtZQUNwQixPQUFPLG1CQUF3QixDQUFDLElBQUksQ0FBQztRQUN2QyxLQUFLLDJCQUFZLENBQUMsSUFBSTtZQUNwQixPQUFPLG1CQUF3QixDQUFDLElBQUksQ0FBQztRQUN2QztZQUNFLE1BQU0sSUFBSSxLQUFLLENBQUMsOEJBQThCLFlBQVksR0FBRyxHQUFHLGdCQUFnQixNQUFNLENBQUMsTUFBTSxDQUFDLDJCQUFZLENBQUMsRUFBRSxDQUFDLENBQUM7S0FDbEg7QUFDSCxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBsb2FkQ29uZmlnIH0gZnJvbSBcIkBhd3Mtc2RrL25vZGUtY29uZmlnLXByb3ZpZGVyXCI7XG5pbXBvcnQgeyBFbmRwb2ludCB9IGZyb20gXCJAYXdzLXNkay90eXBlc1wiO1xuaW1wb3J0IHsgcGFyc2VVcmwgfSBmcm9tIFwiQGF3cy1zZGsvdXJsLXBhcnNlclwiO1xuXG5pbXBvcnQgeyBFbmRwb2ludCBhcyBJbnN0YW5jZU1ldGFkYXRhRW5kcG9pbnQgfSBmcm9tIFwiLi4vY29uZmlnL0VuZHBvaW50XCI7XG5pbXBvcnQgeyBDT05GSUdfRU5EUE9JTlRfTkFNRSwgRU5EUE9JTlRfQ09ORklHX09QVElPTlMsIEVOVl9FTkRQT0lOVF9OQU1FIH0gZnJvbSBcIi4uL2NvbmZpZy9FbmRwb2ludENvbmZpZ09wdGlvbnNcIjtcbmltcG9ydCB7IEVuZHBvaW50TW9kZSB9IGZyb20gXCIuLi9jb25maWcvRW5kcG9pbnRNb2RlXCI7XG5pbXBvcnQge1xuICBDT05GSUdfRU5EUE9JTlRfTU9ERV9OQU1FLFxuICBFTkRQT0lOVF9NT0RFX0NPTkZJR19PUFRJT05TLFxuICBFTlZfRU5EUE9JTlRfTU9ERV9OQU1FLFxufSBmcm9tIFwiLi4vY29uZmlnL0VuZHBvaW50TW9kZUNvbmZpZ09wdGlvbnNcIjtcblxuLyoqXG4gKiBSZXR1cm5zIHRoZSBob3N0IHRvIHVzZSBmb3IgaW5zdGFuY2UgbWV0YWRhdGEgc2VydmljZSBjYWxsLlxuICpcbiAqIFRoZSBob3N0IGlzIHJlYWQgZnJvbSBlbmRwb2ludCB3aGljaCBjYW4gYmUgc2V0IGVpdGhlciBpblxuICoge0BsaW5rIEVOVl9FTkRQT0lOVF9OQU1FfSBlbnZpcm9ubWVudCB2YXJpYWJsZSBvciB7QGxpbmsgQ09ORklHX0VORFBPSU5UX05BTUV9XG4gKiBjb25maWd1cmF0aW9uIHByb3BlcnR5LlxuICpcbiAqIElmIGVuZHBvaW50IGlzIG5vdCBzZXQsIHRoZW4gZW5kcG9pbnQgbW9kZSBpcyByZWFkIGVpdGhlciBmcm9tXG4gKiB7QGxpbmsgRU5WX0VORFBPSU5UX01PREVfTkFNRX0gZW52aXJvbm1lbnQgdmFyaWFibGUgb3Ige0BsaW5rIENPTkZJR19FTkRQT0lOVF9NT0RFX05BTUV9XG4gKiBjb25maWd1cmF0aW9uIHByb3BlcnR5LiBJZiBlbmRwb2ludCBtb2RlIGlzIG5vdCBzZXQsIHRoZW4gZGVmYXVsdCBlbmRwb2ludCBtb2RlXG4gKiB7QGxpbmsgRW5kcG9pbnRNb2RlLklQdjR9IGlzIHVzZWQuXG4gKlxuICogSWYgZW5kcG9pbnQgbW9kZSBpcyBzZXQgdG8ge0BsaW5rIEVuZHBvaW50TW9kZS5JUHY0fSwgdGhlbiB0aGUgaG9zdCBpcyB7QGxpbmsgRW5kcG9pbnQuSVB2NH0uXG4gKiBJZiBlbmRwb2ludCBtb2RlIGlzIHNldCB0byB7QGxpbmsgRW5kcG9pbnRNb2RlLklQdjZ9LCB0aGVuIHRoZSBob3N0IGlzIHtAbGluayBFbmRwb2ludC5JUHY2fS5cbiAqXG4gKiBAcmV0dXJucyBIb3N0IHRvIHVzZSBmb3IgaW5zdGFuY2UgbWV0YWRhdGEgc2VydmljZSBjYWxsLlxuICovXG5leHBvcnQgY29uc3QgZ2V0SW5zdGFuY2VNZXRhZGF0YUVuZHBvaW50ID0gYXN5bmMgKCk6IFByb21pc2U8RW5kcG9pbnQ+ID0+XG4gIHBhcnNlVXJsKChhd2FpdCBnZXRGcm9tRW5kcG9pbnRDb25maWcoKSkgfHwgKGF3YWl0IGdldEZyb21FbmRwb2ludE1vZGVDb25maWcoKSkpO1xuXG5jb25zdCBnZXRGcm9tRW5kcG9pbnRDb25maWcgPSBhc3luYyAoKTogUHJvbWlzZTxzdHJpbmcgfCB1bmRlZmluZWQ+ID0+IGxvYWRDb25maWcoRU5EUE9JTlRfQ09ORklHX09QVElPTlMpKCk7XG5cbmNvbnN0IGdldEZyb21FbmRwb2ludE1vZGVDb25maWcgPSBhc3luYyAoKTogUHJvbWlzZTxzdHJpbmc+ID0+IHtcbiAgY29uc3QgZW5kcG9pbnRNb2RlID0gYXdhaXQgbG9hZENvbmZpZyhFTkRQT0lOVF9NT0RFX0NPTkZJR19PUFRJT05TKSgpO1xuICBzd2l0Y2ggKGVuZHBvaW50TW9kZSkge1xuICAgIGNhc2UgRW5kcG9pbnRNb2RlLklQdjQ6XG4gICAgICByZXR1cm4gSW5zdGFuY2VNZXRhZGF0YUVuZHBvaW50LklQdjQ7XG4gICAgY2FzZSBFbmRwb2ludE1vZGUuSVB2NjpcbiAgICAgIHJldHVybiBJbnN0YW5jZU1ldGFkYXRhRW5kcG9pbnQuSVB2NjtcbiAgICBkZWZhdWx0OlxuICAgICAgdGhyb3cgbmV3IEVycm9yKGBVbnN1cHBvcnRlZCBlbmRwb2ludCBtb2RlOiAke2VuZHBvaW50TW9kZX0uYCArIGAgU2VsZWN0IGZyb20gJHtPYmplY3QudmFsdWVzKEVuZHBvaW50TW9kZSl9YCk7XG4gIH1cbn07XG4iXX0=","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromIni = void 0;\nconst credential_provider_env_1 = require(\"@aws-sdk/credential-provider-env\");\nconst credential_provider_imds_1 = require(\"@aws-sdk/credential-provider-imds\");\nconst credential_provider_sso_1 = require(\"@aws-sdk/credential-provider-sso\");\nconst credential_provider_web_identity_1 = require(\"@aws-sdk/credential-provider-web-identity\");\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nconst util_credentials_1 = require(\"@aws-sdk/util-credentials\");\nconst isStaticCredsProfile = (arg) => Boolean(arg) &&\n    typeof arg === \"object\" &&\n    typeof arg.aws_access_key_id === \"string\" &&\n    typeof arg.aws_secret_access_key === \"string\" &&\n    [\"undefined\", \"string\"].indexOf(typeof arg.aws_session_token) > -1;\nconst isWebIdentityProfile = (arg) => Boolean(arg) &&\n    typeof arg === \"object\" &&\n    typeof arg.web_identity_token_file === \"string\" &&\n    typeof arg.role_arn === \"string\" &&\n    [\"undefined\", \"string\"].indexOf(typeof arg.role_session_name) > -1;\nconst isAssumeRoleProfile = (arg) => Boolean(arg) &&\n    typeof arg === \"object\" &&\n    typeof arg.role_arn === \"string\" &&\n    [\"undefined\", \"string\"].indexOf(typeof arg.role_session_name) > -1 &&\n    [\"undefined\", \"string\"].indexOf(typeof arg.external_id) > -1 &&\n    [\"undefined\", \"string\"].indexOf(typeof arg.mfa_serial) > -1;\nconst isAssumeRoleWithSourceProfile = (arg) => isAssumeRoleProfile(arg) && typeof arg.source_profile === \"string\" && typeof arg.credential_source === \"undefined\";\nconst isAssumeRoleWithProviderProfile = (arg) => isAssumeRoleProfile(arg) && typeof arg.credential_source === \"string\" && typeof arg.source_profile === \"undefined\";\n/**\n * Creates a credential provider that will read from ini files and supports\n * role assumption and multi-factor authentication.\n */\nconst fromIni = (init = {}) => async () => {\n    const profiles = await (0, util_credentials_1.parseKnownFiles)(init);\n    return resolveProfileData((0, util_credentials_1.getMasterProfileName)(init), profiles, init);\n};\nexports.fromIni = fromIni;\nconst resolveProfileData = async (profileName, profiles, options, visitedProfiles = {}) => {\n    const data = profiles[profileName];\n    // If this is not the first profile visited, static credentials should be\n    // preferred over role assumption metadata. This special treatment of\n    // second and subsequent hops is to ensure compatibility with the AWS CLI.\n    if (Object.keys(visitedProfiles).length > 0 && isStaticCredsProfile(data)) {\n        return resolveStaticCredentials(data);\n    }\n    // If this is the first profile visited, role assumption keys should be\n    // given precedence over static credentials.\n    if (isAssumeRoleWithSourceProfile(data) || isAssumeRoleWithProviderProfile(data)) {\n        const { external_id: ExternalId, mfa_serial, role_arn: RoleArn, role_session_name: RoleSessionName = \"aws-sdk-js-\" + Date.now(), source_profile, credential_source, } = data;\n        if (!options.roleAssumer) {\n            throw new property_provider_1.CredentialsProviderError(`Profile ${profileName} requires a role to be assumed, but no` + ` role assumption callback was provided.`, false);\n        }\n        if (source_profile && source_profile in visitedProfiles) {\n            throw new property_provider_1.CredentialsProviderError(`Detected a cycle attempting to resolve credentials for profile` +\n                ` ${(0, util_credentials_1.getMasterProfileName)(options)}. Profiles visited: ` +\n                Object.keys(visitedProfiles).join(\", \"), false);\n        }\n        const sourceCreds = source_profile\n            ? resolveProfileData(source_profile, profiles, options, {\n                ...visitedProfiles,\n                [source_profile]: true,\n            })\n            : resolveCredentialSource(credential_source, profileName)();\n        const params = { RoleArn, RoleSessionName, ExternalId };\n        if (mfa_serial) {\n            if (!options.mfaCodeProvider) {\n                throw new property_provider_1.CredentialsProviderError(`Profile ${profileName} requires multi-factor authentication,` + ` but no MFA code callback was provided.`, false);\n            }\n            params.SerialNumber = mfa_serial;\n            params.TokenCode = await options.mfaCodeProvider(mfa_serial);\n        }\n        return options.roleAssumer(await sourceCreds, params);\n    }\n    // If no role assumption metadata is present, attempt to load static\n    // credentials from the selected profile.\n    if (isStaticCredsProfile(data)) {\n        return resolveStaticCredentials(data);\n    }\n    // If no static credentials are present, attempt to assume role with\n    // web identity if web_identity_token_file and role_arn is available\n    if (isWebIdentityProfile(data)) {\n        return resolveWebIdentityCredentials(data, options);\n    }\n    if ((0, credential_provider_sso_1.isSsoProfile)(data)) {\n        const { sso_start_url, sso_account_id, sso_region, sso_role_name } = (0, credential_provider_sso_1.validateSsoProfile)(data);\n        return (0, credential_provider_sso_1.fromSSO)({\n            ssoStartUrl: sso_start_url,\n            ssoAccountId: sso_account_id,\n            ssoRegion: sso_region,\n            ssoRoleName: sso_role_name,\n        })();\n    }\n    // If the profile cannot be parsed or contains neither static credentials\n    // nor role assumption metadata, throw an error. This should be considered a\n    // terminal resolution error if a profile has been specified by the user\n    // (whether via a parameter, an environment variable, or another profile's\n    // `source_profile` key).\n    throw new property_provider_1.CredentialsProviderError(`Profile ${profileName} could not be found or parsed in shared` + ` credentials file.`);\n};\n/**\n * Resolve the `credential_source` entry from the profile, and return the\n * credential providers respectively. No memoization is needed for the\n * credential source providers because memoization should be added outside the\n * fromIni() provider. The source credential needs to be refreshed every time\n * fromIni() is called.\n */\nconst resolveCredentialSource = (credentialSource, profileName) => {\n    const sourceProvidersMap = {\n        EcsContainer: credential_provider_imds_1.fromContainerMetadata,\n        Ec2InstanceMetadata: credential_provider_imds_1.fromInstanceMetadata,\n        Environment: credential_provider_env_1.fromEnv,\n    };\n    if (credentialSource in sourceProvidersMap) {\n        return sourceProvidersMap[credentialSource]();\n    }\n    else {\n        throw new property_provider_1.CredentialsProviderError(`Unsupported credential source in profile ${profileName}. Got ${credentialSource}, ` +\n            `expected EcsContainer or Ec2InstanceMetadata or Environment.`);\n    }\n};\nconst resolveStaticCredentials = (profile) => Promise.resolve({\n    accessKeyId: profile.aws_access_key_id,\n    secretAccessKey: profile.aws_secret_access_key,\n    sessionToken: profile.aws_session_token,\n});\nconst resolveWebIdentityCredentials = async (profile, options) => (0, credential_provider_web_identity_1.fromTokenFile)({\n    webIdentityTokenFile: profile.web_identity_token_file,\n    roleArn: profile.role_arn,\n    roleSessionName: profile.role_session_name,\n    roleAssumerWithWebIdentity: options.roleAssumerWithWebIdentity,\n})();\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsOEVBQTJEO0FBQzNELGdGQUFnRztBQUNoRyw4RUFBNkY7QUFDN0YsZ0dBQTJHO0FBQzNHLGtFQUFzRTtBQUd0RSxnRUFBcUc7QUF1RXJHLE1BQU0sb0JBQW9CLEdBQUcsQ0FBQyxHQUFRLEVBQTZCLEVBQUUsQ0FDbkUsT0FBTyxDQUFDLEdBQUcsQ0FBQztJQUNaLE9BQU8sR0FBRyxLQUFLLFFBQVE7SUFDdkIsT0FBTyxHQUFHLENBQUMsaUJBQWlCLEtBQUssUUFBUTtJQUN6QyxPQUFPLEdBQUcsQ0FBQyxxQkFBcUIsS0FBSyxRQUFRO0lBQzdDLENBQUMsV0FBVyxFQUFFLFFBQVEsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxPQUFPLEdBQUcsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO0FBUXJFLE1BQU0sb0JBQW9CLEdBQUcsQ0FBQyxHQUFRLEVBQTZCLEVBQUUsQ0FDbkUsT0FBTyxDQUFDLEdBQUcsQ0FBQztJQUNaLE9BQU8sR0FBRyxLQUFLLFFBQVE7SUFDdkIsT0FBTyxHQUFHLENBQUMsdUJBQXVCLEtBQUssUUFBUTtJQUMvQyxPQUFPLEdBQUcsQ0FBQyxRQUFRLEtBQUssUUFBUTtJQUNoQyxDQUFDLFdBQVcsRUFBRSxRQUFRLENBQUMsQ0FBQyxPQUFPLENBQUMsT0FBTyxHQUFHLENBQUMsaUJBQWlCLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztBQVlyRSxNQUFNLG1CQUFtQixHQUFHLENBQUMsR0FBUSxFQUFFLEVBQUUsQ0FDdkMsT0FBTyxDQUFDLEdBQUcsQ0FBQztJQUNaLE9BQU8sR0FBRyxLQUFLLFFBQVE7SUFDdkIsT0FBTyxHQUFHLENBQUMsUUFBUSxLQUFLLFFBQVE7SUFDaEMsQ0FBQyxXQUFXLEVBQUUsUUFBUSxDQUFDLENBQUMsT0FBTyxDQUFDLE9BQU8sR0FBRyxDQUFDLGlCQUFpQixDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ2xFLENBQUMsV0FBVyxFQUFFLFFBQVEsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxPQUFPLEdBQUcsQ0FBQyxXQUFXLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDNUQsQ0FBQyxXQUFXLEVBQUUsUUFBUSxDQUFDLENBQUMsT0FBTyxDQUFDLE9BQU8sR0FBRyxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO0FBRTlELE1BQU0sNkJBQTZCLEdBQUcsQ0FBQyxHQUFRLEVBQXNDLEVBQUUsQ0FDckYsbUJBQW1CLENBQUMsR0FBRyxDQUFDLElBQUksT0FBTyxHQUFHLENBQUMsY0FBYyxLQUFLLFFBQVEsSUFBSSxPQUFPLEdBQUcsQ0FBQyxpQkFBaUIsS0FBSyxXQUFXLENBQUM7QUFFckgsTUFBTSwrQkFBK0IsR0FBRyxDQUFDLEdBQVEsRUFBd0MsRUFBRSxDQUN6RixtQkFBbUIsQ0FBQyxHQUFHLENBQUMsSUFBSSxPQUFPLEdBQUcsQ0FBQyxpQkFBaUIsS0FBSyxRQUFRLElBQUksT0FBTyxHQUFHLENBQUMsY0FBYyxLQUFLLFdBQVcsQ0FBQztBQUVySDs7O0dBR0c7QUFDSSxNQUFNLE9BQU8sR0FDbEIsQ0FBQyxPQUFvQixFQUFFLEVBQXNCLEVBQUUsQ0FDL0MsS0FBSyxJQUFJLEVBQUU7SUFDVCxNQUFNLFFBQVEsR0FBRyxNQUFNLElBQUEsa0NBQWUsRUFBQyxJQUFJLENBQUMsQ0FBQztJQUM3QyxPQUFPLGtCQUFrQixDQUFDLElBQUEsdUNBQW9CLEVBQUMsSUFBSSxDQUFDLEVBQUUsUUFBUSxFQUFFLElBQUksQ0FBQyxDQUFDO0FBQ3hFLENBQUMsQ0FBQztBQUxTLFFBQUEsT0FBTyxXQUtoQjtBQUVKLE1BQU0sa0JBQWtCLEdBQUcsS0FBSyxFQUM5QixXQUFtQixFQUNuQixRQUF1QixFQUN2QixPQUFvQixFQUNwQixrQkFBbUQsRUFBRSxFQUMvQixFQUFFO0lBQ3hCLE1BQU0sSUFBSSxHQUFHLFFBQVEsQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUVuQyx5RUFBeUU7SUFDekUscUVBQXFFO0lBQ3JFLDBFQUEwRTtJQUMxRSxJQUFJLE1BQU0sQ0FBQyxJQUFJLENBQUMsZUFBZSxDQUFDLENBQUMsTUFBTSxHQUFHLENBQUMsSUFBSSxvQkFBb0IsQ0FBQyxJQUFJLENBQUMsRUFBRTtRQUN6RSxPQUFPLHdCQUF3QixDQUFDLElBQUksQ0FBQyxDQUFDO0tBQ3ZDO0lBRUQsdUVBQXVFO0lBQ3ZFLDRDQUE0QztJQUM1QyxJQUFJLDZCQUE2QixDQUFDLElBQUksQ0FBQyxJQUFJLCtCQUErQixDQUFDLElBQUksQ0FBQyxFQUFFO1FBQ2hGLE1BQU0sRUFDSixXQUFXLEVBQUUsVUFBVSxFQUN2QixVQUFVLEVBQ1YsUUFBUSxFQUFFLE9BQU8sRUFDakIsaUJBQWlCLEVBQUUsZUFBZSxHQUFHLGFBQWEsR0FBRyxJQUFJLENBQUMsR0FBRyxFQUFFLEVBQy9ELGNBQWMsRUFDZCxpQkFBaUIsR0FDbEIsR0FBRyxJQUFJLENBQUM7UUFFVCxJQUFJLENBQUMsT0FBTyxDQUFDLFdBQVcsRUFBRTtZQUN4QixNQUFNLElBQUksNENBQXdCLENBQ2hDLFdBQVcsV0FBVyx3Q0FBd0MsR0FBRyx5Q0FBeUMsRUFDMUcsS0FBSyxDQUNOLENBQUM7U0FDSDtRQUVELElBQUksY0FBYyxJQUFJLGNBQWMsSUFBSSxlQUFlLEVBQUU7WUFDdkQsTUFBTSxJQUFJLDRDQUF3QixDQUNoQyxnRUFBZ0U7Z0JBQzlELElBQUksSUFBQSx1Q0FBb0IsRUFBQyxPQUFPLENBQUMsc0JBQXNCO2dCQUN2RCxNQUFNLENBQUMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsRUFDekMsS0FBSyxDQUNOLENBQUM7U0FDSDtRQUVELE1BQU0sV0FBVyxHQUFHLGNBQWM7WUFDaEMsQ0FBQyxDQUFDLGtCQUFrQixDQUFDLGNBQWMsRUFBRSxRQUFRLEVBQUUsT0FBTyxFQUFFO2dCQUNwRCxHQUFHLGVBQWU7Z0JBQ2xCLENBQUMsY0FBYyxDQUFDLEVBQUUsSUFBSTthQUN2QixDQUFDO1lBQ0osQ0FBQyxDQUFDLHVCQUF1QixDQUFDLGlCQUFrQixFQUFFLFdBQVcsQ0FBQyxFQUFFLENBQUM7UUFFL0QsTUFBTSxNQUFNLEdBQXFCLEVBQUUsT0FBTyxFQUFFLGVBQWUsRUFBRSxVQUFVLEVBQUUsQ0FBQztRQUMxRSxJQUFJLFVBQVUsRUFBRTtZQUNkLElBQUksQ0FBQyxPQUFPLENBQUMsZUFBZSxFQUFFO2dCQUM1QixNQUFNLElBQUksNENBQXdCLENBQ2hDLFdBQVcsV0FBVyx3Q0FBd0MsR0FBRyx5Q0FBeUMsRUFDMUcsS0FBSyxDQUNOLENBQUM7YUFDSDtZQUNELE1BQU0sQ0FBQyxZQUFZLEdBQUcsVUFBVSxDQUFDO1lBQ2pDLE1BQU0sQ0FBQyxTQUFTLEdBQUcsTUFBTSxPQUFPLENBQUMsZUFBZSxDQUFDLFVBQVUsQ0FBQyxDQUFDO1NBQzlEO1FBRUQsT0FBTyxPQUFPLENBQUMsV0FBVyxDQUFDLE1BQU0sV0FBVyxFQUFFLE1BQU0sQ0FBQyxDQUFDO0tBQ3ZEO0lBRUQsb0VBQW9FO0lBQ3BFLHlDQUF5QztJQUN6QyxJQUFJLG9CQUFvQixDQUFDLElBQUksQ0FBQyxFQUFFO1FBQzlCLE9BQU8sd0JBQXdCLENBQUMsSUFBSSxDQUFDLENBQUM7S0FDdkM7SUFFRCxvRUFBb0U7SUFDcEUsb0VBQW9FO0lBQ3BFLElBQUksb0JBQW9CLENBQUMsSUFBSSxDQUFDLEVBQUU7UUFDOUIsT0FBTyw2QkFBNkIsQ0FBQyxJQUFJLEVBQUUsT0FBTyxDQUFDLENBQUM7S0FDckQ7SUFDRCxJQUFJLElBQUEsc0NBQVksRUFBQyxJQUFJLENBQUMsRUFBRTtRQUN0QixNQUFNLEVBQUUsYUFBYSxFQUFFLGNBQWMsRUFBRSxVQUFVLEVBQUUsYUFBYSxFQUFFLEdBQUcsSUFBQSw0Q0FBa0IsRUFBQyxJQUFJLENBQUMsQ0FBQztRQUM5RixPQUFPLElBQUEsaUNBQU8sRUFBQztZQUNiLFdBQVcsRUFBRSxhQUFhO1lBQzFCLFlBQVksRUFBRSxjQUFjO1lBQzVCLFNBQVMsRUFBRSxVQUFVO1lBQ3JCLFdBQVcsRUFBRSxhQUFhO1NBQzNCLENBQUMsRUFBRSxDQUFDO0tBQ047SUFFRCx5RUFBeUU7SUFDekUsNEVBQTRFO0lBQzVFLHdFQUF3RTtJQUN4RSwwRUFBMEU7SUFDMUUseUJBQXlCO0lBQ3pCLE1BQU0sSUFBSSw0Q0FBd0IsQ0FDaEMsV0FBVyxXQUFXLHlDQUF5QyxHQUFHLG9CQUFvQixDQUN2RixDQUFDO0FBQ0osQ0FBQyxDQUFDO0FBRUY7Ozs7OztHQU1HO0FBQ0gsTUFBTSx1QkFBdUIsR0FBRyxDQUFDLGdCQUF3QixFQUFFLFdBQW1CLEVBQXNCLEVBQUU7SUFDcEcsTUFBTSxrQkFBa0IsR0FBaUQ7UUFDdkUsWUFBWSxFQUFFLGdEQUFxQjtRQUNuQyxtQkFBbUIsRUFBRSwrQ0FBb0I7UUFDekMsV0FBVyxFQUFFLGlDQUFPO0tBQ3JCLENBQUM7SUFDRixJQUFJLGdCQUFnQixJQUFJLGtCQUFrQixFQUFFO1FBQzFDLE9BQU8sa0JBQWtCLENBQUMsZ0JBQWdCLENBQUMsRUFBRSxDQUFDO0tBQy9DO1NBQU07UUFDTCxNQUFNLElBQUksNENBQXdCLENBQ2hDLDRDQUE0QyxXQUFXLFNBQVMsZ0JBQWdCLElBQUk7WUFDbEYsOERBQThELENBQ2pFLENBQUM7S0FDSDtBQUNILENBQUMsQ0FBQztBQUVGLE1BQU0sd0JBQXdCLEdBQUcsQ0FBQyxPQUEyQixFQUF3QixFQUFFLENBQ3JGLE9BQU8sQ0FBQyxPQUFPLENBQUM7SUFDZCxXQUFXLEVBQUUsT0FBTyxDQUFDLGlCQUFpQjtJQUN0QyxlQUFlLEVBQUUsT0FBTyxDQUFDLHFCQUFxQjtJQUM5QyxZQUFZLEVBQUUsT0FBTyxDQUFDLGlCQUFpQjtDQUN4QyxDQUFDLENBQUM7QUFFTCxNQUFNLDZCQUE2QixHQUFHLEtBQUssRUFBRSxPQUEyQixFQUFFLE9BQW9CLEVBQXdCLEVBQUUsQ0FDdEgsSUFBQSxnREFBYSxFQUFDO0lBQ1osb0JBQW9CLEVBQUUsT0FBTyxDQUFDLHVCQUF1QjtJQUNyRCxPQUFPLEVBQUUsT0FBTyxDQUFDLFFBQVE7SUFDekIsZUFBZSxFQUFFLE9BQU8sQ0FBQyxpQkFBaUI7SUFDMUMsMEJBQTBCLEVBQUUsT0FBTyxDQUFDLDBCQUEwQjtDQUMvRCxDQUFDLEVBQUUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGZyb21FbnYgfSBmcm9tIFwiQGF3cy1zZGsvY3JlZGVudGlhbC1wcm92aWRlci1lbnZcIjtcbmltcG9ydCB7IGZyb21Db250YWluZXJNZXRhZGF0YSwgZnJvbUluc3RhbmNlTWV0YWRhdGEgfSBmcm9tIFwiQGF3cy1zZGsvY3JlZGVudGlhbC1wcm92aWRlci1pbWRzXCI7XG5pbXBvcnQgeyBmcm9tU1NPLCBpc1Nzb1Byb2ZpbGUsIHZhbGlkYXRlU3NvUHJvZmlsZSB9IGZyb20gXCJAYXdzLXNkay9jcmVkZW50aWFsLXByb3ZpZGVyLXNzb1wiO1xuaW1wb3J0IHsgQXNzdW1lUm9sZVdpdGhXZWJJZGVudGl0eVBhcmFtcywgZnJvbVRva2VuRmlsZSB9IGZyb20gXCJAYXdzLXNkay9jcmVkZW50aWFsLXByb3ZpZGVyLXdlYi1pZGVudGl0eVwiO1xuaW1wb3J0IHsgQ3JlZGVudGlhbHNQcm92aWRlckVycm9yIH0gZnJvbSBcIkBhd3Mtc2RrL3Byb3BlcnR5LXByb3ZpZGVyXCI7XG5pbXBvcnQgeyBQYXJzZWRJbmlEYXRhLCBQcm9maWxlIH0gZnJvbSBcIkBhd3Mtc2RrL3NoYXJlZC1pbmktZmlsZS1sb2FkZXJcIjtcbmltcG9ydCB7IENyZWRlbnRpYWxQcm92aWRlciwgQ3JlZGVudGlhbHMgfSBmcm9tIFwiQGF3cy1zZGsvdHlwZXNcIjtcbmltcG9ydCB7IGdldE1hc3RlclByb2ZpbGVOYW1lLCBwYXJzZUtub3duRmlsZXMsIFNvdXJjZVByb2ZpbGVJbml0IH0gZnJvbSBcIkBhd3Mtc2RrL3V0aWwtY3JlZGVudGlhbHNcIjtcblxuLyoqXG4gKiBAc2VlIGh0dHA6Ly9kb2NzLmF3cy5hbWF6b24uY29tL0FXU0phdmFTY3JpcHRTREsvbGF0ZXN0L0FXUy9TVFMuaHRtbCNhc3N1bWVSb2xlLXByb3BlcnR5XG4gKiBUT0RPIHVwZGF0ZSB0aGUgYWJvdmUgdG8gbGluayB0byBWMyBkb2NzXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgQXNzdW1lUm9sZVBhcmFtcyB7XG4gIC8qKlxuICAgKiBUaGUgaWRlbnRpZmllciBvZiB0aGUgcm9sZSB0byBiZSBhc3N1bWVkLlxuICAgKi9cbiAgUm9sZUFybjogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBBIG5hbWUgZm9yIHRoZSBhc3N1bWVkIHJvbGUgc2Vzc2lvbi5cbiAgICovXG4gIFJvbGVTZXNzaW9uTmFtZTogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBBIHVuaXF1ZSBpZGVudGlmaWVyIHRoYXQgaXMgdXNlZCBieSB0aGlyZCBwYXJ0aWVzIHdoZW4gYXNzdW1pbmcgcm9sZXMgaW5cbiAgICogdGhlaXIgY3VzdG9tZXJzJyBhY2NvdW50cy5cbiAgICovXG4gIEV4dGVybmFsSWQ/OiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIFRoZSBpZGVudGlmaWNhdGlvbiBudW1iZXIgb2YgdGhlIE1GQSBkZXZpY2UgdGhhdCBpcyBhc3NvY2lhdGVkIHdpdGggdGhlXG4gICAqIHVzZXIgd2hvIGlzIG1ha2luZyB0aGUgYEFzc3VtZVJvbGVgIGNhbGwuXG4gICAqL1xuICBTZXJpYWxOdW1iZXI/OiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIFRoZSB2YWx1ZSBwcm92aWRlZCBieSB0aGUgTUZBIGRldmljZS5cbiAgICovXG4gIFRva2VuQ29kZT86IHN0cmluZztcbn1cblxuZXhwb3J0IGludGVyZmFjZSBGcm9tSW5pSW5pdCBleHRlbmRzIFNvdXJjZVByb2ZpbGVJbml0IHtcbiAgLyoqXG4gICAqIEEgZnVuY3Rpb24gdGhhdCByZXR1cm5zIGEgcHJvbWlzZSBmdWxmaWxsZWQgd2l0aCBhbiBNRkEgdG9rZW4gY29kZSBmb3JcbiAgICogdGhlIHByb3ZpZGVkIE1GQSBTZXJpYWwgY29kZS4gSWYgYSBwcm9maWxlIHJlcXVpcmVzIGFuIE1GQSBjb2RlIGFuZFxuICAgKiBgbWZhQ29kZVByb3ZpZGVyYCBpcyBub3QgYSB2YWxpZCBmdW5jdGlvbiwgdGhlIGNyZWRlbnRpYWwgcHJvdmlkZXJcbiAgICogcHJvbWlzZSB3aWxsIGJlIHJlamVjdGVkLlxuICAgKlxuICAgKiBAcGFyYW0gbWZhU2VyaWFsIFRoZSBzZXJpYWwgY29kZSBvZiB0aGUgTUZBIGRldmljZSBzcGVjaWZpZWQuXG4gICAqL1xuICBtZmFDb2RlUHJvdmlkZXI/OiAobWZhU2VyaWFsOiBzdHJpbmcpID0+IFByb21pc2U8c3RyaW5nPjtcblxuICAvKipcbiAgICogQSBmdW5jdGlvbiB0aGF0IGFzc3VtZXMgYSByb2xlIGFuZCByZXR1cm5zIGEgcHJvbWlzZSBmdWxmaWxsZWQgd2l0aFxuICAgKiBjcmVkZW50aWFscyBmb3IgdGhlIGFzc3VtZWQgcm9sZS5cbiAgICpcbiAgICogQHBhcmFtIHNvdXJjZUNyZWRzIFRoZSBjcmVkZW50aWFscyB3aXRoIHdoaWNoIHRvIGFzc3VtZSBhIHJvbGUuXG4gICAqIEBwYXJhbSBwYXJhbXNcbiAgICovXG4gIHJvbGVBc3N1bWVyPzogKHNvdXJjZUNyZWRzOiBDcmVkZW50aWFscywgcGFyYW1zOiBBc3N1bWVSb2xlUGFyYW1zKSA9PiBQcm9taXNlPENyZWRlbnRpYWxzPjtcblxuICAvKipcbiAgICogQSBmdW5jdGlvbiB0aGF0IGFzc3VtZXMgYSByb2xlIHdpdGggd2ViIGlkZW50aXR5IGFuZCByZXR1cm5zIGEgcHJvbWlzZSBmdWxmaWxsZWQgd2l0aFxuICAgKiBjcmVkZW50aWFscyBmb3IgdGhlIGFzc3VtZWQgcm9sZS5cbiAgICpcbiAgICogQHBhcmFtIHNvdXJjZUNyZWRzIFRoZSBjcmVkZW50aWFscyB3aXRoIHdoaWNoIHRvIGFzc3VtZSBhIHJvbGUuXG4gICAqIEBwYXJhbSBwYXJhbXNcbiAgICovXG4gIHJvbGVBc3N1bWVyV2l0aFdlYklkZW50aXR5PzogKHBhcmFtczogQXNzdW1lUm9sZVdpdGhXZWJJZGVudGl0eVBhcmFtcykgPT4gUHJvbWlzZTxDcmVkZW50aWFscz47XG59XG5cbmludGVyZmFjZSBTdGF0aWNDcmVkc1Byb2ZpbGUgZXh0ZW5kcyBQcm9maWxlIHtcbiAgYXdzX2FjY2Vzc19rZXlfaWQ6IHN0cmluZztcbiAgYXdzX3NlY3JldF9hY2Nlc3Nfa2V5OiBzdHJpbmc7XG4gIGF3c19zZXNzaW9uX3Rva2VuPzogc3RyaW5nO1xufVxuXG5jb25zdCBpc1N0YXRpY0NyZWRzUHJvZmlsZSA9IChhcmc6IGFueSk6IGFyZyBpcyBTdGF0aWNDcmVkc1Byb2ZpbGUgPT5cbiAgQm9vbGVhbihhcmcpICYmXG4gIHR5cGVvZiBhcmcgPT09IFwib2JqZWN0XCIgJiZcbiAgdHlwZW9mIGFyZy5hd3NfYWNjZXNzX2tleV9pZCA9PT0gXCJzdHJpbmdcIiAmJlxuICB0eXBlb2YgYXJnLmF3c19zZWNyZXRfYWNjZXNzX2tleSA9PT0gXCJzdHJpbmdcIiAmJlxuICBbXCJ1bmRlZmluZWRcIiwgXCJzdHJpbmdcIl0uaW5kZXhPZih0eXBlb2YgYXJnLmF3c19zZXNzaW9uX3Rva2VuKSA+IC0xO1xuXG5pbnRlcmZhY2UgV2ViSWRlbnRpdHlQcm9maWxlIGV4dGVuZHMgUHJvZmlsZSB7XG4gIHdlYl9pZGVudGl0eV90b2tlbl9maWxlOiBzdHJpbmc7XG4gIHJvbGVfYXJuOiBzdHJpbmc7XG4gIHJvbGVfc2Vzc2lvbl9uYW1lPzogc3RyaW5nO1xufVxuXG5jb25zdCBpc1dlYklkZW50aXR5UHJvZmlsZSA9IChhcmc6IGFueSk6IGFyZyBpcyBXZWJJZGVudGl0eVByb2ZpbGUgPT5cbiAgQm9vbGVhbihhcmcpICYmXG4gIHR5cGVvZiBhcmcgPT09IFwib2JqZWN0XCIgJiZcbiAgdHlwZW9mIGFyZy53ZWJfaWRlbnRpdHlfdG9rZW5fZmlsZSA9PT0gXCJzdHJpbmdcIiAmJlxuICB0eXBlb2YgYXJnLnJvbGVfYXJuID09PSBcInN0cmluZ1wiICYmXG4gIFtcInVuZGVmaW5lZFwiLCBcInN0cmluZ1wiXS5pbmRleE9mKHR5cGVvZiBhcmcucm9sZV9zZXNzaW9uX25hbWUpID4gLTE7XG5cbmludGVyZmFjZSBBc3N1bWVSb2xlV2l0aFNvdXJjZVByb2ZpbGUgZXh0ZW5kcyBQcm9maWxlIHtcbiAgcm9sZV9hcm46IHN0cmluZztcbiAgc291cmNlX3Byb2ZpbGU6IHN0cmluZztcbn1cblxuaW50ZXJmYWNlIEFzc3VtZVJvbGVXaXRoUHJvdmlkZXJQcm9maWxlIGV4dGVuZHMgUHJvZmlsZSB7XG4gIHJvbGVfYXJuOiBzdHJpbmc7XG4gIGNyZWRlbnRpYWxfc291cmNlOiBzdHJpbmc7XG59XG5cbmNvbnN0IGlzQXNzdW1lUm9sZVByb2ZpbGUgPSAoYXJnOiBhbnkpID0+XG4gIEJvb2xlYW4oYXJnKSAmJlxuICB0eXBlb2YgYXJnID09PSBcIm9iamVjdFwiICYmXG4gIHR5cGVvZiBhcmcucm9sZV9hcm4gPT09IFwic3RyaW5nXCIgJiZcbiAgW1widW5kZWZpbmVkXCIsIFwic3RyaW5nXCJdLmluZGV4T2YodHlwZW9mIGFyZy5yb2xlX3Nlc3Npb25fbmFtZSkgPiAtMSAmJlxuICBbXCJ1bmRlZmluZWRcIiwgXCJzdHJpbmdcIl0uaW5kZXhPZih0eXBlb2YgYXJnLmV4dGVybmFsX2lkKSA+IC0xICYmXG4gIFtcInVuZGVmaW5lZFwiLCBcInN0cmluZ1wiXS5pbmRleE9mKHR5cGVvZiBhcmcubWZhX3NlcmlhbCkgPiAtMTtcblxuY29uc3QgaXNBc3N1bWVSb2xlV2l0aFNvdXJjZVByb2ZpbGUgPSAoYXJnOiBhbnkpOiBhcmcgaXMgQXNzdW1lUm9sZVdpdGhTb3VyY2VQcm9maWxlID0+XG4gIGlzQXNzdW1lUm9sZVByb2ZpbGUoYXJnKSAmJiB0eXBlb2YgYXJnLnNvdXJjZV9wcm9maWxlID09PSBcInN0cmluZ1wiICYmIHR5cGVvZiBhcmcuY3JlZGVudGlhbF9zb3VyY2UgPT09IFwidW5kZWZpbmVkXCI7XG5cbmNvbnN0IGlzQXNzdW1lUm9sZVdpdGhQcm92aWRlclByb2ZpbGUgPSAoYXJnOiBhbnkpOiBhcmcgaXMgQXNzdW1lUm9sZVdpdGhQcm92aWRlclByb2ZpbGUgPT5cbiAgaXNBc3N1bWVSb2xlUHJvZmlsZShhcmcpICYmIHR5cGVvZiBhcmcuY3JlZGVudGlhbF9zb3VyY2UgPT09IFwic3RyaW5nXCIgJiYgdHlwZW9mIGFyZy5zb3VyY2VfcHJvZmlsZSA9PT0gXCJ1bmRlZmluZWRcIjtcblxuLyoqXG4gKiBDcmVhdGVzIGEgY3JlZGVudGlhbCBwcm92aWRlciB0aGF0IHdpbGwgcmVhZCBmcm9tIGluaSBmaWxlcyBhbmQgc3VwcG9ydHNcbiAqIHJvbGUgYXNzdW1wdGlvbiBhbmQgbXVsdGktZmFjdG9yIGF1dGhlbnRpY2F0aW9uLlxuICovXG5leHBvcnQgY29uc3QgZnJvbUluaSA9XG4gIChpbml0OiBGcm9tSW5pSW5pdCA9IHt9KTogQ3JlZGVudGlhbFByb3ZpZGVyID0+XG4gIGFzeW5jICgpID0+IHtcbiAgICBjb25zdCBwcm9maWxlcyA9IGF3YWl0IHBhcnNlS25vd25GaWxlcyhpbml0KTtcbiAgICByZXR1cm4gcmVzb2x2ZVByb2ZpbGVEYXRhKGdldE1hc3RlclByb2ZpbGVOYW1lKGluaXQpLCBwcm9maWxlcywgaW5pdCk7XG4gIH07XG5cbmNvbnN0IHJlc29sdmVQcm9maWxlRGF0YSA9IGFzeW5jIChcbiAgcHJvZmlsZU5hbWU6IHN0cmluZyxcbiAgcHJvZmlsZXM6IFBhcnNlZEluaURhdGEsXG4gIG9wdGlvbnM6IEZyb21JbmlJbml0LFxuICB2aXNpdGVkUHJvZmlsZXM6IHsgW3Byb2ZpbGVOYW1lOiBzdHJpbmddOiB0cnVlIH0gPSB7fVxuKTogUHJvbWlzZTxDcmVkZW50aWFscz4gPT4ge1xuICBjb25zdCBkYXRhID0gcHJvZmlsZXNbcHJvZmlsZU5hbWVdO1xuXG4gIC8vIElmIHRoaXMgaXMgbm90IHRoZSBmaXJzdCBwcm9maWxlIHZpc2l0ZWQsIHN0YXRpYyBjcmVkZW50aWFscyBzaG91bGQgYmVcbiAgLy8gcHJlZmVycmVkIG92ZXIgcm9sZSBhc3N1bXB0aW9uIG1ldGFkYXRhLiBUaGlzIHNwZWNpYWwgdHJlYXRtZW50IG9mXG4gIC8vIHNlY29uZCBhbmQgc3Vic2VxdWVudCBob3BzIGlzIHRvIGVuc3VyZSBjb21wYXRpYmlsaXR5IHdpdGggdGhlIEFXUyBDTEkuXG4gIGlmIChPYmplY3Qua2V5cyh2aXNpdGVkUHJvZmlsZXMpLmxlbmd0aCA+IDAgJiYgaXNTdGF0aWNDcmVkc1Byb2ZpbGUoZGF0YSkpIHtcbiAgICByZXR1cm4gcmVzb2x2ZVN0YXRpY0NyZWRlbnRpYWxzKGRhdGEpO1xuICB9XG5cbiAgLy8gSWYgdGhpcyBpcyB0aGUgZmlyc3QgcHJvZmlsZSB2aXNpdGVkLCByb2xlIGFzc3VtcHRpb24ga2V5cyBzaG91bGQgYmVcbiAgLy8gZ2l2ZW4gcHJlY2VkZW5jZSBvdmVyIHN0YXRpYyBjcmVkZW50aWFscy5cbiAgaWYgKGlzQXNzdW1lUm9sZVdpdGhTb3VyY2VQcm9maWxlKGRhdGEpIHx8IGlzQXNzdW1lUm9sZVdpdGhQcm92aWRlclByb2ZpbGUoZGF0YSkpIHtcbiAgICBjb25zdCB7XG4gICAgICBleHRlcm5hbF9pZDogRXh0ZXJuYWxJZCxcbiAgICAgIG1mYV9zZXJpYWwsXG4gICAgICByb2xlX2FybjogUm9sZUFybixcbiAgICAgIHJvbGVfc2Vzc2lvbl9uYW1lOiBSb2xlU2Vzc2lvbk5hbWUgPSBcImF3cy1zZGstanMtXCIgKyBEYXRlLm5vdygpLFxuICAgICAgc291cmNlX3Byb2ZpbGUsXG4gICAgICBjcmVkZW50aWFsX3NvdXJjZSxcbiAgICB9ID0gZGF0YTtcblxuICAgIGlmICghb3B0aW9ucy5yb2xlQXNzdW1lcikge1xuICAgICAgdGhyb3cgbmV3IENyZWRlbnRpYWxzUHJvdmlkZXJFcnJvcihcbiAgICAgICAgYFByb2ZpbGUgJHtwcm9maWxlTmFtZX0gcmVxdWlyZXMgYSByb2xlIHRvIGJlIGFzc3VtZWQsIGJ1dCBub2AgKyBgIHJvbGUgYXNzdW1wdGlvbiBjYWxsYmFjayB3YXMgcHJvdmlkZWQuYCxcbiAgICAgICAgZmFsc2VcbiAgICAgICk7XG4gICAgfVxuXG4gICAgaWYgKHNvdXJjZV9wcm9maWxlICYmIHNvdXJjZV9wcm9maWxlIGluIHZpc2l0ZWRQcm9maWxlcykge1xuICAgICAgdGhyb3cgbmV3IENyZWRlbnRpYWxzUHJvdmlkZXJFcnJvcihcbiAgICAgICAgYERldGVjdGVkIGEgY3ljbGUgYXR0ZW1wdGluZyB0byByZXNvbHZlIGNyZWRlbnRpYWxzIGZvciBwcm9maWxlYCArXG4gICAgICAgICAgYCAke2dldE1hc3RlclByb2ZpbGVOYW1lKG9wdGlvbnMpfS4gUHJvZmlsZXMgdmlzaXRlZDogYCArXG4gICAgICAgICAgT2JqZWN0LmtleXModmlzaXRlZFByb2ZpbGVzKS5qb2luKFwiLCBcIiksXG4gICAgICAgIGZhbHNlXG4gICAgICApO1xuICAgIH1cblxuICAgIGNvbnN0IHNvdXJjZUNyZWRzID0gc291cmNlX3Byb2ZpbGVcbiAgICAgID8gcmVzb2x2ZVByb2ZpbGVEYXRhKHNvdXJjZV9wcm9maWxlLCBwcm9maWxlcywgb3B0aW9ucywge1xuICAgICAgICAgIC4uLnZpc2l0ZWRQcm9maWxlcyxcbiAgICAgICAgICBbc291cmNlX3Byb2ZpbGVdOiB0cnVlLFxuICAgICAgICB9KVxuICAgICAgOiByZXNvbHZlQ3JlZGVudGlhbFNvdXJjZShjcmVkZW50aWFsX3NvdXJjZSEsIHByb2ZpbGVOYW1lKSgpO1xuXG4gICAgY29uc3QgcGFyYW1zOiBBc3N1bWVSb2xlUGFyYW1zID0geyBSb2xlQXJuLCBSb2xlU2Vzc2lvbk5hbWUsIEV4dGVybmFsSWQgfTtcbiAgICBpZiAobWZhX3NlcmlhbCkge1xuICAgICAgaWYgKCFvcHRpb25zLm1mYUNvZGVQcm92aWRlcikge1xuICAgICAgICB0aHJvdyBuZXcgQ3JlZGVudGlhbHNQcm92aWRlckVycm9yKFxuICAgICAgICAgIGBQcm9maWxlICR7cHJvZmlsZU5hbWV9IHJlcXVpcmVzIG11bHRpLWZhY3RvciBhdXRoZW50aWNhdGlvbixgICsgYCBidXQgbm8gTUZBIGNvZGUgY2FsbGJhY2sgd2FzIHByb3ZpZGVkLmAsXG4gICAgICAgICAgZmFsc2VcbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICAgIHBhcmFtcy5TZXJpYWxOdW1iZXIgPSBtZmFfc2VyaWFsO1xuICAgICAgcGFyYW1zLlRva2VuQ29kZSA9IGF3YWl0IG9wdGlvbnMubWZhQ29kZVByb3ZpZGVyKG1mYV9zZXJpYWwpO1xuICAgIH1cblxuICAgIHJldHVybiBvcHRpb25zLnJvbGVBc3N1bWVyKGF3YWl0IHNvdXJjZUNyZWRzLCBwYXJhbXMpO1xuICB9XG5cbiAgLy8gSWYgbm8gcm9sZSBhc3N1bXB0aW9uIG1ldGFkYXRhIGlzIHByZXNlbnQsIGF0dGVtcHQgdG8gbG9hZCBzdGF0aWNcbiAgLy8gY3JlZGVudGlhbHMgZnJvbSB0aGUgc2VsZWN0ZWQgcHJvZmlsZS5cbiAgaWYgKGlzU3RhdGljQ3JlZHNQcm9maWxlKGRhdGEpKSB7XG4gICAgcmV0dXJuIHJlc29sdmVTdGF0aWNDcmVkZW50aWFscyhkYXRhKTtcbiAgfVxuXG4gIC8vIElmIG5vIHN0YXRpYyBjcmVkZW50aWFscyBhcmUgcHJlc2VudCwgYXR0ZW1wdCB0byBhc3N1bWUgcm9sZSB3aXRoXG4gIC8vIHdlYiBpZGVudGl0eSBpZiB3ZWJfaWRlbnRpdHlfdG9rZW5fZmlsZSBhbmQgcm9sZV9hcm4gaXMgYXZhaWxhYmxlXG4gIGlmIChpc1dlYklkZW50aXR5UHJvZmlsZShkYXRhKSkge1xuICAgIHJldHVybiByZXNvbHZlV2ViSWRlbnRpdHlDcmVkZW50aWFscyhkYXRhLCBvcHRpb25zKTtcbiAgfVxuICBpZiAoaXNTc29Qcm9maWxlKGRhdGEpKSB7XG4gICAgY29uc3QgeyBzc29fc3RhcnRfdXJsLCBzc29fYWNjb3VudF9pZCwgc3NvX3JlZ2lvbiwgc3NvX3JvbGVfbmFtZSB9ID0gdmFsaWRhdGVTc29Qcm9maWxlKGRhdGEpO1xuICAgIHJldHVybiBmcm9tU1NPKHtcbiAgICAgIHNzb1N0YXJ0VXJsOiBzc29fc3RhcnRfdXJsLFxuICAgICAgc3NvQWNjb3VudElkOiBzc29fYWNjb3VudF9pZCxcbiAgICAgIHNzb1JlZ2lvbjogc3NvX3JlZ2lvbixcbiAgICAgIHNzb1JvbGVOYW1lOiBzc29fcm9sZV9uYW1lLFxuICAgIH0pKCk7XG4gIH1cblxuICAvLyBJZiB0aGUgcHJvZmlsZSBjYW5ub3QgYmUgcGFyc2VkIG9yIGNvbnRhaW5zIG5laXRoZXIgc3RhdGljIGNyZWRlbnRpYWxzXG4gIC8vIG5vciByb2xlIGFzc3VtcHRpb24gbWV0YWRhdGEsIHRocm93IGFuIGVycm9yLiBUaGlzIHNob3VsZCBiZSBjb25zaWRlcmVkIGFcbiAgLy8gdGVybWluYWwgcmVzb2x1dGlvbiBlcnJvciBpZiBhIHByb2ZpbGUgaGFzIGJlZW4gc3BlY2lmaWVkIGJ5IHRoZSB1c2VyXG4gIC8vICh3aGV0aGVyIHZpYSBhIHBhcmFtZXRlciwgYW4gZW52aXJvbm1lbnQgdmFyaWFibGUsIG9yIGFub3RoZXIgcHJvZmlsZSdzXG4gIC8vIGBzb3VyY2VfcHJvZmlsZWAga2V5KS5cbiAgdGhyb3cgbmV3IENyZWRlbnRpYWxzUHJvdmlkZXJFcnJvcihcbiAgICBgUHJvZmlsZSAke3Byb2ZpbGVOYW1lfSBjb3VsZCBub3QgYmUgZm91bmQgb3IgcGFyc2VkIGluIHNoYXJlZGAgKyBgIGNyZWRlbnRpYWxzIGZpbGUuYFxuICApO1xufTtcblxuLyoqXG4gKiBSZXNvbHZlIHRoZSBgY3JlZGVudGlhbF9zb3VyY2VgIGVudHJ5IGZyb20gdGhlIHByb2ZpbGUsIGFuZCByZXR1cm4gdGhlXG4gKiBjcmVkZW50aWFsIHByb3ZpZGVycyByZXNwZWN0aXZlbHkuIE5vIG1lbW9pemF0aW9uIGlzIG5lZWRlZCBmb3IgdGhlXG4gKiBjcmVkZW50aWFsIHNvdXJjZSBwcm92aWRlcnMgYmVjYXVzZSBtZW1vaXphdGlvbiBzaG91bGQgYmUgYWRkZWQgb3V0c2lkZSB0aGVcbiAqIGZyb21JbmkoKSBwcm92aWRlci4gVGhlIHNvdXJjZSBjcmVkZW50aWFsIG5lZWRzIHRvIGJlIHJlZnJlc2hlZCBldmVyeSB0aW1lXG4gKiBmcm9tSW5pKCkgaXMgY2FsbGVkLlxuICovXG5jb25zdCByZXNvbHZlQ3JlZGVudGlhbFNvdXJjZSA9IChjcmVkZW50aWFsU291cmNlOiBzdHJpbmcsIHByb2ZpbGVOYW1lOiBzdHJpbmcpOiBDcmVkZW50aWFsUHJvdmlkZXIgPT4ge1xuICBjb25zdCBzb3VyY2VQcm92aWRlcnNNYXA6IHsgW25hbWU6IHN0cmluZ106ICgpID0+IENyZWRlbnRpYWxQcm92aWRlciB9ID0ge1xuICAgIEVjc0NvbnRhaW5lcjogZnJvbUNvbnRhaW5lck1ldGFkYXRhLFxuICAgIEVjMkluc3RhbmNlTWV0YWRhdGE6IGZyb21JbnN0YW5jZU1ldGFkYXRhLFxuICAgIEVudmlyb25tZW50OiBmcm9tRW52LFxuICB9O1xuICBpZiAoY3JlZGVudGlhbFNvdXJjZSBpbiBzb3VyY2VQcm92aWRlcnNNYXApIHtcbiAgICByZXR1cm4gc291cmNlUHJvdmlkZXJzTWFwW2NyZWRlbnRpYWxTb3VyY2VdKCk7XG4gIH0gZWxzZSB7XG4gICAgdGhyb3cgbmV3IENyZWRlbnRpYWxzUHJvdmlkZXJFcnJvcihcbiAgICAgIGBVbnN1cHBvcnRlZCBjcmVkZW50aWFsIHNvdXJjZSBpbiBwcm9maWxlICR7cHJvZmlsZU5hbWV9LiBHb3QgJHtjcmVkZW50aWFsU291cmNlfSwgYCArXG4gICAgICAgIGBleHBlY3RlZCBFY3NDb250YWluZXIgb3IgRWMySW5zdGFuY2VNZXRhZGF0YSBvciBFbnZpcm9ubWVudC5gXG4gICAgKTtcbiAgfVxufTtcblxuY29uc3QgcmVzb2x2ZVN0YXRpY0NyZWRlbnRpYWxzID0gKHByb2ZpbGU6IFN0YXRpY0NyZWRzUHJvZmlsZSk6IFByb21pc2U8Q3JlZGVudGlhbHM+ID0+XG4gIFByb21pc2UucmVzb2x2ZSh7XG4gICAgYWNjZXNzS2V5SWQ6IHByb2ZpbGUuYXdzX2FjY2Vzc19rZXlfaWQsXG4gICAgc2VjcmV0QWNjZXNzS2V5OiBwcm9maWxlLmF3c19zZWNyZXRfYWNjZXNzX2tleSxcbiAgICBzZXNzaW9uVG9rZW46IHByb2ZpbGUuYXdzX3Nlc3Npb25fdG9rZW4sXG4gIH0pO1xuXG5jb25zdCByZXNvbHZlV2ViSWRlbnRpdHlDcmVkZW50aWFscyA9IGFzeW5jIChwcm9maWxlOiBXZWJJZGVudGl0eVByb2ZpbGUsIG9wdGlvbnM6IEZyb21JbmlJbml0KTogUHJvbWlzZTxDcmVkZW50aWFscz4gPT5cbiAgZnJvbVRva2VuRmlsZSh7XG4gICAgd2ViSWRlbnRpdHlUb2tlbkZpbGU6IHByb2ZpbGUud2ViX2lkZW50aXR5X3Rva2VuX2ZpbGUsXG4gICAgcm9sZUFybjogcHJvZmlsZS5yb2xlX2FybixcbiAgICByb2xlU2Vzc2lvbk5hbWU6IHByb2ZpbGUucm9sZV9zZXNzaW9uX25hbWUsXG4gICAgcm9sZUFzc3VtZXJXaXRoV2ViSWRlbnRpdHk6IG9wdGlvbnMucm9sZUFzc3VtZXJXaXRoV2ViSWRlbnRpdHksXG4gIH0pKCk7XG4iXX0=","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultProvider = exports.ENV_IMDS_DISABLED = void 0;\nconst credential_provider_env_1 = require(\"@aws-sdk/credential-provider-env\");\nconst credential_provider_imds_1 = require(\"@aws-sdk/credential-provider-imds\");\nconst credential_provider_ini_1 = require(\"@aws-sdk/credential-provider-ini\");\nconst credential_provider_process_1 = require(\"@aws-sdk/credential-provider-process\");\nconst credential_provider_sso_1 = require(\"@aws-sdk/credential-provider-sso\");\nconst credential_provider_web_identity_1 = require(\"@aws-sdk/credential-provider-web-identity\");\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nconst shared_ini_file_loader_1 = require(\"@aws-sdk/shared-ini-file-loader\");\nconst util_credentials_1 = require(\"@aws-sdk/util-credentials\");\nexports.ENV_IMDS_DISABLED = \"AWS_EC2_METADATA_DISABLED\";\n/**\n * Creates a credential provider that will attempt to find credentials from the\n * following sources (listed in order of precedence):\n *   * Environment variables exposed via `process.env`\n *   * SSO credentials from token cache\n *   * Web identity token credentials\n *   * Shared credentials and config ini files\n *   * The EC2/ECS Instance Metadata Service\n *\n * The default credential provider will invoke one provider at a time and only\n * continue to the next if no credentials have been located. For example, if\n * the process finds values defined via the `AWS_ACCESS_KEY_ID` and\n * `AWS_SECRET_ACCESS_KEY` environment variables, the files at\n * `~/.aws/credentials` and `~/.aws/config` will not be read, nor will any\n * messages be sent to the Instance Metadata Service.\n *\n * @param init                  Configuration that is passed to each individual\n *                              provider\n *\n * @see fromEnv                 The function used to source credentials from\n *                              environment variables\n * @see fromSSO                 The function used to source credentials from\n *                              resolved SSO token cache\n * @see fromTokenFile           The function used to source credentials from\n *                              token file\n * @see fromIni                 The function used to source credentials from INI\n *                              files\n * @see fromProcess             The function used to sources credentials from\n *                              credential_process in INI files\n * @see fromInstanceMetadata    The function used to source credentials from the\n *                              EC2 Instance Metadata Service\n * @see fromContainerMetadata   The function used to source credentials from the\n *                              ECS Container Metadata Service\n */\nconst defaultProvider = (init = {}) => {\n    const options = { profile: process.env[util_credentials_1.ENV_PROFILE], ...init };\n    if (!options.loadedConfig)\n        options.loadedConfig = (0, shared_ini_file_loader_1.loadSharedConfigFiles)(init);\n    const providers = [\n        (0, credential_provider_sso_1.fromSSO)(options),\n        (0, credential_provider_ini_1.fromIni)(options),\n        (0, credential_provider_process_1.fromProcess)(options),\n        (0, credential_provider_web_identity_1.fromTokenFile)(options),\n        remoteProvider(options),\n        async () => {\n            throw new property_provider_1.CredentialsProviderError(\"Could not load credentials from any providers\", false);\n        },\n    ];\n    if (!options.profile)\n        providers.unshift((0, credential_provider_env_1.fromEnv)());\n    const providerChain = (0, property_provider_1.chain)(...providers);\n    return (0, property_provider_1.memoize)(providerChain, (credentials) => credentials.expiration !== undefined && credentials.expiration.getTime() - Date.now() < 300000, (credentials) => credentials.expiration !== undefined);\n};\nexports.defaultProvider = defaultProvider;\nconst remoteProvider = (init) => {\n    if (process.env[credential_provider_imds_1.ENV_CMDS_RELATIVE_URI] || process.env[credential_provider_imds_1.ENV_CMDS_FULL_URI]) {\n        return (0, credential_provider_imds_1.fromContainerMetadata)(init);\n    }\n    if (process.env[exports.ENV_IMDS_DISABLED]) {\n        return () => Promise.reject(new property_provider_1.CredentialsProviderError(\"EC2 Instance Metadata Service access disabled\"));\n    }\n    return (0, credential_provider_imds_1.fromInstanceMetadata)(init);\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsOEVBQTJEO0FBQzNELGdGQU0yQztBQUMzQyw4RUFBd0U7QUFDeEUsc0ZBQW9GO0FBQ3BGLDhFQUF3RTtBQUN4RSxnR0FBNkY7QUFDN0Ysa0VBQXNGO0FBQ3RGLDRFQUF3RTtBQUV4RSxnRUFBd0Q7QUFFM0MsUUFBQSxpQkFBaUIsR0FBRywyQkFBMkIsQ0FBQztBQUU3RDs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0dBaUNHO0FBQ0ksTUFBTSxlQUFlLEdBQUcsQ0FDN0IsT0FBNkYsRUFBRSxFQUMzRSxFQUFFO0lBQ3RCLE1BQU0sT0FBTyxHQUFHLEVBQUUsT0FBTyxFQUFFLE9BQU8sQ0FBQyxHQUFHLENBQUMsOEJBQVcsQ0FBQyxFQUFFLEdBQUcsSUFBSSxFQUFFLENBQUM7SUFDL0QsSUFBSSxDQUFDLE9BQU8sQ0FBQyxZQUFZO1FBQUUsT0FBTyxDQUFDLFlBQVksR0FBRyxJQUFBLDhDQUFxQixFQUFDLElBQUksQ0FBQyxDQUFDO0lBQzlFLE1BQU0sU0FBUyxHQUFHO1FBQ2hCLElBQUEsaUNBQU8sRUFBQyxPQUFPLENBQUM7UUFDaEIsSUFBQSxpQ0FBTyxFQUFDLE9BQU8sQ0FBQztRQUNoQixJQUFBLHlDQUFXLEVBQUMsT0FBTyxDQUFDO1FBQ3BCLElBQUEsZ0RBQWEsRUFBQyxPQUFPLENBQUM7UUFDdEIsY0FBYyxDQUFDLE9BQU8sQ0FBQztRQUN2QixLQUFLLElBQUksRUFBRTtZQUNULE1BQU0sSUFBSSw0Q0FBd0IsQ0FBQywrQ0FBK0MsRUFBRSxLQUFLLENBQUMsQ0FBQztRQUM3RixDQUFDO0tBQ0YsQ0FBQztJQUNGLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTztRQUFFLFNBQVMsQ0FBQyxPQUFPLENBQUMsSUFBQSxpQ0FBTyxHQUFFLENBQUMsQ0FBQztJQUNuRCxNQUFNLGFBQWEsR0FBRyxJQUFBLHlCQUFLLEVBQUMsR0FBRyxTQUFTLENBQUMsQ0FBQztJQUUxQyxPQUFPLElBQUEsMkJBQU8sRUFDWixhQUFhLEVBQ2IsQ0FBQyxXQUFXLEVBQUUsRUFBRSxDQUFDLFdBQVcsQ0FBQyxVQUFVLEtBQUssU0FBUyxJQUFJLFdBQVcsQ0FBQyxVQUFVLENBQUMsT0FBTyxFQUFFLEdBQUcsSUFBSSxDQUFDLEdBQUcsRUFBRSxHQUFHLE1BQU0sRUFDL0csQ0FBQyxXQUFXLEVBQUUsRUFBRSxDQUFDLFdBQVcsQ0FBQyxVQUFVLEtBQUssU0FBUyxDQUN0RCxDQUFDO0FBQ0osQ0FBQyxDQUFDO0FBdkJXLFFBQUEsZUFBZSxtQkF1QjFCO0FBRUYsTUFBTSxjQUFjLEdBQUcsQ0FBQyxJQUF3QixFQUFzQixFQUFFO0lBQ3RFLElBQUksT0FBTyxDQUFDLEdBQUcsQ0FBQyxnREFBcUIsQ0FBQyxJQUFJLE9BQU8sQ0FBQyxHQUFHLENBQUMsNENBQWlCLENBQUMsRUFBRTtRQUN4RSxPQUFPLElBQUEsZ0RBQXFCLEVBQUMsSUFBSSxDQUFDLENBQUM7S0FDcEM7SUFFRCxJQUFJLE9BQU8sQ0FBQyxHQUFHLENBQUMseUJBQWlCLENBQUMsRUFBRTtRQUNsQyxPQUFPLEdBQUcsRUFBRSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsSUFBSSw0Q0FBd0IsQ0FBQywrQ0FBK0MsQ0FBQyxDQUFDLENBQUM7S0FDNUc7SUFFRCxPQUFPLElBQUEsK0NBQW9CLEVBQUMsSUFBSSxDQUFDLENBQUM7QUFDcEMsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZnJvbUVudiB9IGZyb20gXCJAYXdzLXNkay9jcmVkZW50aWFsLXByb3ZpZGVyLWVudlwiO1xuaW1wb3J0IHtcbiAgRU5WX0NNRFNfRlVMTF9VUkksXG4gIEVOVl9DTURTX1JFTEFUSVZFX1VSSSxcbiAgZnJvbUNvbnRhaW5lck1ldGFkYXRhLFxuICBmcm9tSW5zdGFuY2VNZXRhZGF0YSxcbiAgUmVtb3RlUHJvdmlkZXJJbml0LFxufSBmcm9tIFwiQGF3cy1zZGsvY3JlZGVudGlhbC1wcm92aWRlci1pbWRzXCI7XG5pbXBvcnQgeyBmcm9tSW5pLCBGcm9tSW5pSW5pdCB9IGZyb20gXCJAYXdzLXNkay9jcmVkZW50aWFsLXByb3ZpZGVyLWluaVwiO1xuaW1wb3J0IHsgZnJvbVByb2Nlc3MsIEZyb21Qcm9jZXNzSW5pdCB9IGZyb20gXCJAYXdzLXNkay9jcmVkZW50aWFsLXByb3ZpZGVyLXByb2Nlc3NcIjtcbmltcG9ydCB7IGZyb21TU08sIEZyb21TU09Jbml0IH0gZnJvbSBcIkBhd3Mtc2RrL2NyZWRlbnRpYWwtcHJvdmlkZXItc3NvXCI7XG5pbXBvcnQgeyBmcm9tVG9rZW5GaWxlLCBGcm9tVG9rZW5GaWxlSW5pdCB9IGZyb20gXCJAYXdzLXNkay9jcmVkZW50aWFsLXByb3ZpZGVyLXdlYi1pZGVudGl0eVwiO1xuaW1wb3J0IHsgY2hhaW4sIENyZWRlbnRpYWxzUHJvdmlkZXJFcnJvciwgbWVtb2l6ZSB9IGZyb20gXCJAYXdzLXNkay9wcm9wZXJ0eS1wcm92aWRlclwiO1xuaW1wb3J0IHsgbG9hZFNoYXJlZENvbmZpZ0ZpbGVzIH0gZnJvbSBcIkBhd3Mtc2RrL3NoYXJlZC1pbmktZmlsZS1sb2FkZXJcIjtcbmltcG9ydCB7IENyZWRlbnRpYWxQcm92aWRlciB9IGZyb20gXCJAYXdzLXNkay90eXBlc1wiO1xuaW1wb3J0IHsgRU5WX1BST0ZJTEUgfSBmcm9tIFwiQGF3cy1zZGsvdXRpbC1jcmVkZW50aWFsc1wiO1xuXG5leHBvcnQgY29uc3QgRU5WX0lNRFNfRElTQUJMRUQgPSBcIkFXU19FQzJfTUVUQURBVEFfRElTQUJMRURcIjtcblxuLyoqXG4gKiBDcmVhdGVzIGEgY3JlZGVudGlhbCBwcm92aWRlciB0aGF0IHdpbGwgYXR0ZW1wdCB0byBmaW5kIGNyZWRlbnRpYWxzIGZyb20gdGhlXG4gKiBmb2xsb3dpbmcgc291cmNlcyAobGlzdGVkIGluIG9yZGVyIG9mIHByZWNlZGVuY2UpOlxuICogICAqIEVudmlyb25tZW50IHZhcmlhYmxlcyBleHBvc2VkIHZpYSBgcHJvY2Vzcy5lbnZgXG4gKiAgICogU1NPIGNyZWRlbnRpYWxzIGZyb20gdG9rZW4gY2FjaGVcbiAqICAgKiBXZWIgaWRlbnRpdHkgdG9rZW4gY3JlZGVudGlhbHNcbiAqICAgKiBTaGFyZWQgY3JlZGVudGlhbHMgYW5kIGNvbmZpZyBpbmkgZmlsZXNcbiAqICAgKiBUaGUgRUMyL0VDUyBJbnN0YW5jZSBNZXRhZGF0YSBTZXJ2aWNlXG4gKlxuICogVGhlIGRlZmF1bHQgY3JlZGVudGlhbCBwcm92aWRlciB3aWxsIGludm9rZSBvbmUgcHJvdmlkZXIgYXQgYSB0aW1lIGFuZCBvbmx5XG4gKiBjb250aW51ZSB0byB0aGUgbmV4dCBpZiBubyBjcmVkZW50aWFscyBoYXZlIGJlZW4gbG9jYXRlZC4gRm9yIGV4YW1wbGUsIGlmXG4gKiB0aGUgcHJvY2VzcyBmaW5kcyB2YWx1ZXMgZGVmaW5lZCB2aWEgdGhlIGBBV1NfQUNDRVNTX0tFWV9JRGAgYW5kXG4gKiBgQVdTX1NFQ1JFVF9BQ0NFU1NfS0VZYCBlbnZpcm9ubWVudCB2YXJpYWJsZXMsIHRoZSBmaWxlcyBhdFxuICogYH4vLmF3cy9jcmVkZW50aWFsc2AgYW5kIGB+Ly5hd3MvY29uZmlnYCB3aWxsIG5vdCBiZSByZWFkLCBub3Igd2lsbCBhbnlcbiAqIG1lc3NhZ2VzIGJlIHNlbnQgdG8gdGhlIEluc3RhbmNlIE1ldGFkYXRhIFNlcnZpY2UuXG4gKlxuICogQHBhcmFtIGluaXQgICAgICAgICAgICAgICAgICBDb25maWd1cmF0aW9uIHRoYXQgaXMgcGFzc2VkIHRvIGVhY2ggaW5kaXZpZHVhbFxuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwcm92aWRlclxuICpcbiAqIEBzZWUgZnJvbUVudiAgICAgICAgICAgICAgICAgVGhlIGZ1bmN0aW9uIHVzZWQgdG8gc291cmNlIGNyZWRlbnRpYWxzIGZyb21cbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZW52aXJvbm1lbnQgdmFyaWFibGVzXG4gKiBAc2VlIGZyb21TU08gICAgICAgICAgICAgICAgIFRoZSBmdW5jdGlvbiB1c2VkIHRvIHNvdXJjZSBjcmVkZW50aWFscyBmcm9tXG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc29sdmVkIFNTTyB0b2tlbiBjYWNoZVxuICogQHNlZSBmcm9tVG9rZW5GaWxlICAgICAgICAgICBUaGUgZnVuY3Rpb24gdXNlZCB0byBzb3VyY2UgY3JlZGVudGlhbHMgZnJvbVxuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0b2tlbiBmaWxlXG4gKiBAc2VlIGZyb21JbmkgICAgICAgICAgICAgICAgIFRoZSBmdW5jdGlvbiB1c2VkIHRvIHNvdXJjZSBjcmVkZW50aWFscyBmcm9tIElOSVxuICogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmaWxlc1xuICogQHNlZSBmcm9tUHJvY2VzcyAgICAgICAgICAgICBUaGUgZnVuY3Rpb24gdXNlZCB0byBzb3VyY2VzIGNyZWRlbnRpYWxzIGZyb21cbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY3JlZGVudGlhbF9wcm9jZXNzIGluIElOSSBmaWxlc1xuICogQHNlZSBmcm9tSW5zdGFuY2VNZXRhZGF0YSAgICBUaGUgZnVuY3Rpb24gdXNlZCB0byBzb3VyY2UgY3JlZGVudGlhbHMgZnJvbSB0aGVcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRUMyIEluc3RhbmNlIE1ldGFkYXRhIFNlcnZpY2VcbiAqIEBzZWUgZnJvbUNvbnRhaW5lck1ldGFkYXRhICAgVGhlIGZ1bmN0aW9uIHVzZWQgdG8gc291cmNlIGNyZWRlbnRpYWxzIGZyb20gdGhlXG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEVDUyBDb250YWluZXIgTWV0YWRhdGEgU2VydmljZVxuICovXG5leHBvcnQgY29uc3QgZGVmYXVsdFByb3ZpZGVyID0gKFxuICBpbml0OiBGcm9tSW5pSW5pdCAmIFJlbW90ZVByb3ZpZGVySW5pdCAmIEZyb21Qcm9jZXNzSW5pdCAmIEZyb21TU09Jbml0ICYgRnJvbVRva2VuRmlsZUluaXQgPSB7fVxuKTogQ3JlZGVudGlhbFByb3ZpZGVyID0+IHtcbiAgY29uc3Qgb3B0aW9ucyA9IHsgcHJvZmlsZTogcHJvY2Vzcy5lbnZbRU5WX1BST0ZJTEVdLCAuLi5pbml0IH07XG4gIGlmICghb3B0aW9ucy5sb2FkZWRDb25maWcpIG9wdGlvbnMubG9hZGVkQ29uZmlnID0gbG9hZFNoYXJlZENvbmZpZ0ZpbGVzKGluaXQpO1xuICBjb25zdCBwcm92aWRlcnMgPSBbXG4gICAgZnJvbVNTTyhvcHRpb25zKSxcbiAgICBmcm9tSW5pKG9wdGlvbnMpLFxuICAgIGZyb21Qcm9jZXNzKG9wdGlvbnMpLFxuICAgIGZyb21Ub2tlbkZpbGUob3B0aW9ucyksXG4gICAgcmVtb3RlUHJvdmlkZXIob3B0aW9ucyksXG4gICAgYXN5bmMgKCkgPT4ge1xuICAgICAgdGhyb3cgbmV3IENyZWRlbnRpYWxzUHJvdmlkZXJFcnJvcihcIkNvdWxkIG5vdCBsb2FkIGNyZWRlbnRpYWxzIGZyb20gYW55IHByb3ZpZGVyc1wiLCBmYWxzZSk7XG4gICAgfSxcbiAgXTtcbiAgaWYgKCFvcHRpb25zLnByb2ZpbGUpIHByb3ZpZGVycy51bnNoaWZ0KGZyb21FbnYoKSk7XG4gIGNvbnN0IHByb3ZpZGVyQ2hhaW4gPSBjaGFpbiguLi5wcm92aWRlcnMpO1xuXG4gIHJldHVybiBtZW1vaXplKFxuICAgIHByb3ZpZGVyQ2hhaW4sXG4gICAgKGNyZWRlbnRpYWxzKSA9PiBjcmVkZW50aWFscy5leHBpcmF0aW9uICE9PSB1bmRlZmluZWQgJiYgY3JlZGVudGlhbHMuZXhwaXJhdGlvbi5nZXRUaW1lKCkgLSBEYXRlLm5vdygpIDwgMzAwMDAwLFxuICAgIChjcmVkZW50aWFscykgPT4gY3JlZGVudGlhbHMuZXhwaXJhdGlvbiAhPT0gdW5kZWZpbmVkXG4gICk7XG59O1xuXG5jb25zdCByZW1vdGVQcm92aWRlciA9IChpbml0OiBSZW1vdGVQcm92aWRlckluaXQpOiBDcmVkZW50aWFsUHJvdmlkZXIgPT4ge1xuICBpZiAocHJvY2Vzcy5lbnZbRU5WX0NNRFNfUkVMQVRJVkVfVVJJXSB8fCBwcm9jZXNzLmVudltFTlZfQ01EU19GVUxMX1VSSV0pIHtcbiAgICByZXR1cm4gZnJvbUNvbnRhaW5lck1ldGFkYXRhKGluaXQpO1xuICB9XG5cbiAgaWYgKHByb2Nlc3MuZW52W0VOVl9JTURTX0RJU0FCTEVEXSkge1xuICAgIHJldHVybiAoKSA9PiBQcm9taXNlLnJlamVjdChuZXcgQ3JlZGVudGlhbHNQcm92aWRlckVycm9yKFwiRUMyIEluc3RhbmNlIE1ldGFkYXRhIFNlcnZpY2UgYWNjZXNzIGRpc2FibGVkXCIpKTtcbiAgfVxuXG4gIHJldHVybiBmcm9tSW5zdGFuY2VNZXRhZGF0YShpbml0KTtcbn07XG4iXX0=","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromProcess = exports.ENV_PROFILE = void 0;\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nconst util_credentials_1 = require(\"@aws-sdk/util-credentials\");\nconst child_process_1 = require(\"child_process\");\n/**\n * @internal\n */\nexports.ENV_PROFILE = \"AWS_PROFILE\";\n/**\n * Creates a credential provider that will read from a credential_process specified\n * in ini files.\n */\nconst fromProcess = (init = {}) => async () => {\n    const profiles = await (0, util_credentials_1.parseKnownFiles)(init);\n    return resolveProcessCredentials((0, util_credentials_1.getMasterProfileName)(init), profiles);\n};\nexports.fromProcess = fromProcess;\nconst resolveProcessCredentials = async (profileName, profiles) => {\n    const profile = profiles[profileName];\n    if (profiles[profileName]) {\n        const credentialProcess = profile[\"credential_process\"];\n        if (credentialProcess !== undefined) {\n            return await execPromise(credentialProcess)\n                .then((processResult) => {\n                let data;\n                try {\n                    data = JSON.parse(processResult);\n                }\n                catch (_a) {\n                    throw Error(`Profile ${profileName} credential_process returned invalid JSON.`);\n                }\n                const { Version: version, AccessKeyId: accessKeyId, SecretAccessKey: secretAccessKey, SessionToken: sessionToken, Expiration: expiration, } = data;\n                if (version !== 1) {\n                    throw Error(`Profile ${profileName} credential_process did not return Version 1.`);\n                }\n                if (accessKeyId === undefined || secretAccessKey === undefined) {\n                    throw Error(`Profile ${profileName} credential_process returned invalid credentials.`);\n                }\n                let expirationUnix;\n                if (expiration) {\n                    const currentTime = new Date();\n                    const expireTime = new Date(expiration);\n                    if (expireTime < currentTime) {\n                        throw Error(`Profile ${profileName} credential_process returned expired credentials.`);\n                    }\n                    expirationUnix = Math.floor(new Date(expiration).valueOf() / 1000);\n                }\n                return {\n                    accessKeyId,\n                    secretAccessKey,\n                    sessionToken,\n                    expirationUnix,\n                };\n            })\n                .catch((error) => {\n                throw new property_provider_1.CredentialsProviderError(error.message);\n            });\n        }\n        else {\n            throw new property_provider_1.CredentialsProviderError(`Profile ${profileName} did not contain credential_process.`);\n        }\n    }\n    else {\n        // If the profile cannot be parsed or does not contain the default or\n        // specified profile throw an error. This should be considered a terminal\n        // resolution error if a profile has been specified by the user (whether via\n        // a parameter, anenvironment variable, or another profile's `source_profile` key).\n        throw new property_provider_1.CredentialsProviderError(`Profile ${profileName} could not be found in shared credentials file.`);\n    }\n};\nconst execPromise = (command) => new Promise(function (resolve, reject) {\n    (0, child_process_1.exec)(command, (error, stdout) => {\n        if (error) {\n            reject(error);\n            return;\n        }\n        resolve(stdout.trim());\n    });\n});\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsa0VBQXNFO0FBR3RFLGdFQUFxRztBQUNyRyxpREFBcUM7QUFFckM7O0dBRUc7QUFDVSxRQUFBLFdBQVcsR0FBRyxhQUFhLENBQUM7QUFJekM7OztHQUdHO0FBQ0ksTUFBTSxXQUFXLEdBQ3RCLENBQUMsT0FBd0IsRUFBRSxFQUFzQixFQUFFLENBQ25ELEtBQUssSUFBSSxFQUFFO0lBQ1QsTUFBTSxRQUFRLEdBQUcsTUFBTSxJQUFBLGtDQUFlLEVBQUMsSUFBSSxDQUFDLENBQUM7SUFDN0MsT0FBTyx5QkFBeUIsQ0FBQyxJQUFBLHVDQUFvQixFQUFDLElBQUksQ0FBQyxFQUFFLFFBQVEsQ0FBQyxDQUFDO0FBQ3pFLENBQUMsQ0FBQztBQUxTLFFBQUEsV0FBVyxlQUtwQjtBQUVKLE1BQU0seUJBQXlCLEdBQUcsS0FBSyxFQUFFLFdBQW1CLEVBQUUsUUFBdUIsRUFBd0IsRUFBRTtJQUM3RyxNQUFNLE9BQU8sR0FBRyxRQUFRLENBQUMsV0FBVyxDQUFDLENBQUM7SUFFdEMsSUFBSSxRQUFRLENBQUMsV0FBVyxDQUFDLEVBQUU7UUFDekIsTUFBTSxpQkFBaUIsR0FBRyxPQUFPLENBQUMsb0JBQW9CLENBQUMsQ0FBQztRQUN4RCxJQUFJLGlCQUFpQixLQUFLLFNBQVMsRUFBRTtZQUNuQyxPQUFPLE1BQU0sV0FBVyxDQUFDLGlCQUFpQixDQUFDO2lCQUN4QyxJQUFJLENBQUMsQ0FBQyxhQUFrQixFQUFFLEVBQUU7Z0JBQzNCLElBQUksSUFBSSxDQUFDO2dCQUNULElBQUk7b0JBQ0YsSUFBSSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsYUFBYSxDQUFDLENBQUM7aUJBQ2xDO2dCQUFDLFdBQU07b0JBQ04sTUFBTSxLQUFLLENBQUMsV0FBVyxXQUFXLDRDQUE0QyxDQUFDLENBQUM7aUJBQ2pGO2dCQUVELE1BQU0sRUFDSixPQUFPLEVBQUUsT0FBTyxFQUNoQixXQUFXLEVBQUUsV0FBVyxFQUN4QixlQUFlLEVBQUUsZUFBZSxFQUNoQyxZQUFZLEVBQUUsWUFBWSxFQUMxQixVQUFVLEVBQUUsVUFBVSxHQUN2QixHQUFHLElBQUksQ0FBQztnQkFFVCxJQUFJLE9BQU8sS0FBSyxDQUFDLEVBQUU7b0JBQ2pCLE1BQU0sS0FBSyxDQUFDLFdBQVcsV0FBVywrQ0FBK0MsQ0FBQyxDQUFDO2lCQUNwRjtnQkFFRCxJQUFJLFdBQVcsS0FBSyxTQUFTLElBQUksZUFBZSxLQUFLLFNBQVMsRUFBRTtvQkFDOUQsTUFBTSxLQUFLLENBQUMsV0FBVyxXQUFXLG1EQUFtRCxDQUFDLENBQUM7aUJBQ3hGO2dCQUVELElBQUksY0FBYyxDQUFDO2dCQUVuQixJQUFJLFVBQVUsRUFBRTtvQkFDZCxNQUFNLFdBQVcsR0FBRyxJQUFJLElBQUksRUFBRSxDQUFDO29CQUMvQixNQUFNLFVBQVUsR0FBRyxJQUFJLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQztvQkFDeEMsSUFBSSxVQUFVLEdBQUcsV0FBVyxFQUFFO3dCQUM1QixNQUFNLEtBQUssQ0FBQyxXQUFXLFdBQVcsbURBQW1ELENBQUMsQ0FBQztxQkFDeEY7b0JBQ0QsY0FBYyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUMsT0FBTyxFQUFFLEdBQUcsSUFBSSxDQUFDLENBQUM7aUJBQ3BFO2dCQUVELE9BQU87b0JBQ0wsV0FBVztvQkFDWCxlQUFlO29CQUNmLFlBQVk7b0JBQ1osY0FBYztpQkFDZixDQUFDO1lBQ0osQ0FBQyxDQUFDO2lCQUNELEtBQUssQ0FBQyxDQUFDLEtBQVksRUFBRSxFQUFFO2dCQUN0QixNQUFNLElBQUksNENBQXdCLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDO1lBQ3BELENBQUMsQ0FBQyxDQUFDO1NBQ047YUFBTTtZQUNMLE1BQU0sSUFBSSw0Q0FBd0IsQ0FBQyxXQUFXLFdBQVcsc0NBQXNDLENBQUMsQ0FBQztTQUNsRztLQUNGO1NBQU07UUFDTCxxRUFBcUU7UUFDckUseUVBQXlFO1FBQ3pFLDRFQUE0RTtRQUM1RSxtRkFBbUY7UUFDbkYsTUFBTSxJQUFJLDRDQUF3QixDQUFDLFdBQVcsV0FBVyxpREFBaUQsQ0FBQyxDQUFDO0tBQzdHO0FBQ0gsQ0FBQyxDQUFDO0FBRUYsTUFBTSxXQUFXLEdBQUcsQ0FBQyxPQUFlLEVBQUUsRUFBRSxDQUN0QyxJQUFJLE9BQU8sQ0FBQyxVQUFVLE9BQU8sRUFBRSxNQUFNO0lBQ25DLElBQUEsb0JBQUksRUFBQyxPQUFPLEVBQUUsQ0FBQyxLQUFLLEVBQUUsTUFBTSxFQUFFLEVBQUU7UUFDOUIsSUFBSSxLQUFLLEVBQUU7WUFDVCxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUM7WUFDZCxPQUFPO1NBQ1I7UUFFRCxPQUFPLENBQUMsTUFBTSxDQUFDLElBQUksRUFBRSxDQUFDLENBQUM7SUFDekIsQ0FBQyxDQUFDLENBQUM7QUFDTCxDQUFDLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENyZWRlbnRpYWxzUHJvdmlkZXJFcnJvciB9IGZyb20gXCJAYXdzLXNkay9wcm9wZXJ0eS1wcm92aWRlclwiO1xuaW1wb3J0IHsgUGFyc2VkSW5pRGF0YSB9IGZyb20gXCJAYXdzLXNkay9zaGFyZWQtaW5pLWZpbGUtbG9hZGVyXCI7XG5pbXBvcnQgeyBDcmVkZW50aWFsUHJvdmlkZXIsIENyZWRlbnRpYWxzIH0gZnJvbSBcIkBhd3Mtc2RrL3R5cGVzXCI7XG5pbXBvcnQgeyBnZXRNYXN0ZXJQcm9maWxlTmFtZSwgcGFyc2VLbm93bkZpbGVzLCBTb3VyY2VQcm9maWxlSW5pdCB9IGZyb20gXCJAYXdzLXNkay91dGlsLWNyZWRlbnRpYWxzXCI7XG5pbXBvcnQgeyBleGVjIH0gZnJvbSBcImNoaWxkX3Byb2Nlc3NcIjtcblxuLyoqXG4gKiBAaW50ZXJuYWxcbiAqL1xuZXhwb3J0IGNvbnN0IEVOVl9QUk9GSUxFID0gXCJBV1NfUFJPRklMRVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIEZyb21Qcm9jZXNzSW5pdCBleHRlbmRzIFNvdXJjZVByb2ZpbGVJbml0IHt9XG5cbi8qKlxuICogQ3JlYXRlcyBhIGNyZWRlbnRpYWwgcHJvdmlkZXIgdGhhdCB3aWxsIHJlYWQgZnJvbSBhIGNyZWRlbnRpYWxfcHJvY2VzcyBzcGVjaWZpZWRcbiAqIGluIGluaSBmaWxlcy5cbiAqL1xuZXhwb3J0IGNvbnN0IGZyb21Qcm9jZXNzID1cbiAgKGluaXQ6IEZyb21Qcm9jZXNzSW5pdCA9IHt9KTogQ3JlZGVudGlhbFByb3ZpZGVyID0+XG4gIGFzeW5jICgpID0+IHtcbiAgICBjb25zdCBwcm9maWxlcyA9IGF3YWl0IHBhcnNlS25vd25GaWxlcyhpbml0KTtcbiAgICByZXR1cm4gcmVzb2x2ZVByb2Nlc3NDcmVkZW50aWFscyhnZXRNYXN0ZXJQcm9maWxlTmFtZShpbml0KSwgcHJvZmlsZXMpO1xuICB9O1xuXG5jb25zdCByZXNvbHZlUHJvY2Vzc0NyZWRlbnRpYWxzID0gYXN5bmMgKHByb2ZpbGVOYW1lOiBzdHJpbmcsIHByb2ZpbGVzOiBQYXJzZWRJbmlEYXRhKTogUHJvbWlzZTxDcmVkZW50aWFscz4gPT4ge1xuICBjb25zdCBwcm9maWxlID0gcHJvZmlsZXNbcHJvZmlsZU5hbWVdO1xuXG4gIGlmIChwcm9maWxlc1twcm9maWxlTmFtZV0pIHtcbiAgICBjb25zdCBjcmVkZW50aWFsUHJvY2VzcyA9IHByb2ZpbGVbXCJjcmVkZW50aWFsX3Byb2Nlc3NcIl07XG4gICAgaWYgKGNyZWRlbnRpYWxQcm9jZXNzICE9PSB1bmRlZmluZWQpIHtcbiAgICAgIHJldHVybiBhd2FpdCBleGVjUHJvbWlzZShjcmVkZW50aWFsUHJvY2VzcylcbiAgICAgICAgLnRoZW4oKHByb2Nlc3NSZXN1bHQ6IGFueSkgPT4ge1xuICAgICAgICAgIGxldCBkYXRhO1xuICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICBkYXRhID0gSlNPTi5wYXJzZShwcm9jZXNzUmVzdWx0KTtcbiAgICAgICAgICB9IGNhdGNoIHtcbiAgICAgICAgICAgIHRocm93IEVycm9yKGBQcm9maWxlICR7cHJvZmlsZU5hbWV9IGNyZWRlbnRpYWxfcHJvY2VzcyByZXR1cm5lZCBpbnZhbGlkIEpTT04uYCk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgY29uc3Qge1xuICAgICAgICAgICAgVmVyc2lvbjogdmVyc2lvbixcbiAgICAgICAgICAgIEFjY2Vzc0tleUlkOiBhY2Nlc3NLZXlJZCxcbiAgICAgICAgICAgIFNlY3JldEFjY2Vzc0tleTogc2VjcmV0QWNjZXNzS2V5LFxuICAgICAgICAgICAgU2Vzc2lvblRva2VuOiBzZXNzaW9uVG9rZW4sXG4gICAgICAgICAgICBFeHBpcmF0aW9uOiBleHBpcmF0aW9uLFxuICAgICAgICAgIH0gPSBkYXRhO1xuXG4gICAgICAgICAgaWYgKHZlcnNpb24gIT09IDEpIHtcbiAgICAgICAgICAgIHRocm93IEVycm9yKGBQcm9maWxlICR7cHJvZmlsZU5hbWV9IGNyZWRlbnRpYWxfcHJvY2VzcyBkaWQgbm90IHJldHVybiBWZXJzaW9uIDEuYCk7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgaWYgKGFjY2Vzc0tleUlkID09PSB1bmRlZmluZWQgfHwgc2VjcmV0QWNjZXNzS2V5ID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHRocm93IEVycm9yKGBQcm9maWxlICR7cHJvZmlsZU5hbWV9IGNyZWRlbnRpYWxfcHJvY2VzcyByZXR1cm5lZCBpbnZhbGlkIGNyZWRlbnRpYWxzLmApO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGxldCBleHBpcmF0aW9uVW5peDtcblxuICAgICAgICAgIGlmIChleHBpcmF0aW9uKSB7XG4gICAgICAgICAgICBjb25zdCBjdXJyZW50VGltZSA9IG5ldyBEYXRlKCk7XG4gICAgICAgICAgICBjb25zdCBleHBpcmVUaW1lID0gbmV3IERhdGUoZXhwaXJhdGlvbik7XG4gICAgICAgICAgICBpZiAoZXhwaXJlVGltZSA8IGN1cnJlbnRUaW1lKSB7XG4gICAgICAgICAgICAgIHRocm93IEVycm9yKGBQcm9maWxlICR7cHJvZmlsZU5hbWV9IGNyZWRlbnRpYWxfcHJvY2VzcyByZXR1cm5lZCBleHBpcmVkIGNyZWRlbnRpYWxzLmApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZXhwaXJhdGlvblVuaXggPSBNYXRoLmZsb29yKG5ldyBEYXRlKGV4cGlyYXRpb24pLnZhbHVlT2YoKSAvIDEwMDApO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBhY2Nlc3NLZXlJZCxcbiAgICAgICAgICAgIHNlY3JldEFjY2Vzc0tleSxcbiAgICAgICAgICAgIHNlc3Npb25Ub2tlbixcbiAgICAgICAgICAgIGV4cGlyYXRpb25Vbml4LFxuICAgICAgICAgIH07XG4gICAgICAgIH0pXG4gICAgICAgIC5jYXRjaCgoZXJyb3I6IEVycm9yKSA9PiB7XG4gICAgICAgICAgdGhyb3cgbmV3IENyZWRlbnRpYWxzUHJvdmlkZXJFcnJvcihlcnJvci5tZXNzYWdlKTtcbiAgICAgICAgfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRocm93IG5ldyBDcmVkZW50aWFsc1Byb3ZpZGVyRXJyb3IoYFByb2ZpbGUgJHtwcm9maWxlTmFtZX0gZGlkIG5vdCBjb250YWluIGNyZWRlbnRpYWxfcHJvY2Vzcy5gKTtcbiAgICB9XG4gIH0gZWxzZSB7XG4gICAgLy8gSWYgdGhlIHByb2ZpbGUgY2Fubm90IGJlIHBhcnNlZCBvciBkb2VzIG5vdCBjb250YWluIHRoZSBkZWZhdWx0IG9yXG4gICAgLy8gc3BlY2lmaWVkIHByb2ZpbGUgdGhyb3cgYW4gZXJyb3IuIFRoaXMgc2hvdWxkIGJlIGNvbnNpZGVyZWQgYSB0ZXJtaW5hbFxuICAgIC8vIHJlc29sdXRpb24gZXJyb3IgaWYgYSBwcm9maWxlIGhhcyBiZWVuIHNwZWNpZmllZCBieSB0aGUgdXNlciAod2hldGhlciB2aWFcbiAgICAvLyBhIHBhcmFtZXRlciwgYW5lbnZpcm9ubWVudCB2YXJpYWJsZSwgb3IgYW5vdGhlciBwcm9maWxlJ3MgYHNvdXJjZV9wcm9maWxlYCBrZXkpLlxuICAgIHRocm93IG5ldyBDcmVkZW50aWFsc1Byb3ZpZGVyRXJyb3IoYFByb2ZpbGUgJHtwcm9maWxlTmFtZX0gY291bGQgbm90IGJlIGZvdW5kIGluIHNoYXJlZCBjcmVkZW50aWFscyBmaWxlLmApO1xuICB9XG59O1xuXG5jb25zdCBleGVjUHJvbWlzZSA9IChjb21tYW5kOiBzdHJpbmcpID0+XG4gIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHtcbiAgICBleGVjKGNvbW1hbmQsIChlcnJvciwgc3Rkb3V0KSA9PiB7XG4gICAgICBpZiAoZXJyb3IpIHtcbiAgICAgICAgcmVqZWN0KGVycm9yKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICByZXNvbHZlKHN0ZG91dC50cmltKCkpO1xuICAgIH0pO1xuICB9KTtcbiJdfQ==","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isSsoProfile = exports.validateSsoProfile = exports.fromSSO = exports.EXPIRE_WINDOW_MS = void 0;\nconst client_sso_1 = require(\"@aws-sdk/client-sso\");\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nconst shared_ini_file_loader_1 = require(\"@aws-sdk/shared-ini-file-loader\");\nconst util_credentials_1 = require(\"@aws-sdk/util-credentials\");\nconst crypto_1 = require(\"crypto\");\nconst fs_1 = require(\"fs\");\nconst path_1 = require(\"path\");\n/**\n * The time window (15 mins) that SDK will treat the SSO token expires in before the defined expiration date in token.\n * This is needed because server side may have invalidated the token before the defined expiration date.\n *\n * @internal\n */\nexports.EXPIRE_WINDOW_MS = 15 * 60 * 1000;\nconst SHOULD_FAIL_CREDENTIAL_CHAIN = false;\n/**\n * Creates a credential provider that will read from a credential_process specified\n * in ini files.\n */\nconst fromSSO = (init = {}) => async () => {\n    const { ssoStartUrl, ssoAccountId, ssoRegion, ssoRoleName, ssoClient } = init;\n    if (!ssoStartUrl && !ssoAccountId && !ssoRegion && !ssoRoleName) {\n        // Load the SSO config from shared AWS config file.\n        const profiles = await (0, util_credentials_1.parseKnownFiles)(init);\n        const profileName = (0, util_credentials_1.getMasterProfileName)(init);\n        const profile = profiles[profileName];\n        if (!(0, exports.isSsoProfile)(profile)) {\n            throw new property_provider_1.CredentialsProviderError(`Profile ${profileName} is not configured with SSO credentials.`);\n        }\n        const { sso_start_url, sso_account_id, sso_region, sso_role_name } = (0, exports.validateSsoProfile)(profile);\n        return resolveSSOCredentials({\n            ssoStartUrl: sso_start_url,\n            ssoAccountId: sso_account_id,\n            ssoRegion: sso_region,\n            ssoRoleName: sso_role_name,\n            ssoClient: ssoClient,\n        });\n    }\n    else if (!ssoStartUrl || !ssoAccountId || !ssoRegion || !ssoRoleName) {\n        throw new property_provider_1.CredentialsProviderError('Incomplete configuration. The fromSSO() argument hash must include \"ssoStartUrl\",' +\n            ' \"ssoAccountId\", \"ssoRegion\", \"ssoRoleName\"');\n    }\n    else {\n        return resolveSSOCredentials({ ssoStartUrl, ssoAccountId, ssoRegion, ssoRoleName, ssoClient });\n    }\n};\nexports.fromSSO = fromSSO;\nconst resolveSSOCredentials = async ({ ssoStartUrl, ssoAccountId, ssoRegion, ssoRoleName, ssoClient, }) => {\n    const hasher = (0, crypto_1.createHash)(\"sha1\");\n    const cacheName = hasher.update(ssoStartUrl).digest(\"hex\");\n    const tokenFile = (0, path_1.join)((0, shared_ini_file_loader_1.getHomeDir)(), \".aws\", \"sso\", \"cache\", `${cacheName}.json`);\n    let token;\n    try {\n        token = JSON.parse((0, fs_1.readFileSync)(tokenFile, { encoding: \"utf-8\" }));\n        if (new Date(token.expiresAt).getTime() - Date.now() <= exports.EXPIRE_WINDOW_MS) {\n            throw new Error(\"SSO token is expired.\");\n        }\n    }\n    catch (e) {\n        throw new property_provider_1.CredentialsProviderError(`The SSO session associated with this profile has expired or is otherwise invalid. To refresh this SSO session ` +\n            `run aws sso login with the corresponding profile.`, SHOULD_FAIL_CREDENTIAL_CHAIN);\n    }\n    const { accessToken } = token;\n    const sso = ssoClient || new client_sso_1.SSOClient({ region: ssoRegion });\n    let ssoResp;\n    try {\n        ssoResp = await sso.send(new client_sso_1.GetRoleCredentialsCommand({\n            accountId: ssoAccountId,\n            roleName: ssoRoleName,\n            accessToken,\n        }));\n    }\n    catch (e) {\n        throw property_provider_1.CredentialsProviderError.from(e, SHOULD_FAIL_CREDENTIAL_CHAIN);\n    }\n    const { roleCredentials: { accessKeyId, secretAccessKey, sessionToken, expiration } = {} } = ssoResp;\n    if (!accessKeyId || !secretAccessKey || !sessionToken || !expiration) {\n        throw new property_provider_1.CredentialsProviderError(\"SSO returns an invalid temporary credential.\", SHOULD_FAIL_CREDENTIAL_CHAIN);\n    }\n    return { accessKeyId, secretAccessKey, sessionToken, expiration: new Date(expiration) };\n};\n/**\n * @internal\n */\nconst validateSsoProfile = (profile) => {\n    const { sso_start_url, sso_account_id, sso_region, sso_role_name } = profile;\n    if (!sso_start_url || !sso_account_id || !sso_region || !sso_role_name) {\n        throw new property_provider_1.CredentialsProviderError(`Profile is configured with invalid SSO credentials. Required parameters \"sso_account_id\", \"sso_region\", ` +\n            `\"sso_role_name\", \"sso_start_url\". Got ${Object.keys(profile).join(\", \")}\\nReference: https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-sso.html`, SHOULD_FAIL_CREDENTIAL_CHAIN);\n    }\n    return profile;\n};\nexports.validateSsoProfile = validateSsoProfile;\n/**\n * @internal\n */\nconst isSsoProfile = (arg) => arg &&\n    (typeof arg.sso_start_url === \"string\" ||\n        typeof arg.sso_account_id === \"string\" ||\n        typeof arg.sso_region === \"string\" ||\n        typeof arg.sso_role_name === \"string\");\nexports.isSsoProfile = isSsoProfile;\n//# sourceMappingURL=data:application/json;base64,","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromTokenFile = void 0;\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nconst fs_1 = require(\"fs\");\nconst fromWebToken_1 = require(\"./fromWebToken\");\nconst ENV_TOKEN_FILE = \"AWS_WEB_IDENTITY_TOKEN_FILE\";\nconst ENV_ROLE_ARN = \"AWS_ROLE_ARN\";\nconst ENV_ROLE_SESSION_NAME = \"AWS_ROLE_SESSION_NAME\";\n/**\n * Represents OIDC credentials from a file on disk.\n */\nconst fromTokenFile = (init = {}) => async () => {\n    return resolveTokenFile(init);\n};\nexports.fromTokenFile = fromTokenFile;\nconst resolveTokenFile = (init) => {\n    var _a, _b, _c;\n    const webIdentityTokenFile = (_a = init === null || init === void 0 ? void 0 : init.webIdentityTokenFile) !== null && _a !== void 0 ? _a : process.env[ENV_TOKEN_FILE];\n    const roleArn = (_b = init === null || init === void 0 ? void 0 : init.roleArn) !== null && _b !== void 0 ? _b : process.env[ENV_ROLE_ARN];\n    const roleSessionName = (_c = init === null || init === void 0 ? void 0 : init.roleSessionName) !== null && _c !== void 0 ? _c : process.env[ENV_ROLE_SESSION_NAME];\n    if (!webIdentityTokenFile || !roleArn) {\n        throw new property_provider_1.CredentialsProviderError(\"Web identity configuration not specified\");\n    }\n    return (0, fromWebToken_1.fromWebToken)({\n        ...init,\n        webIdentityToken: (0, fs_1.readFileSync)(webIdentityTokenFile, { encoding: \"ascii\" }),\n        roleArn,\n        roleSessionName,\n    })();\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZnJvbVRva2VuRmlsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9mcm9tVG9rZW5GaWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLGtFQUFzRTtBQUV0RSwyQkFBa0M7QUFFbEMsaURBQWdFO0FBRWhFLE1BQU0sY0FBYyxHQUFHLDZCQUE2QixDQUFDO0FBQ3JELE1BQU0sWUFBWSxHQUFHLGNBQWMsQ0FBQztBQUNwQyxNQUFNLHFCQUFxQixHQUFHLHVCQUF1QixDQUFDO0FBU3REOztHQUVHO0FBQ0ksTUFBTSxhQUFhLEdBQ3hCLENBQUMsT0FBMEIsRUFBRSxFQUFzQixFQUFFLENBQ3JELEtBQUssSUFBSSxFQUFFO0lBQ1QsT0FBTyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUNoQyxDQUFDLENBQUM7QUFKUyxRQUFBLGFBQWEsaUJBSXRCO0FBRUosTUFBTSxnQkFBZ0IsR0FBRyxDQUFDLElBQXdCLEVBQXdCLEVBQUU7O0lBQzFFLE1BQU0sb0JBQW9CLEdBQUcsTUFBQSxJQUFJLGFBQUosSUFBSSx1QkFBSixJQUFJLENBQUUsb0JBQW9CLG1DQUFJLE9BQU8sQ0FBQyxHQUFHLENBQUMsY0FBYyxDQUFDLENBQUM7SUFDdkYsTUFBTSxPQUFPLEdBQUcsTUFBQSxJQUFJLGFBQUosSUFBSSx1QkFBSixJQUFJLENBQUUsT0FBTyxtQ0FBSSxPQUFPLENBQUMsR0FBRyxDQUFDLFlBQVksQ0FBQyxDQUFDO0lBQzNELE1BQU0sZUFBZSxHQUFHLE1BQUEsSUFBSSxhQUFKLElBQUksdUJBQUosSUFBSSxDQUFFLGVBQWUsbUNBQUksT0FBTyxDQUFDLEdBQUcsQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDO0lBRXBGLElBQUksQ0FBQyxvQkFBb0IsSUFBSSxDQUFDLE9BQU8sRUFBRTtRQUNyQyxNQUFNLElBQUksNENBQXdCLENBQUMsMENBQTBDLENBQUMsQ0FBQztLQUNoRjtJQUVELE9BQU8sSUFBQSwyQkFBWSxFQUFDO1FBQ2xCLEdBQUcsSUFBSTtRQUNQLGdCQUFnQixFQUFFLElBQUEsaUJBQVksRUFBQyxvQkFBb0IsRUFBRSxFQUFFLFFBQVEsRUFBRSxPQUFPLEVBQUUsQ0FBQztRQUMzRSxPQUFPO1FBQ1AsZUFBZTtLQUNoQixDQUFDLEVBQUUsQ0FBQztBQUNQLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENyZWRlbnRpYWxzUHJvdmlkZXJFcnJvciB9IGZyb20gXCJAYXdzLXNkay9wcm9wZXJ0eS1wcm92aWRlclwiO1xuaW1wb3J0IHsgQ3JlZGVudGlhbFByb3ZpZGVyLCBDcmVkZW50aWFscyB9IGZyb20gXCJAYXdzLXNkay90eXBlc1wiO1xuaW1wb3J0IHsgcmVhZEZpbGVTeW5jIH0gZnJvbSBcImZzXCI7XG5cbmltcG9ydCB7IGZyb21XZWJUb2tlbiwgRnJvbVdlYlRva2VuSW5pdCB9IGZyb20gXCIuL2Zyb21XZWJUb2tlblwiO1xuXG5jb25zdCBFTlZfVE9LRU5fRklMRSA9IFwiQVdTX1dFQl9JREVOVElUWV9UT0tFTl9GSUxFXCI7XG5jb25zdCBFTlZfUk9MRV9BUk4gPSBcIkFXU19ST0xFX0FSTlwiO1xuY29uc3QgRU5WX1JPTEVfU0VTU0lPTl9OQU1FID0gXCJBV1NfUk9MRV9TRVNTSU9OX05BTUVcIjtcblxuZXhwb3J0IGludGVyZmFjZSBGcm9tVG9rZW5GaWxlSW5pdCBleHRlbmRzIFBhcnRpYWw8T21pdDxGcm9tV2ViVG9rZW5Jbml0LCBcIndlYklkZW50aXR5VG9rZW5cIj4+IHtcbiAgLyoqXG4gICAqIEZpbGUgbG9jYXRpb24gb2Ygd2hlcmUgdGhlIGBPSURDYCB0b2tlbiBpcyBzdG9yZWQuXG4gICAqL1xuICB3ZWJJZGVudGl0eVRva2VuRmlsZT86IHN0cmluZztcbn1cblxuLyoqXG4gKiBSZXByZXNlbnRzIE9JREMgY3JlZGVudGlhbHMgZnJvbSBhIGZpbGUgb24gZGlzay5cbiAqL1xuZXhwb3J0IGNvbnN0IGZyb21Ub2tlbkZpbGUgPVxuICAoaW5pdDogRnJvbVRva2VuRmlsZUluaXQgPSB7fSk6IENyZWRlbnRpYWxQcm92aWRlciA9PlxuICBhc3luYyAoKSA9PiB7XG4gICAgcmV0dXJuIHJlc29sdmVUb2tlbkZpbGUoaW5pdCk7XG4gIH07XG5cbmNvbnN0IHJlc29sdmVUb2tlbkZpbGUgPSAoaW5pdD86IEZyb21Ub2tlbkZpbGVJbml0KTogUHJvbWlzZTxDcmVkZW50aWFscz4gPT4ge1xuICBjb25zdCB3ZWJJZGVudGl0eVRva2VuRmlsZSA9IGluaXQ/LndlYklkZW50aXR5VG9rZW5GaWxlID8/IHByb2Nlc3MuZW52W0VOVl9UT0tFTl9GSUxFXTtcbiAgY29uc3Qgcm9sZUFybiA9IGluaXQ/LnJvbGVBcm4gPz8gcHJvY2Vzcy5lbnZbRU5WX1JPTEVfQVJOXTtcbiAgY29uc3Qgcm9sZVNlc3Npb25OYW1lID0gaW5pdD8ucm9sZVNlc3Npb25OYW1lID8/IHByb2Nlc3MuZW52W0VOVl9ST0xFX1NFU1NJT05fTkFNRV07XG5cbiAgaWYgKCF3ZWJJZGVudGl0eVRva2VuRmlsZSB8fCAhcm9sZUFybikge1xuICAgIHRocm93IG5ldyBDcmVkZW50aWFsc1Byb3ZpZGVyRXJyb3IoXCJXZWIgaWRlbnRpdHkgY29uZmlndXJhdGlvbiBub3Qgc3BlY2lmaWVkXCIpO1xuICB9XG5cbiAgcmV0dXJuIGZyb21XZWJUb2tlbih7XG4gICAgLi4uaW5pdCxcbiAgICB3ZWJJZGVudGl0eVRva2VuOiByZWFkRmlsZVN5bmMod2ViSWRlbnRpdHlUb2tlbkZpbGUsIHsgZW5jb2Rpbmc6IFwiYXNjaWlcIiB9KSxcbiAgICByb2xlQXJuLFxuICAgIHJvbGVTZXNzaW9uTmFtZSxcbiAgfSkoKTtcbn07XG4iXX0=","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromWebToken = void 0;\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nconst fromWebToken = (init) => () => {\n    const { roleArn, roleSessionName, webIdentityToken, providerId, policyArns, policy, durationSeconds, roleAssumerWithWebIdentity, } = init;\n    if (!roleAssumerWithWebIdentity) {\n        throw new property_provider_1.CredentialsProviderError(`Role Arn '${roleArn}' needs to be assumed with web identity,` +\n            ` but no role assumption callback was provided.`, false);\n    }\n    return roleAssumerWithWebIdentity({\n        RoleArn: roleArn,\n        RoleSessionName: roleSessionName !== null && roleSessionName !== void 0 ? roleSessionName : `aws-sdk-js-session-${Date.now()}`,\n        WebIdentityToken: webIdentityToken,\n        ProviderId: providerId,\n        PolicyArns: policyArns,\n        Policy: policy,\n        DurationSeconds: durationSeconds,\n    });\n};\nexports.fromWebToken = fromWebToken;\n//# sourceMappingURL=data:application/json;base64,","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\n(0, tslib_1.__exportStar)(require(\"./fromTokenFile\"), exports);\n(0, tslib_1.__exportStar)(require(\"./fromWebToken\"), exports);\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsK0RBQWdDO0FBQ2hDLDhEQUErQiIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gXCIuL2Zyb21Ub2tlbkZpbGVcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2Zyb21XZWJUb2tlblwiO1xuIl19","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Hash = void 0;\nconst util_buffer_from_1 = require(\"@aws-sdk/util-buffer-from\");\nconst buffer_1 = require(\"buffer\");\nconst crypto_1 = require(\"crypto\");\nclass Hash {\n    constructor(algorithmIdentifier, secret) {\n        this.hash = secret ? (0, crypto_1.createHmac)(algorithmIdentifier, castSourceData(secret)) : (0, crypto_1.createHash)(algorithmIdentifier);\n    }\n    update(toHash, encoding) {\n        this.hash.update(castSourceData(toHash, encoding));\n    }\n    digest() {\n        return Promise.resolve(this.hash.digest());\n    }\n}\nexports.Hash = Hash;\nfunction castSourceData(toCast, encoding) {\n    if (buffer_1.Buffer.isBuffer(toCast)) {\n        return toCast;\n    }\n    if (typeof toCast === \"string\") {\n        return (0, util_buffer_from_1.fromString)(toCast, encoding);\n    }\n    if (ArrayBuffer.isView(toCast)) {\n        return (0, util_buffer_from_1.fromArrayBuffer)(toCast.buffer, toCast.byteOffset, toCast.byteLength);\n    }\n    return (0, util_buffer_from_1.fromArrayBuffer)(toCast);\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQ0EsZ0VBQXdGO0FBQ3hGLG1DQUFnQztBQUNoQyxtQ0FBd0U7QUFFeEUsTUFBYSxJQUFJO0lBR2YsWUFBWSxtQkFBMkIsRUFBRSxNQUFtQjtRQUMxRCxJQUFJLENBQUMsSUFBSSxHQUFHLE1BQU0sQ0FBQyxDQUFDLENBQUMsSUFBQSxtQkFBVSxFQUFDLG1CQUFtQixFQUFFLGNBQWMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFBLG1CQUFVLEVBQUMsbUJBQW1CLENBQUMsQ0FBQztJQUNqSCxDQUFDO0lBRUQsTUFBTSxDQUFDLE1BQWtCLEVBQUUsUUFBc0M7UUFDL0QsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsY0FBYyxDQUFDLE1BQU0sRUFBRSxRQUFRLENBQUMsQ0FBQyxDQUFDO0lBQ3JELENBQUM7SUFFRCxNQUFNO1FBQ0osT0FBTyxPQUFPLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUMsQ0FBQztJQUM3QyxDQUFDO0NBQ0Y7QUFkRCxvQkFjQztBQUVELFNBQVMsY0FBYyxDQUFDLE1BQWtCLEVBQUUsUUFBeUI7SUFDbkUsSUFBSSxlQUFNLENBQUMsUUFBUSxDQUFDLE1BQU0sQ0FBQyxFQUFFO1FBQzNCLE9BQU8sTUFBTSxDQUFDO0tBQ2Y7SUFFRCxJQUFJLE9BQU8sTUFBTSxLQUFLLFFBQVEsRUFBRTtRQUM5QixPQUFPLElBQUEsNkJBQVUsRUFBQyxNQUFNLEVBQUUsUUFBUSxDQUFDLENBQUM7S0FDckM7SUFFRCxJQUFJLFdBQVcsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLEVBQUU7UUFDOUIsT0FBTyxJQUFBLGtDQUFlLEVBQUMsTUFBTSxDQUFDLE1BQU0sRUFBRSxNQUFNLENBQUMsVUFBVSxFQUFFLE1BQU0sQ0FBQyxVQUFVLENBQUMsQ0FBQztLQUM3RTtJQUVELE9BQU8sSUFBQSxrQ0FBZSxFQUFDLE1BQU0sQ0FBQyxDQUFDO0FBQ2pDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBIYXNoIGFzIElIYXNoLCBTb3VyY2VEYXRhIH0gZnJvbSBcIkBhd3Mtc2RrL3R5cGVzXCI7XG5pbXBvcnQgeyBmcm9tQXJyYXlCdWZmZXIsIGZyb21TdHJpbmcsIFN0cmluZ0VuY29kaW5nIH0gZnJvbSBcIkBhd3Mtc2RrL3V0aWwtYnVmZmVyLWZyb21cIjtcbmltcG9ydCB7IEJ1ZmZlciB9IGZyb20gXCJidWZmZXJcIjtcbmltcG9ydCB7IGNyZWF0ZUhhc2gsIGNyZWF0ZUhtYWMsIEhhc2ggYXMgTm9kZUhhc2gsIEhtYWMgfSBmcm9tIFwiY3J5cHRvXCI7XG5cbmV4cG9ydCBjbGFzcyBIYXNoIGltcGxlbWVudHMgSUhhc2gge1xuICBwcml2YXRlIHJlYWRvbmx5IGhhc2g6IE5vZGVIYXNoIHwgSG1hYztcblxuICBjb25zdHJ1Y3RvcihhbGdvcml0aG1JZGVudGlmaWVyOiBzdHJpbmcsIHNlY3JldD86IFNvdXJjZURhdGEpIHtcbiAgICB0aGlzLmhhc2ggPSBzZWNyZXQgPyBjcmVhdGVIbWFjKGFsZ29yaXRobUlkZW50aWZpZXIsIGNhc3RTb3VyY2VEYXRhKHNlY3JldCkpIDogY3JlYXRlSGFzaChhbGdvcml0aG1JZGVudGlmaWVyKTtcbiAgfVxuXG4gIHVwZGF0ZSh0b0hhc2g6IFNvdXJjZURhdGEsIGVuY29kaW5nPzogXCJ1dGY4XCIgfCBcImFzY2lpXCIgfCBcImxhdGluMVwiKTogdm9pZCB7XG4gICAgdGhpcy5oYXNoLnVwZGF0ZShjYXN0U291cmNlRGF0YSh0b0hhc2gsIGVuY29kaW5nKSk7XG4gIH1cblxuICBkaWdlc3QoKTogUHJvbWlzZTxVaW50OEFycmF5PiB7XG4gICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSh0aGlzLmhhc2guZGlnZXN0KCkpO1xuICB9XG59XG5cbmZ1bmN0aW9uIGNhc3RTb3VyY2VEYXRhKHRvQ2FzdDogU291cmNlRGF0YSwgZW5jb2Rpbmc/OiBTdHJpbmdFbmNvZGluZyk6IEJ1ZmZlciB7XG4gIGlmIChCdWZmZXIuaXNCdWZmZXIodG9DYXN0KSkge1xuICAgIHJldHVybiB0b0Nhc3Q7XG4gIH1cblxuICBpZiAodHlwZW9mIHRvQ2FzdCA9PT0gXCJzdHJpbmdcIikge1xuICAgIHJldHVybiBmcm9tU3RyaW5nKHRvQ2FzdCwgZW5jb2RpbmcpO1xuICB9XG5cbiAgaWYgKEFycmF5QnVmZmVyLmlzVmlldyh0b0Nhc3QpKSB7XG4gICAgcmV0dXJuIGZyb21BcnJheUJ1ZmZlcih0b0Nhc3QuYnVmZmVyLCB0b0Nhc3QuYnl0ZU9mZnNldCwgdG9DYXN0LmJ5dGVMZW5ndGgpO1xuICB9XG5cbiAgcmV0dXJuIGZyb21BcnJheUJ1ZmZlcih0b0Nhc3QpO1xufVxuIl19","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isArrayBuffer = void 0;\nconst isArrayBuffer = (arg) => (typeof ArrayBuffer === \"function\" && arg instanceof ArrayBuffer) ||\n    Object.prototype.toString.call(arg) === \"[object ArrayBuffer]\";\nexports.isArrayBuffer = isArrayBuffer;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQU8sTUFBTSxhQUFhLEdBQUcsQ0FBQyxHQUFRLEVBQXNCLEVBQUUsQ0FDNUQsQ0FBQyxPQUFPLFdBQVcsS0FBSyxVQUFVLElBQUksR0FBRyxZQUFZLFdBQVcsQ0FBQztJQUNqRSxNQUFNLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLEtBQUssc0JBQXNCLENBQUM7QUFGcEQsUUFBQSxhQUFhLGlCQUV1QyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBpc0FycmF5QnVmZmVyID0gKGFyZzogYW55KTogYXJnIGlzIEFycmF5QnVmZmVyID0+XG4gICh0eXBlb2YgQXJyYXlCdWZmZXIgPT09IFwiZnVuY3Rpb25cIiAmJiBhcmcgaW5zdGFuY2VvZiBBcnJheUJ1ZmZlcikgfHxcbiAgT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGFyZykgPT09IFwiW29iamVjdCBBcnJheUJ1ZmZlcl1cIjtcbiJdfQ==","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getContentLengthPlugin = exports.contentLengthMiddlewareOptions = exports.contentLengthMiddleware = void 0;\nconst protocol_http_1 = require(\"@aws-sdk/protocol-http\");\nconst CONTENT_LENGTH_HEADER = \"content-length\";\nfunction contentLengthMiddleware(bodyLengthChecker) {\n    return (next) => async (args) => {\n        const request = args.request;\n        if (protocol_http_1.HttpRequest.isInstance(request)) {\n            const { body, headers } = request;\n            if (body &&\n                Object.keys(headers)\n                    .map((str) => str.toLowerCase())\n                    .indexOf(CONTENT_LENGTH_HEADER) === -1) {\n                const length = bodyLengthChecker(body);\n                if (length !== undefined) {\n                    request.headers = {\n                        ...request.headers,\n                        [CONTENT_LENGTH_HEADER]: String(length),\n                    };\n                }\n            }\n        }\n        return next({\n            ...args,\n            request,\n        });\n    };\n}\nexports.contentLengthMiddleware = contentLengthMiddleware;\nexports.contentLengthMiddlewareOptions = {\n    step: \"build\",\n    tags: [\"SET_CONTENT_LENGTH\", \"CONTENT_LENGTH\"],\n    name: \"contentLengthMiddleware\",\n    override: true,\n};\nconst getContentLengthPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(contentLengthMiddleware(options.bodyLengthChecker), exports.contentLengthMiddlewareOptions);\n    },\n});\nexports.getContentLengthPlugin = getContentLengthPlugin;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsMERBQXFEO0FBWXJELE1BQU0scUJBQXFCLEdBQUcsZ0JBQWdCLENBQUM7QUFFL0MsU0FBZ0IsdUJBQXVCLENBQUMsaUJBQXVDO0lBQzdFLE9BQU8sQ0FBZ0MsSUFBK0IsRUFBNkIsRUFBRSxDQUNuRyxLQUFLLEVBQUUsSUFBZ0MsRUFBdUMsRUFBRTtRQUM5RSxNQUFNLE9BQU8sR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDO1FBQzdCLElBQUksMkJBQVcsQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDLEVBQUU7WUFDbkMsTUFBTSxFQUFFLElBQUksRUFBRSxPQUFPLEVBQUUsR0FBRyxPQUFPLENBQUM7WUFDbEMsSUFDRSxJQUFJO2dCQUNKLE1BQU0sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDO3FCQUNqQixHQUFHLENBQUMsQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDLEdBQUcsQ0FBQyxXQUFXLEVBQUUsQ0FBQztxQkFDL0IsT0FBTyxDQUFDLHFCQUFxQixDQUFDLEtBQUssQ0FBQyxDQUFDLEVBQ3hDO2dCQUNBLE1BQU0sTUFBTSxHQUFHLGlCQUFpQixDQUFDLElBQUksQ0FBQyxDQUFDO2dCQUN2QyxJQUFJLE1BQU0sS0FBSyxTQUFTLEVBQUU7b0JBQ3hCLE9BQU8sQ0FBQyxPQUFPLEdBQUc7d0JBQ2hCLEdBQUcsT0FBTyxDQUFDLE9BQU87d0JBQ2xCLENBQUMscUJBQXFCLENBQUMsRUFBRSxNQUFNLENBQUMsTUFBTSxDQUFDO3FCQUN4QyxDQUFDO2lCQUNIO2FBQ0Y7U0FDRjtRQUVELE9BQU8sSUFBSSxDQUFDO1lBQ1YsR0FBRyxJQUFJO1lBQ1AsT0FBTztTQUNSLENBQUMsQ0FBQztJQUNMLENBQUMsQ0FBQztBQUNOLENBQUM7QUEzQkQsMERBMkJDO0FBRVksUUFBQSw4QkFBOEIsR0FBd0I7SUFDakUsSUFBSSxFQUFFLE9BQU87SUFDYixJQUFJLEVBQUUsQ0FBQyxvQkFBb0IsRUFBRSxnQkFBZ0IsQ0FBQztJQUM5QyxJQUFJLEVBQUUseUJBQXlCO0lBQy9CLFFBQVEsRUFBRSxJQUFJO0NBQ2YsQ0FBQztBQUVLLE1BQU0sc0JBQXNCLEdBQUcsQ0FBQyxPQUFvRCxFQUF1QixFQUFFLENBQUMsQ0FBQztJQUNwSCxZQUFZLEVBQUUsQ0FBQyxXQUFXLEVBQUUsRUFBRTtRQUM1QixXQUFXLENBQUMsR0FBRyxDQUFDLHVCQUF1QixDQUFDLE9BQU8sQ0FBQyxpQkFBaUIsQ0FBQyxFQUFFLHNDQUE4QixDQUFDLENBQUM7SUFDdEcsQ0FBQztDQUNGLENBQUMsQ0FBQztBQUpVLFFBQUEsc0JBQXNCLDBCQUloQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEh0dHBSZXF1ZXN0IH0gZnJvbSBcIkBhd3Mtc2RrL3Byb3RvY29sLWh0dHBcIjtcbmltcG9ydCB7XG4gIEJvZHlMZW5ndGhDYWxjdWxhdG9yLFxuICBCdWlsZEhhbmRsZXIsXG4gIEJ1aWxkSGFuZGxlckFyZ3VtZW50cyxcbiAgQnVpbGRIYW5kbGVyT3B0aW9ucyxcbiAgQnVpbGRIYW5kbGVyT3V0cHV0LFxuICBCdWlsZE1pZGRsZXdhcmUsXG4gIE1ldGFkYXRhQmVhcmVyLFxuICBQbHVnZ2FibGUsXG59IGZyb20gXCJAYXdzLXNkay90eXBlc1wiO1xuXG5jb25zdCBDT05URU5UX0xFTkdUSF9IRUFERVIgPSBcImNvbnRlbnQtbGVuZ3RoXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBjb250ZW50TGVuZ3RoTWlkZGxld2FyZShib2R5TGVuZ3RoQ2hlY2tlcjogQm9keUxlbmd0aENhbGN1bGF0b3IpOiBCdWlsZE1pZGRsZXdhcmU8YW55LCBhbnk+IHtcbiAgcmV0dXJuIDxPdXRwdXQgZXh0ZW5kcyBNZXRhZGF0YUJlYXJlcj4obmV4dDogQnVpbGRIYW5kbGVyPGFueSwgT3V0cHV0Pik6IEJ1aWxkSGFuZGxlcjxhbnksIE91dHB1dD4gPT5cbiAgICBhc3luYyAoYXJnczogQnVpbGRIYW5kbGVyQXJndW1lbnRzPGFueT4pOiBQcm9taXNlPEJ1aWxkSGFuZGxlck91dHB1dDxPdXRwdXQ+PiA9PiB7XG4gICAgICBjb25zdCByZXF1ZXN0ID0gYXJncy5yZXF1ZXN0O1xuICAgICAgaWYgKEh0dHBSZXF1ZXN0LmlzSW5zdGFuY2UocmVxdWVzdCkpIHtcbiAgICAgICAgY29uc3QgeyBib2R5LCBoZWFkZXJzIH0gPSByZXF1ZXN0O1xuICAgICAgICBpZiAoXG4gICAgICAgICAgYm9keSAmJlxuICAgICAgICAgIE9iamVjdC5rZXlzKGhlYWRlcnMpXG4gICAgICAgICAgICAubWFwKChzdHIpID0+IHN0ci50b0xvd2VyQ2FzZSgpKVxuICAgICAgICAgICAgLmluZGV4T2YoQ09OVEVOVF9MRU5HVEhfSEVBREVSKSA9PT0gLTFcbiAgICAgICAgKSB7XG4gICAgICAgICAgY29uc3QgbGVuZ3RoID0gYm9keUxlbmd0aENoZWNrZXIoYm9keSk7XG4gICAgICAgICAgaWYgKGxlbmd0aCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICByZXF1ZXN0LmhlYWRlcnMgPSB7XG4gICAgICAgICAgICAgIC4uLnJlcXVlc3QuaGVhZGVycyxcbiAgICAgICAgICAgICAgW0NPTlRFTlRfTEVOR1RIX0hFQURFUl06IFN0cmluZyhsZW5ndGgpLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgcmV0dXJuIG5leHQoe1xuICAgICAgICAuLi5hcmdzLFxuICAgICAgICByZXF1ZXN0LFxuICAgICAgfSk7XG4gICAgfTtcbn1cblxuZXhwb3J0IGNvbnN0IGNvbnRlbnRMZW5ndGhNaWRkbGV3YXJlT3B0aW9uczogQnVpbGRIYW5kbGVyT3B0aW9ucyA9IHtcbiAgc3RlcDogXCJidWlsZFwiLFxuICB0YWdzOiBbXCJTRVRfQ09OVEVOVF9MRU5HVEhcIiwgXCJDT05URU5UX0xFTkdUSFwiXSxcbiAgbmFtZTogXCJjb250ZW50TGVuZ3RoTWlkZGxld2FyZVwiLFxuICBvdmVycmlkZTogdHJ1ZSxcbn07XG5cbmV4cG9ydCBjb25zdCBnZXRDb250ZW50TGVuZ3RoUGx1Z2luID0gKG9wdGlvbnM6IHsgYm9keUxlbmd0aENoZWNrZXI6IEJvZHlMZW5ndGhDYWxjdWxhdG9yIH0pOiBQbHVnZ2FibGU8YW55LCBhbnk+ID0+ICh7XG4gIGFwcGx5VG9TdGFjazogKGNsaWVudFN0YWNrKSA9PiB7XG4gICAgY2xpZW50U3RhY2suYWRkKGNvbnRlbnRMZW5ndGhNaWRkbGV3YXJlKG9wdGlvbnMuYm9keUxlbmd0aENoZWNrZXIpLCBjb250ZW50TGVuZ3RoTWlkZGxld2FyZU9wdGlvbnMpO1xuICB9LFxufSk7XG4iXX0=","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getHostHeaderPlugin = exports.hostHeaderMiddlewareOptions = exports.hostHeaderMiddleware = exports.resolveHostHeaderConfig = void 0;\nconst protocol_http_1 = require(\"@aws-sdk/protocol-http\");\nfunction resolveHostHeaderConfig(input) {\n    return input;\n}\nexports.resolveHostHeaderConfig = resolveHostHeaderConfig;\nconst hostHeaderMiddleware = (options) => (next) => async (args) => {\n    if (!protocol_http_1.HttpRequest.isInstance(args.request))\n        return next(args);\n    const { request } = args;\n    const { handlerProtocol = \"\" } = options.requestHandler.metadata || {};\n    //For H2 request, remove 'host' header and use ':authority' header instead\n    //reference: https://nodejs.org/dist/latest-v13.x/docs/api/errors.html#ERR_HTTP2_INVALID_CONNECTION_HEADERS\n    if (handlerProtocol.indexOf(\"h2\") >= 0 && !request.headers[\":authority\"]) {\n        delete request.headers[\"host\"];\n        request.headers[\":authority\"] = \"\";\n        //non-H2 request and 'host' header is not set, set the 'host' header to request's hostname.\n    }\n    else if (!request.headers[\"host\"]) {\n        request.headers[\"host\"] = request.hostname;\n    }\n    return next(args);\n};\nexports.hostHeaderMiddleware = hostHeaderMiddleware;\nexports.hostHeaderMiddlewareOptions = {\n    name: \"hostHeaderMiddleware\",\n    step: \"build\",\n    priority: \"low\",\n    tags: [\"HOST\"],\n    override: true,\n};\nconst getHostHeaderPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add((0, exports.hostHeaderMiddleware)(options), exports.hostHeaderMiddlewareOptions);\n    },\n});\nexports.getHostHeaderPlugin = getHostHeaderPlugin;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsMERBQXFEO0FBYXJELFNBQWdCLHVCQUF1QixDQUNyQyxLQUFxRDtJQUVyRCxPQUFPLEtBQUssQ0FBQztBQUNmLENBQUM7QUFKRCwwREFJQztBQUVNLE1BQU0sb0JBQW9CLEdBQy9CLENBQThDLE9BQWlDLEVBQWtDLEVBQUUsQ0FDbkgsQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUNULEtBQUssRUFBRSxJQUFJLEVBQUUsRUFBRTtJQUNiLElBQUksQ0FBQywyQkFBVyxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDO1FBQUUsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDN0QsTUFBTSxFQUFFLE9BQU8sRUFBRSxHQUFHLElBQUksQ0FBQztJQUN6QixNQUFNLEVBQUUsZUFBZSxHQUFHLEVBQUUsRUFBRSxHQUFHLE9BQU8sQ0FBQyxjQUFjLENBQUMsUUFBUSxJQUFJLEVBQUUsQ0FBQztJQUN2RSwwRUFBMEU7SUFDMUUsMkdBQTJHO0lBQzNHLElBQUksZUFBZSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQyxFQUFFO1FBQ3hFLE9BQU8sT0FBTyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQztRQUMvQixPQUFPLENBQUMsT0FBTyxDQUFDLFlBQVksQ0FBQyxHQUFHLEVBQUUsQ0FBQztRQUNuQywyRkFBMkY7S0FDNUY7U0FBTSxJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsRUFBRTtRQUNuQyxPQUFPLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxHQUFHLE9BQU8sQ0FBQyxRQUFRLENBQUM7S0FDNUM7SUFDRCxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUNwQixDQUFDLENBQUM7QUFqQlMsUUFBQSxvQkFBb0Isd0JBaUI3QjtBQUVTLFFBQUEsMkJBQTJCLEdBQTJDO0lBQ2pGLElBQUksRUFBRSxzQkFBc0I7SUFDNUIsSUFBSSxFQUFFLE9BQU87SUFDYixRQUFRLEVBQUUsS0FBSztJQUNmLElBQUksRUFBRSxDQUFDLE1BQU0sQ0FBQztJQUNkLFFBQVEsRUFBRSxJQUFJO0NBQ2YsQ0FBQztBQUVLLE1BQU0sbUJBQW1CLEdBQUcsQ0FBQyxPQUFpQyxFQUF1QixFQUFFLENBQUMsQ0FBQztJQUM5RixZQUFZLEVBQUUsQ0FBQyxXQUFXLEVBQUUsRUFBRTtRQUM1QixXQUFXLENBQUMsR0FBRyxDQUFDLElBQUEsNEJBQW9CLEVBQUMsT0FBTyxDQUFDLEVBQUUsbUNBQTJCLENBQUMsQ0FBQztJQUM5RSxDQUFDO0NBQ0YsQ0FBQyxDQUFDO0FBSlUsUUFBQSxtQkFBbUIsdUJBSTdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSHR0cFJlcXVlc3QgfSBmcm9tIFwiQGF3cy1zZGsvcHJvdG9jb2wtaHR0cFwiO1xuaW1wb3J0IHsgQWJzb2x1dGVMb2NhdGlvbiwgQnVpbGRIYW5kbGVyT3B0aW9ucywgQnVpbGRNaWRkbGV3YXJlLCBQbHVnZ2FibGUsIFJlcXVlc3RIYW5kbGVyIH0gZnJvbSBcIkBhd3Mtc2RrL3R5cGVzXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgSG9zdEhlYWRlcklucHV0Q29uZmlnIHt9XG5pbnRlcmZhY2UgUHJldmlvdXNseVJlc29sdmVkIHtcbiAgcmVxdWVzdEhhbmRsZXI6IFJlcXVlc3RIYW5kbGVyPGFueSwgYW55Pjtcbn1cbmV4cG9ydCBpbnRlcmZhY2UgSG9zdEhlYWRlclJlc29sdmVkQ29uZmlnIHtcbiAgLyoqXG4gICAqIFRoZSBIVFRQIGhhbmRsZXIgdG8gdXNlLiBGZXRjaCBpbiBicm93c2VyIGFuZCBIdHRwcyBpbiBOb2RlanMuXG4gICAqL1xuICByZXF1ZXN0SGFuZGxlcjogUmVxdWVzdEhhbmRsZXI8YW55LCBhbnk+O1xufVxuZXhwb3J0IGZ1bmN0aW9uIHJlc29sdmVIb3N0SGVhZGVyQ29uZmlnPFQ+KFxuICBpbnB1dDogVCAmIFByZXZpb3VzbHlSZXNvbHZlZCAmIEhvc3RIZWFkZXJJbnB1dENvbmZpZ1xuKTogVCAmIEhvc3RIZWFkZXJSZXNvbHZlZENvbmZpZyB7XG4gIHJldHVybiBpbnB1dDtcbn1cblxuZXhwb3J0IGNvbnN0IGhvc3RIZWFkZXJNaWRkbGV3YXJlID1cbiAgPElucHV0IGV4dGVuZHMgb2JqZWN0LCBPdXRwdXQgZXh0ZW5kcyBvYmplY3Q+KG9wdGlvbnM6IEhvc3RIZWFkZXJSZXNvbHZlZENvbmZpZyk6IEJ1aWxkTWlkZGxld2FyZTxJbnB1dCwgT3V0cHV0PiA9PlxuICAobmV4dCkgPT5cbiAgYXN5bmMgKGFyZ3MpID0+IHtcbiAgICBpZiAoIUh0dHBSZXF1ZXN0LmlzSW5zdGFuY2UoYXJncy5yZXF1ZXN0KSkgcmV0dXJuIG5leHQoYXJncyk7XG4gICAgY29uc3QgeyByZXF1ZXN0IH0gPSBhcmdzO1xuICAgIGNvbnN0IHsgaGFuZGxlclByb3RvY29sID0gXCJcIiB9ID0gb3B0aW9ucy5yZXF1ZXN0SGFuZGxlci5tZXRhZGF0YSB8fCB7fTtcbiAgICAvL0ZvciBIMiByZXF1ZXN0LCByZW1vdmUgJ2hvc3QnIGhlYWRlciBhbmQgdXNlICc6YXV0aG9yaXR5JyBoZWFkZXIgaW5zdGVhZFxuICAgIC8vcmVmZXJlbmNlOiBodHRwczovL25vZGVqcy5vcmcvZGlzdC9sYXRlc3QtdjEzLngvZG9jcy9hcGkvZXJyb3JzLmh0bWwjRVJSX0hUVFAyX0lOVkFMSURfQ09OTkVDVElPTl9IRUFERVJTXG4gICAgaWYgKGhhbmRsZXJQcm90b2NvbC5pbmRleE9mKFwiaDJcIikgPj0gMCAmJiAhcmVxdWVzdC5oZWFkZXJzW1wiOmF1dGhvcml0eVwiXSkge1xuICAgICAgZGVsZXRlIHJlcXVlc3QuaGVhZGVyc1tcImhvc3RcIl07XG4gICAgICByZXF1ZXN0LmhlYWRlcnNbXCI6YXV0aG9yaXR5XCJdID0gXCJcIjtcbiAgICAgIC8vbm9uLUgyIHJlcXVlc3QgYW5kICdob3N0JyBoZWFkZXIgaXMgbm90IHNldCwgc2V0IHRoZSAnaG9zdCcgaGVhZGVyIHRvIHJlcXVlc3QncyBob3N0bmFtZS5cbiAgICB9IGVsc2UgaWYgKCFyZXF1ZXN0LmhlYWRlcnNbXCJob3N0XCJdKSB7XG4gICAgICByZXF1ZXN0LmhlYWRlcnNbXCJob3N0XCJdID0gcmVxdWVzdC5ob3N0bmFtZTtcbiAgICB9XG4gICAgcmV0dXJuIG5leHQoYXJncyk7XG4gIH07XG5cbmV4cG9ydCBjb25zdCBob3N0SGVhZGVyTWlkZGxld2FyZU9wdGlvbnM6IEJ1aWxkSGFuZGxlck9wdGlvbnMgJiBBYnNvbHV0ZUxvY2F0aW9uID0ge1xuICBuYW1lOiBcImhvc3RIZWFkZXJNaWRkbGV3YXJlXCIsXG4gIHN0ZXA6IFwiYnVpbGRcIixcbiAgcHJpb3JpdHk6IFwibG93XCIsXG4gIHRhZ3M6IFtcIkhPU1RcIl0sXG4gIG92ZXJyaWRlOiB0cnVlLFxufTtcblxuZXhwb3J0IGNvbnN0IGdldEhvc3RIZWFkZXJQbHVnaW4gPSAob3B0aW9uczogSG9zdEhlYWRlclJlc29sdmVkQ29uZmlnKTogUGx1Z2dhYmxlPGFueSwgYW55PiA9PiAoe1xuICBhcHBseVRvU3RhY2s6IChjbGllbnRTdGFjaykgPT4ge1xuICAgIGNsaWVudFN0YWNrLmFkZChob3N0SGVhZGVyTWlkZGxld2FyZShvcHRpb25zKSwgaG9zdEhlYWRlck1pZGRsZXdhcmVPcHRpb25zKTtcbiAgfSxcbn0pO1xuIl19","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\n(0, tslib_1.__exportStar)(require(\"./loggerMiddleware\"), exports);\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsa0VBQW1DIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIi4vbG9nZ2VyTWlkZGxld2FyZVwiO1xuIl19","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getLoggerPlugin = exports.loggerMiddlewareOptions = exports.loggerMiddleware = void 0;\nconst loggerMiddleware = () => (next, context) => async (args) => {\n    const { clientName, commandName, inputFilterSensitiveLog, logger, outputFilterSensitiveLog } = context;\n    const response = await next(args);\n    if (!logger) {\n        return response;\n    }\n    if (typeof logger.info === \"function\") {\n        const { $metadata, ...outputWithoutMetadata } = response.output;\n        logger.info({\n            clientName,\n            commandName,\n            input: inputFilterSensitiveLog(args.input),\n            output: outputFilterSensitiveLog(outputWithoutMetadata),\n            metadata: $metadata,\n        });\n    }\n    return response;\n};\nexports.loggerMiddleware = loggerMiddleware;\nexports.loggerMiddlewareOptions = {\n    name: \"loggerMiddleware\",\n    tags: [\"LOGGER\"],\n    step: \"initialize\",\n    override: true,\n};\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst getLoggerPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add((0, exports.loggerMiddleware)(), exports.loggerMiddlewareOptions);\n    },\n});\nexports.getLoggerPlugin = getLoggerPlugin;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9nZ2VyTWlkZGxld2FyZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9sb2dnZXJNaWRkbGV3YXJlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQVlPLE1BQU0sZ0JBQWdCLEdBQzNCLEdBQUcsRUFBRSxDQUNMLENBQ0UsSUFBb0MsRUFDcEMsT0FBZ0MsRUFDQSxFQUFFLENBQ3BDLEtBQUssRUFBRSxJQUFxQyxFQUE0QyxFQUFFO0lBQ3hGLE1BQU0sRUFBRSxVQUFVLEVBQUUsV0FBVyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sRUFBRSx3QkFBd0IsRUFBRSxHQUFHLE9BQU8sQ0FBQztJQUV2RyxNQUFNLFFBQVEsR0FBRyxNQUFNLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUVsQyxJQUFJLENBQUMsTUFBTSxFQUFFO1FBQ1gsT0FBTyxRQUFRLENBQUM7S0FDakI7SUFFRCxJQUFJLE9BQU8sTUFBTSxDQUFDLElBQUksS0FBSyxVQUFVLEVBQUU7UUFDckMsTUFBTSxFQUFFLFNBQVMsRUFBRSxHQUFHLHFCQUFxQixFQUFFLEdBQUcsUUFBUSxDQUFDLE1BQU0sQ0FBQztRQUNoRSxNQUFNLENBQUMsSUFBSSxDQUFDO1lBQ1YsVUFBVTtZQUNWLFdBQVc7WUFDWCxLQUFLLEVBQUUsdUJBQXVCLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQztZQUMxQyxNQUFNLEVBQUUsd0JBQXdCLENBQUMscUJBQXFCLENBQUM7WUFDdkQsUUFBUSxFQUFFLFNBQVM7U0FDcEIsQ0FBQyxDQUFDO0tBQ0o7SUFFRCxPQUFPLFFBQVEsQ0FBQztBQUNsQixDQUFDLENBQUM7QUEzQlMsUUFBQSxnQkFBZ0Isb0JBMkJ6QjtBQUVTLFFBQUEsdUJBQXVCLEdBQWdEO0lBQ2xGLElBQUksRUFBRSxrQkFBa0I7SUFDeEIsSUFBSSxFQUFFLENBQUMsUUFBUSxDQUFDO0lBQ2hCLElBQUksRUFBRSxZQUFZO0lBQ2xCLFFBQVEsRUFBRSxJQUFJO0NBQ2YsQ0FBQztBQUVGLDZEQUE2RDtBQUN0RCxNQUFNLGVBQWUsR0FBRyxDQUFDLE9BQVksRUFBdUIsRUFBRSxDQUFDLENBQUM7SUFDckUsWUFBWSxFQUFFLENBQUMsV0FBVyxFQUFFLEVBQUU7UUFDNUIsV0FBVyxDQUFDLEdBQUcsQ0FBQyxJQUFBLHdCQUFnQixHQUFFLEVBQUUsK0JBQXVCLENBQUMsQ0FBQztJQUMvRCxDQUFDO0NBQ0YsQ0FBQyxDQUFDO0FBSlUsUUFBQSxlQUFlLG1CQUl6QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEh0dHBSZXNwb25zZSB9IGZyb20gXCJAYXdzLXNkay9wcm90b2NvbC1odHRwXCI7XG5pbXBvcnQge1xuICBBYnNvbHV0ZUxvY2F0aW9uLFxuICBIYW5kbGVyRXhlY3V0aW9uQ29udGV4dCxcbiAgSW5pdGlhbGl6ZUhhbmRsZXIsXG4gIEluaXRpYWxpemVIYW5kbGVyQXJndW1lbnRzLFxuICBJbml0aWFsaXplSGFuZGxlck9wdGlvbnMsXG4gIEluaXRpYWxpemVIYW5kbGVyT3V0cHV0LFxuICBNZXRhZGF0YUJlYXJlcixcbiAgUGx1Z2dhYmxlLFxufSBmcm9tIFwiQGF3cy1zZGsvdHlwZXNcIjtcblxuZXhwb3J0IGNvbnN0IGxvZ2dlck1pZGRsZXdhcmUgPVxuICAoKSA9PlxuICA8T3V0cHV0IGV4dGVuZHMgTWV0YWRhdGFCZWFyZXIgPSBNZXRhZGF0YUJlYXJlcj4oXG4gICAgbmV4dDogSW5pdGlhbGl6ZUhhbmRsZXI8YW55LCBPdXRwdXQ+LFxuICAgIGNvbnRleHQ6IEhhbmRsZXJFeGVjdXRpb25Db250ZXh0XG4gICk6IEluaXRpYWxpemVIYW5kbGVyPGFueSwgT3V0cHV0PiA9PlxuICBhc3luYyAoYXJnczogSW5pdGlhbGl6ZUhhbmRsZXJBcmd1bWVudHM8YW55Pik6IFByb21pc2U8SW5pdGlhbGl6ZUhhbmRsZXJPdXRwdXQ8T3V0cHV0Pj4gPT4ge1xuICAgIGNvbnN0IHsgY2xpZW50TmFtZSwgY29tbWFuZE5hbWUsIGlucHV0RmlsdGVyU2Vuc2l0aXZlTG9nLCBsb2dnZXIsIG91dHB1dEZpbHRlclNlbnNpdGl2ZUxvZyB9ID0gY29udGV4dDtcblxuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgbmV4dChhcmdzKTtcblxuICAgIGlmICghbG9nZ2VyKSB7XG4gICAgICByZXR1cm4gcmVzcG9uc2U7XG4gICAgfVxuXG4gICAgaWYgKHR5cGVvZiBsb2dnZXIuaW5mbyA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICBjb25zdCB7ICRtZXRhZGF0YSwgLi4ub3V0cHV0V2l0aG91dE1ldGFkYXRhIH0gPSByZXNwb25zZS5vdXRwdXQ7XG4gICAgICBsb2dnZXIuaW5mbyh7XG4gICAgICAgIGNsaWVudE5hbWUsXG4gICAgICAgIGNvbW1hbmROYW1lLFxuICAgICAgICBpbnB1dDogaW5wdXRGaWx0ZXJTZW5zaXRpdmVMb2coYXJncy5pbnB1dCksXG4gICAgICAgIG91dHB1dDogb3V0cHV0RmlsdGVyU2Vuc2l0aXZlTG9nKG91dHB1dFdpdGhvdXRNZXRhZGF0YSksXG4gICAgICAgIG1ldGFkYXRhOiAkbWV0YWRhdGEsXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICByZXR1cm4gcmVzcG9uc2U7XG4gIH07XG5cbmV4cG9ydCBjb25zdCBsb2dnZXJNaWRkbGV3YXJlT3B0aW9uczogSW5pdGlhbGl6ZUhhbmRsZXJPcHRpb25zICYgQWJzb2x1dGVMb2NhdGlvbiA9IHtcbiAgbmFtZTogXCJsb2dnZXJNaWRkbGV3YXJlXCIsXG4gIHRhZ3M6IFtcIkxPR0dFUlwiXSxcbiAgc3RlcDogXCJpbml0aWFsaXplXCIsXG4gIG92ZXJyaWRlOiB0cnVlLFxufTtcblxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnVzZWQtdmFyc1xuZXhwb3J0IGNvbnN0IGdldExvZ2dlclBsdWdpbiA9IChvcHRpb25zOiBhbnkpOiBQbHVnZ2FibGU8YW55LCBhbnk+ID0+ICh7XG4gIGFwcGx5VG9TdGFjazogKGNsaWVudFN0YWNrKSA9PiB7XG4gICAgY2xpZW50U3RhY2suYWRkKGxvZ2dlck1pZGRsZXdhcmUoKSwgbG9nZ2VyTWlkZGxld2FyZU9wdGlvbnMpO1xuICB9LFxufSk7XG4iXX0=","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AdaptiveRetryStrategy = void 0;\nconst config_1 = require(\"./config\");\nconst DefaultRateLimiter_1 = require(\"./DefaultRateLimiter\");\nconst StandardRetryStrategy_1 = require(\"./StandardRetryStrategy\");\nclass AdaptiveRetryStrategy extends StandardRetryStrategy_1.StandardRetryStrategy {\n    constructor(maxAttemptsProvider, options) {\n        const { rateLimiter, ...superOptions } = options !== null && options !== void 0 ? options : {};\n        super(maxAttemptsProvider, superOptions);\n        this.rateLimiter = rateLimiter !== null && rateLimiter !== void 0 ? rateLimiter : new DefaultRateLimiter_1.DefaultRateLimiter();\n        this.mode = config_1.RETRY_MODES.ADAPTIVE;\n    }\n    async retry(next, args) {\n        return super.retry(next, args, {\n            beforeRequest: async () => {\n                return this.rateLimiter.getSendToken();\n            },\n            afterRequest: (response) => {\n                this.rateLimiter.updateClientSendingRate(response);\n            },\n        });\n    }\n}\nexports.AdaptiveRetryStrategy = AdaptiveRetryStrategy;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQWRhcHRpdmVSZXRyeVN0cmF0ZWd5LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL0FkYXB0aXZlUmV0cnlTdHJhdGVneS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFFQSxxQ0FBdUM7QUFDdkMsNkRBQTBEO0FBQzFELG1FQUE4RjtBQVU5RixNQUFhLHFCQUFzQixTQUFRLDZDQUFxQjtJQUc5RCxZQUFZLG1CQUFxQyxFQUFFLE9BQXNDO1FBQ3ZGLE1BQU0sRUFBRSxXQUFXLEVBQUUsR0FBRyxZQUFZLEVBQUUsR0FBRyxPQUFPLGFBQVAsT0FBTyxjQUFQLE9BQU8sR0FBSSxFQUFFLENBQUM7UUFDdkQsS0FBSyxDQUFDLG1CQUFtQixFQUFFLFlBQVksQ0FBQyxDQUFDO1FBQ3pDLElBQUksQ0FBQyxXQUFXLEdBQUcsV0FBVyxhQUFYLFdBQVcsY0FBWCxXQUFXLEdBQUksSUFBSSx1Q0FBa0IsRUFBRSxDQUFDO1FBQzNELElBQUksQ0FBQyxJQUFJLEdBQUcsb0JBQVcsQ0FBQyxRQUFRLENBQUM7SUFDbkMsQ0FBQztJQUVELEtBQUssQ0FBQyxLQUFLLENBQ1QsSUFBbUMsRUFDbkMsSUFBcUM7UUFFckMsT0FBTyxLQUFLLENBQUMsS0FBSyxDQUFDLElBQUksRUFBRSxJQUFJLEVBQUU7WUFDN0IsYUFBYSxFQUFFLEtBQUssSUFBSSxFQUFFO2dCQUN4QixPQUFPLElBQUksQ0FBQyxXQUFXLENBQUMsWUFBWSxFQUFFLENBQUM7WUFDekMsQ0FBQztZQUNELFlBQVksRUFBRSxDQUFDLFFBQWEsRUFBRSxFQUFFO2dCQUM5QixJQUFJLENBQUMsV0FBVyxDQUFDLHVCQUF1QixDQUFDLFFBQVEsQ0FBQyxDQUFDO1lBQ3JELENBQUM7U0FDRixDQUFDLENBQUM7SUFDTCxDQUFDO0NBQ0Y7QUF2QkQsc0RBdUJDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRmluYWxpemVIYW5kbGVyLCBGaW5hbGl6ZUhhbmRsZXJBcmd1bWVudHMsIE1ldGFkYXRhQmVhcmVyLCBQcm92aWRlciB9IGZyb20gXCJAYXdzLXNkay90eXBlc1wiO1xuXG5pbXBvcnQgeyBSRVRSWV9NT0RFUyB9IGZyb20gXCIuL2NvbmZpZ1wiO1xuaW1wb3J0IHsgRGVmYXVsdFJhdGVMaW1pdGVyIH0gZnJvbSBcIi4vRGVmYXVsdFJhdGVMaW1pdGVyXCI7XG5pbXBvcnQgeyBTdGFuZGFyZFJldHJ5U3RyYXRlZ3ksIFN0YW5kYXJkUmV0cnlTdHJhdGVneU9wdGlvbnMgfSBmcm9tIFwiLi9TdGFuZGFyZFJldHJ5U3RyYXRlZ3lcIjtcbmltcG9ydCB7IFJhdGVMaW1pdGVyIH0gZnJvbSBcIi4vdHlwZXNcIjtcblxuLyoqXG4gKiBTdHJhdGVneSBvcHRpb25zIHRvIGJlIHBhc3NlZCB0byBBZGFwdGl2ZVJldHJ5U3RyYXRlZ3lcbiAqL1xuZXhwb3J0IGludGVyZmFjZSBBZGFwdGl2ZVJldHJ5U3RyYXRlZ3lPcHRpb25zIGV4dGVuZHMgU3RhbmRhcmRSZXRyeVN0cmF0ZWd5T3B0aW9ucyB7XG4gIHJhdGVMaW1pdGVyPzogUmF0ZUxpbWl0ZXI7XG59XG5cbmV4cG9ydCBjbGFzcyBBZGFwdGl2ZVJldHJ5U3RyYXRlZ3kgZXh0ZW5kcyBTdGFuZGFyZFJldHJ5U3RyYXRlZ3kge1xuICBwcml2YXRlIHJhdGVMaW1pdGVyOiBSYXRlTGltaXRlcjtcblxuICBjb25zdHJ1Y3RvcihtYXhBdHRlbXB0c1Byb3ZpZGVyOiBQcm92aWRlcjxudW1iZXI+LCBvcHRpb25zPzogQWRhcHRpdmVSZXRyeVN0cmF0ZWd5T3B0aW9ucykge1xuICAgIGNvbnN0IHsgcmF0ZUxpbWl0ZXIsIC4uLnN1cGVyT3B0aW9ucyB9ID0gb3B0aW9ucyA/PyB7fTtcbiAgICBzdXBlcihtYXhBdHRlbXB0c1Byb3ZpZGVyLCBzdXBlck9wdGlvbnMpO1xuICAgIHRoaXMucmF0ZUxpbWl0ZXIgPSByYXRlTGltaXRlciA/PyBuZXcgRGVmYXVsdFJhdGVMaW1pdGVyKCk7XG4gICAgdGhpcy5tb2RlID0gUkVUUllfTU9ERVMuQURBUFRJVkU7XG4gIH1cblxuICBhc3luYyByZXRyeTxJbnB1dCBleHRlbmRzIG9iamVjdCwgT3VwdXQgZXh0ZW5kcyBNZXRhZGF0YUJlYXJlcj4oXG4gICAgbmV4dDogRmluYWxpemVIYW5kbGVyPElucHV0LCBPdXB1dD4sXG4gICAgYXJnczogRmluYWxpemVIYW5kbGVyQXJndW1lbnRzPElucHV0PlxuICApIHtcbiAgICByZXR1cm4gc3VwZXIucmV0cnkobmV4dCwgYXJncywge1xuICAgICAgYmVmb3JlUmVxdWVzdDogYXN5bmMgKCkgPT4ge1xuICAgICAgICByZXR1cm4gdGhpcy5yYXRlTGltaXRlci5nZXRTZW5kVG9rZW4oKTtcbiAgICAgIH0sXG4gICAgICBhZnRlclJlcXVlc3Q6IChyZXNwb25zZTogYW55KSA9PiB7XG4gICAgICAgIHRoaXMucmF0ZUxpbWl0ZXIudXBkYXRlQ2xpZW50U2VuZGluZ1JhdGUocmVzcG9uc2UpO1xuICAgICAgfSxcbiAgICB9KTtcbiAgfVxufVxuIl19","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DefaultRateLimiter = void 0;\nconst service_error_classification_1 = require(\"@aws-sdk/service-error-classification\");\nclass DefaultRateLimiter {\n    constructor(options) {\n        var _a, _b, _c, _d, _e;\n        // Pre-set state variables\n        this.currentCapacity = 0;\n        this.enabled = false;\n        this.lastMaxRate = 0;\n        this.measuredTxRate = 0;\n        this.requestCount = 0;\n        this.lastTimestamp = 0;\n        this.timeWindow = 0;\n        this.beta = (_a = options === null || options === void 0 ? void 0 : options.beta) !== null && _a !== void 0 ? _a : 0.7;\n        this.minCapacity = (_b = options === null || options === void 0 ? void 0 : options.minCapacity) !== null && _b !== void 0 ? _b : 1;\n        this.minFillRate = (_c = options === null || options === void 0 ? void 0 : options.minFillRate) !== null && _c !== void 0 ? _c : 0.5;\n        this.scaleConstant = (_d = options === null || options === void 0 ? void 0 : options.scaleConstant) !== null && _d !== void 0 ? _d : 0.4;\n        this.smooth = (_e = options === null || options === void 0 ? void 0 : options.smooth) !== null && _e !== void 0 ? _e : 0.8;\n        const currentTimeInSeconds = this.getCurrentTimeInSeconds();\n        this.lastThrottleTime = currentTimeInSeconds;\n        this.lastTxRateBucket = Math.floor(this.getCurrentTimeInSeconds());\n        this.fillRate = this.minFillRate;\n        this.maxCapacity = this.minCapacity;\n    }\n    getCurrentTimeInSeconds() {\n        return Date.now() / 1000;\n    }\n    async getSendToken() {\n        return this.acquireTokenBucket(1);\n    }\n    async acquireTokenBucket(amount) {\n        // Client side throttling is not enabled until we see a throttling error.\n        if (!this.enabled) {\n            return;\n        }\n        this.refillTokenBucket();\n        if (amount > this.currentCapacity) {\n            const delay = ((amount - this.currentCapacity) / this.fillRate) * 1000;\n            await new Promise((resolve) => setTimeout(resolve, delay));\n        }\n        this.currentCapacity = this.currentCapacity - amount;\n    }\n    refillTokenBucket() {\n        const timestamp = this.getCurrentTimeInSeconds();\n        if (!this.lastTimestamp) {\n            this.lastTimestamp = timestamp;\n            return;\n        }\n        const fillAmount = (timestamp - this.lastTimestamp) * this.fillRate;\n        this.currentCapacity = Math.min(this.maxCapacity, this.currentCapacity + fillAmount);\n        this.lastTimestamp = timestamp;\n    }\n    updateClientSendingRate(response) {\n        let calculatedRate;\n        this.updateMeasuredRate();\n        if ((0, service_error_classification_1.isThrottlingError)(response)) {\n            const rateToUse = !this.enabled ? this.measuredTxRate : Math.min(this.measuredTxRate, this.fillRate);\n            this.lastMaxRate = rateToUse;\n            this.calculateTimeWindow();\n            this.lastThrottleTime = this.getCurrentTimeInSeconds();\n            calculatedRate = this.cubicThrottle(rateToUse);\n            this.enableTokenBucket();\n        }\n        else {\n            this.calculateTimeWindow();\n            calculatedRate = this.cubicSuccess(this.getCurrentTimeInSeconds());\n        }\n        const newRate = Math.min(calculatedRate, 2 * this.measuredTxRate);\n        this.updateTokenBucketRate(newRate);\n    }\n    calculateTimeWindow() {\n        this.timeWindow = this.getPrecise(Math.pow((this.lastMaxRate * (1 - this.beta)) / this.scaleConstant, 1 / 3));\n    }\n    cubicThrottle(rateToUse) {\n        return this.getPrecise(rateToUse * this.beta);\n    }\n    cubicSuccess(timestamp) {\n        return this.getPrecise(this.scaleConstant * Math.pow(timestamp - this.lastThrottleTime - this.timeWindow, 3) + this.lastMaxRate);\n    }\n    enableTokenBucket() {\n        this.enabled = true;\n    }\n    updateTokenBucketRate(newRate) {\n        // Refill based on our current rate before we update to the new fill rate.\n        this.refillTokenBucket();\n        this.fillRate = Math.max(newRate, this.minFillRate);\n        this.maxCapacity = Math.max(newRate, this.minCapacity);\n        // When we scale down we can't have a current capacity that exceeds our maxCapacity.\n        this.currentCapacity = Math.min(this.currentCapacity, this.maxCapacity);\n    }\n    updateMeasuredRate() {\n        const t = this.getCurrentTimeInSeconds();\n        const timeBucket = Math.floor(t * 2) / 2;\n        this.requestCount++;\n        if (timeBucket > this.lastTxRateBucket) {\n            const currentRate = this.requestCount / (timeBucket - this.lastTxRateBucket);\n            this.measuredTxRate = this.getPrecise(currentRate * this.smooth + this.measuredTxRate * (1 - this.smooth));\n            this.requestCount = 0;\n            this.lastTxRateBucket = timeBucket;\n        }\n    }\n    getPrecise(num) {\n        return parseFloat(num.toFixed(8));\n    }\n}\nexports.DefaultRateLimiter = DefaultRateLimiter;\n//# sourceMappingURL=data:application/json;base64,","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StandardRetryStrategy = void 0;\nconst protocol_http_1 = require(\"@aws-sdk/protocol-http\");\nconst service_error_classification_1 = require(\"@aws-sdk/service-error-classification\");\nconst uuid_1 = require(\"uuid\");\nconst config_1 = require(\"./config\");\nconst constants_1 = require(\"./constants\");\nconst defaultRetryQuota_1 = require(\"./defaultRetryQuota\");\nconst delayDecider_1 = require(\"./delayDecider\");\nconst retryDecider_1 = require(\"./retryDecider\");\nclass StandardRetryStrategy {\n    constructor(maxAttemptsProvider, options) {\n        var _a, _b, _c;\n        this.maxAttemptsProvider = maxAttemptsProvider;\n        this.mode = config_1.RETRY_MODES.STANDARD;\n        this.retryDecider = (_a = options === null || options === void 0 ? void 0 : options.retryDecider) !== null && _a !== void 0 ? _a : retryDecider_1.defaultRetryDecider;\n        this.delayDecider = (_b = options === null || options === void 0 ? void 0 : options.delayDecider) !== null && _b !== void 0 ? _b : delayDecider_1.defaultDelayDecider;\n        this.retryQuota = (_c = options === null || options === void 0 ? void 0 : options.retryQuota) !== null && _c !== void 0 ? _c : (0, defaultRetryQuota_1.getDefaultRetryQuota)(constants_1.INITIAL_RETRY_TOKENS);\n    }\n    shouldRetry(error, attempts, maxAttempts) {\n        return attempts < maxAttempts && this.retryDecider(error) && this.retryQuota.hasRetryTokens(error);\n    }\n    async getMaxAttempts() {\n        let maxAttempts;\n        try {\n            maxAttempts = await this.maxAttemptsProvider();\n        }\n        catch (error) {\n            maxAttempts = config_1.DEFAULT_MAX_ATTEMPTS;\n        }\n        return maxAttempts;\n    }\n    async retry(next, args, options) {\n        let retryTokenAmount;\n        let attempts = 0;\n        let totalDelay = 0;\n        const maxAttempts = await this.getMaxAttempts();\n        const { request } = args;\n        if (protocol_http_1.HttpRequest.isInstance(request)) {\n            request.headers[constants_1.INVOCATION_ID_HEADER] = (0, uuid_1.v4)();\n        }\n        while (true) {\n            try {\n                if (protocol_http_1.HttpRequest.isInstance(request)) {\n                    request.headers[constants_1.REQUEST_HEADER] = `attempt=${attempts + 1}; max=${maxAttempts}`;\n                }\n                if (options === null || options === void 0 ? void 0 : options.beforeRequest) {\n                    await options.beforeRequest();\n                }\n                const { response, output } = await next(args);\n                if (options === null || options === void 0 ? void 0 : options.afterRequest) {\n                    options.afterRequest(response);\n                }\n                this.retryQuota.releaseRetryTokens(retryTokenAmount);\n                output.$metadata.attempts = attempts + 1;\n                output.$metadata.totalRetryDelay = totalDelay;\n                return { response, output };\n            }\n            catch (e) {\n                const err = asSdkError(e);\n                attempts++;\n                if (this.shouldRetry(err, attempts, maxAttempts)) {\n                    retryTokenAmount = this.retryQuota.retrieveRetryTokens(err);\n                    const delay = this.delayDecider((0, service_error_classification_1.isThrottlingError)(err) ? constants_1.THROTTLING_RETRY_DELAY_BASE : constants_1.DEFAULT_RETRY_DELAY_BASE, attempts);\n                    totalDelay += delay;\n                    await new Promise((resolve) => setTimeout(resolve, delay));\n                    continue;\n                }\n                if (!err.$metadata) {\n                    err.$metadata = {};\n                }\n                err.$metadata.attempts = attempts;\n                err.$metadata.totalRetryDelay = totalDelay;\n                throw err;\n            }\n        }\n    }\n}\nexports.StandardRetryStrategy = StandardRetryStrategy;\nconst asSdkError = (error) => {\n    if (error instanceof Error)\n        return error;\n    if (error instanceof Object)\n        return Object.assign(new Error(), error);\n    if (typeof error === \"string\")\n        return new Error(error);\n    return new Error(`AWS SDK error wrapper for ${error}`);\n};\n//# sourceMappingURL=data:application/json;base64,","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DEFAULT_RETRY_MODE = exports.DEFAULT_MAX_ATTEMPTS = exports.RETRY_MODES = void 0;\nvar RETRY_MODES;\n(function (RETRY_MODES) {\n    RETRY_MODES[\"STANDARD\"] = \"standard\";\n    RETRY_MODES[\"ADAPTIVE\"] = \"adaptive\";\n})(RETRY_MODES = exports.RETRY_MODES || (exports.RETRY_MODES = {}));\n/**\n * The default value for how many HTTP requests an SDK should make for a\n * single SDK operation invocation before giving up\n */\nexports.DEFAULT_MAX_ATTEMPTS = 3;\n/**\n * The default retry algorithm to use.\n */\nexports.DEFAULT_RETRY_MODE = RETRY_MODES.STANDARD;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlnLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2NvbmZpZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSxJQUFZLFdBR1g7QUFIRCxXQUFZLFdBQVc7SUFDckIsb0NBQXFCLENBQUE7SUFDckIsb0NBQXFCLENBQUE7QUFDdkIsQ0FBQyxFQUhXLFdBQVcsR0FBWCxtQkFBVyxLQUFYLG1CQUFXLFFBR3RCO0FBRUQ7OztHQUdHO0FBQ1UsUUFBQSxvQkFBb0IsR0FBRyxDQUFDLENBQUM7QUFFdEM7O0dBRUc7QUFDVSxRQUFBLGtCQUFrQixHQUFHLFdBQVcsQ0FBQyxRQUFRLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZW51bSBSRVRSWV9NT0RFUyB7XG4gIFNUQU5EQVJEID0gXCJzdGFuZGFyZFwiLFxuICBBREFQVElWRSA9IFwiYWRhcHRpdmVcIixcbn1cblxuLyoqXG4gKiBUaGUgZGVmYXVsdCB2YWx1ZSBmb3IgaG93IG1hbnkgSFRUUCByZXF1ZXN0cyBhbiBTREsgc2hvdWxkIG1ha2UgZm9yIGFcbiAqIHNpbmdsZSBTREsgb3BlcmF0aW9uIGludm9jYXRpb24gYmVmb3JlIGdpdmluZyB1cFxuICovXG5leHBvcnQgY29uc3QgREVGQVVMVF9NQVhfQVRURU1QVFMgPSAzO1xuXG4vKipcbiAqIFRoZSBkZWZhdWx0IHJldHJ5IGFsZ29yaXRobSB0byB1c2UuXG4gKi9cbmV4cG9ydCBjb25zdCBERUZBVUxUX1JFVFJZX01PREUgPSBSRVRSWV9NT0RFUy5TVEFOREFSRDtcbiJdfQ==","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NODE_RETRY_MODE_CONFIG_OPTIONS = exports.CONFIG_RETRY_MODE = exports.ENV_RETRY_MODE = exports.resolveRetryConfig = exports.NODE_MAX_ATTEMPT_CONFIG_OPTIONS = exports.CONFIG_MAX_ATTEMPTS = exports.ENV_MAX_ATTEMPTS = void 0;\nconst AdaptiveRetryStrategy_1 = require(\"./AdaptiveRetryStrategy\");\nconst config_1 = require(\"./config\");\nconst StandardRetryStrategy_1 = require(\"./StandardRetryStrategy\");\nexports.ENV_MAX_ATTEMPTS = \"AWS_MAX_ATTEMPTS\";\nexports.CONFIG_MAX_ATTEMPTS = \"max_attempts\";\nexports.NODE_MAX_ATTEMPT_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => {\n        const value = env[exports.ENV_MAX_ATTEMPTS];\n        if (!value)\n            return undefined;\n        const maxAttempt = parseInt(value);\n        if (Number.isNaN(maxAttempt)) {\n            throw new Error(`Environment variable ${exports.ENV_MAX_ATTEMPTS} mast be a number, got \"${value}\"`);\n        }\n        return maxAttempt;\n    },\n    configFileSelector: (profile) => {\n        const value = profile[exports.CONFIG_MAX_ATTEMPTS];\n        if (!value)\n            return undefined;\n        const maxAttempt = parseInt(value);\n        if (Number.isNaN(maxAttempt)) {\n            throw new Error(`Shared config file entry ${exports.CONFIG_MAX_ATTEMPTS} mast be a number, got \"${value}\"`);\n        }\n        return maxAttempt;\n    },\n    default: config_1.DEFAULT_MAX_ATTEMPTS,\n};\nconst resolveRetryConfig = (input) => {\n    const maxAttempts = normalizeMaxAttempts(input.maxAttempts);\n    return {\n        ...input,\n        maxAttempts,\n        retryStrategy: async () => {\n            if (input.retryStrategy) {\n                return input.retryStrategy;\n            }\n            const retryMode = await getRetryMode(input.retryMode);\n            if (retryMode === config_1.RETRY_MODES.ADAPTIVE) {\n                return new AdaptiveRetryStrategy_1.AdaptiveRetryStrategy(maxAttempts);\n            }\n            return new StandardRetryStrategy_1.StandardRetryStrategy(maxAttempts);\n        },\n    };\n};\nexports.resolveRetryConfig = resolveRetryConfig;\nconst getRetryMode = async (retryMode) => {\n    if (typeof retryMode === \"string\") {\n        return retryMode;\n    }\n    return await retryMode();\n};\nconst normalizeMaxAttempts = (maxAttempts = config_1.DEFAULT_MAX_ATTEMPTS) => {\n    if (typeof maxAttempts === \"number\") {\n        const promisified = Promise.resolve(maxAttempts);\n        return () => promisified;\n    }\n    return maxAttempts;\n};\nexports.ENV_RETRY_MODE = \"AWS_RETRY_MODE\";\nexports.CONFIG_RETRY_MODE = \"retry_mode\";\nexports.NODE_RETRY_MODE_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => env[exports.ENV_RETRY_MODE],\n    configFileSelector: (profile) => profile[exports.CONFIG_RETRY_MODE],\n    default: config_1.DEFAULT_RETRY_MODE,\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlndXJhdGlvbnMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvY29uZmlndXJhdGlvbnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBR0EsbUVBQWdFO0FBQ2hFLHFDQUFpRjtBQUNqRixtRUFBZ0U7QUFFbkQsUUFBQSxnQkFBZ0IsR0FBRyxrQkFBa0IsQ0FBQztBQUN0QyxRQUFBLG1CQUFtQixHQUFHLGNBQWMsQ0FBQztBQUVyQyxRQUFBLCtCQUErQixHQUFrQztJQUM1RSwyQkFBMkIsRUFBRSxDQUFDLEdBQUcsRUFBRSxFQUFFO1FBQ25DLE1BQU0sS0FBSyxHQUFHLEdBQUcsQ0FBQyx3QkFBZ0IsQ0FBQyxDQUFDO1FBQ3BDLElBQUksQ0FBQyxLQUFLO1lBQUUsT0FBTyxTQUFTLENBQUM7UUFDN0IsTUFBTSxVQUFVLEdBQUcsUUFBUSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ25DLElBQUksTUFBTSxDQUFDLEtBQUssQ0FBQyxVQUFVLENBQUMsRUFBRTtZQUM1QixNQUFNLElBQUksS0FBSyxDQUFDLHdCQUF3Qix3QkFBZ0IsMkJBQTJCLEtBQUssR0FBRyxDQUFDLENBQUM7U0FDOUY7UUFDRCxPQUFPLFVBQVUsQ0FBQztJQUNwQixDQUFDO0lBQ0Qsa0JBQWtCLEVBQUUsQ0FBQyxPQUFPLEVBQUUsRUFBRTtRQUM5QixNQUFNLEtBQUssR0FBRyxPQUFPLENBQUMsMkJBQW1CLENBQUMsQ0FBQztRQUMzQyxJQUFJLENBQUMsS0FBSztZQUFFLE9BQU8sU0FBUyxDQUFDO1FBQzdCLE1BQU0sVUFBVSxHQUFHLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUNuQyxJQUFJLE1BQU0sQ0FBQyxLQUFLLENBQUMsVUFBVSxDQUFDLEVBQUU7WUFDNUIsTUFBTSxJQUFJLEtBQUssQ0FBQyw0QkFBNEIsMkJBQW1CLDJCQUEyQixLQUFLLEdBQUcsQ0FBQyxDQUFDO1NBQ3JHO1FBQ0QsT0FBTyxVQUFVLENBQUM7SUFDcEIsQ0FBQztJQUNELE9BQU8sRUFBRSw2QkFBb0I7Q0FDOUIsQ0FBQztBQWdDSyxNQUFNLGtCQUFrQixHQUFHLENBQUksS0FBZ0QsRUFBMkIsRUFBRTtJQUNqSCxNQUFNLFdBQVcsR0FBRyxvQkFBb0IsQ0FBQyxLQUFLLENBQUMsV0FBVyxDQUFDLENBQUM7SUFDNUQsT0FBTztRQUNMLEdBQUcsS0FBSztRQUNSLFdBQVc7UUFDWCxhQUFhLEVBQUUsS0FBSyxJQUFJLEVBQUU7WUFDeEIsSUFBSSxLQUFLLENBQUMsYUFBYSxFQUFFO2dCQUN2QixPQUFPLEtBQUssQ0FBQyxhQUFhLENBQUM7YUFDNUI7WUFDRCxNQUFNLFNBQVMsR0FBRyxNQUFNLFlBQVksQ0FBQyxLQUFLLENBQUMsU0FBUyxDQUFDLENBQUM7WUFDdEQsSUFBSSxTQUFTLEtBQUssb0JBQVcsQ0FBQyxRQUFRLEVBQUU7Z0JBQ3RDLE9BQU8sSUFBSSw2Q0FBcUIsQ0FBQyxXQUFXLENBQUMsQ0FBQzthQUMvQztZQUNELE9BQU8sSUFBSSw2Q0FBcUIsQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUNoRCxDQUFDO0tBQ0YsQ0FBQztBQUNKLENBQUMsQ0FBQztBQWhCVyxRQUFBLGtCQUFrQixzQkFnQjdCO0FBRUYsTUFBTSxZQUFZLEdBQUcsS0FBSyxFQUFFLFNBQW9DLEVBQW1CLEVBQUU7SUFDbkYsSUFBSSxPQUFPLFNBQVMsS0FBSyxRQUFRLEVBQUU7UUFDakMsT0FBTyxTQUFTLENBQUM7S0FDbEI7SUFDRCxPQUFPLE1BQU0sU0FBUyxFQUFFLENBQUM7QUFDM0IsQ0FBQyxDQUFDO0FBRUYsTUFBTSxvQkFBb0IsR0FBRyxDQUFDLGNBQXlDLDZCQUFvQixFQUFvQixFQUFFO0lBQy9HLElBQUksT0FBTyxXQUFXLEtBQUssUUFBUSxFQUFFO1FBQ25DLE1BQU0sV0FBVyxHQUFHLE9BQU8sQ0FBQyxPQUFPLENBQUMsV0FBVyxDQUFDLENBQUM7UUFDakQsT0FBTyxHQUFHLEVBQUUsQ0FBQyxXQUFXLENBQUM7S0FDMUI7SUFDRCxPQUFPLFdBQVcsQ0FBQztBQUNyQixDQUFDLENBQUM7QUFFVyxRQUFBLGNBQWMsR0FBRyxnQkFBZ0IsQ0FBQztBQUNsQyxRQUFBLGlCQUFpQixHQUFHLFlBQVksQ0FBQztBQUVqQyxRQUFBLDhCQUE4QixHQUFrQztJQUMzRSwyQkFBMkIsRUFBRSxDQUFDLEdBQUcsRUFBRSxFQUFFLENBQUMsR0FBRyxDQUFDLHNCQUFjLENBQUM7SUFDekQsa0JBQWtCLEVBQUUsQ0FBQyxPQUFPLEVBQUUsRUFBRSxDQUFDLE9BQU8sQ0FBQyx5QkFBaUIsQ0FBQztJQUMzRCxPQUFPLEVBQUUsMkJBQWtCO0NBQzVCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBMb2FkZWRDb25maWdTZWxlY3RvcnMgfSBmcm9tIFwiQGF3cy1zZGsvbm9kZS1jb25maWctcHJvdmlkZXJcIjtcbmltcG9ydCB7IFByb3ZpZGVyLCBSZXRyeVN0cmF0ZWd5IH0gZnJvbSBcIkBhd3Mtc2RrL3R5cGVzXCI7XG5cbmltcG9ydCB7IEFkYXB0aXZlUmV0cnlTdHJhdGVneSB9IGZyb20gXCIuL0FkYXB0aXZlUmV0cnlTdHJhdGVneVwiO1xuaW1wb3J0IHsgREVGQVVMVF9NQVhfQVRURU1QVFMsIERFRkFVTFRfUkVUUllfTU9ERSwgUkVUUllfTU9ERVMgfSBmcm9tIFwiLi9jb25maWdcIjtcbmltcG9ydCB7IFN0YW5kYXJkUmV0cnlTdHJhdGVneSB9IGZyb20gXCIuL1N0YW5kYXJkUmV0cnlTdHJhdGVneVwiO1xuXG5leHBvcnQgY29uc3QgRU5WX01BWF9BVFRFTVBUUyA9IFwiQVdTX01BWF9BVFRFTVBUU1wiO1xuZXhwb3J0IGNvbnN0IENPTkZJR19NQVhfQVRURU1QVFMgPSBcIm1heF9hdHRlbXB0c1wiO1xuXG5leHBvcnQgY29uc3QgTk9ERV9NQVhfQVRURU1QVF9DT05GSUdfT1BUSU9OUzogTG9hZGVkQ29uZmlnU2VsZWN0b3JzPG51bWJlcj4gPSB7XG4gIGVudmlyb25tZW50VmFyaWFibGVTZWxlY3RvcjogKGVudikgPT4ge1xuICAgIGNvbnN0IHZhbHVlID0gZW52W0VOVl9NQVhfQVRURU1QVFNdO1xuICAgIGlmICghdmFsdWUpIHJldHVybiB1bmRlZmluZWQ7XG4gICAgY29uc3QgbWF4QXR0ZW1wdCA9IHBhcnNlSW50KHZhbHVlKTtcbiAgICBpZiAoTnVtYmVyLmlzTmFOKG1heEF0dGVtcHQpKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYEVudmlyb25tZW50IHZhcmlhYmxlICR7RU5WX01BWF9BVFRFTVBUU30gbWFzdCBiZSBhIG51bWJlciwgZ290IFwiJHt2YWx1ZX1cImApO1xuICAgIH1cbiAgICByZXR1cm4gbWF4QXR0ZW1wdDtcbiAgfSxcbiAgY29uZmlnRmlsZVNlbGVjdG9yOiAocHJvZmlsZSkgPT4ge1xuICAgIGNvbnN0IHZhbHVlID0gcHJvZmlsZVtDT05GSUdfTUFYX0FUVEVNUFRTXTtcbiAgICBpZiAoIXZhbHVlKSByZXR1cm4gdW5kZWZpbmVkO1xuICAgIGNvbnN0IG1heEF0dGVtcHQgPSBwYXJzZUludCh2YWx1ZSk7XG4gICAgaWYgKE51bWJlci5pc05hTihtYXhBdHRlbXB0KSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGBTaGFyZWQgY29uZmlnIGZpbGUgZW50cnkgJHtDT05GSUdfTUFYX0FUVEVNUFRTfSBtYXN0IGJlIGEgbnVtYmVyLCBnb3QgXCIke3ZhbHVlfVwiYCk7XG4gICAgfVxuICAgIHJldHVybiBtYXhBdHRlbXB0O1xuICB9LFxuICBkZWZhdWx0OiBERUZBVUxUX01BWF9BVFRFTVBUUyxcbn07XG5cbmV4cG9ydCBpbnRlcmZhY2UgUmV0cnlJbnB1dENvbmZpZyB7XG4gIC8qKlxuICAgKiBUaGUgbWF4aW11bSBudW1iZXIgb2YgdGltZXMgcmVxdWVzdHMgdGhhdCBlbmNvdW50ZXIgcmV0cnlhYmxlIGZhaWx1cmVzIHNob3VsZCBiZSBhdHRlbXB0ZWQuXG4gICAqL1xuICBtYXhBdHRlbXB0cz86IG51bWJlciB8IFByb3ZpZGVyPG51bWJlcj47XG4gIC8qKlxuICAgKiBUaGUgc3RyYXRlZ3kgdG8gcmV0cnkgdGhlIHJlcXVlc3QuIFVzaW5nIGJ1aWx0LWluIGV4cG9uZW50aWFsIGJhY2tvZmYgc3RyYXRlZ3kgYnkgZGVmYXVsdC5cbiAgICovXG4gIHJldHJ5U3RyYXRlZ3k/OiBSZXRyeVN0cmF0ZWd5O1xufVxuXG5pbnRlcmZhY2UgUHJldmlvdXNseVJlc29sdmVkIHtcbiAgLyoqXG4gICAqIFNwZWNpZmllcyBwcm92aWRlciBmb3IgcmV0cnkgYWxnb3JpdGhtIHRvIHVzZS5cbiAgICogQGludGVybmFsXG4gICAqL1xuICByZXRyeU1vZGU6IHN0cmluZyB8IFByb3ZpZGVyPHN0cmluZz47XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgUmV0cnlSZXNvbHZlZENvbmZpZyB7XG4gIC8qKlxuICAgKiBSZXNvbHZlZCB2YWx1ZSBmb3IgaW5wdXQgY29uZmlnIHtAbGluayBSZXRyeUlucHV0Q29uZmlnLm1heEF0dGVtcHRzfVxuICAgKi9cbiAgbWF4QXR0ZW1wdHM6IFByb3ZpZGVyPG51bWJlcj47XG4gIC8qKlxuICAgKiBSZXNvbHZlZCB2YWx1ZSBmb3IgaW5wdXQgY29uZmlnIHtAbGluayBSZXRyeUlucHV0Q29uZmlnLnJldHJ5U3RyYXRlZ3l9XG4gICAqL1xuICByZXRyeVN0cmF0ZWd5OiBQcm92aWRlcjxSZXRyeVN0cmF0ZWd5Pjtcbn1cblxuZXhwb3J0IGNvbnN0IHJlc29sdmVSZXRyeUNvbmZpZyA9IDxUPihpbnB1dDogVCAmIFByZXZpb3VzbHlSZXNvbHZlZCAmIFJldHJ5SW5wdXRDb25maWcpOiBUICYgUmV0cnlSZXNvbHZlZENvbmZpZyA9PiB7XG4gIGNvbnN0IG1heEF0dGVtcHRzID0gbm9ybWFsaXplTWF4QXR0ZW1wdHMoaW5wdXQubWF4QXR0ZW1wdHMpO1xuICByZXR1cm4ge1xuICAgIC4uLmlucHV0LFxuICAgIG1heEF0dGVtcHRzLFxuICAgIHJldHJ5U3RyYXRlZ3k6IGFzeW5jICgpID0+IHtcbiAgICAgIGlmIChpbnB1dC5yZXRyeVN0cmF0ZWd5KSB7XG4gICAgICAgIHJldHVybiBpbnB1dC5yZXRyeVN0cmF0ZWd5O1xuICAgICAgfVxuICAgICAgY29uc3QgcmV0cnlNb2RlID0gYXdhaXQgZ2V0UmV0cnlNb2RlKGlucHV0LnJldHJ5TW9kZSk7XG4gICAgICBpZiAocmV0cnlNb2RlID09PSBSRVRSWV9NT0RFUy5BREFQVElWRSkge1xuICAgICAgICByZXR1cm4gbmV3IEFkYXB0aXZlUmV0cnlTdHJhdGVneShtYXhBdHRlbXB0cyk7XG4gICAgICB9XG4gICAgICByZXR1cm4gbmV3IFN0YW5kYXJkUmV0cnlTdHJhdGVneShtYXhBdHRlbXB0cyk7XG4gICAgfSxcbiAgfTtcbn07XG5cbmNvbnN0IGdldFJldHJ5TW9kZSA9IGFzeW5jIChyZXRyeU1vZGU6IHN0cmluZyB8IFByb3ZpZGVyPHN0cmluZz4pOiBQcm9taXNlPHN0cmluZz4gPT4ge1xuICBpZiAodHlwZW9mIHJldHJ5TW9kZSA9PT0gXCJzdHJpbmdcIikge1xuICAgIHJldHVybiByZXRyeU1vZGU7XG4gIH1cbiAgcmV0dXJuIGF3YWl0IHJldHJ5TW9kZSgpO1xufTtcblxuY29uc3Qgbm9ybWFsaXplTWF4QXR0ZW1wdHMgPSAobWF4QXR0ZW1wdHM6IG51bWJlciB8IFByb3ZpZGVyPG51bWJlcj4gPSBERUZBVUxUX01BWF9BVFRFTVBUUyk6IFByb3ZpZGVyPG51bWJlcj4gPT4ge1xuICBpZiAodHlwZW9mIG1heEF0dGVtcHRzID09PSBcIm51bWJlclwiKSB7XG4gICAgY29uc3QgcHJvbWlzaWZpZWQgPSBQcm9taXNlLnJlc29sdmUobWF4QXR0ZW1wdHMpO1xuICAgIHJldHVybiAoKSA9PiBwcm9taXNpZmllZDtcbiAgfVxuICByZXR1cm4gbWF4QXR0ZW1wdHM7XG59O1xuXG5leHBvcnQgY29uc3QgRU5WX1JFVFJZX01PREUgPSBcIkFXU19SRVRSWV9NT0RFXCI7XG5leHBvcnQgY29uc3QgQ09ORklHX1JFVFJZX01PREUgPSBcInJldHJ5X21vZGVcIjtcblxuZXhwb3J0IGNvbnN0IE5PREVfUkVUUllfTU9ERV9DT05GSUdfT1BUSU9OUzogTG9hZGVkQ29uZmlnU2VsZWN0b3JzPHN0cmluZz4gPSB7XG4gIGVudmlyb25tZW50VmFyaWFibGVTZWxlY3RvcjogKGVudikgPT4gZW52W0VOVl9SRVRSWV9NT0RFXSxcbiAgY29uZmlnRmlsZVNlbGVjdG9yOiAocHJvZmlsZSkgPT4gcHJvZmlsZVtDT05GSUdfUkVUUllfTU9ERV0sXG4gIGRlZmF1bHQ6IERFRkFVTFRfUkVUUllfTU9ERSxcbn07XG4iXX0=","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.REQUEST_HEADER = exports.INVOCATION_ID_HEADER = exports.NO_RETRY_INCREMENT = exports.TIMEOUT_RETRY_COST = exports.RETRY_COST = exports.INITIAL_RETRY_TOKENS = exports.THROTTLING_RETRY_DELAY_BASE = exports.MAXIMUM_RETRY_DELAY = exports.DEFAULT_RETRY_DELAY_BASE = void 0;\n/**\n * The base number of milliseconds to use in calculating a suitable cool-down\n * time when a retryable error is encountered.\n */\nexports.DEFAULT_RETRY_DELAY_BASE = 100;\n/**\n * The maximum amount of time (in milliseconds) that will be used as a delay\n * between retry attempts.\n */\nexports.MAXIMUM_RETRY_DELAY = 20 * 1000;\n/**\n * The retry delay base (in milliseconds) to use when a throttling error is\n * encountered.\n */\nexports.THROTTLING_RETRY_DELAY_BASE = 500;\n/**\n * Initial number of retry tokens in Retry Quota\n */\nexports.INITIAL_RETRY_TOKENS = 500;\n/**\n * The total amount of retry tokens to be decremented from retry token balance.\n */\nexports.RETRY_COST = 5;\n/**\n * The total amount of retry tokens to be decremented from retry token balance\n * when a throttling error is encountered.\n */\nexports.TIMEOUT_RETRY_COST = 10;\n/**\n * The total amount of retry token to be incremented from retry token balance\n * if an SDK operation invocation succeeds without requiring a retry request.\n */\nexports.NO_RETRY_INCREMENT = 1;\n/**\n * Header name for SDK invocation ID\n */\nexports.INVOCATION_ID_HEADER = \"amz-sdk-invocation-id\";\n/**\n * Header name for request retry information.\n */\nexports.REQUEST_HEADER = \"amz-sdk-request\";\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uc3RhbnRzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2NvbnN0YW50cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQTs7O0dBR0c7QUFDVSxRQUFBLHdCQUF3QixHQUFHLEdBQUcsQ0FBQztBQUU1Qzs7O0dBR0c7QUFDVSxRQUFBLG1CQUFtQixHQUFHLEVBQUUsR0FBRyxJQUFJLENBQUM7QUFFN0M7OztHQUdHO0FBQ1UsUUFBQSwyQkFBMkIsR0FBRyxHQUFHLENBQUM7QUFFL0M7O0dBRUc7QUFDVSxRQUFBLG9CQUFvQixHQUFHLEdBQUcsQ0FBQztBQUV4Qzs7R0FFRztBQUNVLFFBQUEsVUFBVSxHQUFHLENBQUMsQ0FBQztBQUU1Qjs7O0dBR0c7QUFDVSxRQUFBLGtCQUFrQixHQUFHLEVBQUUsQ0FBQztBQUVyQzs7O0dBR0c7QUFDVSxRQUFBLGtCQUFrQixHQUFHLENBQUMsQ0FBQztBQUVwQzs7R0FFRztBQUNVLFFBQUEsb0JBQW9CLEdBQUcsdUJBQXVCLENBQUM7QUFFNUQ7O0dBRUc7QUFDVSxRQUFBLGNBQWMsR0FBRyxpQkFBaUIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogVGhlIGJhc2UgbnVtYmVyIG9mIG1pbGxpc2Vjb25kcyB0byB1c2UgaW4gY2FsY3VsYXRpbmcgYSBzdWl0YWJsZSBjb29sLWRvd25cbiAqIHRpbWUgd2hlbiBhIHJldHJ5YWJsZSBlcnJvciBpcyBlbmNvdW50ZXJlZC5cbiAqL1xuZXhwb3J0IGNvbnN0IERFRkFVTFRfUkVUUllfREVMQVlfQkFTRSA9IDEwMDtcblxuLyoqXG4gKiBUaGUgbWF4aW11bSBhbW91bnQgb2YgdGltZSAoaW4gbWlsbGlzZWNvbmRzKSB0aGF0IHdpbGwgYmUgdXNlZCBhcyBhIGRlbGF5XG4gKiBiZXR3ZWVuIHJldHJ5IGF0dGVtcHRzLlxuICovXG5leHBvcnQgY29uc3QgTUFYSU1VTV9SRVRSWV9ERUxBWSA9IDIwICogMTAwMDtcblxuLyoqXG4gKiBUaGUgcmV0cnkgZGVsYXkgYmFzZSAoaW4gbWlsbGlzZWNvbmRzKSB0byB1c2Ugd2hlbiBhIHRocm90dGxpbmcgZXJyb3IgaXNcbiAqIGVuY291bnRlcmVkLlxuICovXG5leHBvcnQgY29uc3QgVEhST1RUTElOR19SRVRSWV9ERUxBWV9CQVNFID0gNTAwO1xuXG4vKipcbiAqIEluaXRpYWwgbnVtYmVyIG9mIHJldHJ5IHRva2VucyBpbiBSZXRyeSBRdW90YVxuICovXG5leHBvcnQgY29uc3QgSU5JVElBTF9SRVRSWV9UT0tFTlMgPSA1MDA7XG5cbi8qKlxuICogVGhlIHRvdGFsIGFtb3VudCBvZiByZXRyeSB0b2tlbnMgdG8gYmUgZGVjcmVtZW50ZWQgZnJvbSByZXRyeSB0b2tlbiBiYWxhbmNlLlxuICovXG5leHBvcnQgY29uc3QgUkVUUllfQ09TVCA9IDU7XG5cbi8qKlxuICogVGhlIHRvdGFsIGFtb3VudCBvZiByZXRyeSB0b2tlbnMgdG8gYmUgZGVjcmVtZW50ZWQgZnJvbSByZXRyeSB0b2tlbiBiYWxhbmNlXG4gKiB3aGVuIGEgdGhyb3R0bGluZyBlcnJvciBpcyBlbmNvdW50ZXJlZC5cbiAqL1xuZXhwb3J0IGNvbnN0IFRJTUVPVVRfUkVUUllfQ09TVCA9IDEwO1xuXG4vKipcbiAqIFRoZSB0b3RhbCBhbW91bnQgb2YgcmV0cnkgdG9rZW4gdG8gYmUgaW5jcmVtZW50ZWQgZnJvbSByZXRyeSB0b2tlbiBiYWxhbmNlXG4gKiBpZiBhbiBTREsgb3BlcmF0aW9uIGludm9jYXRpb24gc3VjY2VlZHMgd2l0aG91dCByZXF1aXJpbmcgYSByZXRyeSByZXF1ZXN0LlxuICovXG5leHBvcnQgY29uc3QgTk9fUkVUUllfSU5DUkVNRU5UID0gMTtcblxuLyoqXG4gKiBIZWFkZXIgbmFtZSBmb3IgU0RLIGludm9jYXRpb24gSURcbiAqL1xuZXhwb3J0IGNvbnN0IElOVk9DQVRJT05fSURfSEVBREVSID0gXCJhbXotc2RrLWludm9jYXRpb24taWRcIjtcblxuLyoqXG4gKiBIZWFkZXIgbmFtZSBmb3IgcmVxdWVzdCByZXRyeSBpbmZvcm1hdGlvbi5cbiAqL1xuZXhwb3J0IGNvbnN0IFJFUVVFU1RfSEVBREVSID0gXCJhbXotc2RrLXJlcXVlc3RcIjtcbiJdfQ==","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getDefaultRetryQuota = void 0;\nconst constants_1 = require(\"./constants\");\nconst getDefaultRetryQuota = (initialRetryTokens, options) => {\n    var _a, _b, _c;\n    const MAX_CAPACITY = initialRetryTokens;\n    const noRetryIncrement = (_a = options === null || options === void 0 ? void 0 : options.noRetryIncrement) !== null && _a !== void 0 ? _a : constants_1.NO_RETRY_INCREMENT;\n    const retryCost = (_b = options === null || options === void 0 ? void 0 : options.retryCost) !== null && _b !== void 0 ? _b : constants_1.RETRY_COST;\n    const timeoutRetryCost = (_c = options === null || options === void 0 ? void 0 : options.timeoutRetryCost) !== null && _c !== void 0 ? _c : constants_1.TIMEOUT_RETRY_COST;\n    let availableCapacity = initialRetryTokens;\n    const getCapacityAmount = (error) => (error.name === \"TimeoutError\" ? timeoutRetryCost : retryCost);\n    const hasRetryTokens = (error) => getCapacityAmount(error) <= availableCapacity;\n    const retrieveRetryTokens = (error) => {\n        if (!hasRetryTokens(error)) {\n            // retryStrategy should stop retrying, and return last error\n            throw new Error(\"No retry token available\");\n        }\n        const capacityAmount = getCapacityAmount(error);\n        availableCapacity -= capacityAmount;\n        return capacityAmount;\n    };\n    const releaseRetryTokens = (capacityReleaseAmount) => {\n        availableCapacity += capacityReleaseAmount !== null && capacityReleaseAmount !== void 0 ? capacityReleaseAmount : noRetryIncrement;\n        availableCapacity = Math.min(availableCapacity, MAX_CAPACITY);\n    };\n    return Object.freeze({\n        hasRetryTokens,\n        retrieveRetryTokens,\n        releaseRetryTokens,\n    });\n};\nexports.getDefaultRetryQuota = getDefaultRetryQuota;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVmYXVsdFJldHJ5UXVvdGEuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvZGVmYXVsdFJldHJ5UXVvdGEudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBRUEsMkNBQWlGO0FBc0IxRSxNQUFNLG9CQUFvQixHQUFHLENBQUMsa0JBQTBCLEVBQUUsT0FBa0MsRUFBYyxFQUFFOztJQUNqSCxNQUFNLFlBQVksR0FBRyxrQkFBa0IsQ0FBQztJQUN4QyxNQUFNLGdCQUFnQixHQUFHLE1BQUEsT0FBTyxhQUFQLE9BQU8sdUJBQVAsT0FBTyxDQUFFLGdCQUFnQixtQ0FBSSw4QkFBa0IsQ0FBQztJQUN6RSxNQUFNLFNBQVMsR0FBRyxNQUFBLE9BQU8sYUFBUCxPQUFPLHVCQUFQLE9BQU8sQ0FBRSxTQUFTLG1DQUFJLHNCQUFVLENBQUM7SUFDbkQsTUFBTSxnQkFBZ0IsR0FBRyxNQUFBLE9BQU8sYUFBUCxPQUFPLHVCQUFQLE9BQU8sQ0FBRSxnQkFBZ0IsbUNBQUksOEJBQWtCLENBQUM7SUFFekUsSUFBSSxpQkFBaUIsR0FBRyxrQkFBa0IsQ0FBQztJQUUzQyxNQUFNLGlCQUFpQixHQUFHLENBQUMsS0FBZSxFQUFFLEVBQUUsQ0FBQyxDQUFDLEtBQUssQ0FBQyxJQUFJLEtBQUssY0FBYyxDQUFDLENBQUMsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUM7SUFFOUcsTUFBTSxjQUFjLEdBQUcsQ0FBQyxLQUFlLEVBQUUsRUFBRSxDQUFDLGlCQUFpQixDQUFDLEtBQUssQ0FBQyxJQUFJLGlCQUFpQixDQUFDO0lBRTFGLE1BQU0sbUJBQW1CLEdBQUcsQ0FBQyxLQUFlLEVBQUUsRUFBRTtRQUM5QyxJQUFJLENBQUMsY0FBYyxDQUFDLEtBQUssQ0FBQyxFQUFFO1lBQzFCLDREQUE0RDtZQUM1RCxNQUFNLElBQUksS0FBSyxDQUFDLDBCQUEwQixDQUFDLENBQUM7U0FDN0M7UUFDRCxNQUFNLGNBQWMsR0FBRyxpQkFBaUIsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUNoRCxpQkFBaUIsSUFBSSxjQUFjLENBQUM7UUFDcEMsT0FBTyxjQUFjLENBQUM7SUFDeEIsQ0FBQyxDQUFDO0lBRUYsTUFBTSxrQkFBa0IsR0FBRyxDQUFDLHFCQUE4QixFQUFFLEVBQUU7UUFDNUQsaUJBQWlCLElBQUkscUJBQXFCLGFBQXJCLHFCQUFxQixjQUFyQixxQkFBcUIsR0FBSSxnQkFBZ0IsQ0FBQztRQUMvRCxpQkFBaUIsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLGlCQUFpQixFQUFFLFlBQVksQ0FBQyxDQUFDO0lBQ2hFLENBQUMsQ0FBQztJQUVGLE9BQU8sTUFBTSxDQUFDLE1BQU0sQ0FBQztRQUNuQixjQUFjO1FBQ2QsbUJBQW1CO1FBQ25CLGtCQUFrQjtLQUNuQixDQUFDLENBQUM7QUFDTCxDQUFDLENBQUM7QUFoQ1csUUFBQSxvQkFBb0Isd0JBZ0MvQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFNka0Vycm9yIH0gZnJvbSBcIkBhd3Mtc2RrL3R5cGVzXCI7XG5cbmltcG9ydCB7IE5PX1JFVFJZX0lOQ1JFTUVOVCwgUkVUUllfQ09TVCwgVElNRU9VVF9SRVRSWV9DT1NUIH0gZnJvbSBcIi4vY29uc3RhbnRzXCI7XG5pbXBvcnQgeyBSZXRyeVF1b3RhIH0gZnJvbSBcIi4vdHlwZXNcIjtcblxuZXhwb3J0IGludGVyZmFjZSBEZWZhdWx0UmV0cnlRdW90YU9wdGlvbnMge1xuICAvKipcbiAgICogVGhlIHRvdGFsIGFtb3VudCBvZiByZXRyeSB0b2tlbiB0byBiZSBpbmNyZW1lbnRlZCBmcm9tIHJldHJ5IHRva2VuIGJhbGFuY2VcbiAgICogaWYgYW4gU0RLIG9wZXJhdGlvbiBpbnZvY2F0aW9uIHN1Y2NlZWRzIHdpdGhvdXQgcmVxdWlyaW5nIGEgcmV0cnkgcmVxdWVzdC5cbiAgICovXG4gIG5vUmV0cnlJbmNyZW1lbnQ/OiBudW1iZXI7XG5cbiAgLyoqXG4gICAqIFRoZSB0b3RhbCBhbW91bnQgb2YgcmV0cnkgdG9rZW5zIHRvIGJlIGRlY3JlbWVudGVkIGZyb20gcmV0cnkgdG9rZW4gYmFsYW5jZS5cbiAgICovXG4gIHJldHJ5Q29zdD86IG51bWJlcjtcblxuICAvKipcbiAgICogVGhlIHRvdGFsIGFtb3VudCBvZiByZXRyeSB0b2tlbnMgdG8gYmUgZGVjcmVtZW50ZWQgZnJvbSByZXRyeSB0b2tlbiBiYWxhbmNlXG4gICAqIHdoZW4gYSB0aHJvdHRsaW5nIGVycm9yIGlzIGVuY291bnRlcmVkLlxuICAgKi9cbiAgdGltZW91dFJldHJ5Q29zdD86IG51bWJlcjtcbn1cblxuZXhwb3J0IGNvbnN0IGdldERlZmF1bHRSZXRyeVF1b3RhID0gKGluaXRpYWxSZXRyeVRva2VuczogbnVtYmVyLCBvcHRpb25zPzogRGVmYXVsdFJldHJ5UXVvdGFPcHRpb25zKTogUmV0cnlRdW90YSA9PiB7XG4gIGNvbnN0IE1BWF9DQVBBQ0lUWSA9IGluaXRpYWxSZXRyeVRva2VucztcbiAgY29uc3Qgbm9SZXRyeUluY3JlbWVudCA9IG9wdGlvbnM/Lm5vUmV0cnlJbmNyZW1lbnQgPz8gTk9fUkVUUllfSU5DUkVNRU5UO1xuICBjb25zdCByZXRyeUNvc3QgPSBvcHRpb25zPy5yZXRyeUNvc3QgPz8gUkVUUllfQ09TVDtcbiAgY29uc3QgdGltZW91dFJldHJ5Q29zdCA9IG9wdGlvbnM/LnRpbWVvdXRSZXRyeUNvc3QgPz8gVElNRU9VVF9SRVRSWV9DT1NUO1xuXG4gIGxldCBhdmFpbGFibGVDYXBhY2l0eSA9IGluaXRpYWxSZXRyeVRva2VucztcblxuICBjb25zdCBnZXRDYXBhY2l0eUFtb3VudCA9IChlcnJvcjogU2RrRXJyb3IpID0+IChlcnJvci5uYW1lID09PSBcIlRpbWVvdXRFcnJvclwiID8gdGltZW91dFJldHJ5Q29zdCA6IHJldHJ5Q29zdCk7XG5cbiAgY29uc3QgaGFzUmV0cnlUb2tlbnMgPSAoZXJyb3I6IFNka0Vycm9yKSA9PiBnZXRDYXBhY2l0eUFtb3VudChlcnJvcikgPD0gYXZhaWxhYmxlQ2FwYWNpdHk7XG5cbiAgY29uc3QgcmV0cmlldmVSZXRyeVRva2VucyA9IChlcnJvcjogU2RrRXJyb3IpID0+IHtcbiAgICBpZiAoIWhhc1JldHJ5VG9rZW5zKGVycm9yKSkge1xuICAgICAgLy8gcmV0cnlTdHJhdGVneSBzaG91bGQgc3RvcCByZXRyeWluZywgYW5kIHJldHVybiBsYXN0IGVycm9yXG4gICAgICB0aHJvdyBuZXcgRXJyb3IoXCJObyByZXRyeSB0b2tlbiBhdmFpbGFibGVcIik7XG4gICAgfVxuICAgIGNvbnN0IGNhcGFjaXR5QW1vdW50ID0gZ2V0Q2FwYWNpdHlBbW91bnQoZXJyb3IpO1xuICAgIGF2YWlsYWJsZUNhcGFjaXR5IC09IGNhcGFjaXR5QW1vdW50O1xuICAgIHJldHVybiBjYXBhY2l0eUFtb3VudDtcbiAgfTtcblxuICBjb25zdCByZWxlYXNlUmV0cnlUb2tlbnMgPSAoY2FwYWNpdHlSZWxlYXNlQW1vdW50PzogbnVtYmVyKSA9PiB7XG4gICAgYXZhaWxhYmxlQ2FwYWNpdHkgKz0gY2FwYWNpdHlSZWxlYXNlQW1vdW50ID8/IG5vUmV0cnlJbmNyZW1lbnQ7XG4gICAgYXZhaWxhYmxlQ2FwYWNpdHkgPSBNYXRoLm1pbihhdmFpbGFibGVDYXBhY2l0eSwgTUFYX0NBUEFDSVRZKTtcbiAgfTtcblxuICByZXR1cm4gT2JqZWN0LmZyZWV6ZSh7XG4gICAgaGFzUmV0cnlUb2tlbnMsXG4gICAgcmV0cmlldmVSZXRyeVRva2VucyxcbiAgICByZWxlYXNlUmV0cnlUb2tlbnMsXG4gIH0pO1xufTtcbiJdfQ==","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultDelayDecider = void 0;\nconst constants_1 = require(\"./constants\");\n/**\n * Calculate a capped, fully-jittered exponential backoff time.\n */\nconst defaultDelayDecider = (delayBase, attempts) => Math.floor(Math.min(constants_1.MAXIMUM_RETRY_DELAY, Math.random() * 2 ** attempts * delayBase));\nexports.defaultDelayDecider = defaultDelayDecider;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVsYXlEZWNpZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2RlbGF5RGVjaWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSwyQ0FBa0Q7QUFFbEQ7O0dBRUc7QUFDSSxNQUFNLG1CQUFtQixHQUFHLENBQUMsU0FBaUIsRUFBRSxRQUFnQixFQUFFLEVBQUUsQ0FDekUsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLCtCQUFtQixFQUFFLElBQUksQ0FBQyxNQUFNLEVBQUUsR0FBRyxDQUFDLElBQUksUUFBUSxHQUFHLFNBQVMsQ0FBQyxDQUFDLENBQUM7QUFEMUUsUUFBQSxtQkFBbUIsdUJBQ3VEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTUFYSU1VTV9SRVRSWV9ERUxBWSB9IGZyb20gXCIuL2NvbnN0YW50c1wiO1xuXG4vKipcbiAqIENhbGN1bGF0ZSBhIGNhcHBlZCwgZnVsbHktaml0dGVyZWQgZXhwb25lbnRpYWwgYmFja29mZiB0aW1lLlxuICovXG5leHBvcnQgY29uc3QgZGVmYXVsdERlbGF5RGVjaWRlciA9IChkZWxheUJhc2U6IG51bWJlciwgYXR0ZW1wdHM6IG51bWJlcikgPT5cbiAgTWF0aC5mbG9vcihNYXRoLm1pbihNQVhJTVVNX1JFVFJZX0RFTEFZLCBNYXRoLnJhbmRvbSgpICogMiAqKiBhdHRlbXB0cyAqIGRlbGF5QmFzZSkpO1xuIl19","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\n(0, tslib_1.__exportStar)(require(\"./retryMiddleware\"), exports);\n(0, tslib_1.__exportStar)(require(\"./omitRetryHeadersMiddleware\"), exports);\n(0, tslib_1.__exportStar)(require(\"./StandardRetryStrategy\"), exports);\n(0, tslib_1.__exportStar)(require(\"./AdaptiveRetryStrategy\"), exports);\n(0, tslib_1.__exportStar)(require(\"./config\"), exports);\n(0, tslib_1.__exportStar)(require(\"./configurations\"), exports);\n(0, tslib_1.__exportStar)(require(\"./delayDecider\"), exports);\n(0, tslib_1.__exportStar)(require(\"./DefaultRateLimiter\"), exports);\n(0, tslib_1.__exportStar)(require(\"./retryDecider\"), exports);\n(0, tslib_1.__exportStar)(require(\"./types\"), exports);\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsaUVBQWtDO0FBQ2xDLDRFQUE2QztBQUM3Qyx1RUFBd0M7QUFDeEMsdUVBQXdDO0FBQ3hDLHdEQUF5QjtBQUN6QixnRUFBaUM7QUFDakMsOERBQStCO0FBQy9CLG9FQUFxQztBQUNyQyw4REFBK0I7QUFDL0IsdURBQXdCIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIi4vcmV0cnlNaWRkbGV3YXJlXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9vbWl0UmV0cnlIZWFkZXJzTWlkZGxld2FyZVwiO1xuZXhwb3J0ICogZnJvbSBcIi4vU3RhbmRhcmRSZXRyeVN0cmF0ZWd5XCI7XG5leHBvcnQgKiBmcm9tIFwiLi9BZGFwdGl2ZVJldHJ5U3RyYXRlZ3lcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2NvbmZpZ1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vY29uZmlndXJhdGlvbnNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2RlbGF5RGVjaWRlclwiO1xuZXhwb3J0ICogZnJvbSBcIi4vRGVmYXVsdFJhdGVMaW1pdGVyXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9yZXRyeURlY2lkZXJcIjtcbmV4cG9ydCAqIGZyb20gXCIuL3R5cGVzXCI7XG4iXX0=","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getOmitRetryHeadersPlugin = exports.omitRetryHeadersMiddlewareOptions = exports.omitRetryHeadersMiddleware = void 0;\nconst protocol_http_1 = require(\"@aws-sdk/protocol-http\");\nconst constants_1 = require(\"./constants\");\nconst omitRetryHeadersMiddleware = () => (next) => async (args) => {\n    const { request } = args;\n    if (protocol_http_1.HttpRequest.isInstance(request)) {\n        delete request.headers[constants_1.INVOCATION_ID_HEADER];\n        delete request.headers[constants_1.REQUEST_HEADER];\n    }\n    return next(args);\n};\nexports.omitRetryHeadersMiddleware = omitRetryHeadersMiddleware;\nexports.omitRetryHeadersMiddlewareOptions = {\n    name: \"omitRetryHeadersMiddleware\",\n    tags: [\"RETRY\", \"HEADERS\", \"OMIT_RETRY_HEADERS\"],\n    relation: \"before\",\n    toMiddleware: \"awsAuthMiddleware\",\n    override: true,\n};\nconst getOmitRetryHeadersPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.addRelativeTo((0, exports.omitRetryHeadersMiddleware)(), exports.omitRetryHeadersMiddlewareOptions);\n    },\n});\nexports.getOmitRetryHeadersPlugin = getOmitRetryHeadersPlugin;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib21pdFJldHJ5SGVhZGVyc01pZGRsZXdhcmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvb21pdFJldHJ5SGVhZGVyc01pZGRsZXdhcmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsMERBQXFEO0FBVXJELDJDQUFtRTtBQUU1RCxNQUFNLDBCQUEwQixHQUNyQyxHQUFHLEVBQUUsQ0FDTCxDQUFpRCxJQUFrQyxFQUFnQyxFQUFFLENBQ3JILEtBQUssRUFBRSxJQUFtQyxFQUEwQyxFQUFFO0lBQ3BGLE1BQU0sRUFBRSxPQUFPLEVBQUUsR0FBRyxJQUFJLENBQUM7SUFDekIsSUFBSSwyQkFBVyxDQUFDLFVBQVUsQ0FBQyxPQUFPLENBQUMsRUFBRTtRQUNuQyxPQUFPLE9BQU8sQ0FBQyxPQUFPLENBQUMsZ0NBQW9CLENBQUMsQ0FBQztRQUM3QyxPQUFPLE9BQU8sQ0FBQyxPQUFPLENBQUMsMEJBQWMsQ0FBQyxDQUFDO0tBQ3hDO0lBQ0QsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDcEIsQ0FBQyxDQUFDO0FBVlMsUUFBQSwwQkFBMEIsOEJBVW5DO0FBRVMsUUFBQSxpQ0FBaUMsR0FBOEI7SUFDMUUsSUFBSSxFQUFFLDRCQUE0QjtJQUNsQyxJQUFJLEVBQUUsQ0FBQyxPQUFPLEVBQUUsU0FBUyxFQUFFLG9CQUFvQixDQUFDO0lBQ2hELFFBQVEsRUFBRSxRQUFRO0lBQ2xCLFlBQVksRUFBRSxtQkFBbUI7SUFDakMsUUFBUSxFQUFFLElBQUk7Q0FDZixDQUFDO0FBRUssTUFBTSx5QkFBeUIsR0FBRyxDQUFDLE9BQWdCLEVBQXVCLEVBQUUsQ0FBQyxDQUFDO0lBQ25GLFlBQVksRUFBRSxDQUFDLFdBQVcsRUFBRSxFQUFFO1FBQzVCLFdBQVcsQ0FBQyxhQUFhLENBQUMsSUFBQSxrQ0FBMEIsR0FBRSxFQUFFLHlDQUFpQyxDQUFDLENBQUM7SUFDN0YsQ0FBQztDQUNGLENBQUMsQ0FBQztBQUpVLFFBQUEseUJBQXlCLDZCQUluQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEh0dHBSZXF1ZXN0IH0gZnJvbSBcIkBhd3Mtc2RrL3Byb3RvY29sLWh0dHBcIjtcbmltcG9ydCB7XG4gIEZpbmFsaXplSGFuZGxlcixcbiAgRmluYWxpemVIYW5kbGVyQXJndW1lbnRzLFxuICBGaW5hbGl6ZUhhbmRsZXJPdXRwdXQsXG4gIE1ldGFkYXRhQmVhcmVyLFxuICBQbHVnZ2FibGUsXG4gIFJlbGF0aXZlTWlkZGxld2FyZU9wdGlvbnMsXG59IGZyb20gXCJAYXdzLXNkay90eXBlc1wiO1xuXG5pbXBvcnQgeyBJTlZPQ0FUSU9OX0lEX0hFQURFUiwgUkVRVUVTVF9IRUFERVIgfSBmcm9tIFwiLi9jb25zdGFudHNcIjtcblxuZXhwb3J0IGNvbnN0IG9taXRSZXRyeUhlYWRlcnNNaWRkbGV3YXJlID1cbiAgKCkgPT5cbiAgPE91dHB1dCBleHRlbmRzIE1ldGFkYXRhQmVhcmVyID0gTWV0YWRhdGFCZWFyZXI+KG5leHQ6IEZpbmFsaXplSGFuZGxlcjxhbnksIE91dHB1dD4pOiBGaW5hbGl6ZUhhbmRsZXI8YW55LCBPdXRwdXQ+ID0+XG4gIGFzeW5jIChhcmdzOiBGaW5hbGl6ZUhhbmRsZXJBcmd1bWVudHM8YW55Pik6IFByb21pc2U8RmluYWxpemVIYW5kbGVyT3V0cHV0PE91dHB1dD4+ID0+IHtcbiAgICBjb25zdCB7IHJlcXVlc3QgfSA9IGFyZ3M7XG4gICAgaWYgKEh0dHBSZXF1ZXN0LmlzSW5zdGFuY2UocmVxdWVzdCkpIHtcbiAgICAgIGRlbGV0ZSByZXF1ZXN0LmhlYWRlcnNbSU5WT0NBVElPTl9JRF9IRUFERVJdO1xuICAgICAgZGVsZXRlIHJlcXVlc3QuaGVhZGVyc1tSRVFVRVNUX0hFQURFUl07XG4gICAgfVxuICAgIHJldHVybiBuZXh0KGFyZ3MpO1xuICB9O1xuXG5leHBvcnQgY29uc3Qgb21pdFJldHJ5SGVhZGVyc01pZGRsZXdhcmVPcHRpb25zOiBSZWxhdGl2ZU1pZGRsZXdhcmVPcHRpb25zID0ge1xuICBuYW1lOiBcIm9taXRSZXRyeUhlYWRlcnNNaWRkbGV3YXJlXCIsXG4gIHRhZ3M6IFtcIlJFVFJZXCIsIFwiSEVBREVSU1wiLCBcIk9NSVRfUkVUUllfSEVBREVSU1wiXSxcbiAgcmVsYXRpb246IFwiYmVmb3JlXCIsXG4gIHRvTWlkZGxld2FyZTogXCJhd3NBdXRoTWlkZGxld2FyZVwiLFxuICBvdmVycmlkZTogdHJ1ZSxcbn07XG5cbmV4cG9ydCBjb25zdCBnZXRPbWl0UmV0cnlIZWFkZXJzUGx1Z2luID0gKG9wdGlvbnM6IHVua25vd24pOiBQbHVnZ2FibGU8YW55LCBhbnk+ID0+ICh7XG4gIGFwcGx5VG9TdGFjazogKGNsaWVudFN0YWNrKSA9PiB7XG4gICAgY2xpZW50U3RhY2suYWRkUmVsYXRpdmVUbyhvbWl0UmV0cnlIZWFkZXJzTWlkZGxld2FyZSgpLCBvbWl0UmV0cnlIZWFkZXJzTWlkZGxld2FyZU9wdGlvbnMpO1xuICB9LFxufSk7XG4iXX0=","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultRetryDecider = void 0;\nconst service_error_classification_1 = require(\"@aws-sdk/service-error-classification\");\nconst defaultRetryDecider = (error) => {\n    if (!error) {\n        return false;\n    }\n    return (0, service_error_classification_1.isRetryableByTrait)(error) || (0, service_error_classification_1.isClockSkewError)(error) || (0, service_error_classification_1.isThrottlingError)(error) || (0, service_error_classification_1.isTransientError)(error);\n};\nexports.defaultRetryDecider = defaultRetryDecider;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmV0cnlEZWNpZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3JldHJ5RGVjaWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSx3RkFLK0M7QUFHeEMsTUFBTSxtQkFBbUIsR0FBRyxDQUFDLEtBQWUsRUFBRSxFQUFFO0lBQ3JELElBQUksQ0FBQyxLQUFLLEVBQUU7UUFDVixPQUFPLEtBQUssQ0FBQztLQUNkO0lBRUQsT0FBTyxJQUFBLGlEQUFrQixFQUFDLEtBQUssQ0FBQyxJQUFJLElBQUEsK0NBQWdCLEVBQUMsS0FBSyxDQUFDLElBQUksSUFBQSxnREFBaUIsRUFBQyxLQUFLLENBQUMsSUFBSSxJQUFBLCtDQUFnQixFQUFDLEtBQUssQ0FBQyxDQUFDO0FBQ3JILENBQUMsQ0FBQztBQU5XLFFBQUEsbUJBQW1CLHVCQU05QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIGlzQ2xvY2tTa2V3RXJyb3IsXG4gIGlzUmV0cnlhYmxlQnlUcmFpdCxcbiAgaXNUaHJvdHRsaW5nRXJyb3IsXG4gIGlzVHJhbnNpZW50RXJyb3IsXG59IGZyb20gXCJAYXdzLXNkay9zZXJ2aWNlLWVycm9yLWNsYXNzaWZpY2F0aW9uXCI7XG5pbXBvcnQgeyBTZGtFcnJvciB9IGZyb20gXCJAYXdzLXNkay90eXBlc1wiO1xuXG5leHBvcnQgY29uc3QgZGVmYXVsdFJldHJ5RGVjaWRlciA9IChlcnJvcjogU2RrRXJyb3IpID0+IHtcbiAgaWYgKCFlcnJvcikge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHJldHVybiBpc1JldHJ5YWJsZUJ5VHJhaXQoZXJyb3IpIHx8IGlzQ2xvY2tTa2V3RXJyb3IoZXJyb3IpIHx8IGlzVGhyb3R0bGluZ0Vycm9yKGVycm9yKSB8fCBpc1RyYW5zaWVudEVycm9yKGVycm9yKTtcbn07XG4iXX0=","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRetryPlugin = exports.retryMiddlewareOptions = exports.retryMiddleware = void 0;\nconst retryMiddleware = (options) => (next, context) => async (args) => {\n    const retryStrategy = await options.retryStrategy();\n    if (retryStrategy === null || retryStrategy === void 0 ? void 0 : retryStrategy.mode)\n        context.userAgent = [...(context.userAgent || []), [\"cfg/retry-mode\", retryStrategy.mode]];\n    return retryStrategy.retry(next, args);\n};\nexports.retryMiddleware = retryMiddleware;\nexports.retryMiddlewareOptions = {\n    name: \"retryMiddleware\",\n    tags: [\"RETRY\"],\n    step: \"finalizeRequest\",\n    priority: \"high\",\n    override: true,\n};\nconst getRetryPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add((0, exports.retryMiddleware)(options), exports.retryMiddlewareOptions);\n    },\n});\nexports.getRetryPlugin = getRetryPlugin;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmV0cnlNaWRkbGV3YXJlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3JldHJ5TWlkZGxld2FyZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFhTyxNQUFNLGVBQWUsR0FDMUIsQ0FBQyxPQUE0QixFQUFFLEVBQUUsQ0FDakMsQ0FDRSxJQUFrQyxFQUNsQyxPQUFnQyxFQUNGLEVBQUUsQ0FDbEMsS0FBSyxFQUFFLElBQW1DLEVBQTBDLEVBQUU7SUFDcEYsTUFBTSxhQUFhLEdBQUcsTUFBTSxPQUFPLENBQUMsYUFBYSxFQUFFLENBQUM7SUFDcEQsSUFBSSxhQUFhLGFBQWIsYUFBYSx1QkFBYixhQUFhLENBQUUsSUFBSTtRQUFFLE9BQU8sQ0FBQyxTQUFTLEdBQUcsQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLFNBQVMsSUFBSSxFQUFFLENBQUMsRUFBRSxDQUFDLGdCQUFnQixFQUFFLGFBQWEsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO0lBQ3BILE9BQU8sYUFBYSxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLENBQUM7QUFDekMsQ0FBQyxDQUFDO0FBVlMsUUFBQSxlQUFlLG1CQVV4QjtBQUVTLFFBQUEsc0JBQXNCLEdBQXFEO0lBQ3RGLElBQUksRUFBRSxpQkFBaUI7SUFDdkIsSUFBSSxFQUFFLENBQUMsT0FBTyxDQUFDO0lBQ2YsSUFBSSxFQUFFLGlCQUFpQjtJQUN2QixRQUFRLEVBQUUsTUFBTTtJQUNoQixRQUFRLEVBQUUsSUFBSTtDQUNmLENBQUM7QUFFSyxNQUFNLGNBQWMsR0FBRyxDQUFDLE9BQTRCLEVBQXVCLEVBQUUsQ0FBQyxDQUFDO0lBQ3BGLFlBQVksRUFBRSxDQUFDLFdBQVcsRUFBRSxFQUFFO1FBQzVCLFdBQVcsQ0FBQyxHQUFHLENBQUMsSUFBQSx1QkFBZSxFQUFDLE9BQU8sQ0FBQyxFQUFFLDhCQUFzQixDQUFDLENBQUM7SUFDcEUsQ0FBQztDQUNGLENBQUMsQ0FBQztBQUpVLFFBQUEsY0FBYyxrQkFJeEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBBYnNvbHV0ZUxvY2F0aW9uLFxuICBGaW5hbGl6ZUhhbmRsZXIsXG4gIEZpbmFsaXplSGFuZGxlckFyZ3VtZW50cyxcbiAgRmluYWxpemVIYW5kbGVyT3V0cHV0LFxuICBGaW5hbGl6ZVJlcXVlc3RIYW5kbGVyT3B0aW9ucyxcbiAgSGFuZGxlckV4ZWN1dGlvbkNvbnRleHQsXG4gIE1ldGFkYXRhQmVhcmVyLFxuICBQbHVnZ2FibGUsXG59IGZyb20gXCJAYXdzLXNkay90eXBlc1wiO1xuXG5pbXBvcnQgeyBSZXRyeVJlc29sdmVkQ29uZmlnIH0gZnJvbSBcIi4vY29uZmlndXJhdGlvbnNcIjtcblxuZXhwb3J0IGNvbnN0IHJldHJ5TWlkZGxld2FyZSA9XG4gIChvcHRpb25zOiBSZXRyeVJlc29sdmVkQ29uZmlnKSA9PlxuICA8T3V0cHV0IGV4dGVuZHMgTWV0YWRhdGFCZWFyZXIgPSBNZXRhZGF0YUJlYXJlcj4oXG4gICAgbmV4dDogRmluYWxpemVIYW5kbGVyPGFueSwgT3V0cHV0PixcbiAgICBjb250ZXh0OiBIYW5kbGVyRXhlY3V0aW9uQ29udGV4dFxuICApOiBGaW5hbGl6ZUhhbmRsZXI8YW55LCBPdXRwdXQ+ID0+XG4gIGFzeW5jIChhcmdzOiBGaW5hbGl6ZUhhbmRsZXJBcmd1bWVudHM8YW55Pik6IFByb21pc2U8RmluYWxpemVIYW5kbGVyT3V0cHV0PE91dHB1dD4+ID0+IHtcbiAgICBjb25zdCByZXRyeVN0cmF0ZWd5ID0gYXdhaXQgb3B0aW9ucy5yZXRyeVN0cmF0ZWd5KCk7XG4gICAgaWYgKHJldHJ5U3RyYXRlZ3k/Lm1vZGUpIGNvbnRleHQudXNlckFnZW50ID0gWy4uLihjb250ZXh0LnVzZXJBZ2VudCB8fCBbXSksIFtcImNmZy9yZXRyeS1tb2RlXCIsIHJldHJ5U3RyYXRlZ3kubW9kZV1dO1xuICAgIHJldHVybiByZXRyeVN0cmF0ZWd5LnJldHJ5KG5leHQsIGFyZ3MpO1xuICB9O1xuXG5leHBvcnQgY29uc3QgcmV0cnlNaWRkbGV3YXJlT3B0aW9uczogRmluYWxpemVSZXF1ZXN0SGFuZGxlck9wdGlvbnMgJiBBYnNvbHV0ZUxvY2F0aW9uID0ge1xuICBuYW1lOiBcInJldHJ5TWlkZGxld2FyZVwiLFxuICB0YWdzOiBbXCJSRVRSWVwiXSxcbiAgc3RlcDogXCJmaW5hbGl6ZVJlcXVlc3RcIixcbiAgcHJpb3JpdHk6IFwiaGlnaFwiLFxuICBvdmVycmlkZTogdHJ1ZSxcbn07XG5cbmV4cG9ydCBjb25zdCBnZXRSZXRyeVBsdWdpbiA9IChvcHRpb25zOiBSZXRyeVJlc29sdmVkQ29uZmlnKTogUGx1Z2dhYmxlPGFueSwgYW55PiA9PiAoe1xuICBhcHBseVRvU3RhY2s6IChjbGllbnRTdGFjaykgPT4ge1xuICAgIGNsaWVudFN0YWNrLmFkZChyZXRyeU1pZGRsZXdhcmUob3B0aW9ucyksIHJldHJ5TWlkZGxld2FyZU9wdGlvbnMpO1xuICB9LFxufSk7XG4iXX0=","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHlwZXMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvdHlwZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFNka0Vycm9yIH0gZnJvbSBcIkBhd3Mtc2RrL3R5cGVzXCI7XG5cbi8qKlxuICogRGV0ZXJtaW5lcyB3aGV0aGVyIGFuIGVycm9yIGlzIHJldHJ5YWJsZSBiYXNlZCBvbiB0aGUgbnVtYmVyIG9mIHJldHJpZXNcbiAqIGFscmVhZHkgYXR0ZW1wdGVkLCB0aGUgSFRUUCBzdGF0dXMgY29kZSwgYW5kIHRoZSBlcnJvciByZWNlaXZlZCAoaWYgYW55KS5cbiAqXG4gKiBAcGFyYW0gZXJyb3IgICAgICAgICBUaGUgZXJyb3IgZW5jb3VudGVyZWQuXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgUmV0cnlEZWNpZGVyIHtcbiAgKGVycm9yOiBTZGtFcnJvcik6IGJvb2xlYW47XG59XG5cbi8qKlxuICogRGV0ZXJtaW5lcyB0aGUgbnVtYmVyIG9mIG1pbGxpc2Vjb25kcyB0byB3YWl0IGJlZm9yZSByZXRyeWluZyBhbiBhY3Rpb24uXG4gKlxuICogQHBhcmFtIGRlbGF5QmFzZSBUaGUgYmFzZSBkZWxheSAoaW4gbWlsbGlzZWNvbmRzKS5cbiAqIEBwYXJhbSBhdHRlbXB0cyAgVGhlIG51bWJlciBvZiB0aW1lcyB0aGUgYWN0aW9uIGhhcyBhbHJlYWR5IGJlZW4gdHJpZWQuXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgRGVsYXlEZWNpZGVyIHtcbiAgKGRlbGF5QmFzZTogbnVtYmVyLCBhdHRlbXB0czogbnVtYmVyKTogbnVtYmVyO1xufVxuXG4vKipcbiAqIEludGVyZmFjZSB0aGF0IHNwZWNpZmllcyB0aGUgcmV0cnkgcXVvdGEgYmVoYXZpb3IuXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgUmV0cnlRdW90YSB7XG4gIC8qKlxuICAgKiByZXR1cm5zIHRydWUgaWYgcmV0cnkgdG9rZW5zIGFyZSBhdmFpbGFibGUgZnJvbSB0aGUgcmV0cnkgcXVvdGEgYnVja2V0LlxuICAgKi9cbiAgaGFzUmV0cnlUb2tlbnM6IChlcnJvcjogU2RrRXJyb3IpID0+IGJvb2xlYW47XG5cbiAgLyoqXG4gICAqIHJldHVybnMgdG9rZW4gYW1vdW50IGZyb20gdGhlIHJldHJ5IHF1b3RhIGJ1Y2tldC5cbiAgICogdGhyb3dzIGVycm9yIGlzIHJldHJ5IHRva2VucyBhcmUgbm90IGF2YWlsYWJsZS5cbiAgICovXG4gIHJldHJpZXZlUmV0cnlUb2tlbnM6IChlcnJvcjogU2RrRXJyb3IpID0+IG51bWJlcjtcblxuICAvKipcbiAgICogcmVsZWFzZXMgdG9rZW5zIGJhY2sgdG8gdGhlIHJldHJ5IHF1b3RhLlxuICAgKi9cbiAgcmVsZWFzZVJldHJ5VG9rZW5zOiAocmVsZWFzZUNhcGFjaXR5QW1vdW50PzogbnVtYmVyKSA9PiB2b2lkO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFJhdGVMaW1pdGVyIHtcbiAgLyoqXG4gICAqIElmIHRoZXJlIGlzIHN1ZmZpY2llbnQgY2FwYWNpdHkgKHRva2VucykgYXZhaWxhYmxlLCBpdCBpbW1lZGlhdGVseSByZXR1cm5zLlxuICAgKiBJZiB0aGVyZSBpcyBub3Qgc3VmZmljaWVudCBjYXBhY2l0eSwgaXQgd2lsbCBlaXRoZXIgc2xlZXAgYSBjZXJ0YWluIGFtb3VudFxuICAgKiBvZiB0aW1lIHVudGlsIHRoZSByYXRlIGxpbWl0ZXIgY2FuIHJldHJpZXZlIGEgdG9rZW4gZnJvbSBpdHMgdG9rZW4gYnVja2V0XG4gICAqIG9yIHJhaXNlIGFuIGV4Y2VwdGlvbiBpbmRpY2F0aW5nIHRoZXJlIGlzIGluc3VmZmljaWVudCBjYXBhY2l0eS5cbiAgICovXG4gIGdldFNlbmRUb2tlbjogKCkgPT4gUHJvbWlzZTx2b2lkPjtcblxuICAvKipcbiAgICogVXBkYXRlcyB0aGUgY2xpZW50IHNlbmRpbmcgcmF0ZSBiYXNlZCBvbiByZXNwb25zZS5cbiAgICogSWYgdGhlIHJlc3BvbnNlIHdhcyBzdWNjZXNzZnVsLCB0aGUgY2FwYWNpdHkgYW5kIGZpbGwgcmF0ZSBhcmUgaW5jcmVhc2VkLlxuICAgKiBJZiB0aGUgcmVzcG9uc2Ugd2FzIGEgdGhyb3R0bGluZyByZXNwb25zZSwgdGhlIGNhcGFjaXR5IGFuZCBmaWxsIHJhdGUgYXJlXG4gICAqIGRlY3JlYXNlZC4gVHJhbnNpZW50IGVycm9ycyBkbyBub3QgYWZmZWN0IHRoZSByYXRlIGxpbWl0ZXIuXG4gICAqL1xuICB1cGRhdGVDbGllbnRTZW5kaW5nUmF0ZTogKHJlc3BvbnNlOiBhbnkpID0+IHZvaWQ7XG59XG4iXX0=","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveStsAuthConfig = void 0;\nconst middleware_signing_1 = require(\"@aws-sdk/middleware-signing\");\n/**\n * Set STS client constructor to `stsClientCtor` config parameter. It is used\n * for role assumers for STS client internally. See `clients/client-sts/defaultStsRoleAssumers.ts`\n * and `clients/client-sts/STSClient.ts`.\n */\nconst resolveStsAuthConfig = (input, { stsClientCtor }) => (0, middleware_signing_1.resolveAwsAuthConfig)({\n    ...input,\n    stsClientCtor,\n});\nexports.resolveStsAuthConfig = resolveStsAuthConfig;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsb0VBQThHO0FBMkI5Rzs7OztHQUlHO0FBQ0ksTUFBTSxvQkFBb0IsR0FBRyxDQUNsQyxLQUFrRCxFQUNsRCxFQUFFLGFBQWEsRUFBd0IsRUFDWixFQUFFLENBQzdCLElBQUEseUNBQW9CLEVBQUM7SUFDbkIsR0FBRyxLQUFLO0lBQ1IsYUFBYTtDQUNkLENBQUMsQ0FBQztBQVBRLFFBQUEsb0JBQW9CLHdCQU81QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEF3c0F1dGhJbnB1dENvbmZpZywgQXdzQXV0aFJlc29sdmVkQ29uZmlnLCByZXNvbHZlQXdzQXV0aENvbmZpZyB9IGZyb20gXCJAYXdzLXNkay9taWRkbGV3YXJlLXNpZ25pbmdcIjtcbmltcG9ydCB7IENsaWVudCwgQ3JlZGVudGlhbHMsIEhhc2hDb25zdHJ1Y3RvciwgUGx1Z2dhYmxlLCBQcm92aWRlciwgUmVnaW9uSW5mb1Byb3ZpZGVyIH0gZnJvbSBcIkBhd3Mtc2RrL3R5cGVzXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgU3RzQXV0aElucHV0Q29uZmlnIGV4dGVuZHMgQXdzQXV0aElucHV0Q29uZmlnIHt9XG5pbnRlcmZhY2UgUHJldmlvdXNseVJlc29sdmVkIHtcbiAgY3JlZGVudGlhbERlZmF1bHRQcm92aWRlcjogKGlucHV0OiBhbnkpID0+IFByb3ZpZGVyPENyZWRlbnRpYWxzPjtcbiAgcmVnaW9uOiBzdHJpbmcgfCBQcm92aWRlcjxzdHJpbmc+O1xuICByZWdpb25JbmZvUHJvdmlkZXI6IFJlZ2lvbkluZm9Qcm92aWRlcjtcbiAgc2lnbmluZ05hbWU/OiBzdHJpbmc7XG4gIHNlcnZpY2VJZDogc3RyaW5nO1xuICBzaGEyNTY6IEhhc2hDb25zdHJ1Y3Rvcjtcbn1cbmV4cG9ydCBpbnRlcmZhY2UgU3RzQXV0aFJlc29sdmVkQ29uZmlnIGV4dGVuZHMgQXdzQXV0aFJlc29sdmVkQ29uZmlnIHtcbiAgLyoqXG4gICAqIFJlZmVyZW5jZSB0byBTVFNDbGllbnQgY2xhc3MgY29uc3RydWN0b3IuXG4gICAqIEBpbnRlcm5hbFxuICAgKi9cbiAgc3RzQ2xpZW50Q3RvcjogbmV3IChjbGllbnRDb25maWc6IGFueSkgPT4gQ2xpZW50PGFueSwgYW55LCBhbnk+O1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFN0c0F1dGhDb25maWdPcHRpb25zIHtcbiAgLyoqXG4gICAqIFJlZmVyZW5jZSB0byBTVFNDbGllbnQgY2xhc3MgY29uc3RydWN0b3IuXG4gICAqL1xuICBzdHNDbGllbnRDdG9yOiBuZXcgKGNsaWVudENvbmZpZzogYW55KSA9PiBDbGllbnQ8YW55LCBhbnksIGFueT47XG59XG5cbi8qKlxuICogU2V0IFNUUyBjbGllbnQgY29uc3RydWN0b3IgdG8gYHN0c0NsaWVudEN0b3JgIGNvbmZpZyBwYXJhbWV0ZXIuIEl0IGlzIHVzZWRcbiAqIGZvciByb2xlIGFzc3VtZXJzIGZvciBTVFMgY2xpZW50IGludGVybmFsbHkuIFNlZSBgY2xpZW50cy9jbGllbnQtc3RzL2RlZmF1bHRTdHNSb2xlQXNzdW1lcnMudHNgXG4gKiBhbmQgYGNsaWVudHMvY2xpZW50LXN0cy9TVFNDbGllbnQudHNgLlxuICovXG5leHBvcnQgY29uc3QgcmVzb2x2ZVN0c0F1dGhDb25maWcgPSA8VD4oXG4gIGlucHV0OiBUICYgUHJldmlvdXNseVJlc29sdmVkICYgU3RzQXV0aElucHV0Q29uZmlnLFxuICB7IHN0c0NsaWVudEN0b3IgfTogU3RzQXV0aENvbmZpZ09wdGlvbnNcbik6IFQgJiBTdHNBdXRoUmVzb2x2ZWRDb25maWcgPT5cbiAgcmVzb2x2ZUF3c0F1dGhDb25maWcoe1xuICAgIC4uLmlucHV0LFxuICAgIHN0c0NsaWVudEN0b3IsXG4gIH0pO1xuIl19","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserializerMiddleware = void 0;\nconst deserializerMiddleware = (options, deserializer) => (next, context) => async (args) => {\n    const { response } = await next(args);\n    const parsed = await deserializer(response, options);\n    return {\n        response,\n        output: parsed,\n    };\n};\nexports.deserializerMiddleware = deserializerMiddleware;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVzZXJpYWxpemVyTWlkZGxld2FyZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9kZXNlcmlhbGl6ZXJNaWRkbGV3YXJlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQVNPLE1BQU0sc0JBQXNCLEdBQ2pDLENBQ0UsT0FBcUIsRUFDckIsWUFBMEQsRUFDcEIsRUFBRSxDQUMxQyxDQUFDLElBQXVDLEVBQUUsT0FBZ0MsRUFBcUMsRUFBRSxDQUNqSCxLQUFLLEVBQUUsSUFBd0MsRUFBNkMsRUFBRTtJQUM1RixNQUFNLEVBQUUsUUFBUSxFQUFFLEdBQUcsTUFBTSxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDdEMsTUFBTSxNQUFNLEdBQUcsTUFBTSxZQUFZLENBQUMsUUFBUSxFQUFFLE9BQU8sQ0FBQyxDQUFDO0lBQ3JELE9BQU87UUFDTCxRQUFRO1FBQ1IsTUFBTSxFQUFFLE1BQWdCO0tBQ3pCLENBQUM7QUFDSixDQUFDLENBQUM7QUFiUyxRQUFBLHNCQUFzQiwwQkFhL0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBEZXNlcmlhbGl6ZUhhbmRsZXIsXG4gIERlc2VyaWFsaXplSGFuZGxlckFyZ3VtZW50cyxcbiAgRGVzZXJpYWxpemVIYW5kbGVyT3V0cHV0LFxuICBEZXNlcmlhbGl6ZU1pZGRsZXdhcmUsXG4gIEhhbmRsZXJFeGVjdXRpb25Db250ZXh0LFxuICBSZXNwb25zZURlc2VyaWFsaXplcixcbn0gZnJvbSBcIkBhd3Mtc2RrL3R5cGVzXCI7XG5cbmV4cG9ydCBjb25zdCBkZXNlcmlhbGl6ZXJNaWRkbGV3YXJlID1cbiAgPElucHV0IGV4dGVuZHMgb2JqZWN0LCBPdXRwdXQgZXh0ZW5kcyBvYmplY3QsIFJ1bnRpbWVVdGlscyA9IGFueT4oXG4gICAgb3B0aW9uczogUnVudGltZVV0aWxzLFxuICAgIGRlc2VyaWFsaXplcjogUmVzcG9uc2VEZXNlcmlhbGl6ZXI8YW55LCBhbnksIFJ1bnRpbWVVdGlscz5cbiAgKTogRGVzZXJpYWxpemVNaWRkbGV3YXJlPElucHV0LCBPdXRwdXQ+ID0+XG4gIChuZXh0OiBEZXNlcmlhbGl6ZUhhbmRsZXI8SW5wdXQsIE91dHB1dD4sIGNvbnRleHQ6IEhhbmRsZXJFeGVjdXRpb25Db250ZXh0KTogRGVzZXJpYWxpemVIYW5kbGVyPElucHV0LCBPdXRwdXQ+ID0+XG4gIGFzeW5jIChhcmdzOiBEZXNlcmlhbGl6ZUhhbmRsZXJBcmd1bWVudHM8SW5wdXQ+KTogUHJvbWlzZTxEZXNlcmlhbGl6ZUhhbmRsZXJPdXRwdXQ8T3V0cHV0Pj4gPT4ge1xuICAgIGNvbnN0IHsgcmVzcG9uc2UgfSA9IGF3YWl0IG5leHQoYXJncyk7XG4gICAgY29uc3QgcGFyc2VkID0gYXdhaXQgZGVzZXJpYWxpemVyKHJlc3BvbnNlLCBvcHRpb25zKTtcbiAgICByZXR1cm4ge1xuICAgICAgcmVzcG9uc2UsXG4gICAgICBvdXRwdXQ6IHBhcnNlZCBhcyBPdXRwdXQsXG4gICAgfTtcbiAgfTtcbiJdfQ==","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\n(0, tslib_1.__exportStar)(require(\"./deserializerMiddleware\"), exports);\n(0, tslib_1.__exportStar)(require(\"./serializerMiddleware\"), exports);\n(0, tslib_1.__exportStar)(require(\"./serdePlugin\"), exports);\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsd0VBQXlDO0FBQ3pDLHNFQUF1QztBQUN2Qyw2REFBOEIiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tIFwiLi9kZXNlcmlhbGl6ZXJNaWRkbGV3YXJlXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9zZXJpYWxpemVyTWlkZGxld2FyZVwiO1xuZXhwb3J0ICogZnJvbSBcIi4vc2VyZGVQbHVnaW5cIjtcbiJdfQ==","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getSerdePlugin = exports.serializerMiddlewareOption = exports.deserializerMiddlewareOption = void 0;\nconst deserializerMiddleware_1 = require(\"./deserializerMiddleware\");\nconst serializerMiddleware_1 = require(\"./serializerMiddleware\");\nexports.deserializerMiddlewareOption = {\n    name: \"deserializerMiddleware\",\n    step: \"deserialize\",\n    tags: [\"DESERIALIZER\"],\n    override: true,\n};\nexports.serializerMiddlewareOption = {\n    name: \"serializerMiddleware\",\n    step: \"serialize\",\n    tags: [\"SERIALIZER\"],\n    override: true,\n};\nfunction getSerdePlugin(config, serializer, deserializer) {\n    return {\n        applyToStack: (commandStack) => {\n            commandStack.add((0, deserializerMiddleware_1.deserializerMiddleware)(config, deserializer), exports.deserializerMiddlewareOption);\n            commandStack.add((0, serializerMiddleware_1.serializerMiddleware)(config, serializer), exports.serializerMiddlewareOption);\n        },\n    };\n}\nexports.getSerdePlugin = getSerdePlugin;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VyZGVQbHVnaW4uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvc2VyZGVQbHVnaW4udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBV0EscUVBQWtFO0FBQ2xFLGlFQUE4RDtBQUVqRCxRQUFBLDRCQUE0QixHQUE4QjtJQUNyRSxJQUFJLEVBQUUsd0JBQXdCO0lBQzlCLElBQUksRUFBRSxhQUFhO0lBQ25CLElBQUksRUFBRSxDQUFDLGNBQWMsQ0FBQztJQUN0QixRQUFRLEVBQUUsSUFBSTtDQUNmLENBQUM7QUFFVyxRQUFBLDBCQUEwQixHQUE0QjtJQUNqRSxJQUFJLEVBQUUsc0JBQXNCO0lBQzVCLElBQUksRUFBRSxXQUFXO0lBQ2pCLElBQUksRUFBRSxDQUFDLFlBQVksQ0FBQztJQUNwQixRQUFRLEVBQUUsSUFBSTtDQUNmLENBQUM7QUFFRixTQUFnQixjQUFjLENBSzVCLE1BQW9CLEVBQ3BCLFVBQWdELEVBQ2hELFlBQWlFO0lBRWpFLE9BQU87UUFDTCxZQUFZLEVBQUUsQ0FBQyxZQUFvRCxFQUFFLEVBQUU7WUFDckUsWUFBWSxDQUFDLEdBQUcsQ0FBQyxJQUFBLCtDQUFzQixFQUFDLE1BQU0sRUFBRSxZQUFZLENBQUMsRUFBRSxvQ0FBNEIsQ0FBQyxDQUFDO1lBQzdGLFlBQVksQ0FBQyxHQUFHLENBQUMsSUFBQSwyQ0FBb0IsRUFBQyxNQUFNLEVBQUUsVUFBVSxDQUFDLEVBQUUsa0NBQTBCLENBQUMsQ0FBQztRQUN6RixDQUFDO0tBQ0YsQ0FBQztBQUNKLENBQUM7QUFmRCx3Q0FlQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIERlc2VyaWFsaXplSGFuZGxlck9wdGlvbnMsXG4gIEVuZHBvaW50QmVhcmVyLFxuICBNZXRhZGF0YUJlYXJlcixcbiAgTWlkZGxld2FyZVN0YWNrLFxuICBQbHVnZ2FibGUsXG4gIFJlcXVlc3RTZXJpYWxpemVyLFxuICBSZXNwb25zZURlc2VyaWFsaXplcixcbiAgU2VyaWFsaXplSGFuZGxlck9wdGlvbnMsXG59IGZyb20gXCJAYXdzLXNkay90eXBlc1wiO1xuXG5pbXBvcnQgeyBkZXNlcmlhbGl6ZXJNaWRkbGV3YXJlIH0gZnJvbSBcIi4vZGVzZXJpYWxpemVyTWlkZGxld2FyZVwiO1xuaW1wb3J0IHsgc2VyaWFsaXplck1pZGRsZXdhcmUgfSBmcm9tIFwiLi9zZXJpYWxpemVyTWlkZGxld2FyZVwiO1xuXG5leHBvcnQgY29uc3QgZGVzZXJpYWxpemVyTWlkZGxld2FyZU9wdGlvbjogRGVzZXJpYWxpemVIYW5kbGVyT3B0aW9ucyA9IHtcbiAgbmFtZTogXCJkZXNlcmlhbGl6ZXJNaWRkbGV3YXJlXCIsXG4gIHN0ZXA6IFwiZGVzZXJpYWxpemVcIixcbiAgdGFnczogW1wiREVTRVJJQUxJWkVSXCJdLFxuICBvdmVycmlkZTogdHJ1ZSxcbn07XG5cbmV4cG9ydCBjb25zdCBzZXJpYWxpemVyTWlkZGxld2FyZU9wdGlvbjogU2VyaWFsaXplSGFuZGxlck9wdGlvbnMgPSB7XG4gIG5hbWU6IFwic2VyaWFsaXplck1pZGRsZXdhcmVcIixcbiAgc3RlcDogXCJzZXJpYWxpemVcIixcbiAgdGFnczogW1wiU0VSSUFMSVpFUlwiXSxcbiAgb3ZlcnJpZGU6IHRydWUsXG59O1xuXG5leHBvcnQgZnVuY3Rpb24gZ2V0U2VyZGVQbHVnaW48XG4gIElucHV0VHlwZSBleHRlbmRzIG9iamVjdCxcbiAgU2VyRGVDb250ZXh0IGV4dGVuZHMgRW5kcG9pbnRCZWFyZXIsXG4gIE91dHB1dFR5cGUgZXh0ZW5kcyBNZXRhZGF0YUJlYXJlclxuPihcbiAgY29uZmlnOiBTZXJEZUNvbnRleHQsXG4gIHNlcmlhbGl6ZXI6IFJlcXVlc3RTZXJpYWxpemVyPGFueSwgU2VyRGVDb250ZXh0PixcbiAgZGVzZXJpYWxpemVyOiBSZXNwb25zZURlc2VyaWFsaXplcjxPdXRwdXRUeXBlLCBhbnksIFNlckRlQ29udGV4dD5cbik6IFBsdWdnYWJsZTxJbnB1dFR5cGUsIE91dHB1dFR5cGU+IHtcbiAgcmV0dXJuIHtcbiAgICBhcHBseVRvU3RhY2s6IChjb21tYW5kU3RhY2s6IE1pZGRsZXdhcmVTdGFjazxJbnB1dFR5cGUsIE91dHB1dFR5cGU+KSA9PiB7XG4gICAgICBjb21tYW5kU3RhY2suYWRkKGRlc2VyaWFsaXplck1pZGRsZXdhcmUoY29uZmlnLCBkZXNlcmlhbGl6ZXIpLCBkZXNlcmlhbGl6ZXJNaWRkbGV3YXJlT3B0aW9uKTtcbiAgICAgIGNvbW1hbmRTdGFjay5hZGQoc2VyaWFsaXplck1pZGRsZXdhcmUoY29uZmlnLCBzZXJpYWxpemVyKSwgc2VyaWFsaXplck1pZGRsZXdhcmVPcHRpb24pO1xuICAgIH0sXG4gIH07XG59XG4iXX0=","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.serializerMiddleware = void 0;\nconst serializerMiddleware = (options, serializer) => (next, context) => async (args) => {\n    const request = await serializer(args.input, options);\n    return next({\n        ...args,\n        request,\n    });\n};\nexports.serializerMiddleware = serializerMiddleware;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VyaWFsaXplck1pZGRsZXdhcmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvc2VyaWFsaXplck1pZGRsZXdhcmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBVU8sTUFBTSxvQkFBb0IsR0FDL0IsQ0FDRSxPQUFxQixFQUNyQixVQUFnRCxFQUNaLEVBQUUsQ0FDeEMsQ0FBQyxJQUFxQyxFQUFFLE9BQWdDLEVBQW1DLEVBQUUsQ0FDN0csS0FBSyxFQUFFLElBQXNDLEVBQTJDLEVBQUU7SUFDeEYsTUFBTSxPQUFPLEdBQUcsTUFBTSxVQUFVLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRSxPQUFPLENBQUMsQ0FBQztJQUN0RCxPQUFPLElBQUksQ0FBQztRQUNWLEdBQUcsSUFBSTtRQUNQLE9BQU87S0FDUixDQUFDLENBQUM7QUFDTCxDQUFDLENBQUM7QUFaUyxRQUFBLG9CQUFvQix3QkFZN0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBFbmRwb2ludEJlYXJlcixcbiAgSGFuZGxlckV4ZWN1dGlvbkNvbnRleHQsXG4gIFJlcXVlc3RTZXJpYWxpemVyLFxuICBTZXJpYWxpemVIYW5kbGVyLFxuICBTZXJpYWxpemVIYW5kbGVyQXJndW1lbnRzLFxuICBTZXJpYWxpemVIYW5kbGVyT3V0cHV0LFxuICBTZXJpYWxpemVNaWRkbGV3YXJlLFxufSBmcm9tIFwiQGF3cy1zZGsvdHlwZXNcIjtcblxuZXhwb3J0IGNvbnN0IHNlcmlhbGl6ZXJNaWRkbGV3YXJlID1cbiAgPElucHV0IGV4dGVuZHMgb2JqZWN0LCBPdXRwdXQgZXh0ZW5kcyBvYmplY3QsIFJ1bnRpbWVVdGlscyBleHRlbmRzIEVuZHBvaW50QmVhcmVyPihcbiAgICBvcHRpb25zOiBSdW50aW1lVXRpbHMsXG4gICAgc2VyaWFsaXplcjogUmVxdWVzdFNlcmlhbGl6ZXI8YW55LCBSdW50aW1lVXRpbHM+XG4gICk6IFNlcmlhbGl6ZU1pZGRsZXdhcmU8SW5wdXQsIE91dHB1dD4gPT5cbiAgKG5leHQ6IFNlcmlhbGl6ZUhhbmRsZXI8SW5wdXQsIE91dHB1dD4sIGNvbnRleHQ6IEhhbmRsZXJFeGVjdXRpb25Db250ZXh0KTogU2VyaWFsaXplSGFuZGxlcjxJbnB1dCwgT3V0cHV0PiA9PlxuICBhc3luYyAoYXJnczogU2VyaWFsaXplSGFuZGxlckFyZ3VtZW50czxJbnB1dD4pOiBQcm9taXNlPFNlcmlhbGl6ZUhhbmRsZXJPdXRwdXQ8T3V0cHV0Pj4gPT4ge1xuICAgIGNvbnN0IHJlcXVlc3QgPSBhd2FpdCBzZXJpYWxpemVyKGFyZ3MuaW5wdXQsIG9wdGlvbnMpO1xuICAgIHJldHVybiBuZXh0KHtcbiAgICAgIC4uLmFyZ3MsXG4gICAgICByZXF1ZXN0LFxuICAgIH0pO1xuICB9O1xuIl19","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveSigV4AuthConfig = exports.resolveAwsAuthConfig = void 0;\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nconst signature_v4_1 = require(\"@aws-sdk/signature-v4\");\n// 5 minutes buffer time the refresh the credential before it really expires\nconst CREDENTIAL_EXPIRE_WINDOW = 300000;\nconst resolveAwsAuthConfig = (input) => {\n    const normalizedCreds = input.credentials\n        ? normalizeCredentialProvider(input.credentials)\n        : input.credentialDefaultProvider(input);\n    const { signingEscapePath = true, systemClockOffset = input.systemClockOffset || 0, sha256 } = input;\n    let signer;\n    if (input.signer) {\n        //if signer is supplied by user, normalize it to a function returning a promise for signer.\n        signer = normalizeProvider(input.signer);\n    }\n    else {\n        //construct a provider inferring signing from region.\n        signer = () => normalizeProvider(input.region)()\n            .then(async (region) => [(await input.regionInfoProvider(region)) || {}, region])\n            .then(([regionInfo, region]) => {\n            const { signingRegion, signingService } = regionInfo;\n            //update client's singing region and signing service config if they are resolved.\n            //signing region resolving order: user supplied signingRegion -> endpoints.json inferred region -> client region\n            input.signingRegion = input.signingRegion || signingRegion || region;\n            //signing name resolving order:\n            //user supplied signingName -> endpoints.json inferred (credential scope -> model arnNamespace) -> model service id\n            input.signingName = input.signingName || signingService || input.serviceId;\n            const params = {\n                ...input,\n                credentials: normalizedCreds,\n                region: input.signingRegion,\n                service: input.signingName,\n                sha256,\n                uriEscapePath: signingEscapePath,\n            };\n            const signerConstructor = input.signerConstructor || signature_v4_1.SignatureV4;\n            return new signerConstructor(params);\n        });\n    }\n    return {\n        ...input,\n        systemClockOffset,\n        signingEscapePath,\n        credentials: normalizedCreds,\n        signer,\n    };\n};\nexports.resolveAwsAuthConfig = resolveAwsAuthConfig;\n// TODO: reduce code duplication\nconst resolveSigV4AuthConfig = (input) => {\n    const normalizedCreds = input.credentials\n        ? normalizeCredentialProvider(input.credentials)\n        : input.credentialDefaultProvider(input);\n    const { signingEscapePath = true, systemClockOffset = input.systemClockOffset || 0, sha256 } = input;\n    let signer;\n    if (input.signer) {\n        //if signer is supplied by user, normalize it to a function returning a promise for signer.\n        signer = normalizeProvider(input.signer);\n    }\n    else {\n        signer = normalizeProvider(new signature_v4_1.SignatureV4({\n            credentials: normalizedCreds,\n            region: input.region,\n            service: input.signingName,\n            sha256,\n            uriEscapePath: signingEscapePath,\n        }));\n    }\n    return {\n        ...input,\n        systemClockOffset,\n        signingEscapePath,\n        credentials: normalizedCreds,\n        signer,\n    };\n};\nexports.resolveSigV4AuthConfig = resolveSigV4AuthConfig;\nconst normalizeProvider = (input) => {\n    if (typeof input === \"object\") {\n        const promisified = Promise.resolve(input);\n        return () => promisified;\n    }\n    return input;\n};\nconst normalizeCredentialProvider = (credentials) => {\n    if (typeof credentials === \"function\") {\n        return (0, property_provider_1.memoize)(credentials, (credentials) => credentials.expiration !== undefined &&\n            credentials.expiration.getTime() - Date.now() < CREDENTIAL_EXPIRE_WINDOW, (credentials) => credentials.expiration !== undefined);\n    }\n    return normalizeProvider(credentials);\n};\n//# sourceMappingURL=data:application/json;base64,","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\n(0, tslib_1.__exportStar)(require(\"./configurations\"), exports);\n(0, tslib_1.__exportStar)(require(\"./middleware\"), exports);\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsZ0VBQWlDO0FBQ2pDLDREQUE2QiIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gXCIuL2NvbmZpZ3VyYXRpb25zXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9taWRkbGV3YXJlXCI7XG4iXX0=","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getSigV4AuthPlugin = exports.getAwsAuthPlugin = exports.awsAuthMiddlewareOptions = exports.awsAuthMiddleware = void 0;\nconst protocol_http_1 = require(\"@aws-sdk/protocol-http\");\nconst getSkewCorrectedDate_1 = require(\"./utils/getSkewCorrectedDate\");\nconst getUpdatedSystemClockOffset_1 = require(\"./utils/getUpdatedSystemClockOffset\");\nconst awsAuthMiddleware = (options) => (next, context) => async function (args) {\n    if (!protocol_http_1.HttpRequest.isInstance(args.request))\n        return next(args);\n    const signer = await options.signer();\n    const output = await next({\n        ...args,\n        request: await signer.sign(args.request, {\n            signingDate: (0, getSkewCorrectedDate_1.getSkewCorrectedDate)(options.systemClockOffset),\n            signingRegion: context[\"signing_region\"],\n            signingService: context[\"signing_service\"],\n        }),\n    }).catch((error) => {\n        if (error.ServerTime) {\n            options.systemClockOffset = (0, getUpdatedSystemClockOffset_1.getUpdatedSystemClockOffset)(error.ServerTime, options.systemClockOffset);\n        }\n        throw error;\n    });\n    const { headers } = output.response;\n    const dateHeader = headers && (headers.date || headers.Date);\n    if (dateHeader) {\n        options.systemClockOffset = (0, getUpdatedSystemClockOffset_1.getUpdatedSystemClockOffset)(dateHeader, options.systemClockOffset);\n    }\n    return output;\n};\nexports.awsAuthMiddleware = awsAuthMiddleware;\nexports.awsAuthMiddlewareOptions = {\n    name: \"awsAuthMiddleware\",\n    tags: [\"SIGNATURE\", \"AWSAUTH\"],\n    relation: \"after\",\n    toMiddleware: \"retryMiddleware\",\n    override: true,\n};\nconst getAwsAuthPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.addRelativeTo((0, exports.awsAuthMiddleware)(options), exports.awsAuthMiddlewareOptions);\n    },\n});\nexports.getAwsAuthPlugin = getAwsAuthPlugin;\nexports.getSigV4AuthPlugin = exports.getAwsAuthPlugin;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWlkZGxld2FyZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9taWRkbGV3YXJlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLDBEQUFxRDtBQVlyRCx1RUFBb0U7QUFDcEUscUZBQWtGO0FBRTNFLE1BQU0saUJBQWlCLEdBQzVCLENBQ0UsT0FBOEIsRUFDWSxFQUFFLENBQzlDLENBQUMsSUFBb0MsRUFBRSxPQUFnQyxFQUFrQyxFQUFFLENBQ3pHLEtBQUssV0FBVyxJQUFxQztJQUNuRCxJQUFJLENBQUMsMkJBQVcsQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQztRQUFFLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQzdELE1BQU0sTUFBTSxHQUFHLE1BQU0sT0FBTyxDQUFDLE1BQU0sRUFBRSxDQUFDO0lBQ3RDLE1BQU0sTUFBTSxHQUFHLE1BQU0sSUFBSSxDQUFDO1FBQ3hCLEdBQUcsSUFBSTtRQUNQLE9BQU8sRUFBRSxNQUFNLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sRUFBRTtZQUN2QyxXQUFXLEVBQUUsSUFBQSwyQ0FBb0IsRUFBQyxPQUFPLENBQUMsaUJBQWlCLENBQUM7WUFDNUQsYUFBYSxFQUFFLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQztZQUN4QyxjQUFjLEVBQUUsT0FBTyxDQUFDLGlCQUFpQixDQUFDO1NBQzNDLENBQUM7S0FDSCxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsS0FBSyxFQUFFLEVBQUU7UUFDakIsSUFBSSxLQUFLLENBQUMsVUFBVSxFQUFFO1lBQ3BCLE9BQU8sQ0FBQyxpQkFBaUIsR0FBRyxJQUFBLHlEQUEyQixFQUFDLEtBQUssQ0FBQyxVQUFVLEVBQUUsT0FBTyxDQUFDLGlCQUFpQixDQUFDLENBQUM7U0FDdEc7UUFDRCxNQUFNLEtBQUssQ0FBQztJQUNkLENBQUMsQ0FBQyxDQUFDO0lBRUgsTUFBTSxFQUFFLE9BQU8sRUFBRSxHQUFHLE1BQU0sQ0FBQyxRQUFlLENBQUM7SUFDM0MsTUFBTSxVQUFVLEdBQUcsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksSUFBSSxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDN0QsSUFBSSxVQUFVLEVBQUU7UUFDZCxPQUFPLENBQUMsaUJBQWlCLEdBQUcsSUFBQSx5REFBMkIsRUFBQyxVQUFVLEVBQUUsT0FBTyxDQUFDLGlCQUFpQixDQUFDLENBQUM7S0FDaEc7SUFFRCxPQUFPLE1BQU0sQ0FBQztBQUNoQixDQUFDLENBQUM7QUE3Qk8sUUFBQSxpQkFBaUIscUJBNkJ4QjtBQUVPLFFBQUEsd0JBQXdCLEdBQThCO0lBQ2pFLElBQUksRUFBRSxtQkFBbUI7SUFDekIsSUFBSSxFQUFFLENBQUMsV0FBVyxFQUFFLFNBQVMsQ0FBQztJQUM5QixRQUFRLEVBQUUsT0FBTztJQUNqQixZQUFZLEVBQUUsaUJBQWlCO0lBQy9CLFFBQVEsRUFBRSxJQUFJO0NBQ2YsQ0FBQztBQUVLLE1BQU0sZ0JBQWdCLEdBQUcsQ0FBQyxPQUE4QixFQUF1QixFQUFFLENBQUMsQ0FBQztJQUN4RixZQUFZLEVBQUUsQ0FBQyxXQUFXLEVBQUUsRUFBRTtRQUM1QixXQUFXLENBQUMsYUFBYSxDQUFDLElBQUEseUJBQWlCLEVBQUMsT0FBTyxDQUFDLEVBQUUsZ0NBQXdCLENBQUMsQ0FBQztJQUNsRixDQUFDO0NBQ0YsQ0FBQyxDQUFDO0FBSlUsUUFBQSxnQkFBZ0Isb0JBSTFCO0FBRVUsUUFBQSxrQkFBa0IsR0FBRyx3QkFBZ0IsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEh0dHBSZXF1ZXN0IH0gZnJvbSBcIkBhd3Mtc2RrL3Byb3RvY29sLWh0dHBcIjtcbmltcG9ydCB7XG4gIEZpbmFsaXplSGFuZGxlcixcbiAgRmluYWxpemVIYW5kbGVyQXJndW1lbnRzLFxuICBGaW5hbGl6ZUhhbmRsZXJPdXRwdXQsXG4gIEZpbmFsaXplUmVxdWVzdE1pZGRsZXdhcmUsXG4gIEhhbmRsZXJFeGVjdXRpb25Db250ZXh0LFxuICBQbHVnZ2FibGUsXG4gIFJlbGF0aXZlTWlkZGxld2FyZU9wdGlvbnMsXG59IGZyb20gXCJAYXdzLXNkay90eXBlc1wiO1xuXG5pbXBvcnQgeyBBd3NBdXRoUmVzb2x2ZWRDb25maWcgfSBmcm9tIFwiLi9jb25maWd1cmF0aW9uc1wiO1xuaW1wb3J0IHsgZ2V0U2tld0NvcnJlY3RlZERhdGUgfSBmcm9tIFwiLi91dGlscy9nZXRTa2V3Q29ycmVjdGVkRGF0ZVwiO1xuaW1wb3J0IHsgZ2V0VXBkYXRlZFN5c3RlbUNsb2NrT2Zmc2V0IH0gZnJvbSBcIi4vdXRpbHMvZ2V0VXBkYXRlZFN5c3RlbUNsb2NrT2Zmc2V0XCI7XG5cbmV4cG9ydCBjb25zdCBhd3NBdXRoTWlkZGxld2FyZSA9XG4gIDxJbnB1dCBleHRlbmRzIG9iamVjdCwgT3V0cHV0IGV4dGVuZHMgb2JqZWN0PihcbiAgICBvcHRpb25zOiBBd3NBdXRoUmVzb2x2ZWRDb25maWdcbiAgKTogRmluYWxpemVSZXF1ZXN0TWlkZGxld2FyZTxJbnB1dCwgT3V0cHV0PiA9PlxuICAobmV4dDogRmluYWxpemVIYW5kbGVyPElucHV0LCBPdXRwdXQ+LCBjb250ZXh0OiBIYW5kbGVyRXhlY3V0aW9uQ29udGV4dCk6IEZpbmFsaXplSGFuZGxlcjxJbnB1dCwgT3V0cHV0PiA9PlxuICAgIGFzeW5jIGZ1bmN0aW9uIChhcmdzOiBGaW5hbGl6ZUhhbmRsZXJBcmd1bWVudHM8SW5wdXQ+KTogUHJvbWlzZTxGaW5hbGl6ZUhhbmRsZXJPdXRwdXQ8T3V0cHV0Pj4ge1xuICAgICAgaWYgKCFIdHRwUmVxdWVzdC5pc0luc3RhbmNlKGFyZ3MucmVxdWVzdCkpIHJldHVybiBuZXh0KGFyZ3MpO1xuICAgICAgY29uc3Qgc2lnbmVyID0gYXdhaXQgb3B0aW9ucy5zaWduZXIoKTtcbiAgICAgIGNvbnN0IG91dHB1dCA9IGF3YWl0IG5leHQoe1xuICAgICAgICAuLi5hcmdzLFxuICAgICAgICByZXF1ZXN0OiBhd2FpdCBzaWduZXIuc2lnbihhcmdzLnJlcXVlc3QsIHtcbiAgICAgICAgICBzaWduaW5nRGF0ZTogZ2V0U2tld0NvcnJlY3RlZERhdGUob3B0aW9ucy5zeXN0ZW1DbG9ja09mZnNldCksXG4gICAgICAgICAgc2lnbmluZ1JlZ2lvbjogY29udGV4dFtcInNpZ25pbmdfcmVnaW9uXCJdLFxuICAgICAgICAgIHNpZ25pbmdTZXJ2aWNlOiBjb250ZXh0W1wic2lnbmluZ19zZXJ2aWNlXCJdLFxuICAgICAgICB9KSxcbiAgICAgIH0pLmNhdGNoKChlcnJvcikgPT4ge1xuICAgICAgICBpZiAoZXJyb3IuU2VydmVyVGltZSkge1xuICAgICAgICAgIG9wdGlvbnMuc3lzdGVtQ2xvY2tPZmZzZXQgPSBnZXRVcGRhdGVkU3lzdGVtQ2xvY2tPZmZzZXQoZXJyb3IuU2VydmVyVGltZSwgb3B0aW9ucy5zeXN0ZW1DbG9ja09mZnNldCk7XG4gICAgICAgIH1cbiAgICAgICAgdGhyb3cgZXJyb3I7XG4gICAgICB9KTtcblxuICAgICAgY29uc3QgeyBoZWFkZXJzIH0gPSBvdXRwdXQucmVzcG9uc2UgYXMgYW55O1xuICAgICAgY29uc3QgZGF0ZUhlYWRlciA9IGhlYWRlcnMgJiYgKGhlYWRlcnMuZGF0ZSB8fCBoZWFkZXJzLkRhdGUpO1xuICAgICAgaWYgKGRhdGVIZWFkZXIpIHtcbiAgICAgICAgb3B0aW9ucy5zeXN0ZW1DbG9ja09mZnNldCA9IGdldFVwZGF0ZWRTeXN0ZW1DbG9ja09mZnNldChkYXRlSGVhZGVyLCBvcHRpb25zLnN5c3RlbUNsb2NrT2Zmc2V0KTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIG91dHB1dDtcbiAgICB9O1xuXG5leHBvcnQgY29uc3QgYXdzQXV0aE1pZGRsZXdhcmVPcHRpb25zOiBSZWxhdGl2ZU1pZGRsZXdhcmVPcHRpb25zID0ge1xuICBuYW1lOiBcImF3c0F1dGhNaWRkbGV3YXJlXCIsXG4gIHRhZ3M6IFtcIlNJR05BVFVSRVwiLCBcIkFXU0FVVEhcIl0sXG4gIHJlbGF0aW9uOiBcImFmdGVyXCIsXG4gIHRvTWlkZGxld2FyZTogXCJyZXRyeU1pZGRsZXdhcmVcIixcbiAgb3ZlcnJpZGU6IHRydWUsXG59O1xuXG5leHBvcnQgY29uc3QgZ2V0QXdzQXV0aFBsdWdpbiA9IChvcHRpb25zOiBBd3NBdXRoUmVzb2x2ZWRDb25maWcpOiBQbHVnZ2FibGU8YW55LCBhbnk+ID0+ICh7XG4gIGFwcGx5VG9TdGFjazogKGNsaWVudFN0YWNrKSA9PiB7XG4gICAgY2xpZW50U3RhY2suYWRkUmVsYXRpdmVUbyhhd3NBdXRoTWlkZGxld2FyZShvcHRpb25zKSwgYXdzQXV0aE1pZGRsZXdhcmVPcHRpb25zKTtcbiAgfSxcbn0pO1xuXG5leHBvcnQgY29uc3QgZ2V0U2lnVjRBdXRoUGx1Z2luID0gZ2V0QXdzQXV0aFBsdWdpbjtcbiJdfQ==","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getSkewCorrectedDate = void 0;\n/**\n * Returns a date that is corrected for clock skew.\n *\n * @param systemClockOffset The offset of the system clock in milliseconds.\n */\nconst getSkewCorrectedDate = (systemClockOffset) => new Date(Date.now() + systemClockOffset);\nexports.getSkewCorrectedDate = getSkewCorrectedDate;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0U2tld0NvcnJlY3RlZERhdGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvdXRpbHMvZ2V0U2tld0NvcnJlY3RlZERhdGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUE7Ozs7R0FJRztBQUNJLE1BQU0sb0JBQW9CLEdBQUcsQ0FBQyxpQkFBeUIsRUFBRSxFQUFFLENBQUMsSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLEdBQUcsRUFBRSxHQUFHLGlCQUFpQixDQUFDLENBQUM7QUFBL0YsUUFBQSxvQkFBb0Isd0JBQTJFIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBSZXR1cm5zIGEgZGF0ZSB0aGF0IGlzIGNvcnJlY3RlZCBmb3IgY2xvY2sgc2tldy5cbiAqXG4gKiBAcGFyYW0gc3lzdGVtQ2xvY2tPZmZzZXQgVGhlIG9mZnNldCBvZiB0aGUgc3lzdGVtIGNsb2NrIGluIG1pbGxpc2Vjb25kcy5cbiAqL1xuZXhwb3J0IGNvbnN0IGdldFNrZXdDb3JyZWN0ZWREYXRlID0gKHN5c3RlbUNsb2NrT2Zmc2V0OiBudW1iZXIpID0+IG5ldyBEYXRlKERhdGUubm93KCkgKyBzeXN0ZW1DbG9ja09mZnNldCk7XG4iXX0=","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getUpdatedSystemClockOffset = void 0;\nconst isClockSkewed_1 = require(\"./isClockSkewed\");\n/**\n * If clock is skewed, it returns the difference between serverTime and current time.\n * If clock is not skewed, it returns currentSystemClockOffset.\n *\n * @param clockTime The string value of the server time.\n * @param currentSystemClockOffset The current system clock offset.\n */\nconst getUpdatedSystemClockOffset = (clockTime, currentSystemClockOffset) => {\n    const clockTimeInMs = Date.parse(clockTime);\n    if ((0, isClockSkewed_1.isClockSkewed)(clockTimeInMs, currentSystemClockOffset)) {\n        return clockTimeInMs - Date.now();\n    }\n    return currentSystemClockOffset;\n};\nexports.getUpdatedSystemClockOffset = getUpdatedSystemClockOffset;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0VXBkYXRlZFN5c3RlbUNsb2NrT2Zmc2V0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3V0aWxzL2dldFVwZGF0ZWRTeXN0ZW1DbG9ja09mZnNldC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSxtREFBZ0Q7QUFFaEQ7Ozs7OztHQU1HO0FBQ0ksTUFBTSwyQkFBMkIsR0FBRyxDQUFDLFNBQWlCLEVBQUUsd0JBQWdDLEVBQVUsRUFBRTtJQUN6RyxNQUFNLGFBQWEsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLFNBQVMsQ0FBQyxDQUFDO0lBQzVDLElBQUksSUFBQSw2QkFBYSxFQUFDLGFBQWEsRUFBRSx3QkFBd0IsQ0FBQyxFQUFFO1FBQzFELE9BQU8sYUFBYSxHQUFHLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQztLQUNuQztJQUNELE9BQU8sd0JBQXdCLENBQUM7QUFDbEMsQ0FBQyxDQUFDO0FBTlcsUUFBQSwyQkFBMkIsK0JBTXRDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNDbG9ja1NrZXdlZCB9IGZyb20gXCIuL2lzQ2xvY2tTa2V3ZWRcIjtcblxuLyoqXG4gKiBJZiBjbG9jayBpcyBza2V3ZWQsIGl0IHJldHVybnMgdGhlIGRpZmZlcmVuY2UgYmV0d2VlbiBzZXJ2ZXJUaW1lIGFuZCBjdXJyZW50IHRpbWUuXG4gKiBJZiBjbG9jayBpcyBub3Qgc2tld2VkLCBpdCByZXR1cm5zIGN1cnJlbnRTeXN0ZW1DbG9ja09mZnNldC5cbiAqXG4gKiBAcGFyYW0gY2xvY2tUaW1lIFRoZSBzdHJpbmcgdmFsdWUgb2YgdGhlIHNlcnZlciB0aW1lLlxuICogQHBhcmFtIGN1cnJlbnRTeXN0ZW1DbG9ja09mZnNldCBUaGUgY3VycmVudCBzeXN0ZW0gY2xvY2sgb2Zmc2V0LlxuICovXG5leHBvcnQgY29uc3QgZ2V0VXBkYXRlZFN5c3RlbUNsb2NrT2Zmc2V0ID0gKGNsb2NrVGltZTogc3RyaW5nLCBjdXJyZW50U3lzdGVtQ2xvY2tPZmZzZXQ6IG51bWJlcik6IG51bWJlciA9PiB7XG4gIGNvbnN0IGNsb2NrVGltZUluTXMgPSBEYXRlLnBhcnNlKGNsb2NrVGltZSk7XG4gIGlmIChpc0Nsb2NrU2tld2VkKGNsb2NrVGltZUluTXMsIGN1cnJlbnRTeXN0ZW1DbG9ja09mZnNldCkpIHtcbiAgICByZXR1cm4gY2xvY2tUaW1lSW5NcyAtIERhdGUubm93KCk7XG4gIH1cbiAgcmV0dXJuIGN1cnJlbnRTeXN0ZW1DbG9ja09mZnNldDtcbn07XG4iXX0=","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isClockSkewed = void 0;\nconst getSkewCorrectedDate_1 = require(\"./getSkewCorrectedDate\");\n/**\n * Checks if the provided date is within the skew window of 300000ms.\n *\n * @param clockTime - The time to check for skew in milliseconds.\n * @param systemClockOffset - The offset of the system clock in milliseconds.\n */\nconst isClockSkewed = (clockTime, systemClockOffset) => Math.abs((0, getSkewCorrectedDate_1.getSkewCorrectedDate)(systemClockOffset).getTime() - clockTime) >= 300000;\nexports.isClockSkewed = isClockSkewed;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXNDbG9ja1NrZXdlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy91dGlscy9pc0Nsb2NrU2tld2VkLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLGlFQUE4RDtBQUU5RDs7Ozs7R0FLRztBQUNJLE1BQU0sYUFBYSxHQUFHLENBQUMsU0FBaUIsRUFBRSxpQkFBeUIsRUFBRSxFQUFFLENBQzVFLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBQSwyQ0FBb0IsRUFBQyxpQkFBaUIsQ0FBQyxDQUFDLE9BQU8sRUFBRSxHQUFHLFNBQVMsQ0FBQyxJQUFJLE1BQU0sQ0FBQztBQUR2RSxRQUFBLGFBQWEsaUJBQzBEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0U2tld0NvcnJlY3RlZERhdGUgfSBmcm9tIFwiLi9nZXRTa2V3Q29ycmVjdGVkRGF0ZVwiO1xuXG4vKipcbiAqIENoZWNrcyBpZiB0aGUgcHJvdmlkZWQgZGF0ZSBpcyB3aXRoaW4gdGhlIHNrZXcgd2luZG93IG9mIDMwMDAwMG1zLlxuICpcbiAqIEBwYXJhbSBjbG9ja1RpbWUgLSBUaGUgdGltZSB0byBjaGVjayBmb3Igc2tldyBpbiBtaWxsaXNlY29uZHMuXG4gKiBAcGFyYW0gc3lzdGVtQ2xvY2tPZmZzZXQgLSBUaGUgb2Zmc2V0IG9mIHRoZSBzeXN0ZW0gY2xvY2sgaW4gbWlsbGlzZWNvbmRzLlxuICovXG5leHBvcnQgY29uc3QgaXNDbG9ja1NrZXdlZCA9IChjbG9ja1RpbWU6IG51bWJlciwgc3lzdGVtQ2xvY2tPZmZzZXQ6IG51bWJlcikgPT5cbiAgTWF0aC5hYnMoZ2V0U2tld0NvcnJlY3RlZERhdGUoc3lzdGVtQ2xvY2tPZmZzZXQpLmdldFRpbWUoKSAtIGNsb2NrVGltZSkgPj0gMzAwMDAwO1xuIl19","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.constructStack = void 0;\nconst constructStack = () => {\n    let absoluteEntries = [];\n    let relativeEntries = [];\n    const entriesNameSet = new Set();\n    const sort = (entries) => entries.sort((a, b) => stepWeights[b.step] - stepWeights[a.step] ||\n        priorityWeights[b.priority || \"normal\"] - priorityWeights[a.priority || \"normal\"]);\n    const removeByName = (toRemove) => {\n        let isRemoved = false;\n        const filterCb = (entry) => {\n            if (entry.name && entry.name === toRemove) {\n                isRemoved = true;\n                entriesNameSet.delete(toRemove);\n                return false;\n            }\n            return true;\n        };\n        absoluteEntries = absoluteEntries.filter(filterCb);\n        relativeEntries = relativeEntries.filter(filterCb);\n        return isRemoved;\n    };\n    const removeByReference = (toRemove) => {\n        let isRemoved = false;\n        const filterCb = (entry) => {\n            if (entry.middleware === toRemove) {\n                isRemoved = true;\n                if (entry.name)\n                    entriesNameSet.delete(entry.name);\n                return false;\n            }\n            return true;\n        };\n        absoluteEntries = absoluteEntries.filter(filterCb);\n        relativeEntries = relativeEntries.filter(filterCb);\n        return isRemoved;\n    };\n    const cloneTo = (toStack) => {\n        absoluteEntries.forEach((entry) => {\n            //@ts-ignore\n            toStack.add(entry.middleware, { ...entry });\n        });\n        relativeEntries.forEach((entry) => {\n            //@ts-ignore\n            toStack.addRelativeTo(entry.middleware, { ...entry });\n        });\n        return toStack;\n    };\n    const expandRelativeMiddlewareList = (from) => {\n        const expandedMiddlewareList = [];\n        from.before.forEach((entry) => {\n            if (entry.before.length === 0 && entry.after.length === 0) {\n                expandedMiddlewareList.push(entry);\n            }\n            else {\n                expandedMiddlewareList.push(...expandRelativeMiddlewareList(entry));\n            }\n        });\n        expandedMiddlewareList.push(from);\n        from.after.reverse().forEach((entry) => {\n            if (entry.before.length === 0 && entry.after.length === 0) {\n                expandedMiddlewareList.push(entry);\n            }\n            else {\n                expandedMiddlewareList.push(...expandRelativeMiddlewareList(entry));\n            }\n        });\n        return expandedMiddlewareList;\n    };\n    /**\n     * Get a final list of middleware in the order of being executed in the resolved handler.\n     */\n    const getMiddlewareList = () => {\n        const normalizedAbsoluteEntries = [];\n        const normalizedRelativeEntries = [];\n        const normalizedEntriesNameMap = {};\n        absoluteEntries.forEach((entry) => {\n            const normalizedEntry = {\n                ...entry,\n                before: [],\n                after: [],\n            };\n            if (normalizedEntry.name)\n                normalizedEntriesNameMap[normalizedEntry.name] = normalizedEntry;\n            normalizedAbsoluteEntries.push(normalizedEntry);\n        });\n        relativeEntries.forEach((entry) => {\n            const normalizedEntry = {\n                ...entry,\n                before: [],\n                after: [],\n            };\n            if (normalizedEntry.name)\n                normalizedEntriesNameMap[normalizedEntry.name] = normalizedEntry;\n            normalizedRelativeEntries.push(normalizedEntry);\n        });\n        normalizedRelativeEntries.forEach((entry) => {\n            if (entry.toMiddleware) {\n                const toMiddleware = normalizedEntriesNameMap[entry.toMiddleware];\n                if (toMiddleware === undefined) {\n                    throw new Error(`${entry.toMiddleware} is not found when adding ${entry.name || \"anonymous\"} middleware ${entry.relation} ${entry.toMiddleware}`);\n                }\n                if (entry.relation === \"after\") {\n                    toMiddleware.after.push(entry);\n                }\n                if (entry.relation === \"before\") {\n                    toMiddleware.before.push(entry);\n                }\n            }\n        });\n        const mainChain = sort(normalizedAbsoluteEntries)\n            .map(expandRelativeMiddlewareList)\n            .reduce((wholeList, expendedMiddlewareList) => {\n            // TODO: Replace it with Array.flat();\n            wholeList.push(...expendedMiddlewareList);\n            return wholeList;\n        }, []);\n        return mainChain.map((entry) => entry.middleware);\n    };\n    const stack = {\n        add: (middleware, options = {}) => {\n            const { name, override } = options;\n            const entry = {\n                step: \"initialize\",\n                priority: \"normal\",\n                middleware,\n                ...options,\n            };\n            if (name) {\n                if (entriesNameSet.has(name)) {\n                    if (!override)\n                        throw new Error(`Duplicate middleware name '${name}'`);\n                    const toOverrideIndex = absoluteEntries.findIndex((entry) => entry.name === name);\n                    const toOverride = absoluteEntries[toOverrideIndex];\n                    if (toOverride.step !== entry.step || toOverride.priority !== entry.priority) {\n                        throw new Error(`\"${name}\" middleware with ${toOverride.priority} priority in ${toOverride.step} step cannot be ` +\n                            `overridden by same-name middleware with ${entry.priority} priority in ${entry.step} step.`);\n                    }\n                    absoluteEntries.splice(toOverrideIndex, 1);\n                }\n                entriesNameSet.add(name);\n            }\n            absoluteEntries.push(entry);\n        },\n        addRelativeTo: (middleware, options) => {\n            const { name, override } = options;\n            const entry = {\n                middleware,\n                ...options,\n            };\n            if (name) {\n                if (entriesNameSet.has(name)) {\n                    if (!override)\n                        throw new Error(`Duplicate middleware name '${name}'`);\n                    const toOverrideIndex = relativeEntries.findIndex((entry) => entry.name === name);\n                    const toOverride = relativeEntries[toOverrideIndex];\n                    if (toOverride.toMiddleware !== entry.toMiddleware || toOverride.relation !== entry.relation) {\n                        throw new Error(`\"${name}\" middleware ${toOverride.relation} \"${toOverride.toMiddleware}\" middleware cannot be overridden ` +\n                            `by same-name middleware ${entry.relation} \"${entry.toMiddleware}\" middleware.`);\n                    }\n                    relativeEntries.splice(toOverrideIndex, 1);\n                }\n                entriesNameSet.add(name);\n            }\n            relativeEntries.push(entry);\n        },\n        clone: () => cloneTo((0, exports.constructStack)()),\n        use: (plugin) => {\n            plugin.applyToStack(stack);\n        },\n        remove: (toRemove) => {\n            if (typeof toRemove === \"string\")\n                return removeByName(toRemove);\n            else\n                return removeByReference(toRemove);\n        },\n        removeByTag: (toRemove) => {\n            let isRemoved = false;\n            const filterCb = (entry) => {\n                const { tags, name } = entry;\n                if (tags && tags.includes(toRemove)) {\n                    if (name)\n                        entriesNameSet.delete(name);\n                    isRemoved = true;\n                    return false;\n                }\n                return true;\n            };\n            absoluteEntries = absoluteEntries.filter(filterCb);\n            relativeEntries = relativeEntries.filter(filterCb);\n            return isRemoved;\n        },\n        concat: (from) => {\n            const cloned = cloneTo((0, exports.constructStack)());\n            cloned.use(from);\n            return cloned;\n        },\n        applyToStack: cloneTo,\n        resolve: (handler, context) => {\n            for (const middleware of getMiddlewareList().reverse()) {\n                handler = middleware(handler, context);\n            }\n            return handler;\n        },\n    };\n    return stack;\n};\nexports.constructStack = constructStack;\nconst stepWeights = {\n    initialize: 5,\n    serialize: 4,\n    build: 3,\n    finalizeRequest: 2,\n    deserialize: 1,\n};\nconst priorityWeights = {\n    high: 3,\n    normal: 2,\n    low: 1,\n};\n//# sourceMappingURL=data:application/json;base64,","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\n(0, tslib_1.__exportStar)(require(\"./MiddlewareStack\"), exports);\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsaUVBQWtDIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIi4vTWlkZGxld2FyZVN0YWNrXCI7XG4iXX0=","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.resolveUserAgentConfig = void 0;\nfunction resolveUserAgentConfig(input) {\n    return {\n        ...input,\n        customUserAgent: typeof input.customUserAgent === \"string\" ? [[input.customUserAgent]] : input.customUserAgent,\n    };\n}\nexports.resolveUserAgentConfig = resolveUserAgentConfig;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlndXJhdGlvbnMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvY29uZmlndXJhdGlvbnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBMEJBLFNBQWdCLHNCQUFzQixDQUNwQyxLQUFvRDtJQUVwRCxPQUFPO1FBQ0wsR0FBRyxLQUFLO1FBQ1IsZUFBZSxFQUFFLE9BQU8sS0FBSyxDQUFDLGVBQWUsS0FBSyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsZUFBZSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLGVBQWU7S0FDL0csQ0FBQztBQUNKLENBQUM7QUFQRCx3REFPQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFByb3ZpZGVyLCBVc2VyQWdlbnQgfSBmcm9tIFwiQGF3cy1zZGsvdHlwZXNcIjtcbmV4cG9ydCBpbnRlcmZhY2UgVXNlckFnZW50SW5wdXRDb25maWcge1xuICAvKipcbiAgICogVGhlIGN1c3RvbSB1c2VyIGFnZW50IGhlYWRlciB0aGF0IHdvdWxkIGJlIGFwcGVuZGVkIHRvIGRlZmF1bHQgb25lXG4gICAqL1xuICBjdXN0b21Vc2VyQWdlbnQ/OiBzdHJpbmcgfCBVc2VyQWdlbnQ7XG59XG5pbnRlcmZhY2UgUHJldmlvdXNseVJlc29sdmVkIHtcbiAgZGVmYXVsdFVzZXJBZ2VudFByb3ZpZGVyOiBQcm92aWRlcjxVc2VyQWdlbnQ+O1xuICBydW50aW1lOiBzdHJpbmc7XG59XG5leHBvcnQgaW50ZXJmYWNlIFVzZXJBZ2VudFJlc29sdmVkQ29uZmlnIHtcbiAgLyoqXG4gICAqIFRoZSBwcm92aWRlciBwb3B1bGF0aW5nIGRlZmF1bHQgdHJhY2tpbmcgaW5mb3JtYXRpb24gdG8gYmUgc2VudCB3aXRoIGB1c2VyLWFnZW50YCwgYHgtYW16LXVzZXItYWdlbnRgIGhlYWRlci5cbiAgICogQGludGVybmFsXG4gICAqL1xuICBkZWZhdWx0VXNlckFnZW50UHJvdmlkZXI6IFByb3ZpZGVyPFVzZXJBZ2VudD47XG4gIC8qKlxuICAgKiBUaGUgY3VzdG9tIHVzZXIgYWdlbnQgaGVhZGVyIHRoYXQgd291bGQgYmUgYXBwZW5kZWQgdG8gZGVmYXVsdCBvbmVcbiAgICovXG4gIGN1c3RvbVVzZXJBZ2VudD86IFVzZXJBZ2VudDtcbiAgLyoqXG4gICAqIFRoZSBydW50aW1lIGVudmlyb25tZW50XG4gICAqL1xuICBydW50aW1lOiBzdHJpbmc7XG59XG5leHBvcnQgZnVuY3Rpb24gcmVzb2x2ZVVzZXJBZ2VudENvbmZpZzxUPihcbiAgaW5wdXQ6IFQgJiBQcmV2aW91c2x5UmVzb2x2ZWQgJiBVc2VyQWdlbnRJbnB1dENvbmZpZ1xuKTogVCAmIFVzZXJBZ2VudFJlc29sdmVkQ29uZmlnIHtcbiAgcmV0dXJuIHtcbiAgICAuLi5pbnB1dCxcbiAgICBjdXN0b21Vc2VyQWdlbnQ6IHR5cGVvZiBpbnB1dC5jdXN0b21Vc2VyQWdlbnQgPT09IFwic3RyaW5nXCIgPyBbW2lucHV0LmN1c3RvbVVzZXJBZ2VudF1dIDogaW5wdXQuY3VzdG9tVXNlckFnZW50LFxuICB9O1xufVxuIl19","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UA_ESCAPE_REGEX = exports.SPACE = exports.X_AMZ_USER_AGENT = exports.USER_AGENT = void 0;\nexports.USER_AGENT = \"user-agent\";\nexports.X_AMZ_USER_AGENT = \"x-amz-user-agent\";\nexports.SPACE = \" \";\nexports.UA_ESCAPE_REGEX = /[^\\!\\#\\$\\%\\&\\'\\*\\+\\-\\.\\^\\_\\`\\|\\~\\d\\w]/g;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uc3RhbnRzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2NvbnN0YW50cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBYSxRQUFBLFVBQVUsR0FBRyxZQUFZLENBQUM7QUFFMUIsUUFBQSxnQkFBZ0IsR0FBRyxrQkFBa0IsQ0FBQztBQUV0QyxRQUFBLEtBQUssR0FBRyxHQUFHLENBQUM7QUFFWixRQUFBLGVBQWUsR0FBRyx3Q0FBd0MsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBVU0VSX0FHRU5UID0gXCJ1c2VyLWFnZW50XCI7XG5cbmV4cG9ydCBjb25zdCBYX0FNWl9VU0VSX0FHRU5UID0gXCJ4LWFtei11c2VyLWFnZW50XCI7XG5cbmV4cG9ydCBjb25zdCBTUEFDRSA9IFwiIFwiO1xuXG5leHBvcnQgY29uc3QgVUFfRVNDQVBFX1JFR0VYID0gL1teXFwhXFwjXFwkXFwlXFwmXFwnXFwqXFwrXFwtXFwuXFxeXFxfXFxgXFx8XFx+XFxkXFx3XS9nO1xuIl19","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\n(0, tslib_1.__exportStar)(require(\"./configurations\"), exports);\n(0, tslib_1.__exportStar)(require(\"./user-agent-middleware\"), exports);\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsZ0VBQWlDO0FBQ2pDLHVFQUF3QyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gXCIuL2NvbmZpZ3VyYXRpb25zXCI7XG5leHBvcnQgKiBmcm9tIFwiLi91c2VyLWFnZW50LW1pZGRsZXdhcmVcIjtcbiJdfQ==","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getUserAgentPlugin = exports.getUserAgentMiddlewareOptions = exports.userAgentMiddleware = void 0;\nconst protocol_http_1 = require(\"@aws-sdk/protocol-http\");\nconst constants_1 = require(\"./constants\");\n/**\n * Build user agent header sections from:\n * 1. runtime-specific default user agent provider;\n * 2. custom user agent from `customUserAgent` client config;\n * 3. handler execution context set by internal SDK components;\n * The built user agent will be set to `x-amz-user-agent` header for ALL the\n * runtimes.\n * Please note that any override to the `user-agent` or `x-amz-user-agent` header\n * in the HTTP request is discouraged. Please use `customUserAgent` client\n * config or middleware setting the `userAgent` context to generate desired user\n * agent.\n */\nconst userAgentMiddleware = (options) => (next, context) => async (args) => {\n    var _a, _b;\n    const { request } = args;\n    if (!protocol_http_1.HttpRequest.isInstance(request))\n        return next(args);\n    const { headers } = request;\n    const userAgent = ((_a = context === null || context === void 0 ? void 0 : context.userAgent) === null || _a === void 0 ? void 0 : _a.map(escapeUserAgent)) || [];\n    const defaultUserAgent = (await options.defaultUserAgentProvider()).map(escapeUserAgent);\n    const customUserAgent = ((_b = options === null || options === void 0 ? void 0 : options.customUserAgent) === null || _b === void 0 ? void 0 : _b.map(escapeUserAgent)) || [];\n    // Set value to AWS-specific user agent header\n    const sdkUserAgentValue = [...defaultUserAgent, ...userAgent, ...customUserAgent].join(constants_1.SPACE);\n    // Get value to be sent with non-AWS-specific user agent header.\n    const normalUAValue = [\n        ...defaultUserAgent.filter((section) => section.startsWith(\"aws-sdk-\")),\n        ...customUserAgent,\n    ].join(constants_1.SPACE);\n    if (options.runtime !== \"browser\") {\n        if (normalUAValue) {\n            headers[constants_1.X_AMZ_USER_AGENT] = headers[constants_1.X_AMZ_USER_AGENT]\n                ? `${headers[constants_1.USER_AGENT]} ${normalUAValue}`\n                : normalUAValue;\n        }\n        headers[constants_1.USER_AGENT] = sdkUserAgentValue;\n    }\n    else {\n        headers[constants_1.X_AMZ_USER_AGENT] = sdkUserAgentValue;\n    }\n    return next({\n        ...args,\n        request,\n    });\n};\nexports.userAgentMiddleware = userAgentMiddleware;\n/**\n * Escape the each pair according to https://tools.ietf.org/html/rfc5234 and join the pair with pattern `name/version`.\n * User agent name may include prefix like `md/`, `api/`, `os/` etc., we should not escape the `/` after the prefix.\n * @private\n */\nconst escapeUserAgent = ([name, version]) => {\n    const prefixSeparatorIndex = name.indexOf(\"/\");\n    const prefix = name.substring(0, prefixSeparatorIndex); // If no prefix, prefix is just \"\"\n    let uaName = name.substring(prefixSeparatorIndex + 1);\n    if (prefix === \"api\") {\n        uaName = uaName.toLowerCase();\n    }\n    return [prefix, uaName, version]\n        .filter((item) => item && item.length > 0)\n        .map((item) => item === null || item === void 0 ? void 0 : item.replace(constants_1.UA_ESCAPE_REGEX, \"_\"))\n        .join(\"/\");\n};\nexports.getUserAgentMiddlewareOptions = {\n    name: \"getUserAgentMiddleware\",\n    step: \"build\",\n    priority: \"low\",\n    tags: [\"SET_USER_AGENT\", \"USER_AGENT\"],\n    override: true,\n};\nconst getUserAgentPlugin = (config) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add((0, exports.userAgentMiddleware)(config), exports.getUserAgentMiddlewareOptions);\n    },\n});\nexports.getUserAgentPlugin = getUserAgentPlugin;\n//# sourceMappingURL=data:application/json;base64,","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.loadConfig = void 0;\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nconst fromEnv_1 = require(\"./fromEnv\");\nconst fromSharedConfigFiles_1 = require(\"./fromSharedConfigFiles\");\nconst fromStatic_1 = require(\"./fromStatic\");\nconst loadConfig = ({ environmentVariableSelector, configFileSelector, default: defaultValue }, configuration = {}) => (0, property_provider_1.memoize)((0, property_provider_1.chain)((0, fromEnv_1.fromEnv)(environmentVariableSelector), (0, fromSharedConfigFiles_1.fromSharedConfigFiles)(configFileSelector, configuration), (0, fromStatic_1.fromStatic)(defaultValue)));\nexports.loadConfig = loadConfig;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uZmlnTG9hZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2NvbmZpZ0xvYWRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSxrRUFBNEQ7QUFHNUQsdUNBQW1EO0FBQ25ELG1FQUFvRztBQUNwRyw2Q0FBNEQ7QUFxQnJELE1BQU0sVUFBVSxHQUFHLENBQ3hCLEVBQUUsMkJBQTJCLEVBQUUsa0JBQWtCLEVBQUUsT0FBTyxFQUFFLFlBQVksRUFBNEIsRUFDcEcsZ0JBQW9DLEVBQUUsRUFDekIsRUFBRSxDQUNmLElBQUEsMkJBQU8sRUFDTCxJQUFBLHlCQUFLLEVBQ0gsSUFBQSxpQkFBTyxFQUFDLDJCQUEyQixDQUFDLEVBQ3BDLElBQUEsNkNBQXFCLEVBQUMsa0JBQWtCLEVBQUUsYUFBYSxDQUFDLEVBQ3hELElBQUEsdUJBQVUsRUFBQyxZQUFZLENBQUMsQ0FDekIsQ0FDRixDQUFDO0FBVlMsUUFBQSxVQUFVLGNBVW5CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY2hhaW4sIG1lbW9pemUgfSBmcm9tIFwiQGF3cy1zZGsvcHJvcGVydHktcHJvdmlkZXJcIjtcbmltcG9ydCB7IFByb3ZpZGVyIH0gZnJvbSBcIkBhd3Mtc2RrL3R5cGVzXCI7XG5cbmltcG9ydCB7IGZyb21FbnYsIEdldHRlckZyb21FbnYgfSBmcm9tIFwiLi9mcm9tRW52XCI7XG5pbXBvcnQgeyBmcm9tU2hhcmVkQ29uZmlnRmlsZXMsIEdldHRlckZyb21Db25maWcsIFNoYXJlZENvbmZpZ0luaXQgfSBmcm9tIFwiLi9mcm9tU2hhcmVkQ29uZmlnRmlsZXNcIjtcbmltcG9ydCB7IGZyb21TdGF0aWMsIEZyb21TdGF0aWNDb25maWcgfSBmcm9tIFwiLi9mcm9tU3RhdGljXCI7XG5cbmV4cG9ydCB0eXBlIExvY2FsQ29uZmlnT3B0aW9ucyA9IFNoYXJlZENvbmZpZ0luaXQ7XG5cbmV4cG9ydCBpbnRlcmZhY2UgTG9hZGVkQ29uZmlnU2VsZWN0b3JzPFQ+IHtcbiAgLyoqXG4gICAqIEEgZ2V0dGVyIGZ1bmN0aW9uIGdldHRpbmcgdGhlIGNvbmZpZyB2YWx1ZXMgZnJvbSBhbGwgdGhlIGVudmlyb25tZW50XG4gICAqIHZhcmlhYmxlcy5cbiAgICovXG4gIGVudmlyb25tZW50VmFyaWFibGVTZWxlY3RvcjogR2V0dGVyRnJvbUVudjxUPjtcbiAgLyoqXG4gICAqIEEgZ2V0dGVyIGZ1bmN0aW9uIGdldHRpbmcgY29uZmlnIHZhbHVlcyBhc3NvY2lhdGVkIHdpdGggdGhlIGluZmVycmVkXG4gICAqIHByb2ZpbGUgZnJvbSBzaGFyZWQgSU5JIGZpbGVzXG4gICAqL1xuICBjb25maWdGaWxlU2VsZWN0b3I6IEdldHRlckZyb21Db25maWc8VD47XG4gIC8qKlxuICAgKiBEZWZhdWx0IHZhbHVlIG9yIGdldHRlclxuICAgKi9cbiAgZGVmYXVsdDogRnJvbVN0YXRpY0NvbmZpZzxUPjtcbn1cblxuZXhwb3J0IGNvbnN0IGxvYWRDb25maWcgPSA8VCA9IHN0cmluZz4oXG4gIHsgZW52aXJvbm1lbnRWYXJpYWJsZVNlbGVjdG9yLCBjb25maWdGaWxlU2VsZWN0b3IsIGRlZmF1bHQ6IGRlZmF1bHRWYWx1ZSB9OiBMb2FkZWRDb25maWdTZWxlY3RvcnM8VD4sXG4gIGNvbmZpZ3VyYXRpb246IExvY2FsQ29uZmlnT3B0aW9ucyA9IHt9XG4pOiBQcm92aWRlcjxUPiA9PlxuICBtZW1vaXplKFxuICAgIGNoYWluKFxuICAgICAgZnJvbUVudihlbnZpcm9ubWVudFZhcmlhYmxlU2VsZWN0b3IpLFxuICAgICAgZnJvbVNoYXJlZENvbmZpZ0ZpbGVzKGNvbmZpZ0ZpbGVTZWxlY3RvciwgY29uZmlndXJhdGlvbiksXG4gICAgICBmcm9tU3RhdGljKGRlZmF1bHRWYWx1ZSlcbiAgICApXG4gICk7XG4iXX0=","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromEnv = void 0;\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\n/**\n * Get config value given the environment variable name or getter from\n * environment variable.\n */\nconst fromEnv = (envVarSelector) => async () => {\n    try {\n        const config = envVarSelector(process.env);\n        if (config === undefined) {\n            throw new Error();\n        }\n        return config;\n    }\n    catch (e) {\n        throw new property_provider_1.CredentialsProviderError(e.message || `Cannot load config from environment variables with getter: ${envVarSelector}`);\n    }\n};\nexports.fromEnv = fromEnv;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZnJvbUVudi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9mcm9tRW52LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLGtFQUFzRTtBQUt0RTs7O0dBR0c7QUFDSSxNQUFNLE9BQU8sR0FDbEIsQ0FBYSxjQUFnQyxFQUFlLEVBQUUsQ0FDOUQsS0FBSyxJQUFJLEVBQUU7SUFDVCxJQUFJO1FBQ0YsTUFBTSxNQUFNLEdBQUcsY0FBYyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUMzQyxJQUFJLE1BQU0sS0FBSyxTQUFTLEVBQUU7WUFDeEIsTUFBTSxJQUFJLEtBQUssRUFBRSxDQUFDO1NBQ25CO1FBQ0QsT0FBTyxNQUFXLENBQUM7S0FDcEI7SUFBQyxPQUFPLENBQUMsRUFBRTtRQUNWLE1BQU0sSUFBSSw0Q0FBd0IsQ0FDaEMsQ0FBQyxDQUFDLE9BQU8sSUFBSSw4REFBOEQsY0FBYyxFQUFFLENBQzVGLENBQUM7S0FDSDtBQUNILENBQUMsQ0FBQztBQWRTLFFBQUEsT0FBTyxXQWNoQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENyZWRlbnRpYWxzUHJvdmlkZXJFcnJvciB9IGZyb20gXCJAYXdzLXNkay9wcm9wZXJ0eS1wcm92aWRlclwiO1xuaW1wb3J0IHsgUHJvdmlkZXIgfSBmcm9tIFwiQGF3cy1zZGsvdHlwZXNcIjtcblxuZXhwb3J0IHR5cGUgR2V0dGVyRnJvbUVudjxUPiA9IChlbnY6IE5vZGVKUy5Qcm9jZXNzRW52KSA9PiBUIHwgdW5kZWZpbmVkO1xuXG4vKipcbiAqIEdldCBjb25maWcgdmFsdWUgZ2l2ZW4gdGhlIGVudmlyb25tZW50IHZhcmlhYmxlIG5hbWUgb3IgZ2V0dGVyIGZyb21cbiAqIGVudmlyb25tZW50IHZhcmlhYmxlLlxuICovXG5leHBvcnQgY29uc3QgZnJvbUVudiA9XG4gIDxUID0gc3RyaW5nPihlbnZWYXJTZWxlY3RvcjogR2V0dGVyRnJvbUVudjxUPik6IFByb3ZpZGVyPFQ+ID0+XG4gIGFzeW5jICgpID0+IHtcbiAgICB0cnkge1xuICAgICAgY29uc3QgY29uZmlnID0gZW52VmFyU2VsZWN0b3IocHJvY2Vzcy5lbnYpO1xuICAgICAgaWYgKGNvbmZpZyA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcigpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGNvbmZpZyBhcyBUO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIHRocm93IG5ldyBDcmVkZW50aWFsc1Byb3ZpZGVyRXJyb3IoXG4gICAgICAgIGUubWVzc2FnZSB8fCBgQ2Fubm90IGxvYWQgY29uZmlnIGZyb20gZW52aXJvbm1lbnQgdmFyaWFibGVzIHdpdGggZ2V0dGVyOiAke2VudlZhclNlbGVjdG9yfWBcbiAgICAgICk7XG4gICAgfVxuICB9O1xuIl19","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromSharedConfigFiles = exports.ENV_PROFILE = void 0;\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nconst shared_ini_file_loader_1 = require(\"@aws-sdk/shared-ini-file-loader\");\nconst DEFAULT_PROFILE = \"default\";\nexports.ENV_PROFILE = \"AWS_PROFILE\";\n/**\n * Get config value from the shared config files with inferred profile name.\n */\nconst fromSharedConfigFiles = (configSelector, { preferredFile = \"config\", ...init } = {}) => async () => {\n    const { loadedConfig = (0, shared_ini_file_loader_1.loadSharedConfigFiles)(init), profile = process.env[exports.ENV_PROFILE] || DEFAULT_PROFILE } = init;\n    const { configFile, credentialsFile } = await loadedConfig;\n    const profileFromCredentials = credentialsFile[profile] || {};\n    const profileFromConfig = configFile[profile] || {};\n    const mergedProfile = preferredFile === \"config\"\n        ? { ...profileFromCredentials, ...profileFromConfig }\n        : { ...profileFromConfig, ...profileFromCredentials };\n    try {\n        const configValue = configSelector(mergedProfile);\n        if (configValue === undefined) {\n            throw new Error();\n        }\n        return configValue;\n    }\n    catch (e) {\n        throw new property_provider_1.CredentialsProviderError(e.message ||\n            `Cannot load config for profile ${profile} in SDK configuration files with getter: ${configSelector}`);\n    }\n};\nexports.fromSharedConfigFiles = fromSharedConfigFiles;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZnJvbVNoYXJlZENvbmZpZ0ZpbGVzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2Zyb21TaGFyZWRDb25maWdGaWxlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSxrRUFBc0U7QUFDdEUsNEVBS3lDO0FBR3pDLE1BQU0sZUFBZSxHQUFHLFNBQVMsQ0FBQztBQUNyQixRQUFBLFdBQVcsR0FBRyxhQUFhLENBQUM7QUEwQnpDOztHQUVHO0FBQ0ksTUFBTSxxQkFBcUIsR0FDaEMsQ0FDRSxjQUFtQyxFQUNuQyxFQUFFLGFBQWEsR0FBRyxRQUFRLEVBQUUsR0FBRyxJQUFJLEtBQXVCLEVBQUUsRUFDL0MsRUFBRSxDQUNqQixLQUFLLElBQUksRUFBRTtJQUNULE1BQU0sRUFBRSxZQUFZLEdBQUcsSUFBQSw4Q0FBcUIsRUFBQyxJQUFJLENBQUMsRUFBRSxPQUFPLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxtQkFBVyxDQUFDLElBQUksZUFBZSxFQUFFLEdBQUcsSUFBSSxDQUFDO0lBRW5ILE1BQU0sRUFBRSxVQUFVLEVBQUUsZUFBZSxFQUFFLEdBQUcsTUFBTSxZQUFZLENBQUM7SUFFM0QsTUFBTSxzQkFBc0IsR0FBRyxlQUFlLENBQUMsT0FBTyxDQUFDLElBQUksRUFBRSxDQUFDO0lBQzlELE1BQU0saUJBQWlCLEdBQUcsVUFBVSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUNwRCxNQUFNLGFBQWEsR0FDakIsYUFBYSxLQUFLLFFBQVE7UUFDeEIsQ0FBQyxDQUFDLEVBQUUsR0FBRyxzQkFBc0IsRUFBRSxHQUFHLGlCQUFpQixFQUFFO1FBQ3JELENBQUMsQ0FBQyxFQUFFLEdBQUcsaUJBQWlCLEVBQUUsR0FBRyxzQkFBc0IsRUFBRSxDQUFDO0lBRTFELElBQUk7UUFDRixNQUFNLFdBQVcsR0FBRyxjQUFjLENBQUMsYUFBYSxDQUFDLENBQUM7UUFDbEQsSUFBSSxXQUFXLEtBQUssU0FBUyxFQUFFO1lBQzdCLE1BQU0sSUFBSSxLQUFLLEVBQUUsQ0FBQztTQUNuQjtRQUNELE9BQU8sV0FBVyxDQUFDO0tBQ3BCO0lBQUMsT0FBTyxDQUFDLEVBQUU7UUFDVixNQUFNLElBQUksNENBQXdCLENBQ2hDLENBQUMsQ0FBQyxPQUFPO1lBQ1Asa0NBQWtDLE9BQU8sNENBQTRDLGNBQWMsRUFBRSxDQUN4RyxDQUFDO0tBQ0g7QUFDSCxDQUFDLENBQUM7QUE3QlMsUUFBQSxxQkFBcUIseUJBNkI5QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENyZWRlbnRpYWxzUHJvdmlkZXJFcnJvciB9IGZyb20gXCJAYXdzLXNkay9wcm9wZXJ0eS1wcm92aWRlclwiO1xuaW1wb3J0IHtcbiAgbG9hZFNoYXJlZENvbmZpZ0ZpbGVzLFxuICBQcm9maWxlLFxuICBTaGFyZWRDb25maWdGaWxlcyxcbiAgU2hhcmVkQ29uZmlnSW5pdCBhcyBCYXNlU2hhcmVkQ29uZmlnSW5pdCxcbn0gZnJvbSBcIkBhd3Mtc2RrL3NoYXJlZC1pbmktZmlsZS1sb2FkZXJcIjtcbmltcG9ydCB7IFByb3ZpZGVyIH0gZnJvbSBcIkBhd3Mtc2RrL3R5cGVzXCI7XG5cbmNvbnN0IERFRkFVTFRfUFJPRklMRSA9IFwiZGVmYXVsdFwiO1xuZXhwb3J0IGNvbnN0IEVOVl9QUk9GSUxFID0gXCJBV1NfUFJPRklMRVwiO1xuXG5leHBvcnQgaW50ZXJmYWNlIFNoYXJlZENvbmZpZ0luaXQgZXh0ZW5kcyBCYXNlU2hhcmVkQ29uZmlnSW5pdCB7XG4gIC8qKlxuICAgKiBUaGUgY29uZmlndXJhdGlvbiBwcm9maWxlIHRvIHVzZS5cbiAgICovXG4gIHByb2ZpbGU/OiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIFRoZSBwcmVmZXJyZWQgc2hhcmVkIGluaSBmaWxlIHRvIGxvYWQgdGhlIGNvbmZpZy4gXCJjb25maWdcIiBvcHRpb24gcmVmZXJzIHRvXG4gICAqIHRoZSBzaGFyZWQgY29uZmlnIGZpbGUoZGVmYXVsdHMgdG8gYH4vLmF3cy9jb25maWdgKS4gXCJjcmVkZW50aWFsc1wiIG9wdGlvblxuICAgKiByZWZlcnMgdG8gdGhlIHNoYXJlZCBjcmVkZW50aWFscyBmaWxlKGRlZmF1bHRzIHRvIGB+Ly5hd3MvY3JlZGVudGlhbHNgKVxuICAgKi9cbiAgcHJlZmVycmVkRmlsZT86IFwiY29uZmlnXCIgfCBcImNyZWRlbnRpYWxzXCI7XG5cbiAgLyoqXG4gICAqIEEgcHJvbWlzZSB0aGF0IHdpbGwgYmUgcmVzb2x2ZWQgd2l0aCBsb2FkZWQgYW5kIHBhcnNlZCBjcmVkZW50aWFscyBmaWxlcy5cbiAgICogVXNlZCB0byBhdm9pZCBsb2FkaW5nIHNoYXJlZCBjb25maWcgZmlsZXMgbXVsdGlwbGUgdGltZXMuXG4gICAqXG4gICAqIEBpbnRlcm5hbFxuICAgKi9cbiAgbG9hZGVkQ29uZmlnPzogUHJvbWlzZTxTaGFyZWRDb25maWdGaWxlcz47XG59XG5cbmV4cG9ydCB0eXBlIEdldHRlckZyb21Db25maWc8VD4gPSAocHJvZmlsZTogUHJvZmlsZSkgPT4gVCB8IHVuZGVmaW5lZDtcblxuLyoqXG4gKiBHZXQgY29uZmlnIHZhbHVlIGZyb20gdGhlIHNoYXJlZCBjb25maWcgZmlsZXMgd2l0aCBpbmZlcnJlZCBwcm9maWxlIG5hbWUuXG4gKi9cbmV4cG9ydCBjb25zdCBmcm9tU2hhcmVkQ29uZmlnRmlsZXMgPVxuICA8VCA9IHN0cmluZz4oXG4gICAgY29uZmlnU2VsZWN0b3I6IEdldHRlckZyb21Db25maWc8VD4sXG4gICAgeyBwcmVmZXJyZWRGaWxlID0gXCJjb25maWdcIiwgLi4uaW5pdCB9OiBTaGFyZWRDb25maWdJbml0ID0ge31cbiAgKTogUHJvdmlkZXI8VD4gPT5cbiAgYXN5bmMgKCkgPT4ge1xuICAgIGNvbnN0IHsgbG9hZGVkQ29uZmlnID0gbG9hZFNoYXJlZENvbmZpZ0ZpbGVzKGluaXQpLCBwcm9maWxlID0gcHJvY2Vzcy5lbnZbRU5WX1BST0ZJTEVdIHx8IERFRkFVTFRfUFJPRklMRSB9ID0gaW5pdDtcblxuICAgIGNvbnN0IHsgY29uZmlnRmlsZSwgY3JlZGVudGlhbHNGaWxlIH0gPSBhd2FpdCBsb2FkZWRDb25maWc7XG5cbiAgICBjb25zdCBwcm9maWxlRnJvbUNyZWRlbnRpYWxzID0gY3JlZGVudGlhbHNGaWxlW3Byb2ZpbGVdIHx8IHt9O1xuICAgIGNvbnN0IHByb2ZpbGVGcm9tQ29uZmlnID0gY29uZmlnRmlsZVtwcm9maWxlXSB8fCB7fTtcbiAgICBjb25zdCBtZXJnZWRQcm9maWxlID1cbiAgICAgIHByZWZlcnJlZEZpbGUgPT09IFwiY29uZmlnXCJcbiAgICAgICAgPyB7IC4uLnByb2ZpbGVGcm9tQ3JlZGVudGlhbHMsIC4uLnByb2ZpbGVGcm9tQ29uZmlnIH1cbiAgICAgICAgOiB7IC4uLnByb2ZpbGVGcm9tQ29uZmlnLCAuLi5wcm9maWxlRnJvbUNyZWRlbnRpYWxzIH07XG5cbiAgICB0cnkge1xuICAgICAgY29uc3QgY29uZmlnVmFsdWUgPSBjb25maWdTZWxlY3RvcihtZXJnZWRQcm9maWxlKTtcbiAgICAgIGlmIChjb25maWdWYWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcigpO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGNvbmZpZ1ZhbHVlO1xuICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgIHRocm93IG5ldyBDcmVkZW50aWFsc1Byb3ZpZGVyRXJyb3IoXG4gICAgICAgIGUubWVzc2FnZSB8fFxuICAgICAgICAgIGBDYW5ub3QgbG9hZCBjb25maWcgZm9yIHByb2ZpbGUgJHtwcm9maWxlfSBpbiBTREsgY29uZmlndXJhdGlvbiBmaWxlcyB3aXRoIGdldHRlcjogJHtjb25maWdTZWxlY3Rvcn1gXG4gICAgICApO1xuICAgIH1cbiAgfTtcbiJdfQ==","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromStatic = void 0;\nconst property_provider_1 = require(\"@aws-sdk/property-provider\");\nconst isFunction = (func) => typeof func === \"function\";\nconst fromStatic = (defaultValue) => isFunction(defaultValue) ? async () => defaultValue() : (0, property_provider_1.fromStatic)(defaultValue);\nexports.fromStatic = fromStatic;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZnJvbVN0YXRpYy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9mcm9tU3RhdGljLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLGtFQUE2RTtBQUs3RSxNQUFNLFVBQVUsR0FBRyxDQUFJLElBQXlCLEVBQXFCLEVBQUUsQ0FBQyxPQUFPLElBQUksS0FBSyxVQUFVLENBQUM7QUFFNUYsTUFBTSxVQUFVLEdBQUcsQ0FBSSxZQUFpQyxFQUFlLEVBQUUsQ0FDOUUsVUFBVSxDQUFDLFlBQVksQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLElBQUksRUFBRSxDQUFDLFlBQVksRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFBLDhCQUFpQixFQUFDLFlBQVksQ0FBQyxDQUFDO0FBRDdFLFFBQUEsVUFBVSxjQUNtRSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGZyb21TdGF0aWMgYXMgY29udmVydFRvUHJvdmlkZXIgfSBmcm9tIFwiQGF3cy1zZGsvcHJvcGVydHktcHJvdmlkZXJcIjtcbmltcG9ydCB7IFByb3ZpZGVyIH0gZnJvbSBcIkBhd3Mtc2RrL3R5cGVzXCI7XG5cbmV4cG9ydCB0eXBlIEZyb21TdGF0aWNDb25maWc8VD4gPSBUIHwgKCgpID0+IFQpO1xudHlwZSBHZXR0ZXI8VD4gPSAoKSA9PiBUO1xuY29uc3QgaXNGdW5jdGlvbiA9IDxUPihmdW5jOiBGcm9tU3RhdGljQ29uZmlnPFQ+KTogZnVuYyBpcyBHZXR0ZXI8VD4gPT4gdHlwZW9mIGZ1bmMgPT09IFwiZnVuY3Rpb25cIjtcblxuZXhwb3J0IGNvbnN0IGZyb21TdGF0aWMgPSA8VD4oZGVmYXVsdFZhbHVlOiBGcm9tU3RhdGljQ29uZmlnPFQ+KTogUHJvdmlkZXI8VD4gPT5cbiAgaXNGdW5jdGlvbihkZWZhdWx0VmFsdWUpID8gYXN5bmMgKCkgPT4gZGVmYXVsdFZhbHVlKCkgOiBjb252ZXJ0VG9Qcm92aWRlcihkZWZhdWx0VmFsdWUpO1xuIl19","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\n(0, tslib_1.__exportStar)(require(\"./configLoader\"), exports);\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsOERBQStCIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIi4vY29uZmlnTG9hZGVyXCI7XG4iXX0=","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NODEJS_TIMEOUT_ERROR_CODES = void 0;\n/**\n * Node.js system error codes that indicate timeout.\n */\nexports.NODEJS_TIMEOUT_ERROR_CODES = [\"ECONNRESET\", \"EPIPE\", \"ETIMEDOUT\"];\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uc3RhbnRzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2NvbnN0YW50cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQTs7R0FFRztBQUNVLFFBQUEsMEJBQTBCLEdBQUcsQ0FBQyxZQUFZLEVBQUUsT0FBTyxFQUFFLFdBQVcsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBOb2RlLmpzIHN5c3RlbSBlcnJvciBjb2RlcyB0aGF0IGluZGljYXRlIHRpbWVvdXQuXG4gKi9cbmV4cG9ydCBjb25zdCBOT0RFSlNfVElNRU9VVF9FUlJPUl9DT0RFUyA9IFtcIkVDT05OUkVTRVRcIiwgXCJFUElQRVwiLCBcIkVUSU1FRE9VVFwiXTtcbiJdfQ==","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getTransformedHeaders = void 0;\nconst getTransformedHeaders = (headers) => {\n    const transformedHeaders = {};\n    for (const name of Object.keys(headers)) {\n        const headerValues = headers[name];\n        transformedHeaders[name] = Array.isArray(headerValues) ? headerValues.join(\",\") : headerValues;\n    }\n    return transformedHeaders;\n};\nexports.getTransformedHeaders = getTransformedHeaders;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0LXRyYW5zZm9ybWVkLWhlYWRlcnMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvZ2V0LXRyYW5zZm9ybWVkLWhlYWRlcnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBR0EsTUFBTSxxQkFBcUIsR0FBRyxDQUFDLE9BQTRCLEVBQUUsRUFBRTtJQUM3RCxNQUFNLGtCQUFrQixHQUFjLEVBQUUsQ0FBQztJQUV6QyxLQUFLLE1BQU0sSUFBSSxJQUFJLE1BQU0sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLEVBQUU7UUFDdkMsTUFBTSxZQUFZLEdBQVcsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQzNDLGtCQUFrQixDQUFDLElBQUksQ0FBQyxHQUFHLEtBQUssQ0FBQyxPQUFPLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQyxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLFlBQVksQ0FBQztLQUNoRztJQUVELE9BQU8sa0JBQWtCLENBQUM7QUFDNUIsQ0FBQyxDQUFDO0FBRU8sc0RBQXFCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSGVhZGVyQmFnIH0gZnJvbSBcIkBhd3Mtc2RrL3R5cGVzXCI7XG5pbXBvcnQgeyBJbmNvbWluZ0h0dHBIZWFkZXJzIH0gZnJvbSBcImh0dHAyXCI7XG5cbmNvbnN0IGdldFRyYW5zZm9ybWVkSGVhZGVycyA9IChoZWFkZXJzOiBJbmNvbWluZ0h0dHBIZWFkZXJzKSA9PiB7XG4gIGNvbnN0IHRyYW5zZm9ybWVkSGVhZGVyczogSGVhZGVyQmFnID0ge307XG5cbiAgZm9yIChjb25zdCBuYW1lIG9mIE9iamVjdC5rZXlzKGhlYWRlcnMpKSB7XG4gICAgY29uc3QgaGVhZGVyVmFsdWVzID0gPHN0cmluZz5oZWFkZXJzW25hbWVdO1xuICAgIHRyYW5zZm9ybWVkSGVhZGVyc1tuYW1lXSA9IEFycmF5LmlzQXJyYXkoaGVhZGVyVmFsdWVzKSA/IGhlYWRlclZhbHVlcy5qb2luKFwiLFwiKSA6IGhlYWRlclZhbHVlcztcbiAgfVxuXG4gIHJldHVybiB0cmFuc2Zvcm1lZEhlYWRlcnM7XG59O1xuXG5leHBvcnQgeyBnZXRUcmFuc2Zvcm1lZEhlYWRlcnMgfTtcbiJdfQ==","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\n(0, tslib_1.__exportStar)(require(\"./node-http-handler\"), exports);\n(0, tslib_1.__exportStar)(require(\"./node-http2-handler\"), exports);\n(0, tslib_1.__exportStar)(require(\"./stream-collector\"), exports);\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsbUVBQW9DO0FBQ3BDLG9FQUFxQztBQUNyQyxrRUFBbUMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tIFwiLi9ub2RlLWh0dHAtaGFuZGxlclwiO1xuZXhwb3J0ICogZnJvbSBcIi4vbm9kZS1odHRwMi1oYW5kbGVyXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9zdHJlYW0tY29sbGVjdG9yXCI7XG4iXX0=","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NodeHttpHandler = void 0;\nconst protocol_http_1 = require(\"@aws-sdk/protocol-http\");\nconst querystring_builder_1 = require(\"@aws-sdk/querystring-builder\");\nconst http_1 = require(\"http\");\nconst https_1 = require(\"https\");\nconst constants_1 = require(\"./constants\");\nconst get_transformed_headers_1 = require(\"./get-transformed-headers\");\nconst set_connection_timeout_1 = require(\"./set-connection-timeout\");\nconst set_socket_timeout_1 = require(\"./set-socket-timeout\");\nconst write_request_body_1 = require(\"./write-request-body\");\nclass NodeHttpHandler {\n    constructor({ connectionTimeout, socketTimeout, httpAgent, httpsAgent } = {}) {\n        // Node http handler is hard-coded to http/1.1: https://github.com/nodejs/node/blob/ff5664b83b89c55e4ab5d5f60068fb457f1f5872/lib/_http_server.js#L286\n        this.metadata = { handlerProtocol: \"http/1.1\" };\n        this.connectionTimeout = connectionTimeout;\n        this.socketTimeout = socketTimeout;\n        const keepAlive = true;\n        const maxSockets = 50;\n        this.httpAgent = httpAgent || new http_1.Agent({ keepAlive, maxSockets });\n        this.httpsAgent = httpsAgent || new https_1.Agent({ keepAlive, maxSockets });\n    }\n    destroy() {\n        this.httpAgent.destroy();\n        this.httpsAgent.destroy();\n    }\n    handle(request, { abortSignal } = {}) {\n        return new Promise((resolve, reject) => {\n            // if the request was already aborted, prevent doing extra work\n            if (abortSignal === null || abortSignal === void 0 ? void 0 : abortSignal.aborted) {\n                const abortError = new Error(\"Request aborted\");\n                abortError.name = \"AbortError\";\n                reject(abortError);\n                return;\n            }\n            // determine which http(s) client to use\n            const isSSL = request.protocol === \"https:\";\n            const queryString = (0, querystring_builder_1.buildQueryString)(request.query || {});\n            const nodeHttpsOptions = {\n                headers: request.headers,\n                host: request.hostname,\n                method: request.method,\n                path: queryString ? `${request.path}?${queryString}` : request.path,\n                port: request.port,\n                agent: isSSL ? this.httpsAgent : this.httpAgent,\n            };\n            // create the http request\n            const requestFunc = isSSL ? https_1.request : http_1.request;\n            const req = requestFunc(nodeHttpsOptions, (res) => {\n                const httpResponse = new protocol_http_1.HttpResponse({\n                    statusCode: res.statusCode || -1,\n                    headers: (0, get_transformed_headers_1.getTransformedHeaders)(res.headers),\n                    body: res,\n                });\n                resolve({ response: httpResponse });\n            });\n            req.on(\"error\", (err) => {\n                if (constants_1.NODEJS_TIMEOUT_ERROR_CODES.includes(err.code)) {\n                    reject(Object.assign(err, { name: \"TimeoutError\" }));\n                }\n                else {\n                    reject(err);\n                }\n            });\n            // wire-up any timeout logic\n            (0, set_connection_timeout_1.setConnectionTimeout)(req, reject, this.connectionTimeout);\n            (0, set_socket_timeout_1.setSocketTimeout)(req, reject, this.socketTimeout);\n            // wire-up abort logic\n            if (abortSignal) {\n                abortSignal.onabort = () => {\n                    // ensure request is destroyed\n                    req.abort();\n                    const abortError = new Error(\"Request aborted\");\n                    abortError.name = \"AbortError\";\n                    reject(abortError);\n                };\n            }\n            (0, write_request_body_1.writeRequestBody)(req, request);\n        });\n    }\n}\nexports.NodeHttpHandler = NodeHttpHandler;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm9kZS1odHRwLWhhbmRsZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvbm9kZS1odHRwLWhhbmRsZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsMERBQWdGO0FBQ2hGLHNFQUFnRTtBQUVoRSwrQkFBNEQ7QUFDNUQsaUNBQStFO0FBRS9FLDJDQUF5RDtBQUN6RCx1RUFBa0U7QUFDbEUscUVBQWdFO0FBQ2hFLDZEQUF3RDtBQUN4RCw2REFBd0Q7QUFzQnhELE1BQWEsZUFBZTtJQVExQixZQUFZLEVBQUUsaUJBQWlCLEVBQUUsYUFBYSxFQUFFLFNBQVMsRUFBRSxVQUFVLEtBQTZCLEVBQUU7UUFIcEcscUpBQXFKO1FBQ3JJLGFBQVEsR0FBRyxFQUFFLGVBQWUsRUFBRSxVQUFVLEVBQUUsQ0FBQztRQUd6RCxJQUFJLENBQUMsaUJBQWlCLEdBQUcsaUJBQWlCLENBQUM7UUFDM0MsSUFBSSxDQUFDLGFBQWEsR0FBRyxhQUFhLENBQUM7UUFDbkMsTUFBTSxTQUFTLEdBQUcsSUFBSSxDQUFDO1FBQ3ZCLE1BQU0sVUFBVSxHQUFHLEVBQUUsQ0FBQztRQUN0QixJQUFJLENBQUMsU0FBUyxHQUFHLFNBQVMsSUFBSSxJQUFJLFlBQU0sQ0FBQyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsQ0FBQyxDQUFDO1FBQ3BFLElBQUksQ0FBQyxVQUFVLEdBQUcsVUFBVSxJQUFJLElBQUksYUFBTyxDQUFDLEVBQUUsU0FBUyxFQUFFLFVBQVUsRUFBRSxDQUFDLENBQUM7SUFDekUsQ0FBQztJQUVELE9BQU87UUFDTCxJQUFJLENBQUMsU0FBUyxDQUFDLE9BQU8sRUFBRSxDQUFDO1FBQ3pCLElBQUksQ0FBQyxVQUFVLENBQUMsT0FBTyxFQUFFLENBQUM7SUFDNUIsQ0FBQztJQUVELE1BQU0sQ0FBQyxPQUFvQixFQUFFLEVBQUUsV0FBVyxLQUF5QixFQUFFO1FBQ25FLE9BQU8sSUFBSSxPQUFPLENBQUMsQ0FBQyxPQUFPLEVBQUUsTUFBTSxFQUFFLEVBQUU7WUFDckMsK0RBQStEO1lBQy9ELElBQUksV0FBVyxhQUFYLFdBQVcsdUJBQVgsV0FBVyxDQUFFLE9BQU8sRUFBRTtnQkFDeEIsTUFBTSxVQUFVLEdBQUcsSUFBSSxLQUFLLENBQUMsaUJBQWlCLENBQUMsQ0FBQztnQkFDaEQsVUFBVSxDQUFDLElBQUksR0FBRyxZQUFZLENBQUM7Z0JBQy9CLE1BQU0sQ0FBQyxVQUFVLENBQUMsQ0FBQztnQkFDbkIsT0FBTzthQUNSO1lBRUQsd0NBQXdDO1lBQ3hDLE1BQU0sS0FBSyxHQUFHLE9BQU8sQ0FBQyxRQUFRLEtBQUssUUFBUSxDQUFDO1lBQzVDLE1BQU0sV0FBVyxHQUFHLElBQUEsc0NBQWdCLEVBQUMsT0FBTyxDQUFDLEtBQUssSUFBSSxFQUFFLENBQUMsQ0FBQztZQUMxRCxNQUFNLGdCQUFnQixHQUFtQjtnQkFDdkMsT0FBTyxFQUFFLE9BQU8sQ0FBQyxPQUFPO2dCQUN4QixJQUFJLEVBQUUsT0FBTyxDQUFDLFFBQVE7Z0JBQ3RCLE1BQU0sRUFBRSxPQUFPLENBQUMsTUFBTTtnQkFDdEIsSUFBSSxFQUFFLFdBQVcsQ0FBQyxDQUFDLENBQUMsR0FBRyxPQUFPLENBQUMsSUFBSSxJQUFJLFdBQVcsRUFBRSxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsSUFBSTtnQkFDbkUsSUFBSSxFQUFFLE9BQU8sQ0FBQyxJQUFJO2dCQUNsQixLQUFLLEVBQUUsS0FBSyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsU0FBUzthQUNoRCxDQUFDO1lBRUYsMEJBQTBCO1lBQzFCLE1BQU0sV0FBVyxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUMsZUFBUyxDQUFDLENBQUMsQ0FBQyxjQUFRLENBQUM7WUFDakQsTUFBTSxHQUFHLEdBQUcsV0FBVyxDQUFDLGdCQUFnQixFQUFFLENBQUMsR0FBRyxFQUFFLEVBQUU7Z0JBQ2hELE1BQU0sWUFBWSxHQUFHLElBQUksNEJBQVksQ0FBQztvQkFDcEMsVUFBVSxFQUFFLEdBQUcsQ0FBQyxVQUFVLElBQUksQ0FBQyxDQUFDO29CQUNoQyxPQUFPLEVBQUUsSUFBQSwrQ0FBcUIsRUFBQyxHQUFHLENBQUMsT0FBTyxDQUFDO29CQUMzQyxJQUFJLEVBQUUsR0FBRztpQkFDVixDQUFDLENBQUM7Z0JBQ0gsT0FBTyxDQUFDLEVBQUUsUUFBUSxFQUFFLFlBQVksRUFBRSxDQUFDLENBQUM7WUFDdEMsQ0FBQyxDQUFDLENBQUM7WUFFSCxHQUFHLENBQUMsRUFBRSxDQUFDLE9BQU8sRUFBRSxDQUFDLEdBQVUsRUFBRSxFQUFFO2dCQUM3QixJQUFJLHNDQUEwQixDQUFDLFFBQVEsQ0FBRSxHQUFXLENBQUMsSUFBSSxDQUFDLEVBQUU7b0JBQzFELE1BQU0sQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLEdBQUcsRUFBRSxFQUFFLElBQUksRUFBRSxjQUFjLEVBQUUsQ0FBQyxDQUFDLENBQUM7aUJBQ3REO3FCQUFNO29CQUNMLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQztpQkFDYjtZQUNILENBQUMsQ0FBQyxDQUFDO1lBRUgsNEJBQTRCO1lBQzVCLElBQUEsNkNBQW9CLEVBQUMsR0FBRyxFQUFFLE1BQU0sRUFBRSxJQUFJLENBQUMsaUJBQWlCLENBQUMsQ0FBQztZQUMxRCxJQUFBLHFDQUFnQixFQUFDLEdBQUcsRUFBRSxNQUFNLEVBQUUsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDO1lBRWxELHNCQUFzQjtZQUN0QixJQUFJLFdBQVcsRUFBRTtnQkFDZixXQUFXLENBQUMsT0FBTyxHQUFHLEdBQUcsRUFBRTtvQkFDekIsOEJBQThCO29CQUM5QixHQUFHLENBQUMsS0FBSyxFQUFFLENBQUM7b0JBQ1osTUFBTSxVQUFVLEdBQUcsSUFBSSxLQUFLLENBQUMsaUJBQWlCLENBQUMsQ0FBQztvQkFDaEQsVUFBVSxDQUFDLElBQUksR0FBRyxZQUFZLENBQUM7b0JBQy9CLE1BQU0sQ0FBQyxVQUFVLENBQUMsQ0FBQztnQkFDckIsQ0FBQyxDQUFDO2FBQ0g7WUFFRCxJQUFBLHFDQUFnQixFQUFDLEdBQUcsRUFBRSxPQUFPLENBQUMsQ0FBQztRQUNqQyxDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7Q0FDRjtBQWpGRCwwQ0FpRkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBIdHRwSGFuZGxlciwgSHR0cFJlcXVlc3QsIEh0dHBSZXNwb25zZSB9IGZyb20gXCJAYXdzLXNkay9wcm90b2NvbC1odHRwXCI7XG5pbXBvcnQgeyBidWlsZFF1ZXJ5U3RyaW5nIH0gZnJvbSBcIkBhd3Mtc2RrL3F1ZXJ5c3RyaW5nLWJ1aWxkZXJcIjtcbmltcG9ydCB7IEh0dHBIYW5kbGVyT3B0aW9ucyB9IGZyb20gXCJAYXdzLXNkay90eXBlc1wiO1xuaW1wb3J0IHsgQWdlbnQgYXMgaEFnZW50LCByZXF1ZXN0IGFzIGhSZXF1ZXN0IH0gZnJvbSBcImh0dHBcIjtcbmltcG9ydCB7IEFnZW50IGFzIGhzQWdlbnQsIHJlcXVlc3QgYXMgaHNSZXF1ZXN0LCBSZXF1ZXN0T3B0aW9ucyB9IGZyb20gXCJodHRwc1wiO1xuXG5pbXBvcnQgeyBOT0RFSlNfVElNRU9VVF9FUlJPUl9DT0RFUyB9IGZyb20gXCIuL2NvbnN0YW50c1wiO1xuaW1wb3J0IHsgZ2V0VHJhbnNmb3JtZWRIZWFkZXJzIH0gZnJvbSBcIi4vZ2V0LXRyYW5zZm9ybWVkLWhlYWRlcnNcIjtcbmltcG9ydCB7IHNldENvbm5lY3Rpb25UaW1lb3V0IH0gZnJvbSBcIi4vc2V0LWNvbm5lY3Rpb24tdGltZW91dFwiO1xuaW1wb3J0IHsgc2V0U29ja2V0VGltZW91dCB9IGZyb20gXCIuL3NldC1zb2NrZXQtdGltZW91dFwiO1xuaW1wb3J0IHsgd3JpdGVSZXF1ZXN0Qm9keSB9IGZyb20gXCIuL3dyaXRlLXJlcXVlc3QtYm9keVwiO1xuXG4vKipcbiAqIFJlcHJlc2VudHMgdGhlIGh0dHAgb3B0aW9ucyB0aGF0IGNhbiBiZSBwYXNzZWQgdG8gYSBub2RlIGh0dHAgY2xpZW50LlxuICovXG5leHBvcnQgaW50ZXJmYWNlIE5vZGVIdHRwSGFuZGxlck9wdGlvbnMge1xuICAvKipcbiAgICogVGhlIG1heGltdW0gdGltZSBpbiBtaWxsaXNlY29uZHMgdGhhdCB0aGUgY29ubmVjdGlvbiBwaGFzZSBvZiBhIHJlcXVlc3RcbiAgICogbWF5IHRha2UgYmVmb3JlIHRoZSBjb25uZWN0aW9uIGF0dGVtcHQgaXMgYWJhbmRvbmVkLlxuICAgKi9cbiAgY29ubmVjdGlvblRpbWVvdXQ/OiBudW1iZXI7XG5cbiAgLyoqXG4gICAqIFRoZSBtYXhpbXVtIHRpbWUgaW4gbWlsbGlzZWNvbmRzIHRoYXQgYSBzb2NrZXQgbWF5IHJlbWFpbiBpZGxlIGJlZm9yZSBpdFxuICAgKiBpcyBjbG9zZWQuXG4gICAqL1xuICBzb2NrZXRUaW1lb3V0PzogbnVtYmVyO1xuXG4gIGh0dHBBZ2VudD86IGhBZ2VudDtcbiAgaHR0cHNBZ2VudD86IGhzQWdlbnQ7XG59XG5cbmV4cG9ydCBjbGFzcyBOb2RlSHR0cEhhbmRsZXIgaW1wbGVtZW50cyBIdHRwSGFuZGxlciB7XG4gIHByaXZhdGUgcmVhZG9ubHkgaHR0cEFnZW50OiBoQWdlbnQ7XG4gIHByaXZhdGUgcmVhZG9ubHkgaHR0cHNBZ2VudDogaHNBZ2VudDtcbiAgcHJpdmF0ZSByZWFkb25seSBjb25uZWN0aW9uVGltZW91dD86IG51bWJlcjtcbiAgcHJpdmF0ZSByZWFkb25seSBzb2NrZXRUaW1lb3V0PzogbnVtYmVyO1xuICAvLyBOb2RlIGh0dHAgaGFuZGxlciBpcyBoYXJkLWNvZGVkIHRvIGh0dHAvMS4xOiBodHRwczovL2dpdGh1Yi5jb20vbm9kZWpzL25vZGUvYmxvYi9mZjU2NjRiODNiODljNTVlNGFiNWQ1ZjYwMDY4ZmI0NTdmMWY1ODcyL2xpYi9faHR0cF9zZXJ2ZXIuanMjTDI4NlxuICBwdWJsaWMgcmVhZG9ubHkgbWV0YWRhdGEgPSB7IGhhbmRsZXJQcm90b2NvbDogXCJodHRwLzEuMVwiIH07XG5cbiAgY29uc3RydWN0b3IoeyBjb25uZWN0aW9uVGltZW91dCwgc29ja2V0VGltZW91dCwgaHR0cEFnZW50LCBodHRwc0FnZW50IH06IE5vZGVIdHRwSGFuZGxlck9wdGlvbnMgPSB7fSkge1xuICAgIHRoaXMuY29ubmVjdGlvblRpbWVvdXQgPSBjb25uZWN0aW9uVGltZW91dDtcbiAgICB0aGlzLnNvY2tldFRpbWVvdXQgPSBzb2NrZXRUaW1lb3V0O1xuICAgIGNvbnN0IGtlZXBBbGl2ZSA9IHRydWU7XG4gICAgY29uc3QgbWF4U29ja2V0cyA9IDUwO1xuICAgIHRoaXMuaHR0cEFnZW50ID0gaHR0cEFnZW50IHx8IG5ldyBoQWdlbnQoeyBrZWVwQWxpdmUsIG1heFNvY2tldHMgfSk7XG4gICAgdGhpcy5odHRwc0FnZW50ID0gaHR0cHNBZ2VudCB8fCBuZXcgaHNBZ2VudCh7IGtlZXBBbGl2ZSwgbWF4U29ja2V0cyB9KTtcbiAgfVxuXG4gIGRlc3Ryb3koKTogdm9pZCB7XG4gICAgdGhpcy5odHRwQWdlbnQuZGVzdHJveSgpO1xuICAgIHRoaXMuaHR0cHNBZ2VudC5kZXN0cm95KCk7XG4gIH1cblxuICBoYW5kbGUocmVxdWVzdDogSHR0cFJlcXVlc3QsIHsgYWJvcnRTaWduYWwgfTogSHR0cEhhbmRsZXJPcHRpb25zID0ge30pOiBQcm9taXNlPHsgcmVzcG9uc2U6IEh0dHBSZXNwb25zZSB9PiB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgIC8vIGlmIHRoZSByZXF1ZXN0IHdhcyBhbHJlYWR5IGFib3J0ZWQsIHByZXZlbnQgZG9pbmcgZXh0cmEgd29ya1xuICAgICAgaWYgKGFib3J0U2lnbmFsPy5hYm9ydGVkKSB7XG4gICAgICAgIGNvbnN0IGFib3J0RXJyb3IgPSBuZXcgRXJyb3IoXCJSZXF1ZXN0IGFib3J0ZWRcIik7XG4gICAgICAgIGFib3J0RXJyb3IubmFtZSA9IFwiQWJvcnRFcnJvclwiO1xuICAgICAgICByZWplY3QoYWJvcnRFcnJvcik7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgLy8gZGV0ZXJtaW5lIHdoaWNoIGh0dHAocykgY2xpZW50IHRvIHVzZVxuICAgICAgY29uc3QgaXNTU0wgPSByZXF1ZXN0LnByb3RvY29sID09PSBcImh0dHBzOlwiO1xuICAgICAgY29uc3QgcXVlcnlTdHJpbmcgPSBidWlsZFF1ZXJ5U3RyaW5nKHJlcXVlc3QucXVlcnkgfHwge30pO1xuICAgICAgY29uc3Qgbm9kZUh0dHBzT3B0aW9uczogUmVxdWVzdE9wdGlvbnMgPSB7XG4gICAgICAgIGhlYWRlcnM6IHJlcXVlc3QuaGVhZGVycyxcbiAgICAgICAgaG9zdDogcmVxdWVzdC5ob3N0bmFtZSxcbiAgICAgICAgbWV0aG9kOiByZXF1ZXN0Lm1ldGhvZCxcbiAgICAgICAgcGF0aDogcXVlcnlTdHJpbmcgPyBgJHtyZXF1ZXN0LnBhdGh9PyR7cXVlcnlTdHJpbmd9YCA6IHJlcXVlc3QucGF0aCxcbiAgICAgICAgcG9ydDogcmVxdWVzdC5wb3J0LFxuICAgICAgICBhZ2VudDogaXNTU0wgPyB0aGlzLmh0dHBzQWdlbnQgOiB0aGlzLmh0dHBBZ2VudCxcbiAgICAgIH07XG5cbiAgICAgIC8vIGNyZWF0ZSB0aGUgaHR0cCByZXF1ZXN0XG4gICAgICBjb25zdCByZXF1ZXN0RnVuYyA9IGlzU1NMID8gaHNSZXF1ZXN0IDogaFJlcXVlc3Q7XG4gICAgICBjb25zdCByZXEgPSByZXF1ZXN0RnVuYyhub2RlSHR0cHNPcHRpb25zLCAocmVzKSA9PiB7XG4gICAgICAgIGNvbnN0IGh0dHBSZXNwb25zZSA9IG5ldyBIdHRwUmVzcG9uc2Uoe1xuICAgICAgICAgIHN0YXR1c0NvZGU6IHJlcy5zdGF0dXNDb2RlIHx8IC0xLFxuICAgICAgICAgIGhlYWRlcnM6IGdldFRyYW5zZm9ybWVkSGVhZGVycyhyZXMuaGVhZGVycyksXG4gICAgICAgICAgYm9keTogcmVzLFxuICAgICAgICB9KTtcbiAgICAgICAgcmVzb2x2ZSh7IHJlc3BvbnNlOiBodHRwUmVzcG9uc2UgfSk7XG4gICAgICB9KTtcblxuICAgICAgcmVxLm9uKFwiZXJyb3JcIiwgKGVycjogRXJyb3IpID0+IHtcbiAgICAgICAgaWYgKE5PREVKU19USU1FT1VUX0VSUk9SX0NPREVTLmluY2x1ZGVzKChlcnIgYXMgYW55KS5jb2RlKSkge1xuICAgICAgICAgIHJlamVjdChPYmplY3QuYXNzaWduKGVyciwgeyBuYW1lOiBcIlRpbWVvdXRFcnJvclwiIH0pKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZWplY3QoZXJyKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG5cbiAgICAgIC8vIHdpcmUtdXAgYW55IHRpbWVvdXQgbG9naWNcbiAgICAgIHNldENvbm5lY3Rpb25UaW1lb3V0KHJlcSwgcmVqZWN0LCB0aGlzLmNvbm5lY3Rpb25UaW1lb3V0KTtcbiAgICAgIHNldFNvY2tldFRpbWVvdXQocmVxLCByZWplY3QsIHRoaXMuc29ja2V0VGltZW91dCk7XG5cbiAgICAgIC8vIHdpcmUtdXAgYWJvcnQgbG9naWNcbiAgICAgIGlmIChhYm9ydFNpZ25hbCkge1xuICAgICAgICBhYm9ydFNpZ25hbC5vbmFib3J0ID0gKCkgPT4ge1xuICAgICAgICAgIC8vIGVuc3VyZSByZXF1ZXN0IGlzIGRlc3Ryb3llZFxuICAgICAgICAgIHJlcS5hYm9ydCgpO1xuICAgICAgICAgIGNvbnN0IGFib3J0RXJyb3IgPSBuZXcgRXJyb3IoXCJSZXF1ZXN0IGFib3J0ZWRcIik7XG4gICAgICAgICAgYWJvcnRFcnJvci5uYW1lID0gXCJBYm9ydEVycm9yXCI7XG4gICAgICAgICAgcmVqZWN0KGFib3J0RXJyb3IpO1xuICAgICAgICB9O1xuICAgICAgfVxuXG4gICAgICB3cml0ZVJlcXVlc3RCb2R5KHJlcSwgcmVxdWVzdCk7XG4gICAgfSk7XG4gIH1cbn1cbiJdfQ==","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NodeHttp2Handler = void 0;\nconst protocol_http_1 = require(\"@aws-sdk/protocol-http\");\nconst querystring_builder_1 = require(\"@aws-sdk/querystring-builder\");\nconst http2_1 = require(\"http2\");\nconst get_transformed_headers_1 = require(\"./get-transformed-headers\");\nconst write_request_body_1 = require(\"./write-request-body\");\nclass NodeHttp2Handler {\n    constructor({ requestTimeout, sessionTimeout, disableConcurrentStreams } = {}) {\n        this.metadata = { handlerProtocol: \"h2\" };\n        this.requestTimeout = requestTimeout;\n        this.sessionTimeout = sessionTimeout;\n        this.disableConcurrentStreams = disableConcurrentStreams;\n        this.sessionCache = new Map();\n    }\n    destroy() {\n        for (const sessions of this.sessionCache.values()) {\n            sessions.forEach((session) => this.destroySession(session));\n        }\n        this.sessionCache.clear();\n    }\n    handle(request, { abortSignal } = {}) {\n        return new Promise((resolve, rejectOriginal) => {\n            // It's redundant to track fulfilled because promises use the first resolution/rejection\n            // but avoids generating unnecessary stack traces in the \"close\" event handler.\n            let fulfilled = false;\n            // if the request was already aborted, prevent doing extra work\n            if (abortSignal === null || abortSignal === void 0 ? void 0 : abortSignal.aborted) {\n                fulfilled = true;\n                const abortError = new Error(\"Request aborted\");\n                abortError.name = \"AbortError\";\n                rejectOriginal(abortError);\n                return;\n            }\n            const { hostname, method, port, protocol, path, query } = request;\n            const authority = `${protocol}//${hostname}${port ? `:${port}` : \"\"}`;\n            const session = this.getSession(authority, this.disableConcurrentStreams || false);\n            const reject = (err) => {\n                if (this.disableConcurrentStreams) {\n                    this.destroySession(session);\n                }\n                fulfilled = true;\n                rejectOriginal(err);\n            };\n            const queryString = (0, querystring_builder_1.buildQueryString)(query || {});\n            // create the http2 request\n            const req = session.request({\n                ...request.headers,\n                [http2_1.constants.HTTP2_HEADER_PATH]: queryString ? `${path}?${queryString}` : path,\n                [http2_1.constants.HTTP2_HEADER_METHOD]: method,\n            });\n            req.on(\"response\", (headers) => {\n                const httpResponse = new protocol_http_1.HttpResponse({\n                    statusCode: headers[\":status\"] || -1,\n                    headers: (0, get_transformed_headers_1.getTransformedHeaders)(headers),\n                    body: req,\n                });\n                fulfilled = true;\n                resolve({ response: httpResponse });\n                if (this.disableConcurrentStreams) {\n                    // Gracefully closes the Http2Session, allowing any existing streams to complete\n                    // on their own and preventing new Http2Stream instances from being created.\n                    session.close();\n                    this.deleteSessionFromCache(authority, session);\n                }\n            });\n            const requestTimeout = this.requestTimeout;\n            if (requestTimeout) {\n                req.setTimeout(requestTimeout, () => {\n                    req.close();\n                    const timeoutError = new Error(`Stream timed out because of no activity for ${requestTimeout} ms`);\n                    timeoutError.name = \"TimeoutError\";\n                    reject(timeoutError);\n                });\n            }\n            if (abortSignal) {\n                abortSignal.onabort = () => {\n                    req.close();\n                    const abortError = new Error(\"Request aborted\");\n                    abortError.name = \"AbortError\";\n                    reject(abortError);\n                };\n            }\n            // Set up handlers for errors\n            req.on(\"frameError\", (type, code, id) => {\n                reject(new Error(`Frame type id ${type} in stream id ${id} has failed with code ${code}.`));\n            });\n            req.on(\"error\", reject);\n            req.on(\"aborted\", () => {\n                reject(new Error(`HTTP/2 stream is abnormally aborted in mid-communication with result code ${req.rstCode}.`));\n            });\n            // The HTTP/2 error code used when closing the stream can be retrieved using the\n            // http2stream.rstCode property. If the code is any value other than NGHTTP2_NO_ERROR (0),\n            // an 'error' event will have also been emitted.\n            req.on(\"close\", () => {\n                if (this.disableConcurrentStreams) {\n                    session.destroy();\n                }\n                if (!fulfilled) {\n                    reject(new Error(\"Unexpected error: http2 request did not get a response\"));\n                }\n            });\n            (0, write_request_body_1.writeRequestBody)(req, request);\n        });\n    }\n    /**\n     * Returns a session for the given URL.\n     *\n     * @param authority The URL to create a session for.\n     * @param disableConcurrentStreams If true, a new session will be created for each request.\n     * @returns A session for the given URL.\n     */\n    getSession(authority, disableConcurrentStreams) {\n        const sessionCache = this.sessionCache;\n        const existingSessions = sessionCache.get(authority) || [];\n        // If concurrent streams are not disabled, we can use the existing session.\n        if (existingSessions.length > 0 && !disableConcurrentStreams)\n            return existingSessions[0];\n        const newSession = (0, http2_1.connect)(authority);\n        const destroySessionCb = () => {\n            this.destroySession(newSession);\n            this.deleteSessionFromCache(authority, newSession);\n        };\n        newSession.on(\"goaway\", destroySessionCb);\n        newSession.on(\"error\", destroySessionCb);\n        newSession.on(\"frameError\", destroySessionCb);\n        const sessionTimeout = this.sessionTimeout;\n        if (sessionTimeout) {\n            newSession.setTimeout(sessionTimeout, destroySessionCb);\n        }\n        existingSessions.push(newSession);\n        sessionCache.set(authority, existingSessions);\n        return newSession;\n    }\n    /**\n     * Destroys a session.\n     * @param session The session to destroy.\n     */\n    destroySession(session) {\n        if (!session.destroyed) {\n            session.destroy();\n        }\n    }\n    /**\n     * Delete a session from the connection pool.\n     * @param authority The authority of the session to delete.\n     * @param session The session to delete.\n     */\n    deleteSessionFromCache(authority, session) {\n        const existingSessions = this.sessionCache.get(authority) || [];\n        if (!existingSessions.includes(session)) {\n            // If the session is not in the cache, it has already been deleted.\n            return;\n        }\n        this.sessionCache.set(authority, existingSessions.filter((s) => s !== session));\n    }\n}\nexports.NodeHttp2Handler = NodeHttp2Handler;\n//# sourceMappingURL=data:application/json;base64,","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setConnectionTimeout = void 0;\nconst setConnectionTimeout = (request, reject, timeoutInMs = 0) => {\n    if (!timeoutInMs) {\n        return;\n    }\n    request.on(\"socket\", (socket) => {\n        if (socket.connecting) {\n            // Throw a connecting timeout error unless a connection is made within x time.\n            const timeoutId = setTimeout(() => {\n                // destroy the request.\n                request.destroy();\n                reject(Object.assign(new Error(`Socket timed out without establishing a connection within ${timeoutInMs} ms`), {\n                    name: \"TimeoutError\",\n                }));\n            }, timeoutInMs);\n            // if the connection was established, cancel the timeout.\n            socket.on(\"connect\", () => {\n                clearTimeout(timeoutId);\n            });\n        }\n    });\n};\nexports.setConnectionTimeout = setConnectionTimeout;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2V0LWNvbm5lY3Rpb24tdGltZW91dC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9zZXQtY29ubmVjdGlvbi10aW1lb3V0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUdPLE1BQU0sb0JBQW9CLEdBQUcsQ0FBQyxPQUFzQixFQUFFLE1BQTRCLEVBQUUsV0FBVyxHQUFHLENBQUMsRUFBRSxFQUFFO0lBQzVHLElBQUksQ0FBQyxXQUFXLEVBQUU7UUFDaEIsT0FBTztLQUNSO0lBRUQsT0FBTyxDQUFDLEVBQUUsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxNQUFjLEVBQUUsRUFBRTtRQUN0QyxJQUFJLE1BQU0sQ0FBQyxVQUFVLEVBQUU7WUFDckIsOEVBQThFO1lBQzlFLE1BQU0sU0FBUyxHQUFHLFVBQVUsQ0FBQyxHQUFHLEVBQUU7Z0JBQ2hDLHVCQUF1QjtnQkFDdkIsT0FBTyxDQUFDLE9BQU8sRUFBRSxDQUFDO2dCQUNsQixNQUFNLENBQ0osTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLEtBQUssQ0FBQyw2REFBNkQsV0FBVyxLQUFLLENBQUMsRUFBRTtvQkFDdEcsSUFBSSxFQUFFLGNBQWM7aUJBQ3JCLENBQUMsQ0FDSCxDQUFDO1lBQ0osQ0FBQyxFQUFFLFdBQVcsQ0FBQyxDQUFDO1lBRWhCLHlEQUF5RDtZQUN6RCxNQUFNLENBQUMsRUFBRSxDQUFDLFNBQVMsRUFBRSxHQUFHLEVBQUU7Z0JBQ3hCLFlBQVksQ0FBQyxTQUFTLENBQUMsQ0FBQztZQUMxQixDQUFDLENBQUMsQ0FBQztTQUNKO0lBQ0gsQ0FBQyxDQUFDLENBQUM7QUFDTCxDQUFDLENBQUM7QUF4QlcsUUFBQSxvQkFBb0Isd0JBd0IvQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENsaWVudFJlcXVlc3QgfSBmcm9tIFwiaHR0cFwiO1xuaW1wb3J0IHsgU29ja2V0IH0gZnJvbSBcIm5ldFwiO1xuXG5leHBvcnQgY29uc3Qgc2V0Q29ubmVjdGlvblRpbWVvdXQgPSAocmVxdWVzdDogQ2xpZW50UmVxdWVzdCwgcmVqZWN0OiAoZXJyOiBFcnJvcikgPT4gdm9pZCwgdGltZW91dEluTXMgPSAwKSA9PiB7XG4gIGlmICghdGltZW91dEluTXMpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICByZXF1ZXN0Lm9uKFwic29ja2V0XCIsIChzb2NrZXQ6IFNvY2tldCkgPT4ge1xuICAgIGlmIChzb2NrZXQuY29ubmVjdGluZykge1xuICAgICAgLy8gVGhyb3cgYSBjb25uZWN0aW5nIHRpbWVvdXQgZXJyb3IgdW5sZXNzIGEgY29ubmVjdGlvbiBpcyBtYWRlIHdpdGhpbiB4IHRpbWUuXG4gICAgICBjb25zdCB0aW1lb3V0SWQgPSBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgLy8gZGVzdHJveSB0aGUgcmVxdWVzdC5cbiAgICAgICAgcmVxdWVzdC5kZXN0cm95KCk7XG4gICAgICAgIHJlamVjdChcbiAgICAgICAgICBPYmplY3QuYXNzaWduKG5ldyBFcnJvcihgU29ja2V0IHRpbWVkIG91dCB3aXRob3V0IGVzdGFibGlzaGluZyBhIGNvbm5lY3Rpb24gd2l0aGluICR7dGltZW91dEluTXN9IG1zYCksIHtcbiAgICAgICAgICAgIG5hbWU6IFwiVGltZW91dEVycm9yXCIsXG4gICAgICAgICAgfSlcbiAgICAgICAgKTtcbiAgICAgIH0sIHRpbWVvdXRJbk1zKTtcblxuICAgICAgLy8gaWYgdGhlIGNvbm5lY3Rpb24gd2FzIGVzdGFibGlzaGVkLCBjYW5jZWwgdGhlIHRpbWVvdXQuXG4gICAgICBzb2NrZXQub24oXCJjb25uZWN0XCIsICgpID0+IHtcbiAgICAgICAgY2xlYXJUaW1lb3V0KHRpbWVvdXRJZCk7XG4gICAgICB9KTtcbiAgICB9XG4gIH0pO1xufTtcbiJdfQ==","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setSocketTimeout = void 0;\nconst setSocketTimeout = (request, reject, timeoutInMs = 0) => {\n    request.setTimeout(timeoutInMs, () => {\n        // destroy the request\n        request.destroy();\n        reject(Object.assign(new Error(`Connection timed out after ${timeoutInMs} ms`), { name: \"TimeoutError\" }));\n    });\n};\nexports.setSocketTimeout = setSocketTimeout;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2V0LXNvY2tldC10aW1lb3V0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3NldC1zb2NrZXQtdGltZW91dC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFFTyxNQUFNLGdCQUFnQixHQUFHLENBQUMsT0FBc0IsRUFBRSxNQUE0QixFQUFFLFdBQVcsR0FBRyxDQUFDLEVBQUUsRUFBRTtJQUN4RyxPQUFPLENBQUMsVUFBVSxDQUFDLFdBQVcsRUFBRSxHQUFHLEVBQUU7UUFDbkMsc0JBQXNCO1FBQ3RCLE9BQU8sQ0FBQyxPQUFPLEVBQUUsQ0FBQztRQUNsQixNQUFNLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLEtBQUssQ0FBQyw4QkFBOEIsV0FBVyxLQUFLLENBQUMsRUFBRSxFQUFFLElBQUksRUFBRSxjQUFjLEVBQUUsQ0FBQyxDQUFDLENBQUM7SUFDN0csQ0FBQyxDQUFDLENBQUM7QUFDTCxDQUFDLENBQUM7QUFOVyxRQUFBLGdCQUFnQixvQkFNM0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDbGllbnRSZXF1ZXN0IH0gZnJvbSBcImh0dHBcIjtcblxuZXhwb3J0IGNvbnN0IHNldFNvY2tldFRpbWVvdXQgPSAocmVxdWVzdDogQ2xpZW50UmVxdWVzdCwgcmVqZWN0OiAoZXJyOiBFcnJvcikgPT4gdm9pZCwgdGltZW91dEluTXMgPSAwKSA9PiB7XG4gIHJlcXVlc3Quc2V0VGltZW91dCh0aW1lb3V0SW5NcywgKCkgPT4ge1xuICAgIC8vIGRlc3Ryb3kgdGhlIHJlcXVlc3RcbiAgICByZXF1ZXN0LmRlc3Ryb3koKTtcbiAgICByZWplY3QoT2JqZWN0LmFzc2lnbihuZXcgRXJyb3IoYENvbm5lY3Rpb24gdGltZWQgb3V0IGFmdGVyICR7dGltZW91dEluTXN9IG1zYCksIHsgbmFtZTogXCJUaW1lb3V0RXJyb3JcIiB9KSk7XG4gIH0pO1xufTtcbiJdfQ==","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Collector = void 0;\nconst stream_1 = require(\"stream\");\nclass Collector extends stream_1.Writable {\n    constructor() {\n        super(...arguments);\n        this.bufferedBytes = [];\n    }\n    _write(chunk, encoding, callback) {\n        this.bufferedBytes.push(chunk);\n        callback();\n    }\n}\nexports.Collector = Collector;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29sbGVjdG9yLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3N0cmVhbS1jb2xsZWN0b3IvY29sbGVjdG9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLG1DQUFrQztBQUNsQyxNQUFhLFNBQVUsU0FBUSxpQkFBUTtJQUF2Qzs7UUFDa0Isa0JBQWEsR0FBYSxFQUFFLENBQUM7SUFLL0MsQ0FBQztJQUpDLE1BQU0sQ0FBQyxLQUFhLEVBQUUsUUFBZ0IsRUFBRSxRQUErQjtRQUNyRSxJQUFJLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUMvQixRQUFRLEVBQUUsQ0FBQztJQUNiLENBQUM7Q0FDRjtBQU5ELDhCQU1DIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgV3JpdGFibGUgfSBmcm9tIFwic3RyZWFtXCI7XG5leHBvcnQgY2xhc3MgQ29sbGVjdG9yIGV4dGVuZHMgV3JpdGFibGUge1xuICBwdWJsaWMgcmVhZG9ubHkgYnVmZmVyZWRCeXRlczogQnVmZmVyW10gPSBbXTtcbiAgX3dyaXRlKGNodW5rOiBCdWZmZXIsIGVuY29kaW5nOiBzdHJpbmcsIGNhbGxiYWNrOiAoZXJyPzogRXJyb3IpID0+IHZvaWQpIHtcbiAgICB0aGlzLmJ1ZmZlcmVkQnl0ZXMucHVzaChjaHVuayk7XG4gICAgY2FsbGJhY2soKTtcbiAgfVxufVxuIl19","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.streamCollector = void 0;\nconst collector_1 = require(\"./collector\");\nconst streamCollector = (stream) => new Promise((resolve, reject) => {\n    const collector = new collector_1.Collector();\n    stream.pipe(collector);\n    stream.on(\"error\", (err) => {\n        // if the source errors, the destination stream needs to manually end\n        collector.end();\n        reject(err);\n    });\n    collector.on(\"error\", reject);\n    collector.on(\"finish\", function () {\n        const bytes = new Uint8Array(Buffer.concat(this.bufferedBytes));\n        resolve(bytes);\n    });\n});\nexports.streamCollector = streamCollector;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvc3RyZWFtLWNvbGxlY3Rvci9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFHQSwyQ0FBd0M7QUFFakMsTUFBTSxlQUFlLEdBQW9CLENBQUMsTUFBZ0IsRUFBdUIsRUFBRSxDQUN4RixJQUFJLE9BQU8sQ0FBQyxDQUFDLE9BQU8sRUFBRSxNQUFNLEVBQUUsRUFBRTtJQUM5QixNQUFNLFNBQVMsR0FBRyxJQUFJLHFCQUFTLEVBQUUsQ0FBQztJQUNsQyxNQUFNLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO0lBQ3ZCLE1BQU0sQ0FBQyxFQUFFLENBQUMsT0FBTyxFQUFFLENBQUMsR0FBRyxFQUFFLEVBQUU7UUFDekIscUVBQXFFO1FBQ3JFLFNBQVMsQ0FBQyxHQUFHLEVBQUUsQ0FBQztRQUNoQixNQUFNLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDZCxDQUFDLENBQUMsQ0FBQztJQUNILFNBQVMsQ0FBQyxFQUFFLENBQUMsT0FBTyxFQUFFLE1BQU0sQ0FBQyxDQUFDO0lBQzlCLFNBQVMsQ0FBQyxFQUFFLENBQUMsUUFBUSxFQUFFO1FBQ3JCLE1BQU0sS0FBSyxHQUFHLElBQUksVUFBVSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFDLENBQUM7UUFDaEUsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQ2pCLENBQUMsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxDQUFDLENBQUM7QUFkUSxRQUFBLGVBQWUsbUJBY3ZCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU3RyZWFtQ29sbGVjdG9yIH0gZnJvbSBcIkBhd3Mtc2RrL3R5cGVzXCI7XG5pbXBvcnQgeyBSZWFkYWJsZSB9IGZyb20gXCJzdHJlYW1cIjtcblxuaW1wb3J0IHsgQ29sbGVjdG9yIH0gZnJvbSBcIi4vY29sbGVjdG9yXCI7XG5cbmV4cG9ydCBjb25zdCBzdHJlYW1Db2xsZWN0b3I6IFN0cmVhbUNvbGxlY3RvciA9IChzdHJlYW06IFJlYWRhYmxlKTogUHJvbWlzZTxVaW50OEFycmF5PiA9PlxuICBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgY29uc3QgY29sbGVjdG9yID0gbmV3IENvbGxlY3RvcigpO1xuICAgIHN0cmVhbS5waXBlKGNvbGxlY3Rvcik7XG4gICAgc3RyZWFtLm9uKFwiZXJyb3JcIiwgKGVycikgPT4ge1xuICAgICAgLy8gaWYgdGhlIHNvdXJjZSBlcnJvcnMsIHRoZSBkZXN0aW5hdGlvbiBzdHJlYW0gbmVlZHMgdG8gbWFudWFsbHkgZW5kXG4gICAgICBjb2xsZWN0b3IuZW5kKCk7XG4gICAgICByZWplY3QoZXJyKTtcbiAgICB9KTtcbiAgICBjb2xsZWN0b3Iub24oXCJlcnJvclwiLCByZWplY3QpO1xuICAgIGNvbGxlY3Rvci5vbihcImZpbmlzaFwiLCBmdW5jdGlvbiAodGhpczogQ29sbGVjdG9yKSB7XG4gICAgICBjb25zdCBieXRlcyA9IG5ldyBVaW50OEFycmF5KEJ1ZmZlci5jb25jYXQodGhpcy5idWZmZXJlZEJ5dGVzKSk7XG4gICAgICByZXNvbHZlKGJ5dGVzKTtcbiAgICB9KTtcbiAgfSk7XG4iXX0=","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.writeRequestBody = void 0;\nconst stream_1 = require(\"stream\");\nfunction writeRequestBody(httpRequest, request) {\n    const expect = request.headers[\"Expect\"] || request.headers[\"expect\"];\n    if (expect === \"100-continue\") {\n        httpRequest.on(\"continue\", () => {\n            writeBody(httpRequest, request.body);\n        });\n    }\n    else {\n        writeBody(httpRequest, request.body);\n    }\n}\nexports.writeRequestBody = writeRequestBody;\nfunction writeBody(httpRequest, body) {\n    if (body instanceof stream_1.Readable) {\n        // pipe automatically handles end\n        body.pipe(httpRequest);\n    }\n    else if (body) {\n        httpRequest.end(Buffer.from(body));\n    }\n    else {\n        httpRequest.end();\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid3JpdGUtcmVxdWVzdC1ib2R5LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3dyaXRlLXJlcXVlc3QtYm9keS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFHQSxtQ0FBa0M7QUFFbEMsU0FBZ0IsZ0JBQWdCLENBQUMsV0FBOEMsRUFBRSxPQUFvQjtJQUNuRyxNQUFNLE1BQU0sR0FBRyxPQUFPLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxJQUFJLE9BQU8sQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDdEUsSUFBSSxNQUFNLEtBQUssY0FBYyxFQUFFO1FBQzdCLFdBQVcsQ0FBQyxFQUFFLENBQUMsVUFBVSxFQUFFLEdBQUcsRUFBRTtZQUM5QixTQUFTLENBQUMsV0FBVyxFQUFFLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUN2QyxDQUFDLENBQUMsQ0FBQztLQUNKO1NBQU07UUFDTCxTQUFTLENBQUMsV0FBVyxFQUFFLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztLQUN0QztBQUNILENBQUM7QUFURCw0Q0FTQztBQUVELFNBQVMsU0FBUyxDQUNoQixXQUE4QyxFQUM5QyxJQUFxRTtJQUVyRSxJQUFJLElBQUksWUFBWSxpQkFBUSxFQUFFO1FBQzVCLGlDQUFpQztRQUNqQyxJQUFJLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO0tBQ3hCO1NBQU0sSUFBSSxJQUFJLEVBQUU7UUFDZixXQUFXLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQztLQUNwQztTQUFNO1FBQ0wsV0FBVyxDQUFDLEdBQUcsRUFBRSxDQUFDO0tBQ25CO0FBQ0gsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEh0dHBSZXF1ZXN0IH0gZnJvbSBcIkBhd3Mtc2RrL3R5cGVzXCI7XG5pbXBvcnQgeyBDbGllbnRSZXF1ZXN0IH0gZnJvbSBcImh0dHBcIjtcbmltcG9ydCB7IENsaWVudEh0dHAyU3RyZWFtIH0gZnJvbSBcImh0dHAyXCI7XG5pbXBvcnQgeyBSZWFkYWJsZSB9IGZyb20gXCJzdHJlYW1cIjtcblxuZXhwb3J0IGZ1bmN0aW9uIHdyaXRlUmVxdWVzdEJvZHkoaHR0cFJlcXVlc3Q6IENsaWVudFJlcXVlc3QgfCBDbGllbnRIdHRwMlN0cmVhbSwgcmVxdWVzdDogSHR0cFJlcXVlc3QpIHtcbiAgY29uc3QgZXhwZWN0ID0gcmVxdWVzdC5oZWFkZXJzW1wiRXhwZWN0XCJdIHx8IHJlcXVlc3QuaGVhZGVyc1tcImV4cGVjdFwiXTtcbiAgaWYgKGV4cGVjdCA9PT0gXCIxMDAtY29udGludWVcIikge1xuICAgIGh0dHBSZXF1ZXN0Lm9uKFwiY29udGludWVcIiwgKCkgPT4ge1xuICAgICAgd3JpdGVCb2R5KGh0dHBSZXF1ZXN0LCByZXF1ZXN0LmJvZHkpO1xuICAgIH0pO1xuICB9IGVsc2Uge1xuICAgIHdyaXRlQm9keShodHRwUmVxdWVzdCwgcmVxdWVzdC5ib2R5KTtcbiAgfVxufVxuXG5mdW5jdGlvbiB3cml0ZUJvZHkoXG4gIGh0dHBSZXF1ZXN0OiBDbGllbnRSZXF1ZXN0IHwgQ2xpZW50SHR0cDJTdHJlYW0sXG4gIGJvZHk/OiBzdHJpbmcgfCBBcnJheUJ1ZmZlciB8IEFycmF5QnVmZmVyVmlldyB8IFJlYWRhYmxlIHwgVWludDhBcnJheVxuKSB7XG4gIGlmIChib2R5IGluc3RhbmNlb2YgUmVhZGFibGUpIHtcbiAgICAvLyBwaXBlIGF1dG9tYXRpY2FsbHkgaGFuZGxlcyBlbmRcbiAgICBib2R5LnBpcGUoaHR0cFJlcXVlc3QpO1xuICB9IGVsc2UgaWYgKGJvZHkpIHtcbiAgICBodHRwUmVxdWVzdC5lbmQoQnVmZmVyLmZyb20oYm9keSkpO1xuICB9IGVsc2Uge1xuICAgIGh0dHBSZXF1ZXN0LmVuZCgpO1xuICB9XG59XG4iXX0=","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CredentialsProviderError = exports.ProviderError = void 0;\n/**\n * An error representing a failure of an individual credential provider.\n *\n * This error class has special meaning to the {@link chain} method. If a\n * provider in the chain is rejected with an error, the chain will only proceed\n * to the next provider if the value of the `tryNextLink` property on the error\n * is truthy. This allows individual providers to halt the chain and also\n * ensures the chain will stop if an entirely unexpected error is encountered.\n *\n * @deprecated\n */\nclass ProviderError extends Error {\n    constructor(message, tryNextLink = true) {\n        super(message);\n        this.tryNextLink = tryNextLink;\n    }\n    static from(error, tryNextLink = true) {\n        Object.defineProperty(error, \"tryNextLink\", {\n            value: tryNextLink,\n            configurable: false,\n            enumerable: false,\n            writable: false,\n        });\n        return error;\n    }\n}\nexports.ProviderError = ProviderError;\n/**\n * An error representing a failure of an individual credential provider.\n *\n * This error class has special meaning to the {@link chain} method. If a\n * provider in the chain is rejected with an error, the chain will only proceed\n * to the next provider if the value of the `tryNextLink` property on the error\n * is truthy. This allows individual providers to halt the chain and also\n * ensures the chain will stop if an entirely unexpected error is encountered.\n */\nclass CredentialsProviderError extends Error {\n    constructor(message, tryNextLink = true) {\n        super(message);\n        this.tryNextLink = tryNextLink;\n        this.name = \"CredentialsProviderError\";\n    }\n    static from(error, tryNextLink = true) {\n        Object.defineProperty(error, \"tryNextLink\", {\n            value: tryNextLink,\n            configurable: false,\n            enumerable: false,\n            writable: false,\n        });\n        return error;\n    }\n}\nexports.CredentialsProviderError = CredentialsProviderError;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUHJvdmlkZXJFcnJvci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9Qcm92aWRlckVycm9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBOzs7Ozs7Ozs7O0dBVUc7QUFDSCxNQUFhLGFBQWMsU0FBUSxLQUFLO0lBQ3RDLFlBQVksT0FBZSxFQUFrQixjQUF1QixJQUFJO1FBQ3RFLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUQ0QixnQkFBVyxHQUFYLFdBQVcsQ0FBZ0I7SUFFeEUsQ0FBQztJQUNELE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBWSxFQUFFLFdBQVcsR0FBRyxJQUFJO1FBQzFDLE1BQU0sQ0FBQyxjQUFjLENBQUMsS0FBSyxFQUFFLGFBQWEsRUFBRTtZQUMxQyxLQUFLLEVBQUUsV0FBVztZQUNsQixZQUFZLEVBQUUsS0FBSztZQUNuQixVQUFVLEVBQUUsS0FBSztZQUNqQixRQUFRLEVBQUUsS0FBSztTQUNoQixDQUFDLENBQUM7UUFDSCxPQUFPLEtBQXNCLENBQUM7SUFDaEMsQ0FBQztDQUNGO0FBYkQsc0NBYUM7QUFFRDs7Ozs7Ozs7R0FRRztBQUNILE1BQWEsd0JBQXlCLFNBQVEsS0FBSztJQUVqRCxZQUFZLE9BQWUsRUFBa0IsY0FBdUIsSUFBSTtRQUN0RSxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUM7UUFENEIsZ0JBQVcsR0FBWCxXQUFXLENBQWdCO1FBRC9ELFNBQUksR0FBRywwQkFBMEIsQ0FBQztJQUczQyxDQUFDO0lBQ0QsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFZLEVBQUUsV0FBVyxHQUFHLElBQUk7UUFDMUMsTUFBTSxDQUFDLGNBQWMsQ0FBQyxLQUFLLEVBQUUsYUFBYSxFQUFFO1lBQzFDLEtBQUssRUFBRSxXQUFXO1lBQ2xCLFlBQVksRUFBRSxLQUFLO1lBQ25CLFVBQVUsRUFBRSxLQUFLO1lBQ2pCLFFBQVEsRUFBRSxLQUFLO1NBQ2hCLENBQUMsQ0FBQztRQUNILE9BQU8sS0FBaUMsQ0FBQztJQUMzQyxDQUFDO0NBQ0Y7QUFkRCw0REFjQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQW4gZXJyb3IgcmVwcmVzZW50aW5nIGEgZmFpbHVyZSBvZiBhbiBpbmRpdmlkdWFsIGNyZWRlbnRpYWwgcHJvdmlkZXIuXG4gKlxuICogVGhpcyBlcnJvciBjbGFzcyBoYXMgc3BlY2lhbCBtZWFuaW5nIHRvIHRoZSB7QGxpbmsgY2hhaW59IG1ldGhvZC4gSWYgYVxuICogcHJvdmlkZXIgaW4gdGhlIGNoYWluIGlzIHJlamVjdGVkIHdpdGggYW4gZXJyb3IsIHRoZSBjaGFpbiB3aWxsIG9ubHkgcHJvY2VlZFxuICogdG8gdGhlIG5leHQgcHJvdmlkZXIgaWYgdGhlIHZhbHVlIG9mIHRoZSBgdHJ5TmV4dExpbmtgIHByb3BlcnR5IG9uIHRoZSBlcnJvclxuICogaXMgdHJ1dGh5LiBUaGlzIGFsbG93cyBpbmRpdmlkdWFsIHByb3ZpZGVycyB0byBoYWx0IHRoZSBjaGFpbiBhbmQgYWxzb1xuICogZW5zdXJlcyB0aGUgY2hhaW4gd2lsbCBzdG9wIGlmIGFuIGVudGlyZWx5IHVuZXhwZWN0ZWQgZXJyb3IgaXMgZW5jb3VudGVyZWQuXG4gKlxuICogQGRlcHJlY2F0ZWRcbiAqL1xuZXhwb3J0IGNsYXNzIFByb3ZpZGVyRXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gIGNvbnN0cnVjdG9yKG1lc3NhZ2U6IHN0cmluZywgcHVibGljIHJlYWRvbmx5IHRyeU5leHRMaW5rOiBib29sZWFuID0gdHJ1ZSkge1xuICAgIHN1cGVyKG1lc3NhZ2UpO1xuICB9XG4gIHN0YXRpYyBmcm9tKGVycm9yOiBFcnJvciwgdHJ5TmV4dExpbmsgPSB0cnVlKTogUHJvdmlkZXJFcnJvciB7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KGVycm9yLCBcInRyeU5leHRMaW5rXCIsIHtcbiAgICAgIHZhbHVlOiB0cnlOZXh0TGluayxcbiAgICAgIGNvbmZpZ3VyYWJsZTogZmFsc2UsXG4gICAgICBlbnVtZXJhYmxlOiBmYWxzZSxcbiAgICAgIHdyaXRhYmxlOiBmYWxzZSxcbiAgICB9KTtcbiAgICByZXR1cm4gZXJyb3IgYXMgUHJvdmlkZXJFcnJvcjtcbiAgfVxufVxuXG4vKipcbiAqIEFuIGVycm9yIHJlcHJlc2VudGluZyBhIGZhaWx1cmUgb2YgYW4gaW5kaXZpZHVhbCBjcmVkZW50aWFsIHByb3ZpZGVyLlxuICpcbiAqIFRoaXMgZXJyb3IgY2xhc3MgaGFzIHNwZWNpYWwgbWVhbmluZyB0byB0aGUge0BsaW5rIGNoYWlufSBtZXRob2QuIElmIGFcbiAqIHByb3ZpZGVyIGluIHRoZSBjaGFpbiBpcyByZWplY3RlZCB3aXRoIGFuIGVycm9yLCB0aGUgY2hhaW4gd2lsbCBvbmx5IHByb2NlZWRcbiAqIHRvIHRoZSBuZXh0IHByb3ZpZGVyIGlmIHRoZSB2YWx1ZSBvZiB0aGUgYHRyeU5leHRMaW5rYCBwcm9wZXJ0eSBvbiB0aGUgZXJyb3JcbiAqIGlzIHRydXRoeS4gVGhpcyBhbGxvd3MgaW5kaXZpZHVhbCBwcm92aWRlcnMgdG8gaGFsdCB0aGUgY2hhaW4gYW5kIGFsc29cbiAqIGVuc3VyZXMgdGhlIGNoYWluIHdpbGwgc3RvcCBpZiBhbiBlbnRpcmVseSB1bmV4cGVjdGVkIGVycm9yIGlzIGVuY291bnRlcmVkLlxuICovXG5leHBvcnQgY2xhc3MgQ3JlZGVudGlhbHNQcm92aWRlckVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICByZWFkb25seSBuYW1lID0gXCJDcmVkZW50aWFsc1Byb3ZpZGVyRXJyb3JcIjtcbiAgY29uc3RydWN0b3IobWVzc2FnZTogc3RyaW5nLCBwdWJsaWMgcmVhZG9ubHkgdHJ5TmV4dExpbms6IGJvb2xlYW4gPSB0cnVlKSB7XG4gICAgc3VwZXIobWVzc2FnZSk7XG4gIH1cbiAgc3RhdGljIGZyb20oZXJyb3I6IEVycm9yLCB0cnlOZXh0TGluayA9IHRydWUpOiBDcmVkZW50aWFsc1Byb3ZpZGVyRXJyb3Ige1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlcnJvciwgXCJ0cnlOZXh0TGlua1wiLCB7XG4gICAgICB2YWx1ZTogdHJ5TmV4dExpbmssXG4gICAgICBjb25maWd1cmFibGU6IGZhbHNlLFxuICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICB3cml0YWJsZTogZmFsc2UsXG4gICAgfSk7XG4gICAgcmV0dXJuIGVycm9yIGFzIENyZWRlbnRpYWxzUHJvdmlkZXJFcnJvcjtcbiAgfVxufVxuIl19","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.chain = void 0;\nconst ProviderError_1 = require(\"./ProviderError\");\n/**\n * Compose a single credential provider function from multiple credential\n * providers. The first provider in the argument list will always be invoked;\n * subsequent providers in the list will be invoked in the order in which the\n * were received if the preceding provider did not successfully resolve.\n *\n * If no providers were received or no provider resolves successfully, the\n * returned promise will be rejected.\n */\nfunction chain(...providers) {\n    return () => {\n        let promise = Promise.reject(new ProviderError_1.ProviderError(\"No providers in chain\"));\n        for (const provider of providers) {\n            promise = promise.catch((err) => {\n                if (err === null || err === void 0 ? void 0 : err.tryNextLink) {\n                    return provider();\n                }\n                throw err;\n            });\n        }\n        return promise;\n    };\n}\nexports.chain = chain;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hhaW4uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvY2hhaW4udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBRUEsbURBQWdEO0FBRWhEOzs7Ozs7OztHQVFHO0FBQ0gsU0FBZ0IsS0FBSyxDQUFJLEdBQUcsU0FBNkI7SUFDdkQsT0FBTyxHQUFHLEVBQUU7UUFDVixJQUFJLE9BQU8sR0FBZSxPQUFPLENBQUMsTUFBTSxDQUFDLElBQUksNkJBQWEsQ0FBQyx1QkFBdUIsQ0FBQyxDQUFDLENBQUM7UUFDckYsS0FBSyxNQUFNLFFBQVEsSUFBSSxTQUFTLEVBQUU7WUFDaEMsT0FBTyxHQUFHLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQyxHQUFRLEVBQUUsRUFBRTtnQkFDbkMsSUFBSSxHQUFHLGFBQUgsR0FBRyx1QkFBSCxHQUFHLENBQUUsV0FBVyxFQUFFO29CQUNwQixPQUFPLFFBQVEsRUFBRSxDQUFDO2lCQUNuQjtnQkFFRCxNQUFNLEdBQUcsQ0FBQztZQUNaLENBQUMsQ0FBQyxDQUFDO1NBQ0o7UUFFRCxPQUFPLE9BQU8sQ0FBQztJQUNqQixDQUFDLENBQUM7QUFDSixDQUFDO0FBZkQsc0JBZUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQcm92aWRlciB9IGZyb20gXCJAYXdzLXNkay90eXBlc1wiO1xuXG5pbXBvcnQgeyBQcm92aWRlckVycm9yIH0gZnJvbSBcIi4vUHJvdmlkZXJFcnJvclwiO1xuXG4vKipcbiAqIENvbXBvc2UgYSBzaW5nbGUgY3JlZGVudGlhbCBwcm92aWRlciBmdW5jdGlvbiBmcm9tIG11bHRpcGxlIGNyZWRlbnRpYWxcbiAqIHByb3ZpZGVycy4gVGhlIGZpcnN0IHByb3ZpZGVyIGluIHRoZSBhcmd1bWVudCBsaXN0IHdpbGwgYWx3YXlzIGJlIGludm9rZWQ7XG4gKiBzdWJzZXF1ZW50IHByb3ZpZGVycyBpbiB0aGUgbGlzdCB3aWxsIGJlIGludm9rZWQgaW4gdGhlIG9yZGVyIGluIHdoaWNoIHRoZVxuICogd2VyZSByZWNlaXZlZCBpZiB0aGUgcHJlY2VkaW5nIHByb3ZpZGVyIGRpZCBub3Qgc3VjY2Vzc2Z1bGx5IHJlc29sdmUuXG4gKlxuICogSWYgbm8gcHJvdmlkZXJzIHdlcmUgcmVjZWl2ZWQgb3Igbm8gcHJvdmlkZXIgcmVzb2x2ZXMgc3VjY2Vzc2Z1bGx5LCB0aGVcbiAqIHJldHVybmVkIHByb21pc2Ugd2lsbCBiZSByZWplY3RlZC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNoYWluPFQ+KC4uLnByb3ZpZGVyczogQXJyYXk8UHJvdmlkZXI8VD4+KTogUHJvdmlkZXI8VD4ge1xuICByZXR1cm4gKCkgPT4ge1xuICAgIGxldCBwcm9taXNlOiBQcm9taXNlPFQ+ID0gUHJvbWlzZS5yZWplY3QobmV3IFByb3ZpZGVyRXJyb3IoXCJObyBwcm92aWRlcnMgaW4gY2hhaW5cIikpO1xuICAgIGZvciAoY29uc3QgcHJvdmlkZXIgb2YgcHJvdmlkZXJzKSB7XG4gICAgICBwcm9taXNlID0gcHJvbWlzZS5jYXRjaCgoZXJyOiBhbnkpID0+IHtcbiAgICAgICAgaWYgKGVycj8udHJ5TmV4dExpbmspIHtcbiAgICAgICAgICByZXR1cm4gcHJvdmlkZXIoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHRocm93IGVycjtcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIHJldHVybiBwcm9taXNlO1xuICB9O1xufVxuIl19","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromStatic = void 0;\nconst fromStatic = (staticValue) => () => Promise.resolve(staticValue);\nexports.fromStatic = fromStatic;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZnJvbVN0YXRpYy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9mcm9tU3RhdGljLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUVPLE1BQU0sVUFBVSxHQUNyQixDQUFJLFdBQWMsRUFBZSxFQUFFLENBQ25DLEdBQUcsRUFBRSxDQUNILE9BQU8sQ0FBQyxPQUFPLENBQUMsV0FBVyxDQUFDLENBQUM7QUFIcEIsUUFBQSxVQUFVLGNBR1UiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQcm92aWRlciB9IGZyb20gXCJAYXdzLXNkay90eXBlc1wiO1xuXG5leHBvcnQgY29uc3QgZnJvbVN0YXRpYyA9XG4gIDxUPihzdGF0aWNWYWx1ZTogVCk6IFByb3ZpZGVyPFQ+ID0+XG4gICgpID0+XG4gICAgUHJvbWlzZS5yZXNvbHZlKHN0YXRpY1ZhbHVlKTtcbiJdfQ==","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\n(0, tslib_1.__exportStar)(require(\"./chain\"), exports);\n(0, tslib_1.__exportStar)(require(\"./fromStatic\"), exports);\n(0, tslib_1.__exportStar)(require(\"./memoize\"), exports);\n(0, tslib_1.__exportStar)(require(\"./ProviderError\"), exports);\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsdURBQXdCO0FBQ3hCLDREQUE2QjtBQUM3Qix5REFBMEI7QUFDMUIsK0RBQWdDIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIi4vY2hhaW5cIjtcbmV4cG9ydCAqIGZyb20gXCIuL2Zyb21TdGF0aWNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL21lbW9pemVcIjtcbmV4cG9ydCAqIGZyb20gXCIuL1Byb3ZpZGVyRXJyb3JcIjtcbiJdfQ==","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.memoize = void 0;\nconst memoize = (provider, isExpired, requiresRefresh) => {\n    let resolved;\n    let pending;\n    let hasResult;\n    // Wrapper over supplied provider with side effect to handle concurrent invocation.\n    const coalesceProvider = async () => {\n        if (!pending) {\n            pending = provider();\n        }\n        try {\n            resolved = await pending;\n            hasResult = true;\n        }\n        finally {\n            pending = undefined;\n        }\n        return resolved;\n    };\n    if (isExpired === undefined) {\n        // This is a static memoization; no need to incorporate refreshing\n        return async () => {\n            if (!hasResult) {\n                resolved = await coalesceProvider();\n            }\n            return resolved;\n        };\n    }\n    let isConstant = false;\n    return async () => {\n        if (!hasResult) {\n            resolved = await coalesceProvider();\n        }\n        if (isConstant) {\n            return resolved;\n        }\n        if (requiresRefresh && !requiresRefresh(resolved)) {\n            isConstant = true;\n            return resolved;\n        }\n        if (isExpired(resolved)) {\n            await coalesceProvider();\n            return resolved;\n        }\n        return resolved;\n    };\n};\nexports.memoize = memoize;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWVtb2l6ZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9tZW1vaXplLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQTBDTyxNQUFNLE9BQU8sR0FBb0IsQ0FDdEMsUUFBcUIsRUFDckIsU0FBb0MsRUFDcEMsZUFBMEMsRUFDN0IsRUFBRTtJQUNmLElBQUksUUFBVyxDQUFDO0lBQ2hCLElBQUksT0FBK0IsQ0FBQztJQUNwQyxJQUFJLFNBQWtCLENBQUM7SUFDdkIsbUZBQW1GO0lBQ25GLE1BQU0sZ0JBQWdCLEdBQWdCLEtBQUssSUFBSSxFQUFFO1FBQy9DLElBQUksQ0FBQyxPQUFPLEVBQUU7WUFDWixPQUFPLEdBQUcsUUFBUSxFQUFFLENBQUM7U0FDdEI7UUFDRCxJQUFJO1lBQ0YsUUFBUSxHQUFHLE1BQU0sT0FBTyxDQUFDO1lBQ3pCLFNBQVMsR0FBRyxJQUFJLENBQUM7U0FDbEI7Z0JBQVM7WUFDUixPQUFPLEdBQUcsU0FBUyxDQUFDO1NBQ3JCO1FBQ0QsT0FBTyxRQUFRLENBQUM7SUFDbEIsQ0FBQyxDQUFDO0lBRUYsSUFBSSxTQUFTLEtBQUssU0FBUyxFQUFFO1FBQzNCLGtFQUFrRTtRQUNsRSxPQUFPLEtBQUssSUFBSSxFQUFFO1lBQ2hCLElBQUksQ0FBQyxTQUFTLEVBQUU7Z0JBQ2QsUUFBUSxHQUFHLE1BQU0sZ0JBQWdCLEVBQUUsQ0FBQzthQUNyQztZQUNELE9BQU8sUUFBUSxDQUFDO1FBQ2xCLENBQUMsQ0FBQztLQUNIO0lBRUQsSUFBSSxVQUFVLEdBQUcsS0FBSyxDQUFDO0lBRXZCLE9BQU8sS0FBSyxJQUFJLEVBQUU7UUFDaEIsSUFBSSxDQUFDLFNBQVMsRUFBRTtZQUNkLFFBQVEsR0FBRyxNQUFNLGdCQUFnQixFQUFFLENBQUM7U0FDckM7UUFDRCxJQUFJLFVBQVUsRUFBRTtZQUNkLE9BQU8sUUFBUSxDQUFDO1NBQ2pCO1FBRUQsSUFBSSxlQUFlLElBQUksQ0FBQyxlQUFlLENBQUMsUUFBUSxDQUFDLEVBQUU7WUFDakQsVUFBVSxHQUFHLElBQUksQ0FBQztZQUNsQixPQUFPLFFBQVEsQ0FBQztTQUNqQjtRQUNELElBQUksU0FBUyxDQUFDLFFBQVEsQ0FBQyxFQUFFO1lBQ3ZCLE1BQU0sZ0JBQWdCLEVBQUUsQ0FBQztZQUN6QixPQUFPLFFBQVEsQ0FBQztTQUNqQjtRQUNELE9BQU8sUUFBUSxDQUFDO0lBQ2xCLENBQUMsQ0FBQztBQUNKLENBQUMsQ0FBQztBQXBEVyxRQUFBLE9BQU8sV0FvRGxCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUHJvdmlkZXIgfSBmcm9tIFwiQGF3cy1zZGsvdHlwZXNcIjtcblxuaW50ZXJmYWNlIE1lbW9pemVPdmVybG9hZCB7XG4gIC8qKlxuICAgKlxuICAgKiBEZWNvcmF0ZXMgYSBwcm92aWRlciBmdW5jdGlvbiB3aXRoIGVpdGhlciBzdGF0aWMgbWVtb2l6YXRpb24uXG4gICAqXG4gICAqIFRvIGNyZWF0ZSBhIHN0YXRpY2FsbHkgbWVtb2l6ZWQgcHJvdmlkZXIsIHN1cHBseSBhIHByb3ZpZGVyIGFzIHRoZSBvbmx5XG4gICAqIGFyZ3VtZW50IHRvIHRoaXMgZnVuY3Rpb24uIFRoZSBwcm92aWRlciB3aWxsIGJlIGludm9rZWQgb25jZSwgYW5kIGFsbFxuICAgKiBpbnZvY2F0aW9ucyBvZiB0aGUgcHJvdmlkZXIgcmV0dXJuZWQgYnkgYG1lbW9pemVgIHdpbGwgcmV0dXJuIHRoZSBzYW1lXG4gICAqIHByb21pc2Ugb2JqZWN0LlxuICAgKlxuICAgKiBAcGFyYW0gcHJvdmlkZXIgVGhlIHByb3ZpZGVyIHdob3NlIHJlc3VsdCBzaG91bGQgYmUgY2FjaGVkIGluZGVmaW5pdGVseS5cbiAgICovXG4gIDxUPihwcm92aWRlcjogUHJvdmlkZXI8VD4pOiBQcm92aWRlcjxUPjtcblxuICAvKipcbiAgICogRGVjb3JhdGVzIGEgcHJvdmlkZXIgZnVuY3Rpb24gd2l0aCByZWZyZXNoaW5nIG1lbW9pemF0aW9uLlxuICAgKlxuICAgKiBAcGFyYW0gcHJvdmlkZXIgICAgICAgICAgVGhlIHByb3ZpZGVyIHdob3NlIHJlc3VsdCBzaG91bGQgYmUgY2FjaGVkLlxuICAgKiBAcGFyYW0gaXNFeHBpcmVkICAgICAgICAgQSBmdW5jdGlvbiB0aGF0IHdpbGwgZXZhbHVhdGUgdGhlIHJlc29sdmVkIHZhbHVlIGFuZFxuICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgZGV0ZXJtaW5lIGlmIGl0IGlzIGV4cGlyZWQuIEZvciBleGFtcGxlLCB3aGVuXG4gICAqICAgICAgICAgICAgICAgICAgICAgICAgICBtZW1vaXppbmcgQVdTIGNyZWRlbnRpYWwgcHJvdmlkZXJzLCB0aGlzIGZ1bmN0aW9uXG4gICAqICAgICAgICAgICAgICAgICAgICAgICAgICBzaG91bGQgcmV0dXJuIGB0cnVlYCB3aGVuIHRoZSBjcmVkZW50aWFsJ3NcbiAgICogICAgICAgICAgICAgICAgICAgICAgICAgIGV4cGlyYXRpb24gaXMgaW4gdGhlIHBhc3QgKG9yIHZlcnkgbmVhciBmdXR1cmUpIGFuZFxuICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgYGZhbHNlYCBvdGhlcndpc2UuXG4gICAqIEBwYXJhbSByZXF1aXJlc1JlZnJlc2ggICBBIGZ1bmN0aW9uIHRoYXQgd2lsbCBldmFsdWF0ZSB0aGUgcmVzb2x2ZWQgdmFsdWUgYW5kXG4gICAqICAgICAgICAgICAgICAgICAgICAgICAgICBkZXRlcm1pbmUgaWYgaXQgcmVwcmVzZW50cyBzdGF0aWMgdmFsdWUgb3Igb25lIHRoYXRcbiAgICogICAgICAgICAgICAgICAgICAgICAgICAgIHdpbGwgZXZlbnR1YWxseSBuZWVkIHRvIGJlIHJlZnJlc2hlZC4gRm9yIGV4YW1wbGUsXG4gICAqICAgICAgICAgICAgICAgICAgICAgICAgICBBV1MgY3JlZGVudGlhbHMgdGhhdCBoYXZlIG5vIGRlZmluZWQgZXhwaXJhdGlvbiB3aWxsXG4gICAqICAgICAgICAgICAgICAgICAgICAgICAgICBuZXZlciBuZWVkIHRvIGJlIHJlZnJlc2hlZCwgc28gdGhpcyBmdW5jdGlvbiB3b3VsZFxuICAgKiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGB0cnVlYCBpZiB0aGUgY3JlZGVudGlhbHMgcmVzb2x2ZWQgYnkgdGhlXG4gICAqICAgICAgICAgICAgICAgICAgICAgICAgICB1bmRlcmx5aW5nIHByb3ZpZGVyIGhhZCBhbiBleHBpcmF0aW9uIGFuZCBgZmFsc2VgXG4gICAqICAgICAgICAgICAgICAgICAgICAgICAgICBvdGhlcndpc2UuXG4gICAqL1xuICA8VD4oXG4gICAgcHJvdmlkZXI6IFByb3ZpZGVyPFQ+LFxuICAgIGlzRXhwaXJlZDogKHJlc29sdmVkOiBUKSA9PiBib29sZWFuLFxuICAgIHJlcXVpcmVzUmVmcmVzaD86IChyZXNvbHZlZDogVCkgPT4gYm9vbGVhblxuICApOiBQcm92aWRlcjxUPjtcbn1cblxuZXhwb3J0IGNvbnN0IG1lbW9pemU6IE1lbW9pemVPdmVybG9hZCA9IDxUPihcbiAgcHJvdmlkZXI6IFByb3ZpZGVyPFQ+LFxuICBpc0V4cGlyZWQ/OiAocmVzb2x2ZWQ6IFQpID0+IGJvb2xlYW4sXG4gIHJlcXVpcmVzUmVmcmVzaD86IChyZXNvbHZlZDogVCkgPT4gYm9vbGVhblxuKTogUHJvdmlkZXI8VD4gPT4ge1xuICBsZXQgcmVzb2x2ZWQ6IFQ7XG4gIGxldCBwZW5kaW5nOiBQcm9taXNlPFQ+IHwgdW5kZWZpbmVkO1xuICBsZXQgaGFzUmVzdWx0OiBib29sZWFuO1xuICAvLyBXcmFwcGVyIG92ZXIgc3VwcGxpZWQgcHJvdmlkZXIgd2l0aCBzaWRlIGVmZmVjdCB0byBoYW5kbGUgY29uY3VycmVudCBpbnZvY2F0aW9uLlxuICBjb25zdCBjb2FsZXNjZVByb3ZpZGVyOiBQcm92aWRlcjxUPiA9IGFzeW5jICgpID0+IHtcbiAgICBpZiAoIXBlbmRpbmcpIHtcbiAgICAgIHBlbmRpbmcgPSBwcm92aWRlcigpO1xuICAgIH1cbiAgICB0cnkge1xuICAgICAgcmVzb2x2ZWQgPSBhd2FpdCBwZW5kaW5nO1xuICAgICAgaGFzUmVzdWx0ID0gdHJ1ZTtcbiAgICB9IGZpbmFsbHkge1xuICAgICAgcGVuZGluZyA9IHVuZGVmaW5lZDtcbiAgICB9XG4gICAgcmV0dXJuIHJlc29sdmVkO1xuICB9O1xuXG4gIGlmIChpc0V4cGlyZWQgPT09IHVuZGVmaW5lZCkge1xuICAgIC8vIFRoaXMgaXMgYSBzdGF0aWMgbWVtb2l6YXRpb247IG5vIG5lZWQgdG8gaW5jb3Jwb3JhdGUgcmVmcmVzaGluZ1xuICAgIHJldHVybiBhc3luYyAoKSA9PiB7XG4gICAgICBpZiAoIWhhc1Jlc3VsdCkge1xuICAgICAgICByZXNvbHZlZCA9IGF3YWl0IGNvYWxlc2NlUHJvdmlkZXIoKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiByZXNvbHZlZDtcbiAgICB9O1xuICB9XG5cbiAgbGV0IGlzQ29uc3RhbnQgPSBmYWxzZTtcblxuICByZXR1cm4gYXN5bmMgKCkgPT4ge1xuICAgIGlmICghaGFzUmVzdWx0KSB7XG4gICAgICByZXNvbHZlZCA9IGF3YWl0IGNvYWxlc2NlUHJvdmlkZXIoKTtcbiAgICB9XG4gICAgaWYgKGlzQ29uc3RhbnQpIHtcbiAgICAgIHJldHVybiByZXNvbHZlZDtcbiAgICB9XG5cbiAgICBpZiAocmVxdWlyZXNSZWZyZXNoICYmICFyZXF1aXJlc1JlZnJlc2gocmVzb2x2ZWQpKSB7XG4gICAgICBpc0NvbnN0YW50ID0gdHJ1ZTtcbiAgICAgIHJldHVybiByZXNvbHZlZDtcbiAgICB9XG4gICAgaWYgKGlzRXhwaXJlZChyZXNvbHZlZCkpIHtcbiAgICAgIGF3YWl0IGNvYWxlc2NlUHJvdmlkZXIoKTtcbiAgICAgIHJldHVybiByZXNvbHZlZDtcbiAgICB9XG4gICAgcmV0dXJuIHJlc29sdmVkO1xuICB9O1xufTtcbiJdfQ==","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaHR0cEhhbmRsZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaHR0cEhhbmRsZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEh0dHBIYW5kbGVyT3B0aW9ucywgUmVxdWVzdEhhbmRsZXIgfSBmcm9tIFwiQGF3cy1zZGsvdHlwZXNcIjtcblxuaW1wb3J0IHsgSHR0cFJlcXVlc3QgfSBmcm9tIFwiLi9odHRwUmVxdWVzdFwiO1xuaW1wb3J0IHsgSHR0cFJlc3BvbnNlIH0gZnJvbSBcIi4vaHR0cFJlc3BvbnNlXCI7XG5cbmV4cG9ydCB0eXBlIEh0dHBIYW5kbGVyID0gUmVxdWVzdEhhbmRsZXI8SHR0cFJlcXVlc3QsIEh0dHBSZXNwb25zZSwgSHR0cEhhbmRsZXJPcHRpb25zPjtcbiJdfQ==","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HttpRequest = void 0;\nclass HttpRequest {\n    constructor(options) {\n        this.method = options.method || \"GET\";\n        this.hostname = options.hostname || \"localhost\";\n        this.port = options.port;\n        this.query = options.query || {};\n        this.headers = options.headers || {};\n        this.body = options.body;\n        this.protocol = options.protocol\n            ? options.protocol.substr(-1) !== \":\"\n                ? `${options.protocol}:`\n                : options.protocol\n            : \"https:\";\n        this.path = options.path ? (options.path.charAt(0) !== \"/\" ? `/${options.path}` : options.path) : \"/\";\n    }\n    static isInstance(request) {\n        //determine if request is a valid httpRequest\n        if (!request)\n            return false;\n        const req = request;\n        return (\"method\" in req &&\n            \"protocol\" in req &&\n            \"hostname\" in req &&\n            \"path\" in req &&\n            typeof req[\"query\"] === \"object\" &&\n            typeof req[\"headers\"] === \"object\");\n    }\n    clone() {\n        const cloned = new HttpRequest({\n            ...this,\n            headers: { ...this.headers },\n        });\n        if (cloned.query)\n            cloned.query = cloneQuery(cloned.query);\n        return cloned;\n    }\n}\nexports.HttpRequest = HttpRequest;\nfunction cloneQuery(query) {\n    return Object.keys(query).reduce((carry, paramName) => {\n        const param = query[paramName];\n        return {\n            ...carry,\n            [paramName]: Array.isArray(param) ? [...param] : param,\n        };\n    }, {});\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaHR0cFJlcXVlc3QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaHR0cFJlcXVlc3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBTUEsTUFBYSxXQUFXO0lBVXRCLFlBQVksT0FBMkI7UUFDckMsSUFBSSxDQUFDLE1BQU0sR0FBRyxPQUFPLENBQUMsTUFBTSxJQUFJLEtBQUssQ0FBQztRQUN0QyxJQUFJLENBQUMsUUFBUSxHQUFHLE9BQU8sQ0FBQyxRQUFRLElBQUksV0FBVyxDQUFDO1FBQ2hELElBQUksQ0FBQyxJQUFJLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQztRQUN6QixJQUFJLENBQUMsS0FBSyxHQUFHLE9BQU8sQ0FBQyxLQUFLLElBQUksRUFBRSxDQUFDO1FBQ2pDLElBQUksQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFDLE9BQU8sSUFBSSxFQUFFLENBQUM7UUFDckMsSUFBSSxDQUFDLElBQUksR0FBRyxPQUFPLENBQUMsSUFBSSxDQUFDO1FBQ3pCLElBQUksQ0FBQyxRQUFRLEdBQUcsT0FBTyxDQUFDLFFBQVE7WUFDOUIsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssR0FBRztnQkFDbkMsQ0FBQyxDQUFDLEdBQUcsT0FBTyxDQUFDLFFBQVEsR0FBRztnQkFDeEIsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxRQUFRO1lBQ3BCLENBQUMsQ0FBQyxRQUFRLENBQUM7UUFDYixJQUFJLENBQUMsSUFBSSxHQUFHLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLEtBQUssR0FBRyxDQUFDLENBQUMsQ0FBQyxJQUFJLE9BQU8sQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUM7SUFDeEcsQ0FBQztJQUVELE1BQU0sQ0FBQyxVQUFVLENBQUMsT0FBZ0I7UUFDaEMsNkNBQTZDO1FBQzdDLElBQUksQ0FBQyxPQUFPO1lBQUUsT0FBTyxLQUFLLENBQUM7UUFDM0IsTUFBTSxHQUFHLEdBQVEsT0FBTyxDQUFDO1FBQ3pCLE9BQU8sQ0FDTCxRQUFRLElBQUksR0FBRztZQUNmLFVBQVUsSUFBSSxHQUFHO1lBQ2pCLFVBQVUsSUFBSSxHQUFHO1lBQ2pCLE1BQU0sSUFBSSxHQUFHO1lBQ2IsT0FBTyxHQUFHLENBQUMsT0FBTyxDQUFDLEtBQUssUUFBUTtZQUNoQyxPQUFPLEdBQUcsQ0FBQyxTQUFTLENBQUMsS0FBSyxRQUFRLENBQ25DLENBQUM7SUFDSixDQUFDO0lBRUQsS0FBSztRQUNILE1BQU0sTUFBTSxHQUFHLElBQUksV0FBVyxDQUFDO1lBQzdCLEdBQUcsSUFBSTtZQUNQLE9BQU8sRUFBRSxFQUFFLEdBQUcsSUFBSSxDQUFDLE9BQU8sRUFBRTtTQUM3QixDQUFDLENBQUM7UUFDSCxJQUFJLE1BQU0sQ0FBQyxLQUFLO1lBQUUsTUFBTSxDQUFDLEtBQUssR0FBRyxVQUFVLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQzFELE9BQU8sTUFBTSxDQUFDO0lBQ2hCLENBQUM7Q0FDRjtBQS9DRCxrQ0ErQ0M7QUFFRCxTQUFTLFVBQVUsQ0FBQyxLQUF3QjtJQUMxQyxPQUFPLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsS0FBd0IsRUFBRSxTQUFpQixFQUFFLEVBQUU7UUFDL0UsTUFBTSxLQUFLLEdBQUcsS0FBSyxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQy9CLE9BQU87WUFDTCxHQUFHLEtBQUs7WUFDUixDQUFDLFNBQVMsQ0FBQyxFQUFFLEtBQUssQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSztTQUN2RCxDQUFDO0lBQ0osQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO0FBQ1QsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEVuZHBvaW50LCBIZWFkZXJCYWcsIEh0dHBNZXNzYWdlLCBIdHRwUmVxdWVzdCBhcyBJSHR0cFJlcXVlc3QsIFF1ZXJ5UGFyYW1ldGVyQmFnIH0gZnJvbSBcIkBhd3Mtc2RrL3R5cGVzXCI7XG5cbnR5cGUgSHR0cFJlcXVlc3RPcHRpb25zID0gUGFydGlhbDxIdHRwTWVzc2FnZT4gJiBQYXJ0aWFsPEVuZHBvaW50PiAmIHsgbWV0aG9kPzogc3RyaW5nIH07XG5cbmV4cG9ydCBpbnRlcmZhY2UgSHR0cFJlcXVlc3QgZXh0ZW5kcyBJSHR0cFJlcXVlc3Qge31cblxuZXhwb3J0IGNsYXNzIEh0dHBSZXF1ZXN0IGltcGxlbWVudHMgSHR0cE1lc3NhZ2UsIEVuZHBvaW50IHtcbiAgcHVibGljIG1ldGhvZDogc3RyaW5nO1xuICBwdWJsaWMgcHJvdG9jb2w6IHN0cmluZztcbiAgcHVibGljIGhvc3RuYW1lOiBzdHJpbmc7XG4gIHB1YmxpYyBwb3J0PzogbnVtYmVyO1xuICBwdWJsaWMgcGF0aDogc3RyaW5nO1xuICBwdWJsaWMgcXVlcnk6IFF1ZXJ5UGFyYW1ldGVyQmFnO1xuICBwdWJsaWMgaGVhZGVyczogSGVhZGVyQmFnO1xuICBwdWJsaWMgYm9keT86IGFueTtcblxuICBjb25zdHJ1Y3RvcihvcHRpb25zOiBIdHRwUmVxdWVzdE9wdGlvbnMpIHtcbiAgICB0aGlzLm1ldGhvZCA9IG9wdGlvbnMubWV0aG9kIHx8IFwiR0VUXCI7XG4gICAgdGhpcy5ob3N0bmFtZSA9IG9wdGlvbnMuaG9zdG5hbWUgfHwgXCJsb2NhbGhvc3RcIjtcbiAgICB0aGlzLnBvcnQgPSBvcHRpb25zLnBvcnQ7XG4gICAgdGhpcy5xdWVyeSA9IG9wdGlvbnMucXVlcnkgfHwge307XG4gICAgdGhpcy5oZWFkZXJzID0gb3B0aW9ucy5oZWFkZXJzIHx8IHt9O1xuICAgIHRoaXMuYm9keSA9IG9wdGlvbnMuYm9keTtcbiAgICB0aGlzLnByb3RvY29sID0gb3B0aW9ucy5wcm90b2NvbFxuICAgICAgPyBvcHRpb25zLnByb3RvY29sLnN1YnN0cigtMSkgIT09IFwiOlwiXG4gICAgICAgID8gYCR7b3B0aW9ucy5wcm90b2NvbH06YFxuICAgICAgICA6IG9wdGlvbnMucHJvdG9jb2xcbiAgICAgIDogXCJodHRwczpcIjtcbiAgICB0aGlzLnBhdGggPSBvcHRpb25zLnBhdGggPyAob3B0aW9ucy5wYXRoLmNoYXJBdCgwKSAhPT0gXCIvXCIgPyBgLyR7b3B0aW9ucy5wYXRofWAgOiBvcHRpb25zLnBhdGgpIDogXCIvXCI7XG4gIH1cblxuICBzdGF0aWMgaXNJbnN0YW5jZShyZXF1ZXN0OiB1bmtub3duKTogcmVxdWVzdCBpcyBIdHRwUmVxdWVzdCB7XG4gICAgLy9kZXRlcm1pbmUgaWYgcmVxdWVzdCBpcyBhIHZhbGlkIGh0dHBSZXF1ZXN0XG4gICAgaWYgKCFyZXF1ZXN0KSByZXR1cm4gZmFsc2U7XG4gICAgY29uc3QgcmVxOiBhbnkgPSByZXF1ZXN0O1xuICAgIHJldHVybiAoXG4gICAgICBcIm1ldGhvZFwiIGluIHJlcSAmJlxuICAgICAgXCJwcm90b2NvbFwiIGluIHJlcSAmJlxuICAgICAgXCJob3N0bmFtZVwiIGluIHJlcSAmJlxuICAgICAgXCJwYXRoXCIgaW4gcmVxICYmXG4gICAgICB0eXBlb2YgcmVxW1wicXVlcnlcIl0gPT09IFwib2JqZWN0XCIgJiZcbiAgICAgIHR5cGVvZiByZXFbXCJoZWFkZXJzXCJdID09PSBcIm9iamVjdFwiXG4gICAgKTtcbiAgfVxuXG4gIGNsb25lKCk6IEh0dHBSZXF1ZXN0IHtcbiAgICBjb25zdCBjbG9uZWQgPSBuZXcgSHR0cFJlcXVlc3Qoe1xuICAgICAgLi4udGhpcyxcbiAgICAgIGhlYWRlcnM6IHsgLi4udGhpcy5oZWFkZXJzIH0sXG4gICAgfSk7XG4gICAgaWYgKGNsb25lZC5xdWVyeSkgY2xvbmVkLnF1ZXJ5ID0gY2xvbmVRdWVyeShjbG9uZWQucXVlcnkpO1xuICAgIHJldHVybiBjbG9uZWQ7XG4gIH1cbn1cblxuZnVuY3Rpb24gY2xvbmVRdWVyeShxdWVyeTogUXVlcnlQYXJhbWV0ZXJCYWcpOiBRdWVyeVBhcmFtZXRlckJhZyB7XG4gIHJldHVybiBPYmplY3Qua2V5cyhxdWVyeSkucmVkdWNlKChjYXJyeTogUXVlcnlQYXJhbWV0ZXJCYWcsIHBhcmFtTmFtZTogc3RyaW5nKSA9PiB7XG4gICAgY29uc3QgcGFyYW0gPSBxdWVyeVtwYXJhbU5hbWVdO1xuICAgIHJldHVybiB7XG4gICAgICAuLi5jYXJyeSxcbiAgICAgIFtwYXJhbU5hbWVdOiBBcnJheS5pc0FycmF5KHBhcmFtKSA/IFsuLi5wYXJhbV0gOiBwYXJhbSxcbiAgICB9O1xuICB9LCB7fSk7XG59XG4iXX0=","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HttpResponse = void 0;\nclass HttpResponse {\n    constructor(options) {\n        this.statusCode = options.statusCode;\n        this.headers = options.headers || {};\n        this.body = options.body;\n    }\n    static isInstance(response) {\n        //determine if response is a valid HttpResponse\n        if (!response)\n            return false;\n        const resp = response;\n        return typeof resp.statusCode === \"number\" && typeof resp.headers === \"object\";\n    }\n}\nexports.HttpResponse = HttpResponse;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaHR0cFJlc3BvbnNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2h0dHBSZXNwb25zZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFRQSxNQUFhLFlBQVk7SUFLdkIsWUFBWSxPQUE0QjtRQUN0QyxJQUFJLENBQUMsVUFBVSxHQUFHLE9BQU8sQ0FBQyxVQUFVLENBQUM7UUFDckMsSUFBSSxDQUFDLE9BQU8sR0FBRyxPQUFPLENBQUMsT0FBTyxJQUFJLEVBQUUsQ0FBQztRQUNyQyxJQUFJLENBQUMsSUFBSSxHQUFHLE9BQU8sQ0FBQyxJQUFJLENBQUM7SUFDM0IsQ0FBQztJQUVELE1BQU0sQ0FBQyxVQUFVLENBQUMsUUFBaUI7UUFDakMsK0NBQStDO1FBQy9DLElBQUksQ0FBQyxRQUFRO1lBQUUsT0FBTyxLQUFLLENBQUM7UUFDNUIsTUFBTSxJQUFJLEdBQUcsUUFBZSxDQUFDO1FBQzdCLE9BQU8sT0FBTyxJQUFJLENBQUMsVUFBVSxLQUFLLFFBQVEsSUFBSSxPQUFPLElBQUksQ0FBQyxPQUFPLEtBQUssUUFBUSxDQUFDO0lBQ2pGLENBQUM7Q0FDRjtBQWpCRCxvQ0FpQkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBIZWFkZXJCYWcsIEh0dHBNZXNzYWdlLCBIdHRwUmVzcG9uc2UgYXMgSUh0dHBSZXNwb25zZSB9IGZyb20gXCJAYXdzLXNkay90eXBlc1wiO1xuXG50eXBlIEh0dHBSZXNwb25zZU9wdGlvbnMgPSBQYXJ0aWFsPEh0dHBNZXNzYWdlPiAmIHtcbiAgc3RhdHVzQ29kZTogbnVtYmVyO1xufTtcblxuZXhwb3J0IGludGVyZmFjZSBIdHRwUmVzcG9uc2UgZXh0ZW5kcyBJSHR0cFJlc3BvbnNlIHt9XG5cbmV4cG9ydCBjbGFzcyBIdHRwUmVzcG9uc2Uge1xuICBwdWJsaWMgc3RhdHVzQ29kZTogbnVtYmVyO1xuICBwdWJsaWMgaGVhZGVyczogSGVhZGVyQmFnO1xuICBwdWJsaWMgYm9keT86IGFueTtcblxuICBjb25zdHJ1Y3RvcihvcHRpb25zOiBIdHRwUmVzcG9uc2VPcHRpb25zKSB7XG4gICAgdGhpcy5zdGF0dXNDb2RlID0gb3B0aW9ucy5zdGF0dXNDb2RlO1xuICAgIHRoaXMuaGVhZGVycyA9IG9wdGlvbnMuaGVhZGVycyB8fCB7fTtcbiAgICB0aGlzLmJvZHkgPSBvcHRpb25zLmJvZHk7XG4gIH1cblxuICBzdGF0aWMgaXNJbnN0YW5jZShyZXNwb25zZTogdW5rbm93bik6IHJlc3BvbnNlIGlzIEh0dHBSZXNwb25zZSB7XG4gICAgLy9kZXRlcm1pbmUgaWYgcmVzcG9uc2UgaXMgYSB2YWxpZCBIdHRwUmVzcG9uc2VcbiAgICBpZiAoIXJlc3BvbnNlKSByZXR1cm4gZmFsc2U7XG4gICAgY29uc3QgcmVzcCA9IHJlc3BvbnNlIGFzIGFueTtcbiAgICByZXR1cm4gdHlwZW9mIHJlc3Auc3RhdHVzQ29kZSA9PT0gXCJudW1iZXJcIiAmJiB0eXBlb2YgcmVzcC5oZWFkZXJzID09PSBcIm9iamVjdFwiO1xuICB9XG59XG4iXX0=","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\n(0, tslib_1.__exportStar)(require(\"./httpResponse\"), exports);\n(0, tslib_1.__exportStar)(require(\"./httpRequest\"), exports);\n(0, tslib_1.__exportStar)(require(\"./httpHandler\"), exports);\n(0, tslib_1.__exportStar)(require(\"./isValidHostname\"), exports);\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsOERBQStCO0FBQy9CLDZEQUE4QjtBQUM5Qiw2REFBOEI7QUFDOUIsaUVBQWtDIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIi4vaHR0cFJlc3BvbnNlXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9odHRwUmVxdWVzdFwiO1xuZXhwb3J0ICogZnJvbSBcIi4vaHR0cEhhbmRsZXJcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2lzVmFsaWRIb3N0bmFtZVwiO1xuIl19","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isValidHostname = void 0;\nfunction isValidHostname(hostname) {\n    const hostPattern = /^[a-z0-9][a-z0-9\\.\\-]*[a-z0-9]$/;\n    return hostPattern.test(hostname);\n}\nexports.isValidHostname = isValidHostname;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXNWYWxpZEhvc3RuYW1lLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2lzVmFsaWRIb3N0bmFtZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSxTQUFnQixlQUFlLENBQUMsUUFBZ0I7SUFDOUMsTUFBTSxXQUFXLEdBQUcsaUNBQWlDLENBQUM7SUFDdEQsT0FBTyxXQUFXLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0FBQ3BDLENBQUM7QUFIRCwwQ0FHQyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBmdW5jdGlvbiBpc1ZhbGlkSG9zdG5hbWUoaG9zdG5hbWU6IHN0cmluZyk6IGJvb2xlYW4ge1xuICBjb25zdCBob3N0UGF0dGVybiA9IC9eW2EtejAtOV1bYS16MC05XFwuXFwtXSpbYS16MC05XSQvO1xuICByZXR1cm4gaG9zdFBhdHRlcm4udGVzdChob3N0bmFtZSk7XG59XG4iXX0=","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.buildQueryString = void 0;\nconst util_uri_escape_1 = require(\"@aws-sdk/util-uri-escape\");\nfunction buildQueryString(query) {\n    const parts = [];\n    for (let key of Object.keys(query).sort()) {\n        const value = query[key];\n        key = (0, util_uri_escape_1.escapeUri)(key);\n        if (Array.isArray(value)) {\n            for (let i = 0, iLen = value.length; i < iLen; i++) {\n                parts.push(`${key}=${(0, util_uri_escape_1.escapeUri)(value[i])}`);\n            }\n        }\n        else {\n            let qsEntry = key;\n            if (value || typeof value === \"string\") {\n                qsEntry += `=${(0, util_uri_escape_1.escapeUri)(value)}`;\n            }\n            parts.push(qsEntry);\n        }\n    }\n    return parts.join(\"&\");\n}\nexports.buildQueryString = buildQueryString;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQ0EsOERBQXFEO0FBRXJELFNBQWdCLGdCQUFnQixDQUFDLEtBQXdCO0lBQ3ZELE1BQU0sS0FBSyxHQUFhLEVBQUUsQ0FBQztJQUMzQixLQUFLLElBQUksR0FBRyxJQUFJLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsSUFBSSxFQUFFLEVBQUU7UUFDekMsTUFBTSxLQUFLLEdBQUcsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ3pCLEdBQUcsR0FBRyxJQUFBLDJCQUFTLEVBQUMsR0FBRyxDQUFDLENBQUM7UUFDckIsSUFBSSxLQUFLLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxFQUFFO1lBQ3hCLEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLElBQUksR0FBRyxLQUFLLENBQUMsTUFBTSxFQUFFLENBQUMsR0FBRyxJQUFJLEVBQUUsQ0FBQyxFQUFFLEVBQUU7Z0JBQ2xELEtBQUssQ0FBQyxJQUFJLENBQUMsR0FBRyxHQUFHLElBQUksSUFBQSwyQkFBUyxFQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQzthQUM3QztTQUNGO2FBQU07WUFDTCxJQUFJLE9BQU8sR0FBRyxHQUFHLENBQUM7WUFDbEIsSUFBSSxLQUFLLElBQUksT0FBTyxLQUFLLEtBQUssUUFBUSxFQUFFO2dCQUN0QyxPQUFPLElBQUksSUFBSSxJQUFBLDJCQUFTLEVBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQzthQUNuQztZQUNELEtBQUssQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7U0FDckI7S0FDRjtJQUVELE9BQU8sS0FBSyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztBQUN6QixDQUFDO0FBbkJELDRDQW1CQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFF1ZXJ5UGFyYW1ldGVyQmFnIH0gZnJvbSBcIkBhd3Mtc2RrL3R5cGVzXCI7XG5pbXBvcnQgeyBlc2NhcGVVcmkgfSBmcm9tIFwiQGF3cy1zZGsvdXRpbC11cmktZXNjYXBlXCI7XG5cbmV4cG9ydCBmdW5jdGlvbiBidWlsZFF1ZXJ5U3RyaW5nKHF1ZXJ5OiBRdWVyeVBhcmFtZXRlckJhZyk6IHN0cmluZyB7XG4gIGNvbnN0IHBhcnRzOiBzdHJpbmdbXSA9IFtdO1xuICBmb3IgKGxldCBrZXkgb2YgT2JqZWN0LmtleXMocXVlcnkpLnNvcnQoKSkge1xuICAgIGNvbnN0IHZhbHVlID0gcXVlcnlba2V5XTtcbiAgICBrZXkgPSBlc2NhcGVVcmkoa2V5KTtcbiAgICBpZiAoQXJyYXkuaXNBcnJheSh2YWx1ZSkpIHtcbiAgICAgIGZvciAobGV0IGkgPSAwLCBpTGVuID0gdmFsdWUubGVuZ3RoOyBpIDwgaUxlbjsgaSsrKSB7XG4gICAgICAgIHBhcnRzLnB1c2goYCR7a2V5fT0ke2VzY2FwZVVyaSh2YWx1ZVtpXSl9YCk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIGxldCBxc0VudHJ5ID0ga2V5O1xuICAgICAgaWYgKHZhbHVlIHx8IHR5cGVvZiB2YWx1ZSA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgICBxc0VudHJ5ICs9IGA9JHtlc2NhcGVVcmkodmFsdWUpfWA7XG4gICAgICB9XG4gICAgICBwYXJ0cy5wdXNoKHFzRW50cnkpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBwYXJ0cy5qb2luKFwiJlwiKTtcbn1cbiJdfQ==","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseQueryString = void 0;\nfunction parseQueryString(querystring) {\n    const query = {};\n    querystring = querystring.replace(/^\\?/, \"\");\n    if (querystring) {\n        for (const pair of querystring.split(\"&\")) {\n            let [key, value = null] = pair.split(\"=\");\n            key = decodeURIComponent(key);\n            if (value) {\n                value = decodeURIComponent(value);\n            }\n            if (!(key in query)) {\n                query[key] = value;\n            }\n            else if (Array.isArray(query[key])) {\n                query[key].push(value);\n            }\n            else {\n                query[key] = [query[key], value];\n            }\n        }\n    }\n    return query;\n}\nexports.parseQueryString = parseQueryString;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBRUEsU0FBZ0IsZ0JBQWdCLENBQUMsV0FBbUI7SUFDbEQsTUFBTSxLQUFLLEdBQXNCLEVBQUUsQ0FBQztJQUNwQyxXQUFXLEdBQUcsV0FBVyxDQUFDLE9BQU8sQ0FBQyxLQUFLLEVBQUUsRUFBRSxDQUFDLENBQUM7SUFFN0MsSUFBSSxXQUFXLEVBQUU7UUFDZixLQUFLLE1BQU0sSUFBSSxJQUFJLFdBQVcsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLEVBQUU7WUFDekMsSUFBSSxDQUFDLEdBQUcsRUFBRSxLQUFLLEdBQUcsSUFBSSxDQUFDLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQztZQUMxQyxHQUFHLEdBQUcsa0JBQWtCLENBQUMsR0FBRyxDQUFDLENBQUM7WUFDOUIsSUFBSSxLQUFLLEVBQUU7Z0JBQ1QsS0FBSyxHQUFHLGtCQUFrQixDQUFDLEtBQUssQ0FBQyxDQUFDO2FBQ25DO1lBQ0QsSUFBSSxDQUFDLENBQUMsR0FBRyxJQUFJLEtBQUssQ0FBQyxFQUFFO2dCQUNuQixLQUFLLENBQUMsR0FBRyxDQUFDLEdBQUcsS0FBSyxDQUFDO2FBQ3BCO2lCQUFNLElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRTtnQkFDbkMsS0FBSyxDQUFDLEdBQUcsQ0FBbUIsQ0FBQyxJQUFJLENBQUMsS0FBZSxDQUFDLENBQUM7YUFDckQ7aUJBQU07Z0JBQ0wsS0FBSyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBVyxFQUFFLEtBQWUsQ0FBQyxDQUFDO2FBQ3REO1NBQ0Y7S0FDRjtJQUVELE9BQU8sS0FBSyxDQUFDO0FBQ2YsQ0FBQztBQXRCRCw0Q0FzQkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBRdWVyeVBhcmFtZXRlckJhZyB9IGZyb20gXCJAYXdzLXNkay90eXBlc1wiO1xuXG5leHBvcnQgZnVuY3Rpb24gcGFyc2VRdWVyeVN0cmluZyhxdWVyeXN0cmluZzogc3RyaW5nKTogUXVlcnlQYXJhbWV0ZXJCYWcge1xuICBjb25zdCBxdWVyeTogUXVlcnlQYXJhbWV0ZXJCYWcgPSB7fTtcbiAgcXVlcnlzdHJpbmcgPSBxdWVyeXN0cmluZy5yZXBsYWNlKC9eXFw/LywgXCJcIik7XG5cbiAgaWYgKHF1ZXJ5c3RyaW5nKSB7XG4gICAgZm9yIChjb25zdCBwYWlyIG9mIHF1ZXJ5c3RyaW5nLnNwbGl0KFwiJlwiKSkge1xuICAgICAgbGV0IFtrZXksIHZhbHVlID0gbnVsbF0gPSBwYWlyLnNwbGl0KFwiPVwiKTtcbiAgICAgIGtleSA9IGRlY29kZVVSSUNvbXBvbmVudChrZXkpO1xuICAgICAgaWYgKHZhbHVlKSB7XG4gICAgICAgIHZhbHVlID0gZGVjb2RlVVJJQ29tcG9uZW50KHZhbHVlKTtcbiAgICAgIH1cbiAgICAgIGlmICghKGtleSBpbiBxdWVyeSkpIHtcbiAgICAgICAgcXVlcnlba2V5XSA9IHZhbHVlO1xuICAgICAgfSBlbHNlIGlmIChBcnJheS5pc0FycmF5KHF1ZXJ5W2tleV0pKSB7XG4gICAgICAgIChxdWVyeVtrZXldIGFzIEFycmF5PHN0cmluZz4pLnB1c2godmFsdWUgYXMgc3RyaW5nKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHF1ZXJ5W2tleV0gPSBbcXVlcnlba2V5XSBhcyBzdHJpbmcsIHZhbHVlIGFzIHN0cmluZ107XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHF1ZXJ5O1xufVxuIl19","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TRANSIENT_ERROR_STATUS_CODES = exports.TRANSIENT_ERROR_CODES = exports.THROTTLING_ERROR_CODES = exports.CLOCK_SKEW_ERROR_CODES = void 0;\n/**\n * Errors encountered when the client clock and server clock cannot agree on the\n * current time.\n *\n * These errors are retryable, assuming the SDK has enabled clock skew\n * correction.\n */\nexports.CLOCK_SKEW_ERROR_CODES = [\n    \"AuthFailure\",\n    \"InvalidSignatureException\",\n    \"RequestExpired\",\n    \"RequestInTheFuture\",\n    \"RequestTimeTooSkewed\",\n    \"SignatureDoesNotMatch\",\n];\n/**\n * Errors that indicate the SDK is being throttled.\n *\n * These errors are always retryable.\n */\nexports.THROTTLING_ERROR_CODES = [\n    \"BandwidthLimitExceeded\",\n    \"EC2ThrottledException\",\n    \"LimitExceededException\",\n    \"PriorRequestNotComplete\",\n    \"ProvisionedThroughputExceededException\",\n    \"RequestLimitExceeded\",\n    \"RequestThrottled\",\n    \"RequestThrottledException\",\n    \"SlowDown\",\n    \"ThrottledException\",\n    \"Throttling\",\n    \"ThrottlingException\",\n    \"TooManyRequestsException\",\n    \"TransactionInProgressException\", // DynamoDB\n];\n/**\n * Error codes that indicate transient issues\n */\nexports.TRANSIENT_ERROR_CODES = [\"AbortError\", \"TimeoutError\", \"RequestTimeout\", \"RequestTimeoutException\"];\n/**\n * Error codes that indicate transient issues\n */\nexports.TRANSIENT_ERROR_STATUS_CODES = [500, 502, 503, 504];\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uc3RhbnRzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2NvbnN0YW50cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQTs7Ozs7O0dBTUc7QUFDVSxRQUFBLHNCQUFzQixHQUFHO0lBQ3BDLGFBQWE7SUFDYiwyQkFBMkI7SUFDM0IsZ0JBQWdCO0lBQ2hCLG9CQUFvQjtJQUNwQixzQkFBc0I7SUFDdEIsdUJBQXVCO0NBQ3hCLENBQUM7QUFFRjs7OztHQUlHO0FBQ1UsUUFBQSxzQkFBc0IsR0FBRztJQUNwQyx3QkFBd0I7SUFDeEIsdUJBQXVCO0lBQ3ZCLHdCQUF3QjtJQUN4Qix5QkFBeUI7SUFDekIsd0NBQXdDO0lBQ3hDLHNCQUFzQjtJQUN0QixrQkFBa0I7SUFDbEIsMkJBQTJCO0lBQzNCLFVBQVU7SUFDVixvQkFBb0I7SUFDcEIsWUFBWTtJQUNaLHFCQUFxQjtJQUNyQiwwQkFBMEI7SUFDMUIsZ0NBQWdDLEVBQUUsV0FBVztDQUM5QyxDQUFDO0FBRUY7O0dBRUc7QUFDVSxRQUFBLHFCQUFxQixHQUFHLENBQUMsWUFBWSxFQUFFLGNBQWMsRUFBRSxnQkFBZ0IsRUFBRSx5QkFBeUIsQ0FBQyxDQUFDO0FBRWpIOztHQUVHO0FBQ1UsUUFBQSw0QkFBNEIsR0FBRyxDQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBFcnJvcnMgZW5jb3VudGVyZWQgd2hlbiB0aGUgY2xpZW50IGNsb2NrIGFuZCBzZXJ2ZXIgY2xvY2sgY2Fubm90IGFncmVlIG9uIHRoZVxuICogY3VycmVudCB0aW1lLlxuICpcbiAqIFRoZXNlIGVycm9ycyBhcmUgcmV0cnlhYmxlLCBhc3N1bWluZyB0aGUgU0RLIGhhcyBlbmFibGVkIGNsb2NrIHNrZXdcbiAqIGNvcnJlY3Rpb24uXG4gKi9cbmV4cG9ydCBjb25zdCBDTE9DS19TS0VXX0VSUk9SX0NPREVTID0gW1xuICBcIkF1dGhGYWlsdXJlXCIsXG4gIFwiSW52YWxpZFNpZ25hdHVyZUV4Y2VwdGlvblwiLFxuICBcIlJlcXVlc3RFeHBpcmVkXCIsXG4gIFwiUmVxdWVzdEluVGhlRnV0dXJlXCIsXG4gIFwiUmVxdWVzdFRpbWVUb29Ta2V3ZWRcIixcbiAgXCJTaWduYXR1cmVEb2VzTm90TWF0Y2hcIixcbl07XG5cbi8qKlxuICogRXJyb3JzIHRoYXQgaW5kaWNhdGUgdGhlIFNESyBpcyBiZWluZyB0aHJvdHRsZWQuXG4gKlxuICogVGhlc2UgZXJyb3JzIGFyZSBhbHdheXMgcmV0cnlhYmxlLlxuICovXG5leHBvcnQgY29uc3QgVEhST1RUTElOR19FUlJPUl9DT0RFUyA9IFtcbiAgXCJCYW5kd2lkdGhMaW1pdEV4Y2VlZGVkXCIsXG4gIFwiRUMyVGhyb3R0bGVkRXhjZXB0aW9uXCIsXG4gIFwiTGltaXRFeGNlZWRlZEV4Y2VwdGlvblwiLFxuICBcIlByaW9yUmVxdWVzdE5vdENvbXBsZXRlXCIsXG4gIFwiUHJvdmlzaW9uZWRUaHJvdWdocHV0RXhjZWVkZWRFeGNlcHRpb25cIixcbiAgXCJSZXF1ZXN0TGltaXRFeGNlZWRlZFwiLFxuICBcIlJlcXVlc3RUaHJvdHRsZWRcIixcbiAgXCJSZXF1ZXN0VGhyb3R0bGVkRXhjZXB0aW9uXCIsXG4gIFwiU2xvd0Rvd25cIixcbiAgXCJUaHJvdHRsZWRFeGNlcHRpb25cIixcbiAgXCJUaHJvdHRsaW5nXCIsXG4gIFwiVGhyb3R0bGluZ0V4Y2VwdGlvblwiLFxuICBcIlRvb01hbnlSZXF1ZXN0c0V4Y2VwdGlvblwiLFxuICBcIlRyYW5zYWN0aW9uSW5Qcm9ncmVzc0V4Y2VwdGlvblwiLCAvLyBEeW5hbW9EQlxuXTtcblxuLyoqXG4gKiBFcnJvciBjb2RlcyB0aGF0IGluZGljYXRlIHRyYW5zaWVudCBpc3N1ZXNcbiAqL1xuZXhwb3J0IGNvbnN0IFRSQU5TSUVOVF9FUlJPUl9DT0RFUyA9IFtcIkFib3J0RXJyb3JcIiwgXCJUaW1lb3V0RXJyb3JcIiwgXCJSZXF1ZXN0VGltZW91dFwiLCBcIlJlcXVlc3RUaW1lb3V0RXhjZXB0aW9uXCJdO1xuXG4vKipcbiAqIEVycm9yIGNvZGVzIHRoYXQgaW5kaWNhdGUgdHJhbnNpZW50IGlzc3Vlc1xuICovXG5leHBvcnQgY29uc3QgVFJBTlNJRU5UX0VSUk9SX1NUQVRVU19DT0RFUyA9IFs1MDAsIDUwMiwgNTAzLCA1MDRdO1xuIl19","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isTransientError = exports.isThrottlingError = exports.isClockSkewError = exports.isRetryableByTrait = void 0;\nconst constants_1 = require(\"./constants\");\nconst isRetryableByTrait = (error) => error.$retryable !== undefined;\nexports.isRetryableByTrait = isRetryableByTrait;\nconst isClockSkewError = (error) => constants_1.CLOCK_SKEW_ERROR_CODES.includes(error.name);\nexports.isClockSkewError = isClockSkewError;\nconst isThrottlingError = (error) => {\n    var _a, _b;\n    return ((_a = error.$metadata) === null || _a === void 0 ? void 0 : _a.httpStatusCode) === 429 ||\n        constants_1.THROTTLING_ERROR_CODES.includes(error.name) ||\n        ((_b = error.$retryable) === null || _b === void 0 ? void 0 : _b.throttling) == true;\n};\nexports.isThrottlingError = isThrottlingError;\nconst isTransientError = (error) => {\n    var _a;\n    return constants_1.TRANSIENT_ERROR_CODES.includes(error.name) ||\n        constants_1.TRANSIENT_ERROR_STATUS_CODES.includes(((_a = error.$metadata) === null || _a === void 0 ? void 0 : _a.httpStatusCode) || 0);\n};\nexports.isTransientError = isTransientError;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBRUEsMkNBS3FCO0FBRWQsTUFBTSxrQkFBa0IsR0FBRyxDQUFDLEtBQWUsRUFBRSxFQUFFLENBQUMsS0FBSyxDQUFDLFVBQVUsS0FBSyxTQUFTLENBQUM7QUFBekUsUUFBQSxrQkFBa0Isc0JBQXVEO0FBRS9FLE1BQU0sZ0JBQWdCLEdBQUcsQ0FBQyxLQUFlLEVBQUUsRUFBRSxDQUFDLGtDQUFzQixDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUM7QUFBcEYsUUFBQSxnQkFBZ0Isb0JBQW9FO0FBRTFGLE1BQU0saUJBQWlCLEdBQUcsQ0FBQyxLQUFlLEVBQUUsRUFBRTs7SUFDbkQsT0FBQSxDQUFBLE1BQUEsS0FBSyxDQUFDLFNBQVMsMENBQUUsY0FBYyxNQUFLLEdBQUc7UUFDdkMsa0NBQXNCLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUM7UUFDM0MsQ0FBQSxNQUFBLEtBQUssQ0FBQyxVQUFVLDBDQUFFLFVBQVUsS0FBSSxJQUFJLENBQUE7Q0FBQSxDQUFDO0FBSDFCLFFBQUEsaUJBQWlCLHFCQUdTO0FBRWhDLE1BQU0sZ0JBQWdCLEdBQUcsQ0FBQyxLQUFlLEVBQUUsRUFBRTs7SUFDbEQsT0FBQSxpQ0FBcUIsQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQztRQUMxQyx3Q0FBNEIsQ0FBQyxRQUFRLENBQUMsQ0FBQSxNQUFBLEtBQUssQ0FBQyxTQUFTLDBDQUFFLGNBQWMsS0FBSSxDQUFDLENBQUMsQ0FBQTtDQUFBLENBQUM7QUFGakUsUUFBQSxnQkFBZ0Isb0JBRWlEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU2RrRXJyb3IgfSBmcm9tIFwiQGF3cy1zZGsvdHlwZXNcIjtcblxuaW1wb3J0IHtcbiAgQ0xPQ0tfU0tFV19FUlJPUl9DT0RFUyxcbiAgVEhST1RUTElOR19FUlJPUl9DT0RFUyxcbiAgVFJBTlNJRU5UX0VSUk9SX0NPREVTLFxuICBUUkFOU0lFTlRfRVJST1JfU1RBVFVTX0NPREVTLFxufSBmcm9tIFwiLi9jb25zdGFudHNcIjtcblxuZXhwb3J0IGNvbnN0IGlzUmV0cnlhYmxlQnlUcmFpdCA9IChlcnJvcjogU2RrRXJyb3IpID0+IGVycm9yLiRyZXRyeWFibGUgIT09IHVuZGVmaW5lZDtcblxuZXhwb3J0IGNvbnN0IGlzQ2xvY2tTa2V3RXJyb3IgPSAoZXJyb3I6IFNka0Vycm9yKSA9PiBDTE9DS19TS0VXX0VSUk9SX0NPREVTLmluY2x1ZGVzKGVycm9yLm5hbWUpO1xuXG5leHBvcnQgY29uc3QgaXNUaHJvdHRsaW5nRXJyb3IgPSAoZXJyb3I6IFNka0Vycm9yKSA9PlxuICBlcnJvci4kbWV0YWRhdGE/Lmh0dHBTdGF0dXNDb2RlID09PSA0MjkgfHxcbiAgVEhST1RUTElOR19FUlJPUl9DT0RFUy5pbmNsdWRlcyhlcnJvci5uYW1lKSB8fFxuICBlcnJvci4kcmV0cnlhYmxlPy50aHJvdHRsaW5nID09IHRydWU7XG5cbmV4cG9ydCBjb25zdCBpc1RyYW5zaWVudEVycm9yID0gKGVycm9yOiBTZGtFcnJvcikgPT5cbiAgVFJBTlNJRU5UX0VSUk9SX0NPREVTLmluY2x1ZGVzKGVycm9yLm5hbWUpIHx8XG4gIFRSQU5TSUVOVF9FUlJPUl9TVEFUVVNfQ09ERVMuaW5jbHVkZXMoZXJyb3IuJG1ldGFkYXRhPy5odHRwU3RhdHVzQ29kZSB8fCAwKTtcbiJdfQ==","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getHomeDir = exports.loadSharedConfigFiles = exports.ENV_CONFIG_PATH = exports.ENV_CREDENTIALS_PATH = void 0;\nconst fs_1 = require(\"fs\");\nconst os_1 = require(\"os\");\nconst path_1 = require(\"path\");\nexports.ENV_CREDENTIALS_PATH = \"AWS_SHARED_CREDENTIALS_FILE\";\nexports.ENV_CONFIG_PATH = \"AWS_CONFIG_FILE\";\nconst swallowError = () => ({});\nconst loadSharedConfigFiles = (init = {}) => {\n    const { filepath = process.env[exports.ENV_CREDENTIALS_PATH] || (0, path_1.join)((0, exports.getHomeDir)(), \".aws\", \"credentials\"), configFilepath = process.env[exports.ENV_CONFIG_PATH] || (0, path_1.join)((0, exports.getHomeDir)(), \".aws\", \"config\"), } = init;\n    return Promise.all([\n        slurpFile(configFilepath).then(parseIni).then(normalizeConfigFile).catch(swallowError),\n        slurpFile(filepath).then(parseIni).catch(swallowError),\n    ]).then((parsedFiles) => {\n        const [configFile, credentialsFile] = parsedFiles;\n        return {\n            configFile,\n            credentialsFile,\n        };\n    });\n};\nexports.loadSharedConfigFiles = loadSharedConfigFiles;\nconst profileKeyRegex = /^profile\\s([\"'])?([^\\1]+)\\1$/;\nconst normalizeConfigFile = (data) => {\n    const map = {};\n    for (const key of Object.keys(data)) {\n        let matches;\n        if (key === \"default\") {\n            map.default = data.default;\n        }\n        else if ((matches = profileKeyRegex.exec(key))) {\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            const [_1, _2, normalizedKey] = matches;\n            if (normalizedKey) {\n                map[normalizedKey] = data[key];\n            }\n        }\n    }\n    return map;\n};\nconst profileNameBlockList = [\"__proto__\", \"profile __proto__\"];\nconst parseIni = (iniData) => {\n    const map = {};\n    let currentSection;\n    for (let line of iniData.split(/\\r?\\n/)) {\n        line = line.split(/(^|\\s)[;#]/)[0]; // remove comments\n        const section = line.match(/^\\s*\\[([^\\[\\]]+)]\\s*$/);\n        if (section) {\n            currentSection = section[1];\n            if (profileNameBlockList.includes(currentSection)) {\n                throw new Error(`Found invalid profile name \"${currentSection}\"`);\n            }\n        }\n        else if (currentSection) {\n            const item = line.match(/^\\s*(.+?)\\s*=\\s*(.+?)\\s*$/);\n            if (item) {\n                map[currentSection] = map[currentSection] || {};\n                map[currentSection][item[1]] = item[2];\n            }\n        }\n    }\n    return map;\n};\nconst slurpFile = (path) => new Promise((resolve, reject) => {\n    (0, fs_1.readFile)(path, \"utf8\", (err, data) => {\n        if (err) {\n            reject(err);\n        }\n        else {\n            resolve(data);\n        }\n    });\n});\n/**\n * Get the HOME directory for the current runtime.\n *\n * @internal\n */\nconst getHomeDir = () => {\n    const { HOME, USERPROFILE, HOMEPATH, HOMEDRIVE = `C:${path_1.sep}` } = process.env;\n    if (HOME)\n        return HOME;\n    if (USERPROFILE)\n        return USERPROFILE;\n    if (HOMEPATH)\n        return `${HOMEDRIVE}${HOMEPATH}`;\n    return (0, os_1.homedir)();\n};\nexports.getHomeDir = getHomeDir;\n//# sourceMappingURL=data:application/json;base64,","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SignatureV4 = void 0;\nconst util_hex_encoding_1 = require(\"@aws-sdk/util-hex-encoding\");\nconst constants_1 = require(\"./constants\");\nconst credentialDerivation_1 = require(\"./credentialDerivation\");\nconst getCanonicalHeaders_1 = require(\"./getCanonicalHeaders\");\nconst getCanonicalQuery_1 = require(\"./getCanonicalQuery\");\nconst getPayloadHash_1 = require(\"./getPayloadHash\");\nconst headerUtil_1 = require(\"./headerUtil\");\nconst moveHeadersToQuery_1 = require(\"./moveHeadersToQuery\");\nconst normalizeProvider_1 = require(\"./normalizeProvider\");\nconst prepareRequest_1 = require(\"./prepareRequest\");\nconst utilDate_1 = require(\"./utilDate\");\nclass SignatureV4 {\n    constructor({ applyChecksum, credentials, region, service, sha256, uriEscapePath = true, }) {\n        this.service = service;\n        this.sha256 = sha256;\n        this.uriEscapePath = uriEscapePath;\n        // default to true if applyChecksum isn't set\n        this.applyChecksum = typeof applyChecksum === \"boolean\" ? applyChecksum : true;\n        this.regionProvider = (0, normalizeProvider_1.normalizeRegionProvider)(region);\n        this.credentialProvider = (0, normalizeProvider_1.normalizeCredentialsProvider)(credentials);\n    }\n    async presign(originalRequest, options = {}) {\n        const { signingDate = new Date(), expiresIn = 3600, unsignableHeaders, unhoistableHeaders, signableHeaders, signingRegion, signingService, } = options;\n        const credentials = await this.credentialProvider();\n        const region = signingRegion !== null && signingRegion !== void 0 ? signingRegion : (await this.regionProvider());\n        const { longDate, shortDate } = formatDate(signingDate);\n        if (expiresIn > constants_1.MAX_PRESIGNED_TTL) {\n            return Promise.reject(\"Signature version 4 presigned URLs\" + \" must have an expiration date less than one week in\" + \" the future\");\n        }\n        const scope = (0, credentialDerivation_1.createScope)(shortDate, region, signingService !== null && signingService !== void 0 ? signingService : this.service);\n        const request = (0, moveHeadersToQuery_1.moveHeadersToQuery)((0, prepareRequest_1.prepareRequest)(originalRequest), { unhoistableHeaders });\n        if (credentials.sessionToken) {\n            request.query[constants_1.TOKEN_QUERY_PARAM] = credentials.sessionToken;\n        }\n        request.query[constants_1.ALGORITHM_QUERY_PARAM] = constants_1.ALGORITHM_IDENTIFIER;\n        request.query[constants_1.CREDENTIAL_QUERY_PARAM] = `${credentials.accessKeyId}/${scope}`;\n        request.query[constants_1.AMZ_DATE_QUERY_PARAM] = longDate;\n        request.query[constants_1.EXPIRES_QUERY_PARAM] = expiresIn.toString(10);\n        const canonicalHeaders = (0, getCanonicalHeaders_1.getCanonicalHeaders)(request, unsignableHeaders, signableHeaders);\n        request.query[constants_1.SIGNED_HEADERS_QUERY_PARAM] = getCanonicalHeaderList(canonicalHeaders);\n        request.query[constants_1.SIGNATURE_QUERY_PARAM] = await this.getSignature(longDate, scope, this.getSigningKey(credentials, region, shortDate, signingService), this.createCanonicalRequest(request, canonicalHeaders, await (0, getPayloadHash_1.getPayloadHash)(originalRequest, this.sha256)));\n        return request;\n    }\n    async sign(toSign, options) {\n        if (typeof toSign === \"string\") {\n            return this.signString(toSign, options);\n        }\n        else if (toSign.headers && toSign.payload) {\n            return this.signEvent(toSign, options);\n        }\n        else {\n            return this.signRequest(toSign, options);\n        }\n    }\n    async signEvent({ headers, payload }, { signingDate = new Date(), priorSignature, signingRegion, signingService }) {\n        const region = signingRegion !== null && signingRegion !== void 0 ? signingRegion : (await this.regionProvider());\n        const { shortDate, longDate } = formatDate(signingDate);\n        const scope = (0, credentialDerivation_1.createScope)(shortDate, region, signingService !== null && signingService !== void 0 ? signingService : this.service);\n        const hashedPayload = await (0, getPayloadHash_1.getPayloadHash)({ headers: {}, body: payload }, this.sha256);\n        const hash = new this.sha256();\n        hash.update(headers);\n        const hashedHeaders = (0, util_hex_encoding_1.toHex)(await hash.digest());\n        const stringToSign = [\n            constants_1.EVENT_ALGORITHM_IDENTIFIER,\n            longDate,\n            scope,\n            priorSignature,\n            hashedHeaders,\n            hashedPayload,\n        ].join(\"\\n\");\n        return this.signString(stringToSign, { signingDate, signingRegion: region, signingService });\n    }\n    async signString(stringToSign, { signingDate = new Date(), signingRegion, signingService } = {}) {\n        const credentials = await this.credentialProvider();\n        const region = signingRegion !== null && signingRegion !== void 0 ? signingRegion : (await this.regionProvider());\n        const { shortDate } = formatDate(signingDate);\n        const hash = new this.sha256(await this.getSigningKey(credentials, region, shortDate, signingService));\n        hash.update(stringToSign);\n        return (0, util_hex_encoding_1.toHex)(await hash.digest());\n    }\n    async signRequest(requestToSign, { signingDate = new Date(), signableHeaders, unsignableHeaders, signingRegion, signingService, } = {}) {\n        const credentials = await this.credentialProvider();\n        const region = signingRegion !== null && signingRegion !== void 0 ? signingRegion : (await this.regionProvider());\n        const request = (0, prepareRequest_1.prepareRequest)(requestToSign);\n        const { longDate, shortDate } = formatDate(signingDate);\n        const scope = (0, credentialDerivation_1.createScope)(shortDate, region, signingService !== null && signingService !== void 0 ? signingService : this.service);\n        request.headers[constants_1.AMZ_DATE_HEADER] = longDate;\n        if (credentials.sessionToken) {\n            request.headers[constants_1.TOKEN_HEADER] = credentials.sessionToken;\n        }\n        const payloadHash = await (0, getPayloadHash_1.getPayloadHash)(request, this.sha256);\n        if (!(0, headerUtil_1.hasHeader)(constants_1.SHA256_HEADER, request.headers) && this.applyChecksum) {\n            request.headers[constants_1.SHA256_HEADER] = payloadHash;\n        }\n        const canonicalHeaders = (0, getCanonicalHeaders_1.getCanonicalHeaders)(request, unsignableHeaders, signableHeaders);\n        const signature = await this.getSignature(longDate, scope, this.getSigningKey(credentials, region, shortDate, signingService), this.createCanonicalRequest(request, canonicalHeaders, payloadHash));\n        request.headers[constants_1.AUTH_HEADER] =\n            `${constants_1.ALGORITHM_IDENTIFIER} ` +\n                `Credential=${credentials.accessKeyId}/${scope}, ` +\n                `SignedHeaders=${getCanonicalHeaderList(canonicalHeaders)}, ` +\n                `Signature=${signature}`;\n        return request;\n    }\n    createCanonicalRequest(request, canonicalHeaders, payloadHash) {\n        const sortedHeaders = Object.keys(canonicalHeaders).sort();\n        return `${request.method}\n${this.getCanonicalPath(request)}\n${(0, getCanonicalQuery_1.getCanonicalQuery)(request)}\n${sortedHeaders.map((name) => `${name}:${canonicalHeaders[name]}`).join(\"\\n\")}\n\n${sortedHeaders.join(\";\")}\n${payloadHash}`;\n    }\n    async createStringToSign(longDate, credentialScope, canonicalRequest) {\n        const hash = new this.sha256();\n        hash.update(canonicalRequest);\n        const hashedRequest = await hash.digest();\n        return `${constants_1.ALGORITHM_IDENTIFIER}\n${longDate}\n${credentialScope}\n${(0, util_hex_encoding_1.toHex)(hashedRequest)}`;\n    }\n    getCanonicalPath({ path }) {\n        if (this.uriEscapePath) {\n            const doubleEncoded = encodeURIComponent(path.replace(/^\\//, \"\"));\n            return `/${doubleEncoded.replace(/%2F/g, \"/\")}`;\n        }\n        return path;\n    }\n    async getSignature(longDate, credentialScope, keyPromise, canonicalRequest) {\n        const stringToSign = await this.createStringToSign(longDate, credentialScope, canonicalRequest);\n        const hash = new this.sha256(await keyPromise);\n        hash.update(stringToSign);\n        return (0, util_hex_encoding_1.toHex)(await hash.digest());\n    }\n    getSigningKey(credentials, region, shortDate, service) {\n        return (0, credentialDerivation_1.getSigningKey)(this.sha256, credentials, shortDate, region, service || this.service);\n    }\n}\nexports.SignatureV4 = SignatureV4;\nconst formatDate = (now) => {\n    const longDate = (0, utilDate_1.iso8601)(now).replace(/[\\-:]/g, \"\");\n    return {\n        longDate,\n        shortDate: longDate.substr(0, 8),\n    };\n};\nconst getCanonicalHeaderList = (headers) => Object.keys(headers).sort().join(\";\");\n//# sourceMappingURL=data:application/json;base64,","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.cloneQuery = exports.cloneRequest = void 0;\n/**\n * @internal\n */\nconst cloneRequest = ({ headers, query, ...rest }) => ({\n    ...rest,\n    headers: { ...headers },\n    query: query ? (0, exports.cloneQuery)(query) : undefined,\n});\nexports.cloneRequest = cloneRequest;\nconst cloneQuery = (query) => Object.keys(query).reduce((carry, paramName) => {\n    const param = query[paramName];\n    return {\n        ...carry,\n        [paramName]: Array.isArray(param) ? [...param] : param,\n    };\n}, {});\nexports.cloneQuery = cloneQuery;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2xvbmVSZXF1ZXN0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2Nsb25lUmVxdWVzdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFFQTs7R0FFRztBQUNJLE1BQU0sWUFBWSxHQUFHLENBQUMsRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFFLEdBQUcsSUFBSSxFQUFlLEVBQWUsRUFBRSxDQUFDLENBQUM7SUFDdEYsR0FBRyxJQUFJO0lBQ1AsT0FBTyxFQUFFLEVBQUUsR0FBRyxPQUFPLEVBQUU7SUFDdkIsS0FBSyxFQUFFLEtBQUssQ0FBQyxDQUFDLENBQUMsSUFBQSxrQkFBVSxFQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxTQUFTO0NBQzdDLENBQUMsQ0FBQztBQUpVLFFBQUEsWUFBWSxnQkFJdEI7QUFFSSxNQUFNLFVBQVUsR0FBRyxDQUFDLEtBQXdCLEVBQXFCLEVBQUUsQ0FDeEUsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxLQUF3QixFQUFFLFNBQWlCLEVBQUUsRUFBRTtJQUN4RSxNQUFNLEtBQUssR0FBRyxLQUFLLENBQUMsU0FBUyxDQUFDLENBQUM7SUFDL0IsT0FBTztRQUNMLEdBQUcsS0FBSztRQUNSLENBQUMsU0FBUyxDQUFDLEVBQUUsS0FBSyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLO0tBQ3ZELENBQUM7QUFDSixDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUM7QUFQSSxRQUFBLFVBQVUsY0FPZCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEh0dHBSZXF1ZXN0LCBRdWVyeVBhcmFtZXRlckJhZyB9IGZyb20gXCJAYXdzLXNkay90eXBlc1wiO1xuXG4vKipcbiAqIEBpbnRlcm5hbFxuICovXG5leHBvcnQgY29uc3QgY2xvbmVSZXF1ZXN0ID0gKHsgaGVhZGVycywgcXVlcnksIC4uLnJlc3QgfTogSHR0cFJlcXVlc3QpOiBIdHRwUmVxdWVzdCA9PiAoe1xuICAuLi5yZXN0LFxuICBoZWFkZXJzOiB7IC4uLmhlYWRlcnMgfSxcbiAgcXVlcnk6IHF1ZXJ5ID8gY2xvbmVRdWVyeShxdWVyeSkgOiB1bmRlZmluZWQsXG59KTtcblxuZXhwb3J0IGNvbnN0IGNsb25lUXVlcnkgPSAocXVlcnk6IFF1ZXJ5UGFyYW1ldGVyQmFnKTogUXVlcnlQYXJhbWV0ZXJCYWcgPT5cbiAgT2JqZWN0LmtleXMocXVlcnkpLnJlZHVjZSgoY2Fycnk6IFF1ZXJ5UGFyYW1ldGVyQmFnLCBwYXJhbU5hbWU6IHN0cmluZykgPT4ge1xuICAgIGNvbnN0IHBhcmFtID0gcXVlcnlbcGFyYW1OYW1lXTtcbiAgICByZXR1cm4ge1xuICAgICAgLi4uY2FycnksXG4gICAgICBbcGFyYW1OYW1lXTogQXJyYXkuaXNBcnJheShwYXJhbSkgPyBbLi4ucGFyYW1dIDogcGFyYW0sXG4gICAgfTtcbiAgfSwge30pO1xuIl19","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MAX_PRESIGNED_TTL = exports.KEY_TYPE_IDENTIFIER = exports.MAX_CACHE_SIZE = exports.UNSIGNED_PAYLOAD = exports.EVENT_ALGORITHM_IDENTIFIER = exports.ALGORITHM_IDENTIFIER_V4A = exports.ALGORITHM_IDENTIFIER = exports.UNSIGNABLE_PATTERNS = exports.SEC_HEADER_PATTERN = exports.PROXY_HEADER_PATTERN = exports.ALWAYS_UNSIGNABLE_HEADERS = exports.HOST_HEADER = exports.TOKEN_HEADER = exports.SHA256_HEADER = exports.SIGNATURE_HEADER = exports.GENERATED_HEADERS = exports.DATE_HEADER = exports.AMZ_DATE_HEADER = exports.AUTH_HEADER = exports.REGION_SET_PARAM = exports.TOKEN_QUERY_PARAM = exports.SIGNATURE_QUERY_PARAM = exports.EXPIRES_QUERY_PARAM = exports.SIGNED_HEADERS_QUERY_PARAM = exports.AMZ_DATE_QUERY_PARAM = exports.CREDENTIAL_QUERY_PARAM = exports.ALGORITHM_QUERY_PARAM = void 0;\nexports.ALGORITHM_QUERY_PARAM = \"X-Amz-Algorithm\";\nexports.CREDENTIAL_QUERY_PARAM = \"X-Amz-Credential\";\nexports.AMZ_DATE_QUERY_PARAM = \"X-Amz-Date\";\nexports.SIGNED_HEADERS_QUERY_PARAM = \"X-Amz-SignedHeaders\";\nexports.EXPIRES_QUERY_PARAM = \"X-Amz-Expires\";\nexports.SIGNATURE_QUERY_PARAM = \"X-Amz-Signature\";\nexports.TOKEN_QUERY_PARAM = \"X-Amz-Security-Token\";\nexports.REGION_SET_PARAM = \"X-Amz-Region-Set\";\nexports.AUTH_HEADER = \"authorization\";\nexports.AMZ_DATE_HEADER = exports.AMZ_DATE_QUERY_PARAM.toLowerCase();\nexports.DATE_HEADER = \"date\";\nexports.GENERATED_HEADERS = [exports.AUTH_HEADER, exports.AMZ_DATE_HEADER, exports.DATE_HEADER];\nexports.SIGNATURE_HEADER = exports.SIGNATURE_QUERY_PARAM.toLowerCase();\nexports.SHA256_HEADER = \"x-amz-content-sha256\";\nexports.TOKEN_HEADER = exports.TOKEN_QUERY_PARAM.toLowerCase();\nexports.HOST_HEADER = \"host\";\nexports.ALWAYS_UNSIGNABLE_HEADERS = {\n    authorization: true,\n    \"cache-control\": true,\n    connection: true,\n    expect: true,\n    from: true,\n    \"keep-alive\": true,\n    \"max-forwards\": true,\n    pragma: true,\n    referer: true,\n    te: true,\n    trailer: true,\n    \"transfer-encoding\": true,\n    upgrade: true,\n    \"user-agent\": true,\n    \"x-amzn-trace-id\": true,\n};\nexports.PROXY_HEADER_PATTERN = /^proxy-/;\nexports.SEC_HEADER_PATTERN = /^sec-/;\nexports.UNSIGNABLE_PATTERNS = [/^proxy-/i, /^sec-/i];\nexports.ALGORITHM_IDENTIFIER = \"AWS4-HMAC-SHA256\";\nexports.ALGORITHM_IDENTIFIER_V4A = \"AWS4-ECDSA-P256-SHA256\";\nexports.EVENT_ALGORITHM_IDENTIFIER = \"AWS4-HMAC-SHA256-PAYLOAD\";\nexports.UNSIGNED_PAYLOAD = \"UNSIGNED-PAYLOAD\";\nexports.MAX_CACHE_SIZE = 50;\nexports.KEY_TYPE_IDENTIFIER = \"aws4_request\";\nexports.MAX_PRESIGNED_TTL = 60 * 60 * 24 * 7;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uc3RhbnRzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2NvbnN0YW50cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBYSxRQUFBLHFCQUFxQixHQUFHLGlCQUFpQixDQUFDO0FBQzFDLFFBQUEsc0JBQXNCLEdBQUcsa0JBQWtCLENBQUM7QUFDNUMsUUFBQSxvQkFBb0IsR0FBRyxZQUFZLENBQUM7QUFDcEMsUUFBQSwwQkFBMEIsR0FBRyxxQkFBcUIsQ0FBQztBQUNuRCxRQUFBLG1CQUFtQixHQUFHLGVBQWUsQ0FBQztBQUN0QyxRQUFBLHFCQUFxQixHQUFHLGlCQUFpQixDQUFDO0FBQzFDLFFBQUEsaUJBQWlCLEdBQUcsc0JBQXNCLENBQUM7QUFDM0MsUUFBQSxnQkFBZ0IsR0FBRyxrQkFBa0IsQ0FBQztBQUV0QyxRQUFBLFdBQVcsR0FBRyxlQUFlLENBQUM7QUFDOUIsUUFBQSxlQUFlLEdBQUcsNEJBQW9CLENBQUMsV0FBVyxFQUFFLENBQUM7QUFDckQsUUFBQSxXQUFXLEdBQUcsTUFBTSxDQUFDO0FBQ3JCLFFBQUEsaUJBQWlCLEdBQUcsQ0FBQyxtQkFBVyxFQUFFLHVCQUFlLEVBQUUsbUJBQVcsQ0FBQyxDQUFDO0FBQ2hFLFFBQUEsZ0JBQWdCLEdBQUcsNkJBQXFCLENBQUMsV0FBVyxFQUFFLENBQUM7QUFDdkQsUUFBQSxhQUFhLEdBQUcsc0JBQXNCLENBQUM7QUFDdkMsUUFBQSxZQUFZLEdBQUcseUJBQWlCLENBQUMsV0FBVyxFQUFFLENBQUM7QUFDL0MsUUFBQSxXQUFXLEdBQUcsTUFBTSxDQUFDO0FBRXJCLFFBQUEseUJBQXlCLEdBQUc7SUFDdkMsYUFBYSxFQUFFLElBQUk7SUFDbkIsZUFBZSxFQUFFLElBQUk7SUFDckIsVUFBVSxFQUFFLElBQUk7SUFDaEIsTUFBTSxFQUFFLElBQUk7SUFDWixJQUFJLEVBQUUsSUFBSTtJQUNWLFlBQVksRUFBRSxJQUFJO0lBQ2xCLGNBQWMsRUFBRSxJQUFJO0lBQ3BCLE1BQU0sRUFBRSxJQUFJO0lBQ1osT0FBTyxFQUFFLElBQUk7SUFDYixFQUFFLEVBQUUsSUFBSTtJQUNSLE9BQU8sRUFBRSxJQUFJO0lBQ2IsbUJBQW1CLEVBQUUsSUFBSTtJQUN6QixPQUFPLEVBQUUsSUFBSTtJQUNiLFlBQVksRUFBRSxJQUFJO0lBQ2xCLGlCQUFpQixFQUFFLElBQUk7Q0FDeEIsQ0FBQztBQUVXLFFBQUEsb0JBQW9CLEdBQUcsU0FBUyxDQUFDO0FBRWpDLFFBQUEsa0JBQWtCLEdBQUcsT0FBTyxDQUFDO0FBRTdCLFFBQUEsbUJBQW1CLEdBQUcsQ0FBQyxVQUFVLEVBQUUsUUFBUSxDQUFDLENBQUM7QUFFN0MsUUFBQSxvQkFBb0IsR0FBRyxrQkFBa0IsQ0FBQztBQUMxQyxRQUFBLHdCQUF3QixHQUFHLHdCQUF3QixDQUFDO0FBRXBELFFBQUEsMEJBQTBCLEdBQUcsMEJBQTBCLENBQUM7QUFFeEQsUUFBQSxnQkFBZ0IsR0FBRyxrQkFBa0IsQ0FBQztBQUV0QyxRQUFBLGNBQWMsR0FBRyxFQUFFLENBQUM7QUFDcEIsUUFBQSxtQkFBbUIsR0FBRyxjQUFjLENBQUM7QUFFckMsUUFBQSxpQkFBaUIsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgQUxHT1JJVEhNX1FVRVJZX1BBUkFNID0gXCJYLUFtei1BbGdvcml0aG1cIjtcbmV4cG9ydCBjb25zdCBDUkVERU5USUFMX1FVRVJZX1BBUkFNID0gXCJYLUFtei1DcmVkZW50aWFsXCI7XG5leHBvcnQgY29uc3QgQU1aX0RBVEVfUVVFUllfUEFSQU0gPSBcIlgtQW16LURhdGVcIjtcbmV4cG9ydCBjb25zdCBTSUdORURfSEVBREVSU19RVUVSWV9QQVJBTSA9IFwiWC1BbXotU2lnbmVkSGVhZGVyc1wiO1xuZXhwb3J0IGNvbnN0IEVYUElSRVNfUVVFUllfUEFSQU0gPSBcIlgtQW16LUV4cGlyZXNcIjtcbmV4cG9ydCBjb25zdCBTSUdOQVRVUkVfUVVFUllfUEFSQU0gPSBcIlgtQW16LVNpZ25hdHVyZVwiO1xuZXhwb3J0IGNvbnN0IFRPS0VOX1FVRVJZX1BBUkFNID0gXCJYLUFtei1TZWN1cml0eS1Ub2tlblwiO1xuZXhwb3J0IGNvbnN0IFJFR0lPTl9TRVRfUEFSQU0gPSBcIlgtQW16LVJlZ2lvbi1TZXRcIjtcblxuZXhwb3J0IGNvbnN0IEFVVEhfSEVBREVSID0gXCJhdXRob3JpemF0aW9uXCI7XG5leHBvcnQgY29uc3QgQU1aX0RBVEVfSEVBREVSID0gQU1aX0RBVEVfUVVFUllfUEFSQU0udG9Mb3dlckNhc2UoKTtcbmV4cG9ydCBjb25zdCBEQVRFX0hFQURFUiA9IFwiZGF0ZVwiO1xuZXhwb3J0IGNvbnN0IEdFTkVSQVRFRF9IRUFERVJTID0gW0FVVEhfSEVBREVSLCBBTVpfREFURV9IRUFERVIsIERBVEVfSEVBREVSXTtcbmV4cG9ydCBjb25zdCBTSUdOQVRVUkVfSEVBREVSID0gU0lHTkFUVVJFX1FVRVJZX1BBUkFNLnRvTG93ZXJDYXNlKCk7XG5leHBvcnQgY29uc3QgU0hBMjU2X0hFQURFUiA9IFwieC1hbXotY29udGVudC1zaGEyNTZcIjtcbmV4cG9ydCBjb25zdCBUT0tFTl9IRUFERVIgPSBUT0tFTl9RVUVSWV9QQVJBTS50b0xvd2VyQ2FzZSgpO1xuZXhwb3J0IGNvbnN0IEhPU1RfSEVBREVSID0gXCJob3N0XCI7XG5cbmV4cG9ydCBjb25zdCBBTFdBWVNfVU5TSUdOQUJMRV9IRUFERVJTID0ge1xuICBhdXRob3JpemF0aW9uOiB0cnVlLFxuICBcImNhY2hlLWNvbnRyb2xcIjogdHJ1ZSxcbiAgY29ubmVjdGlvbjogdHJ1ZSxcbiAgZXhwZWN0OiB0cnVlLFxuICBmcm9tOiB0cnVlLFxuICBcImtlZXAtYWxpdmVcIjogdHJ1ZSxcbiAgXCJtYXgtZm9yd2FyZHNcIjogdHJ1ZSxcbiAgcHJhZ21hOiB0cnVlLFxuICByZWZlcmVyOiB0cnVlLFxuICB0ZTogdHJ1ZSxcbiAgdHJhaWxlcjogdHJ1ZSxcbiAgXCJ0cmFuc2Zlci1lbmNvZGluZ1wiOiB0cnVlLFxuICB1cGdyYWRlOiB0cnVlLFxuICBcInVzZXItYWdlbnRcIjogdHJ1ZSxcbiAgXCJ4LWFtem4tdHJhY2UtaWRcIjogdHJ1ZSxcbn07XG5cbmV4cG9ydCBjb25zdCBQUk9YWV9IRUFERVJfUEFUVEVSTiA9IC9ecHJveHktLztcblxuZXhwb3J0IGNvbnN0IFNFQ19IRUFERVJfUEFUVEVSTiA9IC9ec2VjLS87XG5cbmV4cG9ydCBjb25zdCBVTlNJR05BQkxFX1BBVFRFUk5TID0gWy9ecHJveHktL2ksIC9ec2VjLS9pXTtcblxuZXhwb3J0IGNvbnN0IEFMR09SSVRITV9JREVOVElGSUVSID0gXCJBV1M0LUhNQUMtU0hBMjU2XCI7XG5leHBvcnQgY29uc3QgQUxHT1JJVEhNX0lERU5USUZJRVJfVjRBID0gXCJBV1M0LUVDRFNBLVAyNTYtU0hBMjU2XCI7XG5cbmV4cG9ydCBjb25zdCBFVkVOVF9BTEdPUklUSE1fSURFTlRJRklFUiA9IFwiQVdTNC1ITUFDLVNIQTI1Ni1QQVlMT0FEXCI7XG5cbmV4cG9ydCBjb25zdCBVTlNJR05FRF9QQVlMT0FEID0gXCJVTlNJR05FRC1QQVlMT0FEXCI7XG5cbmV4cG9ydCBjb25zdCBNQVhfQ0FDSEVfU0laRSA9IDUwO1xuZXhwb3J0IGNvbnN0IEtFWV9UWVBFX0lERU5USUZJRVIgPSBcImF3czRfcmVxdWVzdFwiO1xuXG5leHBvcnQgY29uc3QgTUFYX1BSRVNJR05FRF9UVEwgPSA2MCAqIDYwICogMjQgKiA3O1xuIl19","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.clearCredentialCache = exports.getSigningKey = exports.createScope = void 0;\nconst util_hex_encoding_1 = require(\"@aws-sdk/util-hex-encoding\");\nconst constants_1 = require(\"./constants\");\nconst signingKeyCache = {};\nconst cacheQueue = [];\n/**\n * Create a string describing the scope of credentials used to sign a request.\n *\n * @param shortDate The current calendar date in the form YYYYMMDD.\n * @param region    The AWS region in which the service resides.\n * @param service   The service to which the signed request is being sent.\n */\nconst createScope = (shortDate, region, service) => `${shortDate}/${region}/${service}/${constants_1.KEY_TYPE_IDENTIFIER}`;\nexports.createScope = createScope;\n/**\n * Derive a signing key from its composite parts\n *\n * @param sha256Constructor A constructor function that can instantiate SHA-256\n *                          hash objects.\n * @param credentials       The credentials with which the request will be\n *                          signed.\n * @param shortDate         The current calendar date in the form YYYYMMDD.\n * @param region            The AWS region in which the service resides.\n * @param service           The service to which the signed request is being\n *                          sent.\n */\nconst getSigningKey = async (sha256Constructor, credentials, shortDate, region, service) => {\n    const credsHash = await hmac(sha256Constructor, credentials.secretAccessKey, credentials.accessKeyId);\n    const cacheKey = `${shortDate}:${region}:${service}:${(0, util_hex_encoding_1.toHex)(credsHash)}:${credentials.sessionToken}`;\n    if (cacheKey in signingKeyCache) {\n        return signingKeyCache[cacheKey];\n    }\n    cacheQueue.push(cacheKey);\n    while (cacheQueue.length > constants_1.MAX_CACHE_SIZE) {\n        delete signingKeyCache[cacheQueue.shift()];\n    }\n    let key = `AWS4${credentials.secretAccessKey}`;\n    for (const signable of [shortDate, region, service, constants_1.KEY_TYPE_IDENTIFIER]) {\n        key = await hmac(sha256Constructor, key, signable);\n    }\n    return (signingKeyCache[cacheKey] = key);\n};\nexports.getSigningKey = getSigningKey;\n/**\n * @internal\n */\nconst clearCredentialCache = () => {\n    cacheQueue.length = 0;\n    Object.keys(signingKeyCache).forEach((cacheKey) => {\n        delete signingKeyCache[cacheKey];\n    });\n};\nexports.clearCredentialCache = clearCredentialCache;\nconst hmac = (ctor, secret, data) => {\n    const hash = new ctor(secret);\n    hash.update(data);\n    return hash.digest();\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3JlZGVudGlhbERlcml2YXRpb24uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvY3JlZGVudGlhbERlcml2YXRpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQ0Esa0VBQW1EO0FBRW5ELDJDQUFrRTtBQUVsRSxNQUFNLGVBQWUsR0FBa0MsRUFBRSxDQUFDO0FBQzFELE1BQU0sVUFBVSxHQUFrQixFQUFFLENBQUM7QUFFckM7Ozs7OztHQU1HO0FBQ0ksTUFBTSxXQUFXLEdBQUcsQ0FBQyxTQUFpQixFQUFFLE1BQWMsRUFBRSxPQUFlLEVBQVUsRUFBRSxDQUN4RixHQUFHLFNBQVMsSUFBSSxNQUFNLElBQUksT0FBTyxJQUFJLCtCQUFtQixFQUFFLENBQUM7QUFEaEQsUUFBQSxXQUFXLGVBQ3FDO0FBRTdEOzs7Ozs7Ozs7OztHQVdHO0FBQ0ksTUFBTSxhQUFhLEdBQUcsS0FBSyxFQUNoQyxpQkFBa0MsRUFDbEMsV0FBd0IsRUFDeEIsU0FBaUIsRUFDakIsTUFBYyxFQUNkLE9BQWUsRUFDTSxFQUFFO0lBQ3ZCLE1BQU0sU0FBUyxHQUFHLE1BQU0sSUFBSSxDQUFDLGlCQUFpQixFQUFFLFdBQVcsQ0FBQyxlQUFlLEVBQUUsV0FBVyxDQUFDLFdBQVcsQ0FBQyxDQUFDO0lBQ3RHLE1BQU0sUUFBUSxHQUFHLEdBQUcsU0FBUyxJQUFJLE1BQU0sSUFBSSxPQUFPLElBQUksSUFBQSx5QkFBSyxFQUFDLFNBQVMsQ0FBQyxJQUFJLFdBQVcsQ0FBQyxZQUFZLEVBQUUsQ0FBQztJQUNyRyxJQUFJLFFBQVEsSUFBSSxlQUFlLEVBQUU7UUFDL0IsT0FBTyxlQUFlLENBQUMsUUFBUSxDQUFDLENBQUM7S0FDbEM7SUFFRCxVQUFVLENBQUMsSUFBSSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQzFCLE9BQU8sVUFBVSxDQUFDLE1BQU0sR0FBRywwQkFBYyxFQUFFO1FBQ3pDLE9BQU8sZUFBZSxDQUFDLFVBQVUsQ0FBQyxLQUFLLEVBQVksQ0FBQyxDQUFDO0tBQ3REO0lBRUQsSUFBSSxHQUFHLEdBQWUsT0FBTyxXQUFXLENBQUMsZUFBZSxFQUFFLENBQUM7SUFDM0QsS0FBSyxNQUFNLFFBQVEsSUFBSSxDQUFDLFNBQVMsRUFBRSxNQUFNLEVBQUUsT0FBTyxFQUFFLCtCQUFtQixDQUFDLEVBQUU7UUFDeEUsR0FBRyxHQUFHLE1BQU0sSUFBSSxDQUFDLGlCQUFpQixFQUFFLEdBQUcsRUFBRSxRQUFRLENBQUMsQ0FBQztLQUNwRDtJQUNELE9BQU8sQ0FBQyxlQUFlLENBQUMsUUFBUSxDQUFDLEdBQUcsR0FBaUIsQ0FBQyxDQUFDO0FBQ3pELENBQUMsQ0FBQztBQXZCVyxRQUFBLGFBQWEsaUJBdUJ4QjtBQUVGOztHQUVHO0FBQ0ksTUFBTSxvQkFBb0IsR0FBRyxHQUFTLEVBQUU7SUFDN0MsVUFBVSxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUM7SUFDdEIsTUFBTSxDQUFDLElBQUksQ0FBQyxlQUFlLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxRQUFRLEVBQUUsRUFBRTtRQUNoRCxPQUFPLGVBQWUsQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNuQyxDQUFDLENBQUMsQ0FBQztBQUNMLENBQUMsQ0FBQztBQUxXLFFBQUEsb0JBQW9CLHdCQUsvQjtBQUVGLE1BQU0sSUFBSSxHQUFHLENBQUMsSUFBcUIsRUFBRSxNQUFrQixFQUFFLElBQWdCLEVBQXVCLEVBQUU7SUFDaEcsTUFBTSxJQUFJLEdBQUcsSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDOUIsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUNsQixPQUFPLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQztBQUN2QixDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDcmVkZW50aWFscywgSGFzaENvbnN0cnVjdG9yLCBTb3VyY2VEYXRhIH0gZnJvbSBcIkBhd3Mtc2RrL3R5cGVzXCI7XG5pbXBvcnQgeyB0b0hleCB9IGZyb20gXCJAYXdzLXNkay91dGlsLWhleC1lbmNvZGluZ1wiO1xuXG5pbXBvcnQgeyBLRVlfVFlQRV9JREVOVElGSUVSLCBNQVhfQ0FDSEVfU0laRSB9IGZyb20gXCIuL2NvbnN0YW50c1wiO1xuXG5jb25zdCBzaWduaW5nS2V5Q2FjaGU6IHsgW2tleTogc3RyaW5nXTogVWludDhBcnJheSB9ID0ge307XG5jb25zdCBjYWNoZVF1ZXVlOiBBcnJheTxzdHJpbmc+ID0gW107XG5cbi8qKlxuICogQ3JlYXRlIGEgc3RyaW5nIGRlc2NyaWJpbmcgdGhlIHNjb3BlIG9mIGNyZWRlbnRpYWxzIHVzZWQgdG8gc2lnbiBhIHJlcXVlc3QuXG4gKlxuICogQHBhcmFtIHNob3J0RGF0ZSBUaGUgY3VycmVudCBjYWxlbmRhciBkYXRlIGluIHRoZSBmb3JtIFlZWVlNTURELlxuICogQHBhcmFtIHJlZ2lvbiAgICBUaGUgQVdTIHJlZ2lvbiBpbiB3aGljaCB0aGUgc2VydmljZSByZXNpZGVzLlxuICogQHBhcmFtIHNlcnZpY2UgICBUaGUgc2VydmljZSB0byB3aGljaCB0aGUgc2lnbmVkIHJlcXVlc3QgaXMgYmVpbmcgc2VudC5cbiAqL1xuZXhwb3J0IGNvbnN0IGNyZWF0ZVNjb3BlID0gKHNob3J0RGF0ZTogc3RyaW5nLCByZWdpb246IHN0cmluZywgc2VydmljZTogc3RyaW5nKTogc3RyaW5nID0+XG4gIGAke3Nob3J0RGF0ZX0vJHtyZWdpb259LyR7c2VydmljZX0vJHtLRVlfVFlQRV9JREVOVElGSUVSfWA7XG5cbi8qKlxuICogRGVyaXZlIGEgc2lnbmluZyBrZXkgZnJvbSBpdHMgY29tcG9zaXRlIHBhcnRzXG4gKlxuICogQHBhcmFtIHNoYTI1NkNvbnN0cnVjdG9yIEEgY29uc3RydWN0b3IgZnVuY3Rpb24gdGhhdCBjYW4gaW5zdGFudGlhdGUgU0hBLTI1NlxuICogICAgICAgICAgICAgICAgICAgICAgICAgIGhhc2ggb2JqZWN0cy5cbiAqIEBwYXJhbSBjcmVkZW50aWFscyAgICAgICBUaGUgY3JlZGVudGlhbHMgd2l0aCB3aGljaCB0aGUgcmVxdWVzdCB3aWxsIGJlXG4gKiAgICAgICAgICAgICAgICAgICAgICAgICAgc2lnbmVkLlxuICogQHBhcmFtIHNob3J0RGF0ZSAgICAgICAgIFRoZSBjdXJyZW50IGNhbGVuZGFyIGRhdGUgaW4gdGhlIGZvcm0gWVlZWU1NREQuXG4gKiBAcGFyYW0gcmVnaW9uICAgICAgICAgICAgVGhlIEFXUyByZWdpb24gaW4gd2hpY2ggdGhlIHNlcnZpY2UgcmVzaWRlcy5cbiAqIEBwYXJhbSBzZXJ2aWNlICAgICAgICAgICBUaGUgc2VydmljZSB0byB3aGljaCB0aGUgc2lnbmVkIHJlcXVlc3QgaXMgYmVpbmdcbiAqICAgICAgICAgICAgICAgICAgICAgICAgICBzZW50LlxuICovXG5leHBvcnQgY29uc3QgZ2V0U2lnbmluZ0tleSA9IGFzeW5jIChcbiAgc2hhMjU2Q29uc3RydWN0b3I6IEhhc2hDb25zdHJ1Y3RvcixcbiAgY3JlZGVudGlhbHM6IENyZWRlbnRpYWxzLFxuICBzaG9ydERhdGU6IHN0cmluZyxcbiAgcmVnaW9uOiBzdHJpbmcsXG4gIHNlcnZpY2U6IHN0cmluZ1xuKTogUHJvbWlzZTxVaW50OEFycmF5PiA9PiB7XG4gIGNvbnN0IGNyZWRzSGFzaCA9IGF3YWl0IGhtYWMoc2hhMjU2Q29uc3RydWN0b3IsIGNyZWRlbnRpYWxzLnNlY3JldEFjY2Vzc0tleSwgY3JlZGVudGlhbHMuYWNjZXNzS2V5SWQpO1xuICBjb25zdCBjYWNoZUtleSA9IGAke3Nob3J0RGF0ZX06JHtyZWdpb259OiR7c2VydmljZX06JHt0b0hleChjcmVkc0hhc2gpfToke2NyZWRlbnRpYWxzLnNlc3Npb25Ub2tlbn1gO1xuICBpZiAoY2FjaGVLZXkgaW4gc2lnbmluZ0tleUNhY2hlKSB7XG4gICAgcmV0dXJuIHNpZ25pbmdLZXlDYWNoZVtjYWNoZUtleV07XG4gIH1cblxuICBjYWNoZVF1ZXVlLnB1c2goY2FjaGVLZXkpO1xuICB3aGlsZSAoY2FjaGVRdWV1ZS5sZW5ndGggPiBNQVhfQ0FDSEVfU0laRSkge1xuICAgIGRlbGV0ZSBzaWduaW5nS2V5Q2FjaGVbY2FjaGVRdWV1ZS5zaGlmdCgpIGFzIHN0cmluZ107XG4gIH1cblxuICBsZXQga2V5OiBTb3VyY2VEYXRhID0gYEFXUzQke2NyZWRlbnRpYWxzLnNlY3JldEFjY2Vzc0tleX1gO1xuICBmb3IgKGNvbnN0IHNpZ25hYmxlIG9mIFtzaG9ydERhdGUsIHJlZ2lvbiwgc2VydmljZSwgS0VZX1RZUEVfSURFTlRJRklFUl0pIHtcbiAgICBrZXkgPSBhd2FpdCBobWFjKHNoYTI1NkNvbnN0cnVjdG9yLCBrZXksIHNpZ25hYmxlKTtcbiAgfVxuICByZXR1cm4gKHNpZ25pbmdLZXlDYWNoZVtjYWNoZUtleV0gPSBrZXkgYXMgVWludDhBcnJheSk7XG59O1xuXG4vKipcbiAqIEBpbnRlcm5hbFxuICovXG5leHBvcnQgY29uc3QgY2xlYXJDcmVkZW50aWFsQ2FjaGUgPSAoKTogdm9pZCA9PiB7XG4gIGNhY2hlUXVldWUubGVuZ3RoID0gMDtcbiAgT2JqZWN0LmtleXMoc2lnbmluZ0tleUNhY2hlKS5mb3JFYWNoKChjYWNoZUtleSkgPT4ge1xuICAgIGRlbGV0ZSBzaWduaW5nS2V5Q2FjaGVbY2FjaGVLZXldO1xuICB9KTtcbn07XG5cbmNvbnN0IGhtYWMgPSAoY3RvcjogSGFzaENvbnN0cnVjdG9yLCBzZWNyZXQ6IFNvdXJjZURhdGEsIGRhdGE6IFNvdXJjZURhdGEpOiBQcm9taXNlPFVpbnQ4QXJyYXk+ID0+IHtcbiAgY29uc3QgaGFzaCA9IG5ldyBjdG9yKHNlY3JldCk7XG4gIGhhc2gudXBkYXRlKGRhdGEpO1xuICByZXR1cm4gaGFzaC5kaWdlc3QoKTtcbn07XG4iXX0=","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getCanonicalHeaders = void 0;\nconst constants_1 = require(\"./constants\");\n/**\n * @private\n */\nconst getCanonicalHeaders = ({ headers }, unsignableHeaders, signableHeaders) => {\n    const canonical = {};\n    for (const headerName of Object.keys(headers).sort()) {\n        const canonicalHeaderName = headerName.toLowerCase();\n        if (canonicalHeaderName in constants_1.ALWAYS_UNSIGNABLE_HEADERS ||\n            (unsignableHeaders === null || unsignableHeaders === void 0 ? void 0 : unsignableHeaders.has(canonicalHeaderName)) ||\n            constants_1.PROXY_HEADER_PATTERN.test(canonicalHeaderName) ||\n            constants_1.SEC_HEADER_PATTERN.test(canonicalHeaderName)) {\n            if (!signableHeaders || (signableHeaders && !signableHeaders.has(canonicalHeaderName))) {\n                continue;\n            }\n        }\n        canonical[canonicalHeaderName] = headers[headerName].trim().replace(/\\s+/g, \" \");\n    }\n    return canonical;\n};\nexports.getCanonicalHeaders = getCanonicalHeaders;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0Q2Fub25pY2FsSGVhZGVycy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9nZXRDYW5vbmljYWxIZWFkZXJzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUVBLDJDQUFrRztBQUVsRzs7R0FFRztBQUNJLE1BQU0sbUJBQW1CLEdBQUcsQ0FDakMsRUFBRSxPQUFPLEVBQWUsRUFDeEIsaUJBQStCLEVBQy9CLGVBQTZCLEVBQ2xCLEVBQUU7SUFDYixNQUFNLFNBQVMsR0FBYyxFQUFFLENBQUM7SUFDaEMsS0FBSyxNQUFNLFVBQVUsSUFBSSxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLElBQUksRUFBRSxFQUFFO1FBQ3BELE1BQU0sbUJBQW1CLEdBQUcsVUFBVSxDQUFDLFdBQVcsRUFBRSxDQUFDO1FBQ3JELElBQ0UsbUJBQW1CLElBQUkscUNBQXlCO2FBQ2hELGlCQUFpQixhQUFqQixpQkFBaUIsdUJBQWpCLGlCQUFpQixDQUFFLEdBQUcsQ0FBQyxtQkFBbUIsQ0FBQyxDQUFBO1lBQzNDLGdDQUFvQixDQUFDLElBQUksQ0FBQyxtQkFBbUIsQ0FBQztZQUM5Qyw4QkFBa0IsQ0FBQyxJQUFJLENBQUMsbUJBQW1CLENBQUMsRUFDNUM7WUFDQSxJQUFJLENBQUMsZUFBZSxJQUFJLENBQUMsZUFBZSxJQUFJLENBQUMsZUFBZSxDQUFDLEdBQUcsQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDLEVBQUU7Z0JBQ3RGLFNBQVM7YUFDVjtTQUNGO1FBRUQsU0FBUyxDQUFDLG1CQUFtQixDQUFDLEdBQUcsT0FBTyxDQUFDLFVBQVUsQ0FBQyxDQUFDLElBQUksRUFBRSxDQUFDLE9BQU8sQ0FBQyxNQUFNLEVBQUUsR0FBRyxDQUFDLENBQUM7S0FDbEY7SUFFRCxPQUFPLFNBQVMsQ0FBQztBQUNuQixDQUFDLENBQUM7QUF2QlcsUUFBQSxtQkFBbUIsdUJBdUI5QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEhlYWRlckJhZywgSHR0cFJlcXVlc3QgfSBmcm9tIFwiQGF3cy1zZGsvdHlwZXNcIjtcblxuaW1wb3J0IHsgQUxXQVlTX1VOU0lHTkFCTEVfSEVBREVSUywgUFJPWFlfSEVBREVSX1BBVFRFUk4sIFNFQ19IRUFERVJfUEFUVEVSTiB9IGZyb20gXCIuL2NvbnN0YW50c1wiO1xuXG4vKipcbiAqIEBwcml2YXRlXG4gKi9cbmV4cG9ydCBjb25zdCBnZXRDYW5vbmljYWxIZWFkZXJzID0gKFxuICB7IGhlYWRlcnMgfTogSHR0cFJlcXVlc3QsXG4gIHVuc2lnbmFibGVIZWFkZXJzPzogU2V0PHN0cmluZz4sXG4gIHNpZ25hYmxlSGVhZGVycz86IFNldDxzdHJpbmc+XG4pOiBIZWFkZXJCYWcgPT4ge1xuICBjb25zdCBjYW5vbmljYWw6IEhlYWRlckJhZyA9IHt9O1xuICBmb3IgKGNvbnN0IGhlYWRlck5hbWUgb2YgT2JqZWN0LmtleXMoaGVhZGVycykuc29ydCgpKSB7XG4gICAgY29uc3QgY2Fub25pY2FsSGVhZGVyTmFtZSA9IGhlYWRlck5hbWUudG9Mb3dlckNhc2UoKTtcbiAgICBpZiAoXG4gICAgICBjYW5vbmljYWxIZWFkZXJOYW1lIGluIEFMV0FZU19VTlNJR05BQkxFX0hFQURFUlMgfHxcbiAgICAgIHVuc2lnbmFibGVIZWFkZXJzPy5oYXMoY2Fub25pY2FsSGVhZGVyTmFtZSkgfHxcbiAgICAgIFBST1hZX0hFQURFUl9QQVRURVJOLnRlc3QoY2Fub25pY2FsSGVhZGVyTmFtZSkgfHxcbiAgICAgIFNFQ19IRUFERVJfUEFUVEVSTi50ZXN0KGNhbm9uaWNhbEhlYWRlck5hbWUpXG4gICAgKSB7XG4gICAgICBpZiAoIXNpZ25hYmxlSGVhZGVycyB8fCAoc2lnbmFibGVIZWFkZXJzICYmICFzaWduYWJsZUhlYWRlcnMuaGFzKGNhbm9uaWNhbEhlYWRlck5hbWUpKSkge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBjYW5vbmljYWxbY2Fub25pY2FsSGVhZGVyTmFtZV0gPSBoZWFkZXJzW2hlYWRlck5hbWVdLnRyaW0oKS5yZXBsYWNlKC9cXHMrL2csIFwiIFwiKTtcbiAgfVxuXG4gIHJldHVybiBjYW5vbmljYWw7XG59O1xuIl19","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getCanonicalQuery = void 0;\nconst util_uri_escape_1 = require(\"@aws-sdk/util-uri-escape\");\nconst constants_1 = require(\"./constants\");\n/**\n * @private\n */\nconst getCanonicalQuery = ({ query = {} }) => {\n    const keys = [];\n    const serialized = {};\n    for (const key of Object.keys(query).sort()) {\n        if (key.toLowerCase() === constants_1.SIGNATURE_HEADER) {\n            continue;\n        }\n        keys.push(key);\n        const value = query[key];\n        if (typeof value === \"string\") {\n            serialized[key] = `${(0, util_uri_escape_1.escapeUri)(key)}=${(0, util_uri_escape_1.escapeUri)(value)}`;\n        }\n        else if (Array.isArray(value)) {\n            serialized[key] = value\n                .slice(0)\n                .sort()\n                .reduce((encoded, value) => encoded.concat([`${(0, util_uri_escape_1.escapeUri)(key)}=${(0, util_uri_escape_1.escapeUri)(value)}`]), [])\n                .join(\"&\");\n        }\n    }\n    return keys\n        .map((key) => serialized[key])\n        .filter((serialized) => serialized) // omit any falsy values\n        .join(\"&\");\n};\nexports.getCanonicalQuery = getCanonicalQuery;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0Q2Fub25pY2FsUXVlcnkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvZ2V0Q2Fub25pY2FsUXVlcnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQ0EsOERBQXFEO0FBRXJELDJDQUErQztBQUUvQzs7R0FFRztBQUNJLE1BQU0saUJBQWlCLEdBQUcsQ0FBQyxFQUFFLEtBQUssR0FBRyxFQUFFLEVBQWUsRUFBVSxFQUFFO0lBQ3ZFLE1BQU0sSUFBSSxHQUFrQixFQUFFLENBQUM7SUFDL0IsTUFBTSxVQUFVLEdBQThCLEVBQUUsQ0FBQztJQUNqRCxLQUFLLE1BQU0sR0FBRyxJQUFJLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsSUFBSSxFQUFFLEVBQUU7UUFDM0MsSUFBSSxHQUFHLENBQUMsV0FBVyxFQUFFLEtBQUssNEJBQWdCLEVBQUU7WUFDMUMsU0FBUztTQUNWO1FBRUQsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUNmLE1BQU0sS0FBSyxHQUFHLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUN6QixJQUFJLE9BQU8sS0FBSyxLQUFLLFFBQVEsRUFBRTtZQUM3QixVQUFVLENBQUMsR0FBRyxDQUFDLEdBQUcsR0FBRyxJQUFBLDJCQUFTLEVBQUMsR0FBRyxDQUFDLElBQUksSUFBQSwyQkFBUyxFQUFDLEtBQUssQ0FBQyxFQUFFLENBQUM7U0FDM0Q7YUFBTSxJQUFJLEtBQUssQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLEVBQUU7WUFDL0IsVUFBVSxDQUFDLEdBQUcsQ0FBQyxHQUFHLEtBQUs7aUJBQ3BCLEtBQUssQ0FBQyxDQUFDLENBQUM7aUJBQ1IsSUFBSSxFQUFFO2lCQUNOLE1BQU0sQ0FDTCxDQUFDLE9BQXNCLEVBQUUsS0FBYSxFQUFFLEVBQUUsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUMsR0FBRyxJQUFBLDJCQUFTLEVBQUMsR0FBRyxDQUFDLElBQUksSUFBQSwyQkFBUyxFQUFDLEtBQUssQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUNwRyxFQUFFLENBQ0g7aUJBQ0EsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1NBQ2Q7S0FDRjtJQUVELE9BQU8sSUFBSTtTQUNSLEdBQUcsQ0FBQyxDQUFDLEdBQUcsRUFBRSxFQUFFLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1NBQzdCLE1BQU0sQ0FBQyxDQUFDLFVBQVUsRUFBRSxFQUFFLENBQUMsVUFBVSxDQUFDLENBQUMsd0JBQXdCO1NBQzNELElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztBQUNmLENBQUMsQ0FBQztBQTVCVyxRQUFBLGlCQUFpQixxQkE0QjVCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSHR0cFJlcXVlc3QgfSBmcm9tIFwiQGF3cy1zZGsvdHlwZXNcIjtcbmltcG9ydCB7IGVzY2FwZVVyaSB9IGZyb20gXCJAYXdzLXNkay91dGlsLXVyaS1lc2NhcGVcIjtcblxuaW1wb3J0IHsgU0lHTkFUVVJFX0hFQURFUiB9IGZyb20gXCIuL2NvbnN0YW50c1wiO1xuXG4vKipcbiAqIEBwcml2YXRlXG4gKi9cbmV4cG9ydCBjb25zdCBnZXRDYW5vbmljYWxRdWVyeSA9ICh7IHF1ZXJ5ID0ge30gfTogSHR0cFJlcXVlc3QpOiBzdHJpbmcgPT4ge1xuICBjb25zdCBrZXlzOiBBcnJheTxzdHJpbmc+ID0gW107XG4gIGNvbnN0IHNlcmlhbGl6ZWQ6IHsgW2tleTogc3RyaW5nXTogc3RyaW5nIH0gPSB7fTtcbiAgZm9yIChjb25zdCBrZXkgb2YgT2JqZWN0LmtleXMocXVlcnkpLnNvcnQoKSkge1xuICAgIGlmIChrZXkudG9Mb3dlckNhc2UoKSA9PT0gU0lHTkFUVVJFX0hFQURFUikge1xuICAgICAgY29udGludWU7XG4gICAgfVxuXG4gICAga2V5cy5wdXNoKGtleSk7XG4gICAgY29uc3QgdmFsdWUgPSBxdWVyeVtrZXldO1xuICAgIGlmICh0eXBlb2YgdmFsdWUgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgIHNlcmlhbGl6ZWRba2V5XSA9IGAke2VzY2FwZVVyaShrZXkpfT0ke2VzY2FwZVVyaSh2YWx1ZSl9YDtcbiAgICB9IGVsc2UgaWYgKEFycmF5LmlzQXJyYXkodmFsdWUpKSB7XG4gICAgICBzZXJpYWxpemVkW2tleV0gPSB2YWx1ZVxuICAgICAgICAuc2xpY2UoMClcbiAgICAgICAgLnNvcnQoKVxuICAgICAgICAucmVkdWNlKFxuICAgICAgICAgIChlbmNvZGVkOiBBcnJheTxzdHJpbmc+LCB2YWx1ZTogc3RyaW5nKSA9PiBlbmNvZGVkLmNvbmNhdChbYCR7ZXNjYXBlVXJpKGtleSl9PSR7ZXNjYXBlVXJpKHZhbHVlKX1gXSksXG4gICAgICAgICAgW11cbiAgICAgICAgKVxuICAgICAgICAuam9pbihcIiZcIik7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGtleXNcbiAgICAubWFwKChrZXkpID0+IHNlcmlhbGl6ZWRba2V5XSlcbiAgICAuZmlsdGVyKChzZXJpYWxpemVkKSA9PiBzZXJpYWxpemVkKSAvLyBvbWl0IGFueSBmYWxzeSB2YWx1ZXNcbiAgICAuam9pbihcIiZcIik7XG59O1xuIl19","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getPayloadHash = void 0;\nconst is_array_buffer_1 = require(\"@aws-sdk/is-array-buffer\");\nconst util_hex_encoding_1 = require(\"@aws-sdk/util-hex-encoding\");\nconst constants_1 = require(\"./constants\");\n/**\n * @private\n */\nconst getPayloadHash = async ({ headers, body }, hashConstructor) => {\n    for (const headerName of Object.keys(headers)) {\n        if (headerName.toLowerCase() === constants_1.SHA256_HEADER) {\n            return headers[headerName];\n        }\n    }\n    if (body == undefined) {\n        return \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\";\n    }\n    else if (typeof body === \"string\" || ArrayBuffer.isView(body) || (0, is_array_buffer_1.isArrayBuffer)(body)) {\n        const hashCtor = new hashConstructor();\n        hashCtor.update(body);\n        return (0, util_hex_encoding_1.toHex)(await hashCtor.digest());\n    }\n    // As any defined body that is not a string or binary data is a stream, this\n    // body is unsignable. Attempt to send the request with an unsigned payload,\n    // which may or may not be accepted by the service.\n    return constants_1.UNSIGNED_PAYLOAD;\n};\nexports.getPayloadHash = getPayloadHash;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0UGF5bG9hZEhhc2guanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvZ2V0UGF5bG9hZEhhc2gudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsOERBQXlEO0FBRXpELGtFQUFtRDtBQUVuRCwyQ0FBOEQ7QUFFOUQ7O0dBRUc7QUFDSSxNQUFNLGNBQWMsR0FBRyxLQUFLLEVBQ2pDLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBZSxFQUM5QixlQUFnQyxFQUNmLEVBQUU7SUFDbkIsS0FBSyxNQUFNLFVBQVUsSUFBSSxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxFQUFFO1FBQzdDLElBQUksVUFBVSxDQUFDLFdBQVcsRUFBRSxLQUFLLHlCQUFhLEVBQUU7WUFDOUMsT0FBTyxPQUFPLENBQUMsVUFBVSxDQUFDLENBQUM7U0FDNUI7S0FDRjtJQUVELElBQUksSUFBSSxJQUFJLFNBQVMsRUFBRTtRQUNyQixPQUFPLGtFQUFrRSxDQUFDO0tBQzNFO1NBQU0sSUFBSSxPQUFPLElBQUksS0FBSyxRQUFRLElBQUksV0FBVyxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxJQUFBLCtCQUFhLEVBQUMsSUFBSSxDQUFDLEVBQUU7UUFDdEYsTUFBTSxRQUFRLEdBQUcsSUFBSSxlQUFlLEVBQUUsQ0FBQztRQUN2QyxRQUFRLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ3RCLE9BQU8sSUFBQSx5QkFBSyxFQUFDLE1BQU0sUUFBUSxDQUFDLE1BQU0sRUFBRSxDQUFDLENBQUM7S0FDdkM7SUFFRCw0RUFBNEU7SUFDNUUsNEVBQTRFO0lBQzVFLG1EQUFtRDtJQUNuRCxPQUFPLDRCQUFnQixDQUFDO0FBQzFCLENBQUMsQ0FBQztBQXRCVyxRQUFBLGNBQWMsa0JBc0J6QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGlzQXJyYXlCdWZmZXIgfSBmcm9tIFwiQGF3cy1zZGsvaXMtYXJyYXktYnVmZmVyXCI7XG5pbXBvcnQgeyBIYXNoQ29uc3RydWN0b3IsIEh0dHBSZXF1ZXN0IH0gZnJvbSBcIkBhd3Mtc2RrL3R5cGVzXCI7XG5pbXBvcnQgeyB0b0hleCB9IGZyb20gXCJAYXdzLXNkay91dGlsLWhleC1lbmNvZGluZ1wiO1xuXG5pbXBvcnQgeyBTSEEyNTZfSEVBREVSLCBVTlNJR05FRF9QQVlMT0FEIH0gZnJvbSBcIi4vY29uc3RhbnRzXCI7XG5cbi8qKlxuICogQHByaXZhdGVcbiAqL1xuZXhwb3J0IGNvbnN0IGdldFBheWxvYWRIYXNoID0gYXN5bmMgKFxuICB7IGhlYWRlcnMsIGJvZHkgfTogSHR0cFJlcXVlc3QsXG4gIGhhc2hDb25zdHJ1Y3RvcjogSGFzaENvbnN0cnVjdG9yXG4pOiBQcm9taXNlPHN0cmluZz4gPT4ge1xuICBmb3IgKGNvbnN0IGhlYWRlck5hbWUgb2YgT2JqZWN0LmtleXMoaGVhZGVycykpIHtcbiAgICBpZiAoaGVhZGVyTmFtZS50b0xvd2VyQ2FzZSgpID09PSBTSEEyNTZfSEVBREVSKSB7XG4gICAgICByZXR1cm4gaGVhZGVyc1toZWFkZXJOYW1lXTtcbiAgICB9XG4gIH1cblxuICBpZiAoYm9keSA9PSB1bmRlZmluZWQpIHtcbiAgICByZXR1cm4gXCJlM2IwYzQ0Mjk4ZmMxYzE0OWFmYmY0Yzg5OTZmYjkyNDI3YWU0MWU0NjQ5YjkzNGNhNDk1OTkxYjc4NTJiODU1XCI7XG4gIH0gZWxzZSBpZiAodHlwZW9mIGJvZHkgPT09IFwic3RyaW5nXCIgfHwgQXJyYXlCdWZmZXIuaXNWaWV3KGJvZHkpIHx8IGlzQXJyYXlCdWZmZXIoYm9keSkpIHtcbiAgICBjb25zdCBoYXNoQ3RvciA9IG5ldyBoYXNoQ29uc3RydWN0b3IoKTtcbiAgICBoYXNoQ3Rvci51cGRhdGUoYm9keSk7XG4gICAgcmV0dXJuIHRvSGV4KGF3YWl0IGhhc2hDdG9yLmRpZ2VzdCgpKTtcbiAgfVxuXG4gIC8vIEFzIGFueSBkZWZpbmVkIGJvZHkgdGhhdCBpcyBub3QgYSBzdHJpbmcgb3IgYmluYXJ5IGRhdGEgaXMgYSBzdHJlYW0sIHRoaXNcbiAgLy8gYm9keSBpcyB1bnNpZ25hYmxlLiBBdHRlbXB0IHRvIHNlbmQgdGhlIHJlcXVlc3Qgd2l0aCBhbiB1bnNpZ25lZCBwYXlsb2FkLFxuICAvLyB3aGljaCBtYXkgb3IgbWF5IG5vdCBiZSBhY2NlcHRlZCBieSB0aGUgc2VydmljZS5cbiAgcmV0dXJuIFVOU0lHTkVEX1BBWUxPQUQ7XG59O1xuIl19","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deleteHeader = exports.getHeaderValue = exports.hasHeader = void 0;\nconst hasHeader = (soughtHeader, headers) => {\n    soughtHeader = soughtHeader.toLowerCase();\n    for (const headerName of Object.keys(headers)) {\n        if (soughtHeader === headerName.toLowerCase()) {\n            return true;\n        }\n    }\n    return false;\n};\nexports.hasHeader = hasHeader;\n/* Get the value of one request header, ignore the case. Return string if header is in the headers, else return undefined */\nconst getHeaderValue = (soughtHeader, headers) => {\n    soughtHeader = soughtHeader.toLowerCase();\n    for (const headerName of Object.keys(headers)) {\n        if (soughtHeader === headerName.toLowerCase()) {\n            return headers[headerName];\n        }\n    }\n    return undefined;\n};\nexports.getHeaderValue = getHeaderValue;\n/* Delete the one request header, ignore the case. Do nothing if it's not there */\nconst deleteHeader = (soughtHeader, headers) => {\n    soughtHeader = soughtHeader.toLowerCase();\n    for (const headerName of Object.keys(headers)) {\n        if (soughtHeader === headerName.toLowerCase()) {\n            delete headers[headerName];\n        }\n    }\n};\nexports.deleteHeader = deleteHeader;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGVhZGVyVXRpbC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9oZWFkZXJVdGlsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUVPLE1BQU0sU0FBUyxHQUFHLENBQUMsWUFBb0IsRUFBRSxPQUFrQixFQUFXLEVBQUU7SUFDN0UsWUFBWSxHQUFHLFlBQVksQ0FBQyxXQUFXLEVBQUUsQ0FBQztJQUMxQyxLQUFLLE1BQU0sVUFBVSxJQUFJLE1BQU0sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLEVBQUU7UUFDN0MsSUFBSSxZQUFZLEtBQUssVUFBVSxDQUFDLFdBQVcsRUFBRSxFQUFFO1lBQzdDLE9BQU8sSUFBSSxDQUFDO1NBQ2I7S0FDRjtJQUVELE9BQU8sS0FBSyxDQUFDO0FBQ2YsQ0FBQyxDQUFDO0FBVFcsUUFBQSxTQUFTLGFBU3BCO0FBRUYsNEhBQTRIO0FBQ3JILE1BQU0sY0FBYyxHQUFHLENBQUMsWUFBb0IsRUFBRSxPQUFrQixFQUFzQixFQUFFO0lBQzdGLFlBQVksR0FBRyxZQUFZLENBQUMsV0FBVyxFQUFFLENBQUM7SUFDMUMsS0FBSyxNQUFNLFVBQVUsSUFBSSxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxFQUFFO1FBQzdDLElBQUksWUFBWSxLQUFLLFVBQVUsQ0FBQyxXQUFXLEVBQUUsRUFBRTtZQUM3QyxPQUFPLE9BQU8sQ0FBQyxVQUFVLENBQUMsQ0FBQztTQUM1QjtLQUNGO0lBRUQsT0FBTyxTQUFTLENBQUM7QUFDbkIsQ0FBQyxDQUFDO0FBVFcsUUFBQSxjQUFjLGtCQVN6QjtBQUVGLGtGQUFrRjtBQUMzRSxNQUFNLFlBQVksR0FBRyxDQUFDLFlBQW9CLEVBQUUsT0FBa0IsRUFBRSxFQUFFO0lBQ3ZFLFlBQVksR0FBRyxZQUFZLENBQUMsV0FBVyxFQUFFLENBQUM7SUFDMUMsS0FBSyxNQUFNLFVBQVUsSUFBSSxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxFQUFFO1FBQzdDLElBQUksWUFBWSxLQUFLLFVBQVUsQ0FBQyxXQUFXLEVBQUUsRUFBRTtZQUM3QyxPQUFPLE9BQU8sQ0FBQyxVQUFVLENBQUMsQ0FBQztTQUM1QjtLQUNGO0FBQ0gsQ0FBQyxDQUFDO0FBUFcsUUFBQSxZQUFZLGdCQU92QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEhlYWRlckJhZyB9IGZyb20gXCJAYXdzLXNkay90eXBlc1wiO1xuXG5leHBvcnQgY29uc3QgaGFzSGVhZGVyID0gKHNvdWdodEhlYWRlcjogc3RyaW5nLCBoZWFkZXJzOiBIZWFkZXJCYWcpOiBib29sZWFuID0+IHtcbiAgc291Z2h0SGVhZGVyID0gc291Z2h0SGVhZGVyLnRvTG93ZXJDYXNlKCk7XG4gIGZvciAoY29uc3QgaGVhZGVyTmFtZSBvZiBPYmplY3Qua2V5cyhoZWFkZXJzKSkge1xuICAgIGlmIChzb3VnaHRIZWFkZXIgPT09IGhlYWRlck5hbWUudG9Mb3dlckNhc2UoKSkge1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGZhbHNlO1xufTtcblxuLyogR2V0IHRoZSB2YWx1ZSBvZiBvbmUgcmVxdWVzdCBoZWFkZXIsIGlnbm9yZSB0aGUgY2FzZS4gUmV0dXJuIHN0cmluZyBpZiBoZWFkZXIgaXMgaW4gdGhlIGhlYWRlcnMsIGVsc2UgcmV0dXJuIHVuZGVmaW5lZCAqL1xuZXhwb3J0IGNvbnN0IGdldEhlYWRlclZhbHVlID0gKHNvdWdodEhlYWRlcjogc3RyaW5nLCBoZWFkZXJzOiBIZWFkZXJCYWcpOiBzdHJpbmcgfCB1bmRlZmluZWQgPT4ge1xuICBzb3VnaHRIZWFkZXIgPSBzb3VnaHRIZWFkZXIudG9Mb3dlckNhc2UoKTtcbiAgZm9yIChjb25zdCBoZWFkZXJOYW1lIG9mIE9iamVjdC5rZXlzKGhlYWRlcnMpKSB7XG4gICAgaWYgKHNvdWdodEhlYWRlciA9PT0gaGVhZGVyTmFtZS50b0xvd2VyQ2FzZSgpKSB7XG4gICAgICByZXR1cm4gaGVhZGVyc1toZWFkZXJOYW1lXTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gdW5kZWZpbmVkO1xufTtcblxuLyogRGVsZXRlIHRoZSBvbmUgcmVxdWVzdCBoZWFkZXIsIGlnbm9yZSB0aGUgY2FzZS4gRG8gbm90aGluZyBpZiBpdCdzIG5vdCB0aGVyZSAqL1xuZXhwb3J0IGNvbnN0IGRlbGV0ZUhlYWRlciA9IChzb3VnaHRIZWFkZXI6IHN0cmluZywgaGVhZGVyczogSGVhZGVyQmFnKSA9PiB7XG4gIHNvdWdodEhlYWRlciA9IHNvdWdodEhlYWRlci50b0xvd2VyQ2FzZSgpO1xuICBmb3IgKGNvbnN0IGhlYWRlck5hbWUgb2YgT2JqZWN0LmtleXMoaGVhZGVycykpIHtcbiAgICBpZiAoc291Z2h0SGVhZGVyID09PSBoZWFkZXJOYW1lLnRvTG93ZXJDYXNlKCkpIHtcbiAgICAgIGRlbGV0ZSBoZWFkZXJzW2hlYWRlck5hbWVdO1xuICAgIH1cbiAgfVxufTtcbiJdfQ==","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.normalizeRegionProvider = exports.normalizeCredentialsProvider = exports.prepareRequest = exports.moveHeadersToQuery = exports.getPayloadHash = exports.getCanonicalQuery = exports.getCanonicalHeaders = void 0;\nconst tslib_1 = require(\"tslib\");\n(0, tslib_1.__exportStar)(require(\"./credentialDerivation\"), exports);\nvar getCanonicalHeaders_1 = require(\"./getCanonicalHeaders\");\nObject.defineProperty(exports, \"getCanonicalHeaders\", { enumerable: true, get: function () { return getCanonicalHeaders_1.getCanonicalHeaders; } });\nvar getCanonicalQuery_1 = require(\"./getCanonicalQuery\");\nObject.defineProperty(exports, \"getCanonicalQuery\", { enumerable: true, get: function () { return getCanonicalQuery_1.getCanonicalQuery; } });\nvar getPayloadHash_1 = require(\"./getPayloadHash\");\nObject.defineProperty(exports, \"getPayloadHash\", { enumerable: true, get: function () { return getPayloadHash_1.getPayloadHash; } });\nvar moveHeadersToQuery_1 = require(\"./moveHeadersToQuery\");\nObject.defineProperty(exports, \"moveHeadersToQuery\", { enumerable: true, get: function () { return moveHeadersToQuery_1.moveHeadersToQuery; } });\nvar prepareRequest_1 = require(\"./prepareRequest\");\nObject.defineProperty(exports, \"prepareRequest\", { enumerable: true, get: function () { return prepareRequest_1.prepareRequest; } });\nvar normalizeProvider_1 = require(\"./normalizeProvider\");\nObject.defineProperty(exports, \"normalizeCredentialsProvider\", { enumerable: true, get: function () { return normalizeProvider_1.normalizeCredentialsProvider; } });\nObject.defineProperty(exports, \"normalizeRegionProvider\", { enumerable: true, get: function () { return normalizeProvider_1.normalizeRegionProvider; } });\n(0, tslib_1.__exportStar)(require(\"./SignatureV4\"), exports);\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLHNFQUF1QztBQUN2Qyw2REFBNEQ7QUFBbkQsMEhBQUEsbUJBQW1CLE9BQUE7QUFDNUIseURBQXdEO0FBQS9DLHNIQUFBLGlCQUFpQixPQUFBO0FBQzFCLG1EQUFrRDtBQUF6QyxnSEFBQSxjQUFjLE9BQUE7QUFDdkIsMkRBQTBEO0FBQWpELHdIQUFBLGtCQUFrQixPQUFBO0FBQzNCLG1EQUFrRDtBQUF6QyxnSEFBQSxjQUFjLE9BQUE7QUFDdkIseURBQTRGO0FBQW5GLGlJQUFBLDRCQUE0QixPQUFBO0FBQUUsNEhBQUEsdUJBQXVCLE9BQUE7QUFDOUQsNkRBQThCIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIi4vY3JlZGVudGlhbERlcml2YXRpb25cIjtcbmV4cG9ydCB7IGdldENhbm9uaWNhbEhlYWRlcnMgfSBmcm9tIFwiLi9nZXRDYW5vbmljYWxIZWFkZXJzXCI7XG5leHBvcnQgeyBnZXRDYW5vbmljYWxRdWVyeSB9IGZyb20gXCIuL2dldENhbm9uaWNhbFF1ZXJ5XCI7XG5leHBvcnQgeyBnZXRQYXlsb2FkSGFzaCB9IGZyb20gXCIuL2dldFBheWxvYWRIYXNoXCI7XG5leHBvcnQgeyBtb3ZlSGVhZGVyc1RvUXVlcnkgfSBmcm9tIFwiLi9tb3ZlSGVhZGVyc1RvUXVlcnlcIjtcbmV4cG9ydCB7IHByZXBhcmVSZXF1ZXN0IH0gZnJvbSBcIi4vcHJlcGFyZVJlcXVlc3RcIjtcbmV4cG9ydCB7IG5vcm1hbGl6ZUNyZWRlbnRpYWxzUHJvdmlkZXIsIG5vcm1hbGl6ZVJlZ2lvblByb3ZpZGVyIH0gZnJvbSBcIi4vbm9ybWFsaXplUHJvdmlkZXJcIjtcbmV4cG9ydCAqIGZyb20gXCIuL1NpZ25hdHVyZVY0XCI7XG4iXX0=","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.moveHeadersToQuery = void 0;\nconst cloneRequest_1 = require(\"./cloneRequest\");\n/**\n * @private\n */\nconst moveHeadersToQuery = (request, options = {}) => {\n    var _a;\n    const { headers, query = {} } = typeof request.clone === \"function\" ? request.clone() : (0, cloneRequest_1.cloneRequest)(request);\n    for (const name of Object.keys(headers)) {\n        const lname = name.toLowerCase();\n        if (lname.substr(0, 6) === \"x-amz-\" && !((_a = options.unhoistableHeaders) === null || _a === void 0 ? void 0 : _a.has(lname))) {\n            query[name] = headers[name];\n            delete headers[name];\n        }\n    }\n    return {\n        ...request,\n        headers,\n        query,\n    };\n};\nexports.moveHeadersToQuery = moveHeadersToQuery;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW92ZUhlYWRlcnNUb1F1ZXJ5LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL21vdmVIZWFkZXJzVG9RdWVyeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFFQSxpREFBOEM7QUFFOUM7O0dBRUc7QUFDSSxNQUFNLGtCQUFrQixHQUFHLENBQ2hDLE9BQW9CLEVBQ3BCLFVBQWdELEVBQUUsRUFDTixFQUFFOztJQUM5QyxNQUFNLEVBQUUsT0FBTyxFQUFFLEtBQUssR0FBRyxFQUF1QixFQUFFLEdBQ2hELE9BQVEsT0FBZSxDQUFDLEtBQUssS0FBSyxVQUFVLENBQUMsQ0FBQyxDQUFFLE9BQWUsQ0FBQyxLQUFLLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBQSwyQkFBWSxFQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQ2xHLEtBQUssTUFBTSxJQUFJLElBQUksTUFBTSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsRUFBRTtRQUN2QyxNQUFNLEtBQUssR0FBRyxJQUFJLENBQUMsV0FBVyxFQUFFLENBQUM7UUFDakMsSUFBSSxLQUFLLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsS0FBSyxRQUFRLElBQUksQ0FBQyxDQUFBLE1BQUEsT0FBTyxDQUFDLGtCQUFrQiwwQ0FBRSxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUEsRUFBRTtZQUM5RSxLQUFLLENBQUMsSUFBSSxDQUFDLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO1lBQzVCLE9BQU8sT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO1NBQ3RCO0tBQ0Y7SUFFRCxPQUFPO1FBQ0wsR0FBRyxPQUFPO1FBQ1YsT0FBTztRQUNQLEtBQUs7S0FDTixDQUFDO0FBQ0osQ0FBQyxDQUFDO0FBbkJXLFFBQUEsa0JBQWtCLHNCQW1CN0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBIdHRwUmVxdWVzdCwgUXVlcnlQYXJhbWV0ZXJCYWcgfSBmcm9tIFwiQGF3cy1zZGsvdHlwZXNcIjtcblxuaW1wb3J0IHsgY2xvbmVSZXF1ZXN0IH0gZnJvbSBcIi4vY2xvbmVSZXF1ZXN0XCI7XG5cbi8qKlxuICogQHByaXZhdGVcbiAqL1xuZXhwb3J0IGNvbnN0IG1vdmVIZWFkZXJzVG9RdWVyeSA9IChcbiAgcmVxdWVzdDogSHR0cFJlcXVlc3QsXG4gIG9wdGlvbnM6IHsgdW5ob2lzdGFibGVIZWFkZXJzPzogU2V0PHN0cmluZz4gfSA9IHt9XG4pOiBIdHRwUmVxdWVzdCAmIHsgcXVlcnk6IFF1ZXJ5UGFyYW1ldGVyQmFnIH0gPT4ge1xuICBjb25zdCB7IGhlYWRlcnMsIHF1ZXJ5ID0ge30gYXMgUXVlcnlQYXJhbWV0ZXJCYWcgfSA9XG4gICAgdHlwZW9mIChyZXF1ZXN0IGFzIGFueSkuY2xvbmUgPT09IFwiZnVuY3Rpb25cIiA/IChyZXF1ZXN0IGFzIGFueSkuY2xvbmUoKSA6IGNsb25lUmVxdWVzdChyZXF1ZXN0KTtcbiAgZm9yIChjb25zdCBuYW1lIG9mIE9iamVjdC5rZXlzKGhlYWRlcnMpKSB7XG4gICAgY29uc3QgbG5hbWUgPSBuYW1lLnRvTG93ZXJDYXNlKCk7XG4gICAgaWYgKGxuYW1lLnN1YnN0cigwLCA2KSA9PT0gXCJ4LWFtei1cIiAmJiAhb3B0aW9ucy51bmhvaXN0YWJsZUhlYWRlcnM/LmhhcyhsbmFtZSkpIHtcbiAgICAgIHF1ZXJ5W25hbWVdID0gaGVhZGVyc1tuYW1lXTtcbiAgICAgIGRlbGV0ZSBoZWFkZXJzW25hbWVdO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiB7XG4gICAgLi4ucmVxdWVzdCxcbiAgICBoZWFkZXJzLFxuICAgIHF1ZXJ5LFxuICB9O1xufTtcbiJdfQ==","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.normalizeCredentialsProvider = exports.normalizeRegionProvider = void 0;\n/**\n * @private\n */\nconst normalizeRegionProvider = (region) => {\n    if (typeof region === \"string\") {\n        const promisified = Promise.resolve(region);\n        return () => promisified;\n    }\n    else {\n        return region;\n    }\n};\nexports.normalizeRegionProvider = normalizeRegionProvider;\n/**\n * @private\n */\nconst normalizeCredentialsProvider = (credentials) => {\n    if (typeof credentials === \"object\") {\n        const promisified = Promise.resolve(credentials);\n        return () => promisified;\n    }\n    else {\n        return credentials;\n    }\n};\nexports.normalizeCredentialsProvider = normalizeCredentialsProvider;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibm9ybWFsaXplUHJvdmlkZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvbm9ybWFsaXplUHJvdmlkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBRUE7O0dBRUc7QUFDSSxNQUFNLHVCQUF1QixHQUFHLENBQUMsTUFBaUMsRUFBb0IsRUFBRTtJQUM3RixJQUFJLE9BQU8sTUFBTSxLQUFLLFFBQVEsRUFBRTtRQUM5QixNQUFNLFdBQVcsR0FBRyxPQUFPLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQzVDLE9BQU8sR0FBRyxFQUFFLENBQUMsV0FBVyxDQUFDO0tBQzFCO1NBQU07UUFDTCxPQUFPLE1BQU0sQ0FBQztLQUNmO0FBQ0gsQ0FBQyxDQUFDO0FBUFcsUUFBQSx1QkFBdUIsMkJBT2xDO0FBRUY7O0dBRUc7QUFDSSxNQUFNLDRCQUE0QixHQUFHLENBQzFDLFdBQWdELEVBQ3pCLEVBQUU7SUFDekIsSUFBSSxPQUFPLFdBQVcsS0FBSyxRQUFRLEVBQUU7UUFDbkMsTUFBTSxXQUFXLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQyxXQUFXLENBQUMsQ0FBQztRQUNqRCxPQUFPLEdBQUcsRUFBRSxDQUFDLFdBQVcsQ0FBQztLQUMxQjtTQUFNO1FBQ0wsT0FBTyxXQUFXLENBQUM7S0FDcEI7QUFDSCxDQUFDLENBQUM7QUFUVyxRQUFBLDRCQUE0QixnQ0FTdkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDcmVkZW50aWFscywgUHJvdmlkZXIgfSBmcm9tIFwiQGF3cy1zZGsvdHlwZXNcIjtcblxuLyoqXG4gKiBAcHJpdmF0ZVxuICovXG5leHBvcnQgY29uc3Qgbm9ybWFsaXplUmVnaW9uUHJvdmlkZXIgPSAocmVnaW9uOiBzdHJpbmcgfCBQcm92aWRlcjxzdHJpbmc+KTogUHJvdmlkZXI8c3RyaW5nPiA9PiB7XG4gIGlmICh0eXBlb2YgcmVnaW9uID09PSBcInN0cmluZ1wiKSB7XG4gICAgY29uc3QgcHJvbWlzaWZpZWQgPSBQcm9taXNlLnJlc29sdmUocmVnaW9uKTtcbiAgICByZXR1cm4gKCkgPT4gcHJvbWlzaWZpZWQ7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIHJlZ2lvbjtcbiAgfVxufTtcblxuLyoqXG4gKiBAcHJpdmF0ZVxuICovXG5leHBvcnQgY29uc3Qgbm9ybWFsaXplQ3JlZGVudGlhbHNQcm92aWRlciA9IChcbiAgY3JlZGVudGlhbHM6IENyZWRlbnRpYWxzIHwgUHJvdmlkZXI8Q3JlZGVudGlhbHM+XG4pOiBQcm92aWRlcjxDcmVkZW50aWFscz4gPT4ge1xuICBpZiAodHlwZW9mIGNyZWRlbnRpYWxzID09PSBcIm9iamVjdFwiKSB7XG4gICAgY29uc3QgcHJvbWlzaWZpZWQgPSBQcm9taXNlLnJlc29sdmUoY3JlZGVudGlhbHMpO1xuICAgIHJldHVybiAoKSA9PiBwcm9taXNpZmllZDtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gY3JlZGVudGlhbHM7XG4gIH1cbn07XG4iXX0=","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.prepareRequest = void 0;\nconst cloneRequest_1 = require(\"./cloneRequest\");\nconst constants_1 = require(\"./constants\");\n/**\n * @private\n */\nconst prepareRequest = (request) => {\n    // Create a clone of the request object that does not clone the body\n    request = typeof request.clone === \"function\" ? request.clone() : (0, cloneRequest_1.cloneRequest)(request);\n    for (const headerName of Object.keys(request.headers)) {\n        if (constants_1.GENERATED_HEADERS.indexOf(headerName.toLowerCase()) > -1) {\n            delete request.headers[headerName];\n        }\n    }\n    return request;\n};\nexports.prepareRequest = prepareRequest;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJlcGFyZVJlcXVlc3QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvcHJlcGFyZVJlcXVlc3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBRUEsaURBQThDO0FBQzlDLDJDQUFnRDtBQUVoRDs7R0FFRztBQUNJLE1BQU0sY0FBYyxHQUFHLENBQUMsT0FBb0IsRUFBZSxFQUFFO0lBQ2xFLG9FQUFvRTtJQUNwRSxPQUFPLEdBQUcsT0FBUSxPQUFlLENBQUMsS0FBSyxLQUFLLFVBQVUsQ0FBQyxDQUFDLENBQUUsT0FBZSxDQUFDLEtBQUssRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFBLDJCQUFZLEVBQUMsT0FBTyxDQUFDLENBQUM7SUFFMUcsS0FBSyxNQUFNLFVBQVUsSUFBSSxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsRUFBRTtRQUNyRCxJQUFJLDZCQUFpQixDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUMsV0FBVyxFQUFFLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRTtZQUM1RCxPQUFPLE9BQU8sQ0FBQyxPQUFPLENBQUMsVUFBVSxDQUFDLENBQUM7U0FDcEM7S0FDRjtJQUVELE9BQU8sT0FBTyxDQUFDO0FBQ2pCLENBQUMsQ0FBQztBQVhXLFFBQUEsY0FBYyxrQkFXekIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBIdHRwUmVxdWVzdCB9IGZyb20gXCJAYXdzLXNkay90eXBlc1wiO1xuXG5pbXBvcnQgeyBjbG9uZVJlcXVlc3QgfSBmcm9tIFwiLi9jbG9uZVJlcXVlc3RcIjtcbmltcG9ydCB7IEdFTkVSQVRFRF9IRUFERVJTIH0gZnJvbSBcIi4vY29uc3RhbnRzXCI7XG5cbi8qKlxuICogQHByaXZhdGVcbiAqL1xuZXhwb3J0IGNvbnN0IHByZXBhcmVSZXF1ZXN0ID0gKHJlcXVlc3Q6IEh0dHBSZXF1ZXN0KTogSHR0cFJlcXVlc3QgPT4ge1xuICAvLyBDcmVhdGUgYSBjbG9uZSBvZiB0aGUgcmVxdWVzdCBvYmplY3QgdGhhdCBkb2VzIG5vdCBjbG9uZSB0aGUgYm9keVxuICByZXF1ZXN0ID0gdHlwZW9mIChyZXF1ZXN0IGFzIGFueSkuY2xvbmUgPT09IFwiZnVuY3Rpb25cIiA/IChyZXF1ZXN0IGFzIGFueSkuY2xvbmUoKSA6IGNsb25lUmVxdWVzdChyZXF1ZXN0KTtcblxuICBmb3IgKGNvbnN0IGhlYWRlck5hbWUgb2YgT2JqZWN0LmtleXMocmVxdWVzdC5oZWFkZXJzKSkge1xuICAgIGlmIChHRU5FUkFURURfSEVBREVSUy5pbmRleE9mKGhlYWRlck5hbWUudG9Mb3dlckNhc2UoKSkgPiAtMSkge1xuICAgICAgZGVsZXRlIHJlcXVlc3QuaGVhZGVyc1toZWFkZXJOYW1lXTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gcmVxdWVzdDtcbn07XG4iXX0=","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toDate = exports.iso8601 = void 0;\nconst iso8601 = (time) => (0, exports.toDate)(time)\n    .toISOString()\n    .replace(/\\.\\d{3}Z$/, \"Z\");\nexports.iso8601 = iso8601;\nconst toDate = (time) => {\n    if (typeof time === \"number\") {\n        return new Date(time * 1000);\n    }\n    if (typeof time === \"string\") {\n        if (Number(time)) {\n            return new Date(Number(time) * 1000);\n        }\n        return new Date(time);\n    }\n    return time;\n};\nexports.toDate = toDate;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbERhdGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvdXRpbERhdGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQU8sTUFBTSxPQUFPLEdBQUcsQ0FBQyxJQUE0QixFQUFVLEVBQUUsQ0FDOUQsSUFBQSxjQUFNLEVBQUMsSUFBSSxDQUFDO0tBQ1QsV0FBVyxFQUFFO0tBQ2IsT0FBTyxDQUFDLFdBQVcsRUFBRSxHQUFHLENBQUMsQ0FBQztBQUhsQixRQUFBLE9BQU8sV0FHVztBQUV4QixNQUFNLE1BQU0sR0FBRyxDQUFDLElBQTRCLEVBQVEsRUFBRTtJQUMzRCxJQUFJLE9BQU8sSUFBSSxLQUFLLFFBQVEsRUFBRTtRQUM1QixPQUFPLElBQUksSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsQ0FBQztLQUM5QjtJQUVELElBQUksT0FBTyxJQUFJLEtBQUssUUFBUSxFQUFFO1FBQzVCLElBQUksTUFBTSxDQUFDLElBQUksQ0FBQyxFQUFFO1lBQ2hCLE9BQU8sSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDO1NBQ3RDO1FBQ0QsT0FBTyxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztLQUN2QjtJQUVELE9BQU8sSUFBSSxDQUFDO0FBQ2QsQ0FBQyxDQUFDO0FBYlcsUUFBQSxNQUFNLFVBYWpCIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IGlzbzg2MDEgPSAodGltZTogbnVtYmVyIHwgc3RyaW5nIHwgRGF0ZSk6IHN0cmluZyA9PlxuICB0b0RhdGUodGltZSlcbiAgICAudG9JU09TdHJpbmcoKVxuICAgIC5yZXBsYWNlKC9cXC5cXGR7M31aJC8sIFwiWlwiKTtcblxuZXhwb3J0IGNvbnN0IHRvRGF0ZSA9ICh0aW1lOiBudW1iZXIgfCBzdHJpbmcgfCBEYXRlKTogRGF0ZSA9PiB7XG4gIGlmICh0eXBlb2YgdGltZSA9PT0gXCJudW1iZXJcIikge1xuICAgIHJldHVybiBuZXcgRGF0ZSh0aW1lICogMTAwMCk7XG4gIH1cblxuICBpZiAodHlwZW9mIHRpbWUgPT09IFwic3RyaW5nXCIpIHtcbiAgICBpZiAoTnVtYmVyKHRpbWUpKSB7XG4gICAgICByZXR1cm4gbmV3IERhdGUoTnVtYmVyKHRpbWUpICogMTAwMCk7XG4gICAgfVxuICAgIHJldHVybiBuZXcgRGF0ZSh0aW1lKTtcbiAgfVxuXG4gIHJldHVybiB0aW1lO1xufTtcbiJdfQ==","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Client = void 0;\nconst middleware_stack_1 = require(\"@aws-sdk/middleware-stack\");\nclass Client {\n    constructor(config) {\n        this.middlewareStack = (0, middleware_stack_1.constructStack)();\n        this.config = config;\n    }\n    send(command, optionsOrCb, cb) {\n        const options = typeof optionsOrCb !== \"function\" ? optionsOrCb : undefined;\n        const callback = typeof optionsOrCb === \"function\" ? optionsOrCb : cb;\n        const handler = command.resolveMiddleware(this.middlewareStack, this.config, options);\n        if (callback) {\n            handler(command)\n                .then((result) => callback(null, result.output), (err) => callback(err))\n                .catch(\n            // prevent any errors thrown in the callback from triggering an\n            // unhandled promise rejection\n            () => { });\n        }\n        else {\n            return handler(command).then((result) => result.output);\n        }\n    }\n    destroy() {\n        if (this.config.requestHandler.destroy)\n            this.config.requestHandler.destroy();\n    }\n}\nexports.Client = Client;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2xpZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2NsaWVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSxnRUFBMkQ7QUFlM0QsTUFBYSxNQUFNO0lBU2pCLFlBQVksTUFBbUM7UUFGeEMsb0JBQWUsR0FBK0MsSUFBQSxpQ0FBYyxHQUE2QixDQUFDO1FBRy9HLElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDO0lBQ3ZCLENBQUM7SUFjRCxJQUFJLENBQ0YsT0FBK0csRUFDL0csV0FBc0UsRUFDdEUsRUFBMEM7UUFFMUMsTUFBTSxPQUFPLEdBQUcsT0FBTyxXQUFXLEtBQUssVUFBVSxDQUFDLENBQUMsQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQztRQUM1RSxNQUFNLFFBQVEsR0FBRyxPQUFPLFdBQVcsS0FBSyxVQUFVLENBQUMsQ0FBQyxDQUFFLFdBQXFELENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQztRQUNqSCxNQUFNLE9BQU8sR0FBRyxPQUFPLENBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDLGVBQXNCLEVBQUUsSUFBSSxDQUFDLE1BQU0sRUFBRSxPQUFPLENBQUMsQ0FBQztRQUM3RixJQUFJLFFBQVEsRUFBRTtZQUNaLE9BQU8sQ0FBQyxPQUFPLENBQUM7aUJBQ2IsSUFBSSxDQUNILENBQUMsTUFBTSxFQUFFLEVBQUUsQ0FBQyxRQUFRLENBQUMsSUFBSSxFQUFFLE1BQU0sQ0FBQyxNQUFNLENBQUMsRUFDekMsQ0FBQyxHQUFRLEVBQUUsRUFBRSxDQUFDLFFBQVEsQ0FBQyxHQUFHLENBQUMsQ0FDNUI7aUJBQ0EsS0FBSztZQUNKLCtEQUErRDtZQUMvRCw4QkFBOEI7WUFDOUIsR0FBRyxFQUFFLEdBQUUsQ0FBQyxDQUNULENBQUM7U0FDTDthQUFNO1lBQ0wsT0FBTyxPQUFPLENBQUMsT0FBTyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsTUFBTSxFQUFFLEVBQUUsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDekQ7SUFDSCxDQUFDO0lBRUQsT0FBTztRQUNMLElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBQyxjQUFjLENBQUMsT0FBTztZQUFFLElBQUksQ0FBQyxNQUFNLENBQUMsY0FBYyxDQUFDLE9BQU8sRUFBRSxDQUFDO0lBQy9FLENBQUM7Q0FDRjtBQXBERCx3QkFvREMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjb25zdHJ1Y3RTdGFjayB9IGZyb20gXCJAYXdzLXNkay9taWRkbGV3YXJlLXN0YWNrXCI7XG5pbXBvcnQgeyBDbGllbnQgYXMgSUNsaWVudCwgQ29tbWFuZCwgTWV0YWRhdGFCZWFyZXIsIE1pZGRsZXdhcmVTdGFjaywgUmVxdWVzdEhhbmRsZXIgfSBmcm9tIFwiQGF3cy1zZGsvdHlwZXNcIjtcblxuZXhwb3J0IGludGVyZmFjZSBTbWl0aHlDb25maWd1cmF0aW9uPEhhbmRsZXJPcHRpb25zPiB7XG4gIHJlcXVlc3RIYW5kbGVyOiBSZXF1ZXN0SGFuZGxlcjxhbnksIGFueSwgSGFuZGxlck9wdGlvbnM+O1xuICAvKipcbiAgICogVGhlIEFQSSB2ZXJzaW9uIHNldCBpbnRlcm5hbGx5IGJ5IHRoZSBTREssIGFuZCBpc1xuICAgKiBub3QgcGxhbm5lZCB0byBiZSB1c2VkIGJ5IGN1c3RvbWVyIGNvZGUuXG4gICAqIEBpbnRlcm5hbFxuICAgKi9cbiAgcmVhZG9ubHkgYXBpVmVyc2lvbjogc3RyaW5nO1xufVxuXG5leHBvcnQgdHlwZSBTbWl0aHlSZXNvbHZlZENvbmZpZ3VyYXRpb248SGFuZGxlck9wdGlvbnM+ID0gU21pdGh5Q29uZmlndXJhdGlvbjxIYW5kbGVyT3B0aW9ucz47XG5cbmV4cG9ydCBjbGFzcyBDbGllbnQ8XG4gIEhhbmRsZXJPcHRpb25zLFxuICBDbGllbnRJbnB1dCBleHRlbmRzIG9iamVjdCxcbiAgQ2xpZW50T3V0cHV0IGV4dGVuZHMgTWV0YWRhdGFCZWFyZXIsXG4gIFJlc29sdmVkQ2xpZW50Q29uZmlndXJhdGlvbiBleHRlbmRzIFNtaXRoeVJlc29sdmVkQ29uZmlndXJhdGlvbjxIYW5kbGVyT3B0aW9ucz5cbj4gaW1wbGVtZW50cyBJQ2xpZW50PENsaWVudElucHV0LCBDbGllbnRPdXRwdXQsIFJlc29sdmVkQ2xpZW50Q29uZmlndXJhdGlvbj5cbntcbiAgcHVibGljIG1pZGRsZXdhcmVTdGFjazogTWlkZGxld2FyZVN0YWNrPENsaWVudElucHV0LCBDbGllbnRPdXRwdXQ+ID0gY29uc3RydWN0U3RhY2s8Q2xpZW50SW5wdXQsIENsaWVudE91dHB1dD4oKTtcbiAgcmVhZG9ubHkgY29uZmlnOiBSZXNvbHZlZENsaWVudENvbmZpZ3VyYXRpb247XG4gIGNvbnN0cnVjdG9yKGNvbmZpZzogUmVzb2x2ZWRDbGllbnRDb25maWd1cmF0aW9uKSB7XG4gICAgdGhpcy5jb25maWcgPSBjb25maWc7XG4gIH1cbiAgc2VuZDxJbnB1dFR5cGUgZXh0ZW5kcyBDbGllbnRJbnB1dCwgT3V0cHV0VHlwZSBleHRlbmRzIENsaWVudE91dHB1dD4oXG4gICAgY29tbWFuZDogQ29tbWFuZDxDbGllbnRJbnB1dCwgSW5wdXRUeXBlLCBDbGllbnRPdXRwdXQsIE91dHB1dFR5cGUsIFNtaXRoeVJlc29sdmVkQ29uZmlndXJhdGlvbjxIYW5kbGVyT3B0aW9ucz4+LFxuICAgIG9wdGlvbnM/OiBIYW5kbGVyT3B0aW9uc1xuICApOiBQcm9taXNlPE91dHB1dFR5cGU+O1xuICBzZW5kPElucHV0VHlwZSBleHRlbmRzIENsaWVudElucHV0LCBPdXRwdXRUeXBlIGV4dGVuZHMgQ2xpZW50T3V0cHV0PihcbiAgICBjb21tYW5kOiBDb21tYW5kPENsaWVudElucHV0LCBJbnB1dFR5cGUsIENsaWVudE91dHB1dCwgT3V0cHV0VHlwZSwgU21pdGh5UmVzb2x2ZWRDb25maWd1cmF0aW9uPEhhbmRsZXJPcHRpb25zPj4sXG4gICAgY2I6IChlcnI6IGFueSwgZGF0YT86IE91dHB1dFR5cGUpID0+IHZvaWRcbiAgKTogdm9pZDtcbiAgc2VuZDxJbnB1dFR5cGUgZXh0ZW5kcyBDbGllbnRJbnB1dCwgT3V0cHV0VHlwZSBleHRlbmRzIENsaWVudE91dHB1dD4oXG4gICAgY29tbWFuZDogQ29tbWFuZDxDbGllbnRJbnB1dCwgSW5wdXRUeXBlLCBDbGllbnRPdXRwdXQsIE91dHB1dFR5cGUsIFNtaXRoeVJlc29sdmVkQ29uZmlndXJhdGlvbjxIYW5kbGVyT3B0aW9ucz4+LFxuICAgIG9wdGlvbnM6IEhhbmRsZXJPcHRpb25zLFxuICAgIGNiOiAoZXJyOiBhbnksIGRhdGE/OiBPdXRwdXRUeXBlKSA9PiB2b2lkXG4gICk6IHZvaWQ7XG4gIHNlbmQ8SW5wdXRUeXBlIGV4dGVuZHMgQ2xpZW50SW5wdXQsIE91dHB1dFR5cGUgZXh0ZW5kcyBDbGllbnRPdXRwdXQ+KFxuICAgIGNvbW1hbmQ6IENvbW1hbmQ8Q2xpZW50SW5wdXQsIElucHV0VHlwZSwgQ2xpZW50T3V0cHV0LCBPdXRwdXRUeXBlLCBTbWl0aHlSZXNvbHZlZENvbmZpZ3VyYXRpb248SGFuZGxlck9wdGlvbnM+PixcbiAgICBvcHRpb25zT3JDYj86IEhhbmRsZXJPcHRpb25zIHwgKChlcnI6IGFueSwgZGF0YT86IE91dHB1dFR5cGUpID0+IHZvaWQpLFxuICAgIGNiPzogKGVycjogYW55LCBkYXRhPzogT3V0cHV0VHlwZSkgPT4gdm9pZFxuICApOiBQcm9taXNlPE91dHB1dFR5cGU+IHwgdm9pZCB7XG4gICAgY29uc3Qgb3B0aW9ucyA9IHR5cGVvZiBvcHRpb25zT3JDYiAhPT0gXCJmdW5jdGlvblwiID8gb3B0aW9uc09yQ2IgOiB1bmRlZmluZWQ7XG4gICAgY29uc3QgY2FsbGJhY2sgPSB0eXBlb2Ygb3B0aW9uc09yQ2IgPT09IFwiZnVuY3Rpb25cIiA/IChvcHRpb25zT3JDYiBhcyAoZXJyOiBhbnksIGRhdGE/OiBPdXRwdXRUeXBlKSA9PiB2b2lkKSA6IGNiO1xuICAgIGNvbnN0IGhhbmRsZXIgPSBjb21tYW5kLnJlc29sdmVNaWRkbGV3YXJlKHRoaXMubWlkZGxld2FyZVN0YWNrIGFzIGFueSwgdGhpcy5jb25maWcsIG9wdGlvbnMpO1xuICAgIGlmIChjYWxsYmFjaykge1xuICAgICAgaGFuZGxlcihjb21tYW5kKVxuICAgICAgICAudGhlbihcbiAgICAgICAgICAocmVzdWx0KSA9PiBjYWxsYmFjayhudWxsLCByZXN1bHQub3V0cHV0KSxcbiAgICAgICAgICAoZXJyOiBhbnkpID0+IGNhbGxiYWNrKGVycilcbiAgICAgICAgKVxuICAgICAgICAuY2F0Y2goXG4gICAgICAgICAgLy8gcHJldmVudCBhbnkgZXJyb3JzIHRocm93biBpbiB0aGUgY2FsbGJhY2sgZnJvbSB0cmlnZ2VyaW5nIGFuXG4gICAgICAgICAgLy8gdW5oYW5kbGVkIHByb21pc2UgcmVqZWN0aW9uXG4gICAgICAgICAgKCkgPT4ge31cbiAgICAgICAgKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIGhhbmRsZXIoY29tbWFuZCkudGhlbigocmVzdWx0KSA9PiByZXN1bHQub3V0cHV0KTtcbiAgICB9XG4gIH1cblxuICBkZXN0cm95KCkge1xuICAgIGlmICh0aGlzLmNvbmZpZy5yZXF1ZXN0SGFuZGxlci5kZXN0cm95KSB0aGlzLmNvbmZpZy5yZXF1ZXN0SGFuZGxlci5kZXN0cm95KCk7XG4gIH1cbn1cbiJdfQ==","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Command = void 0;\nconst middleware_stack_1 = require(\"@aws-sdk/middleware-stack\");\nclass Command {\n    constructor() {\n        this.middlewareStack = (0, middleware_stack_1.constructStack)();\n    }\n}\nexports.Command = Command;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tbWFuZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jb21tYW5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLGdFQUEyRDtBQUczRCxNQUFzQixPQUFPO0lBQTdCO1FBU1csb0JBQWUsR0FBb0MsSUFBQSxpQ0FBYyxHQUFpQixDQUFDO0lBTTlGLENBQUM7Q0FBQTtBQWZELDBCQWVDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY29uc3RydWN0U3RhY2sgfSBmcm9tIFwiQGF3cy1zZGsvbWlkZGxld2FyZS1zdGFja1wiO1xuaW1wb3J0IHsgQ29tbWFuZCBhcyBJQ29tbWFuZCwgSGFuZGxlciwgTWV0YWRhdGFCZWFyZXIsIE1pZGRsZXdhcmVTdGFjayBhcyBJTWlkZGxld2FyZVN0YWNrIH0gZnJvbSBcIkBhd3Mtc2RrL3R5cGVzXCI7XG5cbmV4cG9ydCBhYnN0cmFjdCBjbGFzcyBDb21tYW5kPFxuICBJbnB1dCBleHRlbmRzIENsaWVudElucHV0LFxuICBPdXRwdXQgZXh0ZW5kcyBDbGllbnRPdXRwdXQsXG4gIFJlc29sdmVkQ2xpZW50Q29uZmlndXJhdGlvbixcbiAgQ2xpZW50SW5wdXQgZXh0ZW5kcyBvYmplY3QgPSBhbnksXG4gIENsaWVudE91dHB1dCBleHRlbmRzIE1ldGFkYXRhQmVhcmVyID0gYW55XG4+IGltcGxlbWVudHMgSUNvbW1hbmQ8Q2xpZW50SW5wdXQsIElucHV0LCBDbGllbnRPdXRwdXQsIE91dHB1dCwgUmVzb2x2ZWRDbGllbnRDb25maWd1cmF0aW9uPlxue1xuICBhYnN0cmFjdCBpbnB1dDogSW5wdXQ7XG4gIHJlYWRvbmx5IG1pZGRsZXdhcmVTdGFjazogSU1pZGRsZXdhcmVTdGFjazxJbnB1dCwgT3V0cHV0PiA9IGNvbnN0cnVjdFN0YWNrPElucHV0LCBPdXRwdXQ+KCk7XG4gIGFic3RyYWN0IHJlc29sdmVNaWRkbGV3YXJlKFxuICAgIHN0YWNrOiBJTWlkZGxld2FyZVN0YWNrPENsaWVudElucHV0LCBDbGllbnRPdXRwdXQ+LFxuICAgIGNvbmZpZ3VyYXRpb246IFJlc29sdmVkQ2xpZW50Q29uZmlndXJhdGlvbixcbiAgICBvcHRpb25zOiBhbnlcbiAgKTogSGFuZGxlcjxJbnB1dCwgT3V0cHV0Pjtcbn1cbiJdfQ==","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SENSITIVE_STRING = void 0;\nexports.SENSITIVE_STRING = \"***SensitiveInformation***\";\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29uc3RhbnRzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2NvbnN0YW50cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBYSxRQUFBLGdCQUFnQixHQUFHLDRCQUE0QixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IFNFTlNJVElWRV9TVFJJTkcgPSBcIioqKlNlbnNpdGl2ZUluZm9ybWF0aW9uKioqXCI7XG4iXX0=","\"use strict\";\n/**\n * Builds a proper UTC HttpDate timestamp from a Date object\n * since not all environments will have this as the expected\n * format.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toUTCString\n * > Prior to ECMAScript 2018, the format of the return value\n * > varied according to the platform. The most common return\n * > value was an RFC-1123 formatted date stamp, which is a\n * > slightly updated version of RFC-822 date stamps.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.dateToUtcString = void 0;\n// Build indexes outside so we allocate them once.\nconst days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n// prettier-ignore\nconst months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\nfunction dateToUtcString(date) {\n    const year = date.getUTCFullYear();\n    const month = date.getUTCMonth();\n    const dayOfWeek = date.getUTCDay();\n    const dayOfMonthInt = date.getUTCDate();\n    const hoursInt = date.getUTCHours();\n    const minutesInt = date.getUTCMinutes();\n    const secondsInt = date.getUTCSeconds();\n    // Build 0 prefixed strings for contents that need to be\n    // two digits and where we get an integer back.\n    const dayOfMonthString = dayOfMonthInt < 10 ? `0${dayOfMonthInt}` : `${dayOfMonthInt}`;\n    const hoursString = hoursInt < 10 ? `0${hoursInt}` : `${hoursInt}`;\n    const minutesString = minutesInt < 10 ? `0${minutesInt}` : `${minutesInt}`;\n    const secondsString = secondsInt < 10 ? `0${secondsInt}` : `${secondsInt}`;\n    return `${days[dayOfWeek]}, ${dayOfMonthString} ${months[month]} ${year} ${hoursString}:${minutesString}:${secondsString} GMT`;\n}\nexports.dateToUtcString = dateToUtcString;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0ZS11dGlscy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9kYXRlLXV0aWxzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTs7Ozs7Ozs7OztHQVVHOzs7QUFFSCxrREFBa0Q7QUFDbEQsTUFBTSxJQUFJLEdBQWtCLENBQUMsS0FBSyxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsS0FBSyxDQUFDLENBQUM7QUFDOUUsa0JBQWtCO0FBQ2xCLE1BQU0sTUFBTSxHQUFrQixDQUFDLEtBQUssRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsS0FBSyxDQUFDLENBQUM7QUFFbkgsU0FBZ0IsZUFBZSxDQUFDLElBQVU7SUFDeEMsTUFBTSxJQUFJLEdBQUcsSUFBSSxDQUFDLGNBQWMsRUFBRSxDQUFDO0lBQ25DLE1BQU0sS0FBSyxHQUFHLElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQztJQUNqQyxNQUFNLFNBQVMsR0FBRyxJQUFJLENBQUMsU0FBUyxFQUFFLENBQUM7SUFDbkMsTUFBTSxhQUFhLEdBQUcsSUFBSSxDQUFDLFVBQVUsRUFBRSxDQUFDO0lBQ3hDLE1BQU0sUUFBUSxHQUFHLElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQztJQUNwQyxNQUFNLFVBQVUsR0FBRyxJQUFJLENBQUMsYUFBYSxFQUFFLENBQUM7SUFDeEMsTUFBTSxVQUFVLEdBQUcsSUFBSSxDQUFDLGFBQWEsRUFBRSxDQUFDO0lBRXhDLHdEQUF3RDtJQUN4RCwrQ0FBK0M7SUFDL0MsTUFBTSxnQkFBZ0IsR0FBRyxhQUFhLEdBQUcsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLGFBQWEsRUFBRSxDQUFDLENBQUMsQ0FBQyxHQUFHLGFBQWEsRUFBRSxDQUFDO0lBQ3ZGLE1BQU0sV0FBVyxHQUFHLFFBQVEsR0FBRyxFQUFFLENBQUMsQ0FBQyxDQUFDLElBQUksUUFBUSxFQUFFLENBQUMsQ0FBQyxDQUFDLEdBQUcsUUFBUSxFQUFFLENBQUM7SUFDbkUsTUFBTSxhQUFhLEdBQUcsVUFBVSxHQUFHLEVBQUUsQ0FBQyxDQUFDLENBQUMsSUFBSSxVQUFVLEVBQUUsQ0FBQyxDQUFDLENBQUMsR0FBRyxVQUFVLEVBQUUsQ0FBQztJQUMzRSxNQUFNLGFBQWEsR0FBRyxVQUFVLEdBQUcsRUFBRSxDQUFDLENBQUMsQ0FBQyxJQUFJLFVBQVUsRUFBRSxDQUFDLENBQUMsQ0FBQyxHQUFHLFVBQVUsRUFBRSxDQUFDO0lBRTNFLE9BQU8sR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssZ0JBQWdCLElBQUksTUFBTSxDQUFDLEtBQUssQ0FBQyxJQUFJLElBQUksSUFBSSxXQUFXLElBQUksYUFBYSxJQUFJLGFBQWEsTUFBTSxDQUFDO0FBQ2pJLENBQUM7QUFqQkQsMENBaUJDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBCdWlsZHMgYSBwcm9wZXIgVVRDIEh0dHBEYXRlIHRpbWVzdGFtcCBmcm9tIGEgRGF0ZSBvYmplY3RcbiAqIHNpbmNlIG5vdCBhbGwgZW52aXJvbm1lbnRzIHdpbGwgaGF2ZSB0aGlzIGFzIHRoZSBleHBlY3RlZFxuICogZm9ybWF0LlxuICpcbiAqIFNlZTogaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSmF2YVNjcmlwdC9SZWZlcmVuY2UvR2xvYmFsX09iamVjdHMvRGF0ZS90b1VUQ1N0cmluZ1xuICogPiBQcmlvciB0byBFQ01BU2NyaXB0IDIwMTgsIHRoZSBmb3JtYXQgb2YgdGhlIHJldHVybiB2YWx1ZVxuICogPiB2YXJpZWQgYWNjb3JkaW5nIHRvIHRoZSBwbGF0Zm9ybS4gVGhlIG1vc3QgY29tbW9uIHJldHVyblxuICogPiB2YWx1ZSB3YXMgYW4gUkZDLTExMjMgZm9ybWF0dGVkIGRhdGUgc3RhbXAsIHdoaWNoIGlzIGFcbiAqID4gc2xpZ2h0bHkgdXBkYXRlZCB2ZXJzaW9uIG9mIFJGQy04MjIgZGF0ZSBzdGFtcHMuXG4gKi9cblxuLy8gQnVpbGQgaW5kZXhlcyBvdXRzaWRlIHNvIHdlIGFsbG9jYXRlIHRoZW0gb25jZS5cbmNvbnN0IGRheXM6IEFycmF5PFN0cmluZz4gPSBbXCJTdW5cIiwgXCJNb25cIiwgXCJUdWVcIiwgXCJXZWRcIiwgXCJUaHVcIiwgXCJGcmlcIiwgXCJTYXRcIl07XG4vLyBwcmV0dGllci1pZ25vcmVcbmNvbnN0IG1vbnRoczogQXJyYXk8U3RyaW5nPiA9IFtcIkphblwiLCBcIkZlYlwiLCBcIk1hclwiLCBcIkFwclwiLCBcIk1heVwiLCBcIkp1blwiLCBcIkp1bFwiLCBcIkF1Z1wiLCBcIlNlcFwiLCBcIk9jdFwiLCBcIk5vdlwiLCBcIkRlY1wiXTtcblxuZXhwb3J0IGZ1bmN0aW9uIGRhdGVUb1V0Y1N0cmluZyhkYXRlOiBEYXRlKTogc3RyaW5nIHtcbiAgY29uc3QgeWVhciA9IGRhdGUuZ2V0VVRDRnVsbFllYXIoKTtcbiAgY29uc3QgbW9udGggPSBkYXRlLmdldFVUQ01vbnRoKCk7XG4gIGNvbnN0IGRheU9mV2VlayA9IGRhdGUuZ2V0VVRDRGF5KCk7XG4gIGNvbnN0IGRheU9mTW9udGhJbnQgPSBkYXRlLmdldFVUQ0RhdGUoKTtcbiAgY29uc3QgaG91cnNJbnQgPSBkYXRlLmdldFVUQ0hvdXJzKCk7XG4gIGNvbnN0IG1pbnV0ZXNJbnQgPSBkYXRlLmdldFVUQ01pbnV0ZXMoKTtcbiAgY29uc3Qgc2Vjb25kc0ludCA9IGRhdGUuZ2V0VVRDU2Vjb25kcygpO1xuXG4gIC8vIEJ1aWxkIDAgcHJlZml4ZWQgc3RyaW5ncyBmb3IgY29udGVudHMgdGhhdCBuZWVkIHRvIGJlXG4gIC8vIHR3byBkaWdpdHMgYW5kIHdoZXJlIHdlIGdldCBhbiBpbnRlZ2VyIGJhY2suXG4gIGNvbnN0IGRheU9mTW9udGhTdHJpbmcgPSBkYXlPZk1vbnRoSW50IDwgMTAgPyBgMCR7ZGF5T2ZNb250aEludH1gIDogYCR7ZGF5T2ZNb250aEludH1gO1xuICBjb25zdCBob3Vyc1N0cmluZyA9IGhvdXJzSW50IDwgMTAgPyBgMCR7aG91cnNJbnR9YCA6IGAke2hvdXJzSW50fWA7XG4gIGNvbnN0IG1pbnV0ZXNTdHJpbmcgPSBtaW51dGVzSW50IDwgMTAgPyBgMCR7bWludXRlc0ludH1gIDogYCR7bWludXRlc0ludH1gO1xuICBjb25zdCBzZWNvbmRzU3RyaW5nID0gc2Vjb25kc0ludCA8IDEwID8gYDAke3NlY29uZHNJbnR9YCA6IGAke3NlY29uZHNJbnR9YDtcblxuICByZXR1cm4gYCR7ZGF5c1tkYXlPZldlZWtdfSwgJHtkYXlPZk1vbnRoU3RyaW5nfSAke21vbnRoc1ttb250aF19ICR7eWVhcn0gJHtob3Vyc1N0cmluZ306JHttaW51dGVzU3RyaW5nfToke3NlY29uZHNTdHJpbmd9IEdNVGA7XG59XG4iXX0=","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.emitWarningIfUnsupportedVersion = void 0;\n// Stores whether the warning was already emitted.\nlet warningEmitted = false;\n/**\n * Emits warning if the provided Node.js version string is pending deprecation.\n *\n * @param {string} version - The Node.js version string.\n */\nconst emitWarningIfUnsupportedVersion = (version) => {\n    if (version && !warningEmitted && parseInt(version.substring(1, version.indexOf(\".\"))) < 12) {\n        warningEmitted = true;\n        process.emitWarning(`The AWS SDK for JavaScript (v3) will\\n` +\n            `no longer support Node.js ${version} as of January 1, 2022.\\n` +\n            `To continue receiving updates to AWS services, bug fixes, and security\\n` +\n            `updates please upgrade to Node.js 12.x or later.\\n\\n` +\n            `More information can be found at: https://a.co/1l6FLnu`, `NodeDeprecationWarning`);\n    }\n};\nexports.emitWarningIfUnsupportedVersion = emitWarningIfUnsupportedVersion;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW1pdFdhcm5pbmdJZlVuc3VwcG9ydGVkVmVyc2lvbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9lbWl0V2FybmluZ0lmVW5zdXBwb3J0ZWRWZXJzaW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLGtEQUFrRDtBQUNsRCxJQUFJLGNBQWMsR0FBRyxLQUFLLENBQUM7QUFFM0I7Ozs7R0FJRztBQUNJLE1BQU0sK0JBQStCLEdBQUcsQ0FBQyxPQUFlLEVBQUUsRUFBRTtJQUNqRSxJQUFJLE9BQU8sSUFBSSxDQUFDLGNBQWMsSUFBSSxRQUFRLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxDQUFDLEVBQUUsT0FBTyxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUcsRUFBRSxFQUFFO1FBQzNGLGNBQWMsR0FBRyxJQUFJLENBQUM7UUFDdEIsT0FBTyxDQUFDLFdBQVcsQ0FDakIsd0NBQXdDO1lBQ3RDLDZCQUE2QixPQUFPLDJCQUEyQjtZQUMvRCwwRUFBMEU7WUFDMUUsc0RBQXNEO1lBQ3RELHdEQUF3RCxFQUMxRCx3QkFBd0IsQ0FDekIsQ0FBQztLQUNIO0FBQ0gsQ0FBQyxDQUFDO0FBWlcsUUFBQSwrQkFBK0IsbUNBWTFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gU3RvcmVzIHdoZXRoZXIgdGhlIHdhcm5pbmcgd2FzIGFscmVhZHkgZW1pdHRlZC5cbmxldCB3YXJuaW5nRW1pdHRlZCA9IGZhbHNlO1xuXG4vKipcbiAqIEVtaXRzIHdhcm5pbmcgaWYgdGhlIHByb3ZpZGVkIE5vZGUuanMgdmVyc2lvbiBzdHJpbmcgaXMgcGVuZGluZyBkZXByZWNhdGlvbi5cbiAqXG4gKiBAcGFyYW0ge3N0cmluZ30gdmVyc2lvbiAtIFRoZSBOb2RlLmpzIHZlcnNpb24gc3RyaW5nLlxuICovXG5leHBvcnQgY29uc3QgZW1pdFdhcm5pbmdJZlVuc3VwcG9ydGVkVmVyc2lvbiA9ICh2ZXJzaW9uOiBzdHJpbmcpID0+IHtcbiAgaWYgKHZlcnNpb24gJiYgIXdhcm5pbmdFbWl0dGVkICYmIHBhcnNlSW50KHZlcnNpb24uc3Vic3RyaW5nKDEsIHZlcnNpb24uaW5kZXhPZihcIi5cIikpKSA8IDEyKSB7XG4gICAgd2FybmluZ0VtaXR0ZWQgPSB0cnVlO1xuICAgIHByb2Nlc3MuZW1pdFdhcm5pbmcoXG4gICAgICBgVGhlIEFXUyBTREsgZm9yIEphdmFTY3JpcHQgKHYzKSB3aWxsXFxuYCArXG4gICAgICAgIGBubyBsb25nZXIgc3VwcG9ydCBOb2RlLmpzICR7dmVyc2lvbn0gYXMgb2YgSmFudWFyeSAxLCAyMDIyLlxcbmAgK1xuICAgICAgICBgVG8gY29udGludWUgcmVjZWl2aW5nIHVwZGF0ZXMgdG8gQVdTIHNlcnZpY2VzLCBidWcgZml4ZXMsIGFuZCBzZWN1cml0eVxcbmAgK1xuICAgICAgICBgdXBkYXRlcyBwbGVhc2UgdXBncmFkZSB0byBOb2RlLmpzIDEyLnggb3IgbGF0ZXIuXFxuXFxuYCArXG4gICAgICAgIGBNb3JlIGluZm9ybWF0aW9uIGNhbiBiZSBmb3VuZCBhdDogaHR0cHM6Ly9hLmNvLzFsNkZMbnVgLFxuICAgICAgYE5vZGVEZXByZWNhdGlvbldhcm5pbmdgXG4gICAgKTtcbiAgfVxufTtcbiJdfQ==","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.extendedEncodeURIComponent = void 0;\n/**\n * Function that wraps encodeURIComponent to encode additional characters\n * to fully adhere to RFC 3986.\n */\nfunction extendedEncodeURIComponent(str) {\n    return encodeURIComponent(str).replace(/[!'()*]/g, function (c) {\n        return \"%\" + c.charCodeAt(0).toString(16).toUpperCase();\n    });\n}\nexports.extendedEncodeURIComponent = extendedEncodeURIComponent;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXh0ZW5kZWQtZW5jb2RlLXVyaS1jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvZXh0ZW5kZWQtZW5jb2RlLXVyaS1jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUE7OztHQUdHO0FBQ0gsU0FBZ0IsMEJBQTBCLENBQUMsR0FBVztJQUNwRCxPQUFPLGtCQUFrQixDQUFDLEdBQUcsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxVQUFVLEVBQUUsVUFBVSxDQUFDO1FBQzVELE9BQU8sR0FBRyxHQUFHLENBQUMsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDLFdBQVcsRUFBRSxDQUFDO0lBQzFELENBQUMsQ0FBQyxDQUFDO0FBQ0wsQ0FBQztBQUpELGdFQUlDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBGdW5jdGlvbiB0aGF0IHdyYXBzIGVuY29kZVVSSUNvbXBvbmVudCB0byBlbmNvZGUgYWRkaXRpb25hbCBjaGFyYWN0ZXJzXG4gKiB0byBmdWxseSBhZGhlcmUgdG8gUkZDIDM5ODYuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBleHRlbmRlZEVuY29kZVVSSUNvbXBvbmVudChzdHI6IHN0cmluZyk6IHN0cmluZyB7XG4gIHJldHVybiBlbmNvZGVVUklDb21wb25lbnQoc3RyKS5yZXBsYWNlKC9bIScoKSpdL2csIGZ1bmN0aW9uIChjKSB7XG4gICAgcmV0dXJuIFwiJVwiICsgYy5jaGFyQ29kZUF0KDApLnRvU3RyaW5nKDE2KS50b1VwcGVyQ2FzZSgpO1xuICB9KTtcbn1cbiJdfQ==","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getArrayIfSingleItem = void 0;\n/**\n * The XML parser will set one K:V for a member that could\n * return multiple entries but only has one.\n */\nconst getArrayIfSingleItem = (mayBeArray) => Array.isArray(mayBeArray) ? mayBeArray : [mayBeArray];\nexports.getArrayIfSingleItem = getArrayIfSingleItem;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0LWFycmF5LWlmLXNpbmdsZS1pdGVtLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2dldC1hcnJheS1pZi1zaW5nbGUtaXRlbS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQTs7O0dBR0c7QUFDSSxNQUFNLG9CQUFvQixHQUFHLENBQUksVUFBYSxFQUFXLEVBQUUsQ0FDaEUsS0FBSyxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsVUFBVSxDQUFDLENBQUMsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxDQUFDO0FBRDNDLFFBQUEsb0JBQW9CLHdCQUN1QiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogVGhlIFhNTCBwYXJzZXIgd2lsbCBzZXQgb25lIEs6ViBmb3IgYSBtZW1iZXIgdGhhdCBjb3VsZFxuICogcmV0dXJuIG11bHRpcGxlIGVudHJpZXMgYnV0IG9ubHkgaGFzIG9uZS5cbiAqL1xuZXhwb3J0IGNvbnN0IGdldEFycmF5SWZTaW5nbGVJdGVtID0gPFQ+KG1heUJlQXJyYXk6IFQpOiBUIHwgVFtdID0+XG4gIEFycmF5LmlzQXJyYXkobWF5QmVBcnJheSkgPyBtYXlCZUFycmF5IDogW21heUJlQXJyYXldO1xuIl19","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getValueFromTextNode = void 0;\n/**\n * Recursively parses object and populates value is node from\n * \"#text\" key if it's available\n */\nconst getValueFromTextNode = (obj) => {\n    const textNodeName = \"#text\";\n    for (const key in obj) {\n        if (obj.hasOwnProperty(key) && obj[key][textNodeName] !== undefined) {\n            obj[key] = obj[key][textNodeName];\n        }\n        else if (typeof obj[key] === \"object\" && obj[key] !== null) {\n            obj[key] = (0, exports.getValueFromTextNode)(obj[key]);\n        }\n    }\n    return obj;\n};\nexports.getValueFromTextNode = getValueFromTextNode;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2V0LXZhbHVlLWZyb20tdGV4dC1ub2RlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2dldC12YWx1ZS1mcm9tLXRleHQtbm9kZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQTs7O0dBR0c7QUFDSSxNQUFNLG9CQUFvQixHQUFHLENBQUMsR0FBUSxFQUFFLEVBQUU7SUFDL0MsTUFBTSxZQUFZLEdBQUcsT0FBTyxDQUFDO0lBQzdCLEtBQUssTUFBTSxHQUFHLElBQUksR0FBRyxFQUFFO1FBQ3JCLElBQUksR0FBRyxDQUFDLGNBQWMsQ0FBQyxHQUFHLENBQUMsSUFBSSxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsWUFBWSxDQUFDLEtBQUssU0FBUyxFQUFFO1lBQ25FLEdBQUcsQ0FBQyxHQUFHLENBQUMsR0FBRyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUMsWUFBWSxDQUFDLENBQUM7U0FDbkM7YUFBTSxJQUFJLE9BQU8sR0FBRyxDQUFDLEdBQUcsQ0FBQyxLQUFLLFFBQVEsSUFBSSxHQUFHLENBQUMsR0FBRyxDQUFDLEtBQUssSUFBSSxFQUFFO1lBQzVELEdBQUcsQ0FBQyxHQUFHLENBQUMsR0FBRyxJQUFBLDRCQUFvQixFQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO1NBQzNDO0tBQ0Y7SUFDRCxPQUFPLEdBQUcsQ0FBQztBQUNiLENBQUMsQ0FBQztBQVZXLFFBQUEsb0JBQW9CLHdCQVUvQiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogUmVjdXJzaXZlbHkgcGFyc2VzIG9iamVjdCBhbmQgcG9wdWxhdGVzIHZhbHVlIGlzIG5vZGUgZnJvbVxuICogXCIjdGV4dFwiIGtleSBpZiBpdCdzIGF2YWlsYWJsZVxuICovXG5leHBvcnQgY29uc3QgZ2V0VmFsdWVGcm9tVGV4dE5vZGUgPSAob2JqOiBhbnkpID0+IHtcbiAgY29uc3QgdGV4dE5vZGVOYW1lID0gXCIjdGV4dFwiO1xuICBmb3IgKGNvbnN0IGtleSBpbiBvYmopIHtcbiAgICBpZiAob2JqLmhhc093blByb3BlcnR5KGtleSkgJiYgb2JqW2tleV1bdGV4dE5vZGVOYW1lXSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICBvYmpba2V5XSA9IG9ialtrZXldW3RleHROb2RlTmFtZV07XG4gICAgfSBlbHNlIGlmICh0eXBlb2Ygb2JqW2tleV0gPT09IFwib2JqZWN0XCIgJiYgb2JqW2tleV0gIT09IG51bGwpIHtcbiAgICAgIG9ialtrZXldID0gZ2V0VmFsdWVGcm9tVGV4dE5vZGUob2JqW2tleV0pO1xuICAgIH1cbiAgfVxuICByZXR1cm4gb2JqO1xufTtcbiJdfQ==","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\n(0, tslib_1.__exportStar)(require(\"./client\"), exports);\n(0, tslib_1.__exportStar)(require(\"./command\"), exports);\n(0, tslib_1.__exportStar)(require(\"./emitWarningIfUnsupportedVersion\"), exports);\n(0, tslib_1.__exportStar)(require(\"./extended-encode-uri-component\"), exports);\n(0, tslib_1.__exportStar)(require(\"./get-array-if-single-item\"), exports);\n(0, tslib_1.__exportStar)(require(\"./get-value-from-text-node\"), exports);\n(0, tslib_1.__exportStar)(require(\"./lazy-json\"), exports);\n(0, tslib_1.__exportStar)(require(\"./parse-utils\"), exports);\n(0, tslib_1.__exportStar)(require(\"./ser-utils\"), exports);\n(0, tslib_1.__exportStar)(require(\"./date-utils\"), exports);\n(0, tslib_1.__exportStar)(require(\"./split-every\"), exports);\n(0, tslib_1.__exportStar)(require(\"./constants\"), exports);\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsd0RBQXlCO0FBQ3pCLHlEQUEwQjtBQUMxQixpRkFBa0Q7QUFDbEQsK0VBQWdEO0FBQ2hELDBFQUEyQztBQUMzQywwRUFBMkM7QUFDM0MsMkRBQTRCO0FBQzVCLDZEQUE4QjtBQUM5QiwyREFBNEI7QUFDNUIsNERBQTZCO0FBQzdCLDZEQUE4QjtBQUM5QiwyREFBNEIiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tIFwiLi9jbGllbnRcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2NvbW1hbmRcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2VtaXRXYXJuaW5nSWZVbnN1cHBvcnRlZFZlcnNpb25cIjtcbmV4cG9ydCAqIGZyb20gXCIuL2V4dGVuZGVkLWVuY29kZS11cmktY29tcG9uZW50XCI7XG5leHBvcnQgKiBmcm9tIFwiLi9nZXQtYXJyYXktaWYtc2luZ2xlLWl0ZW1cIjtcbmV4cG9ydCAqIGZyb20gXCIuL2dldC12YWx1ZS1mcm9tLXRleHQtbm9kZVwiO1xuZXhwb3J0ICogZnJvbSBcIi4vbGF6eS1qc29uXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9wYXJzZS11dGlsc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vc2VyLXV0aWxzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9kYXRlLXV0aWxzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9zcGxpdC1ldmVyeVwiO1xuZXhwb3J0ICogZnJvbSBcIi4vY29uc3RhbnRzXCI7XG5leHBvcnQgdHlwZSB7IERvY3VtZW50VHlwZSwgU2RrRXJyb3IsIFNtaXRoeUV4Y2VwdGlvbiB9IGZyb20gXCJAYXdzLXNkay90eXBlc1wiO1xuIl19","\"use strict\";\n/**\n * Lazy String holder for JSON typed contents.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LazyJsonString = exports.StringWrapper = void 0;\n/**\n * Because of https://github.com/microsoft/tslib/issues/95,\n * TS 'extends' shim doesn't support extending native types like String.\n * So here we create StringWrapper that duplicate everything from String\n * class including its prototype chain. So we can extend from here.\n */\n// @ts-ignore StringWrapper implementation is not a simple constructor\nconst StringWrapper = function () {\n    //@ts-ignore 'this' cannot be assigned to any, but Object.getPrototypeOf accepts any\n    const Class = Object.getPrototypeOf(this).constructor;\n    const Constructor = Function.bind.apply(String, [null, ...arguments]);\n    //@ts-ignore Call wrapped String constructor directly, don't bother typing it.\n    const instance = new Constructor();\n    Object.setPrototypeOf(instance, Class.prototype);\n    return instance;\n};\nexports.StringWrapper = StringWrapper;\nexports.StringWrapper.prototype = Object.create(String.prototype, {\n    constructor: {\n        value: exports.StringWrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true,\n    },\n});\nObject.setPrototypeOf(exports.StringWrapper, String);\nclass LazyJsonString extends exports.StringWrapper {\n    deserializeJSON() {\n        return JSON.parse(super.toString());\n    }\n    toJSON() {\n        return super.toString();\n    }\n    static fromObject(object) {\n        if (object instanceof LazyJsonString) {\n            return object;\n        }\n        else if (object instanceof String || typeof object === \"string\") {\n            return new LazyJsonString(object);\n        }\n        return new LazyJsonString(JSON.stringify(object));\n    }\n}\nexports.LazyJsonString = LazyJsonString;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGF6eS1qc29uLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2xhenktanNvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7O0dBRUc7OztBQU1IOzs7OztHQUtHO0FBQ0gsc0VBQXNFO0FBQy9ELE1BQU0sYUFBYSxHQUFrQjtJQUMxQyxvRkFBb0Y7SUFDcEYsTUFBTSxLQUFLLEdBQUcsTUFBTSxDQUFDLGNBQWMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxXQUFXLENBQUM7SUFDdEQsTUFBTSxXQUFXLEdBQUcsUUFBUSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsTUFBTSxFQUFFLENBQUMsSUFBVyxFQUFFLEdBQUcsU0FBUyxDQUFDLENBQUMsQ0FBQztJQUM3RSw4RUFBOEU7SUFDOUUsTUFBTSxRQUFRLEdBQUcsSUFBSSxXQUFXLEVBQUUsQ0FBQztJQUNuQyxNQUFNLENBQUMsY0FBYyxDQUFDLFFBQVEsRUFBRSxLQUFLLENBQUMsU0FBUyxDQUFDLENBQUM7SUFDakQsT0FBTyxRQUFrQixDQUFDO0FBQzVCLENBQUMsQ0FBQztBQVJXLFFBQUEsYUFBYSxpQkFReEI7QUFDRixxQkFBYSxDQUFDLFNBQVMsR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxTQUFTLEVBQUU7SUFDeEQsV0FBVyxFQUFFO1FBQ1gsS0FBSyxFQUFFLHFCQUFhO1FBQ3BCLFVBQVUsRUFBRSxLQUFLO1FBQ2pCLFFBQVEsRUFBRSxJQUFJO1FBQ2QsWUFBWSxFQUFFLElBQUk7S0FDbkI7Q0FDRixDQUFDLENBQUM7QUFDSCxNQUFNLENBQUMsY0FBYyxDQUFDLHFCQUFhLEVBQUUsTUFBTSxDQUFDLENBQUM7QUFFN0MsTUFBYSxjQUFlLFNBQVEscUJBQWE7SUFDL0MsZUFBZTtRQUNiLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsUUFBUSxFQUFFLENBQUMsQ0FBQztJQUN0QyxDQUFDO0lBRUQsTUFBTTtRQUNKLE9BQU8sS0FBSyxDQUFDLFFBQVEsRUFBRSxDQUFDO0lBQzFCLENBQUM7SUFFRCxNQUFNLENBQUMsVUFBVSxDQUFDLE1BQVc7UUFDM0IsSUFBSSxNQUFNLFlBQVksY0FBYyxFQUFFO1lBQ3BDLE9BQU8sTUFBTSxDQUFDO1NBQ2Y7YUFBTSxJQUFJLE1BQU0sWUFBWSxNQUFNLElBQUksT0FBTyxNQUFNLEtBQUssUUFBUSxFQUFFO1lBQ2pFLE9BQU8sSUFBSSxjQUFjLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDbkM7UUFDRCxPQUFPLElBQUksY0FBYyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztJQUNwRCxDQUFDO0NBQ0Y7QUFqQkQsd0NBaUJDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBMYXp5IFN0cmluZyBob2xkZXIgZm9yIEpTT04gdHlwZWQgY29udGVudHMuXG4gKi9cblxuaW50ZXJmYWNlIFN0cmluZ1dyYXBwZXIge1xuICBuZXcgKGFyZzogYW55KTogU3RyaW5nO1xufVxuXG4vKipcbiAqIEJlY2F1c2Ugb2YgaHR0cHM6Ly9naXRodWIuY29tL21pY3Jvc29mdC90c2xpYi9pc3N1ZXMvOTUsXG4gKiBUUyAnZXh0ZW5kcycgc2hpbSBkb2Vzbid0IHN1cHBvcnQgZXh0ZW5kaW5nIG5hdGl2ZSB0eXBlcyBsaWtlIFN0cmluZy5cbiAqIFNvIGhlcmUgd2UgY3JlYXRlIFN0cmluZ1dyYXBwZXIgdGhhdCBkdXBsaWNhdGUgZXZlcnl0aGluZyBmcm9tIFN0cmluZ1xuICogY2xhc3MgaW5jbHVkaW5nIGl0cyBwcm90b3R5cGUgY2hhaW4uIFNvIHdlIGNhbiBleHRlbmQgZnJvbSBoZXJlLlxuICovXG4vLyBAdHMtaWdub3JlIFN0cmluZ1dyYXBwZXIgaW1wbGVtZW50YXRpb24gaXMgbm90IGEgc2ltcGxlIGNvbnN0cnVjdG9yXG5leHBvcnQgY29uc3QgU3RyaW5nV3JhcHBlcjogU3RyaW5nV3JhcHBlciA9IGZ1bmN0aW9uICgpIHtcbiAgLy9AdHMtaWdub3JlICd0aGlzJyBjYW5ub3QgYmUgYXNzaWduZWQgdG8gYW55LCBidXQgT2JqZWN0LmdldFByb3RvdHlwZU9mIGFjY2VwdHMgYW55XG4gIGNvbnN0IENsYXNzID0gT2JqZWN0LmdldFByb3RvdHlwZU9mKHRoaXMpLmNvbnN0cnVjdG9yO1xuICBjb25zdCBDb25zdHJ1Y3RvciA9IEZ1bmN0aW9uLmJpbmQuYXBwbHkoU3RyaW5nLCBbbnVsbCBhcyBhbnksIC4uLmFyZ3VtZW50c10pO1xuICAvL0B0cy1pZ25vcmUgQ2FsbCB3cmFwcGVkIFN0cmluZyBjb25zdHJ1Y3RvciBkaXJlY3RseSwgZG9uJ3QgYm90aGVyIHR5cGluZyBpdC5cbiAgY29uc3QgaW5zdGFuY2UgPSBuZXcgQ29uc3RydWN0b3IoKTtcbiAgT2JqZWN0LnNldFByb3RvdHlwZU9mKGluc3RhbmNlLCBDbGFzcy5wcm90b3R5cGUpO1xuICByZXR1cm4gaW5zdGFuY2UgYXMgU3RyaW5nO1xufTtcblN0cmluZ1dyYXBwZXIucHJvdG90eXBlID0gT2JqZWN0LmNyZWF0ZShTdHJpbmcucHJvdG90eXBlLCB7XG4gIGNvbnN0cnVjdG9yOiB7XG4gICAgdmFsdWU6IFN0cmluZ1dyYXBwZXIsXG4gICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgd3JpdGFibGU6IHRydWUsXG4gICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICB9LFxufSk7XG5PYmplY3Quc2V0UHJvdG90eXBlT2YoU3RyaW5nV3JhcHBlciwgU3RyaW5nKTtcblxuZXhwb3J0IGNsYXNzIExhenlKc29uU3RyaW5nIGV4dGVuZHMgU3RyaW5nV3JhcHBlciB7XG4gIGRlc2VyaWFsaXplSlNPTigpOiBhbnkge1xuICAgIHJldHVybiBKU09OLnBhcnNlKHN1cGVyLnRvU3RyaW5nKCkpO1xuICB9XG5cbiAgdG9KU09OKCk6IHN0cmluZyB7XG4gICAgcmV0dXJuIHN1cGVyLnRvU3RyaW5nKCk7XG4gIH1cblxuICBzdGF0aWMgZnJvbU9iamVjdChvYmplY3Q6IGFueSk6IExhenlKc29uU3RyaW5nIHtcbiAgICBpZiAob2JqZWN0IGluc3RhbmNlb2YgTGF6eUpzb25TdHJpbmcpIHtcbiAgICAgIHJldHVybiBvYmplY3Q7XG4gICAgfSBlbHNlIGlmIChvYmplY3QgaW5zdGFuY2VvZiBTdHJpbmcgfHwgdHlwZW9mIG9iamVjdCA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgcmV0dXJuIG5ldyBMYXp5SnNvblN0cmluZyhvYmplY3QpO1xuICAgIH1cbiAgICByZXR1cm4gbmV3IExhenlKc29uU3RyaW5nKEpTT04uc3RyaW5naWZ5KG9iamVjdCkpO1xuICB9XG59XG4iXX0=","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.strictParseByte = exports.strictParseShort = exports.strictParseInt32 = exports.strictParseInt = exports.strictParseLong = exports.limitedParseFloat32 = exports.limitedParseFloat = exports.handleFloat = exports.limitedParseDouble = exports.strictParseFloat32 = exports.strictParseFloat = exports.strictParseDouble = exports.expectString = exports.expectObject = exports.expectNonNull = exports.expectByte = exports.expectShort = exports.expectInt32 = exports.expectInt = exports.expectLong = exports.expectFloat32 = exports.expectNumber = exports.expectBoolean = exports.parseBoolean = void 0;\n/**\n * Give an input string, strictly parses a boolean value.\n *\n * @param value The boolean string to parse.\n * @returns true for \"true\", false for \"false\", otherwise an error is thrown.\n */\nconst parseBoolean = (value) => {\n    switch (value) {\n        case \"true\":\n            return true;\n        case \"false\":\n            return false;\n        default:\n            throw new Error(`Unable to parse boolean value \"${value}\"`);\n    }\n};\nexports.parseBoolean = parseBoolean;\n/*\n * Asserts a value is a boolean and returns it.\n *\n * @param value A value that is expected to be a boolean.\n * @returns The value if it's a boolean, undefined if it's null/undefined,\n *   otherwise an error is thrown.\n */\nconst expectBoolean = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value === \"boolean\") {\n        return value;\n    }\n    throw new TypeError(`Expected boolean, got ${typeof value}`);\n};\nexports.expectBoolean = expectBoolean;\n/**\n * Asserts a value is a number and returns it.\n *\n * @param value A value that is expected to be a number.\n * @returns The value if it's a number, undefined if it's null/undefined,\n *   otherwise an error is thrown.\n */\nconst expectNumber = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value === \"number\") {\n        return value;\n    }\n    throw new TypeError(`Expected number, got ${typeof value}`);\n};\nexports.expectNumber = expectNumber;\nconst MAX_FLOAT = Math.ceil(2 ** 127 * (2 - 2 ** -23));\n/**\n * Asserts a value is a 32-bit float and returns it.\n *\n * @param value A value that is expected to be a 32-bit float.\n * @returns The value if it's a float, undefined if it's null/undefined,\n *   otherwise an error is thrown.\n */\nconst expectFloat32 = (value) => {\n    const expected = (0, exports.expectNumber)(value);\n    if (expected !== undefined && !Number.isNaN(expected) && expected !== Infinity && expected !== -Infinity) {\n        // IEEE-754 is an imperfect representation for floats. Consider the simple\n        // value `0.1`. The representation in a 32-bit float would look like:\n        //\n        // 0 01111011 10011001100110011001101\n        // Actual value: 0.100000001490116119384765625\n        //\n        // Note the repeating pattern of `1001` in the fraction part. The 64-bit\n        // representation is similar:\n        //\n        // 0 01111111011 1001100110011001100110011001100110011001100110011010\n        // Actual value: 0.100000000000000005551115123126\n        //\n        // So even for what we consider simple numbers, the representation differs\n        // between the two formats. And it's non-obvious how one might look at the\n        // 64-bit value (which is how JS represents numbers) and determine if it\n        // can be represented reasonably in the 32-bit form. Primarily because you\n        // can't know whether the intent was to represent `0.1` or the actual\n        // value in memory. But even if you have both the decimal value and the\n        // double value, that still doesn't communicate the intended precision.\n        //\n        // So rather than attempting to divine the intent of the caller, we instead\n        // do some simple bounds checking to make sure the value is passingly\n        // representable in a 32-bit float. It's not perfect, but it's good enough.\n        // Perfect, even if possible to achieve, would likely be too costly to\n        // be worth it.\n        //\n        // The maximum value of a 32-bit float. Since the 64-bit representation\n        // could be more or less, we just round it up to the nearest whole number.\n        // This further reduces our ability to be certain of the value, but it's\n        // an acceptable tradeoff.\n        //\n        // Compare against the absolute value to simplify things.\n        if (Math.abs(expected) > MAX_FLOAT) {\n            throw new TypeError(`Expected 32-bit float, got ${value}`);\n        }\n    }\n    return expected;\n};\nexports.expectFloat32 = expectFloat32;\n/**\n * Asserts a value is an integer and returns it.\n *\n * @param value A value that is expected to be an integer.\n * @returns The value if it's an integer, undefined if it's null/undefined,\n *   otherwise an error is thrown.\n */\nconst expectLong = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (Number.isInteger(value) && !Number.isNaN(value)) {\n        return value;\n    }\n    throw new TypeError(`Expected integer, got ${typeof value}`);\n};\nexports.expectLong = expectLong;\n/**\n * @deprecated Use expectLong\n */\nexports.expectInt = exports.expectLong;\n/**\n * Asserts a value is a 32-bit integer and returns it.\n *\n * @param value A value that is expected to be an integer.\n * @returns The value if it's an integer, undefined if it's null/undefined,\n *   otherwise an error is thrown.\n */\nconst expectInt32 = (value) => expectSizedInt(value, 32);\nexports.expectInt32 = expectInt32;\n/**\n * Asserts a value is a 16-bit integer and returns it.\n *\n * @param value A value that is expected to be an integer.\n * @returns The value if it's an integer, undefined if it's null/undefined,\n *   otherwise an error is thrown.\n */\nconst expectShort = (value) => expectSizedInt(value, 16);\nexports.expectShort = expectShort;\n/**\n * Asserts a value is an 8-bit integer and returns it.\n *\n * @param value A value that is expected to be an integer.\n * @returns The value if it's an integer, undefined if it's null/undefined,\n *   otherwise an error is thrown.\n */\nconst expectByte = (value) => expectSizedInt(value, 8);\nexports.expectByte = expectByte;\nconst expectSizedInt = (value, size) => {\n    const expected = (0, exports.expectLong)(value);\n    if (expected !== undefined && castInt(expected, size) !== expected) {\n        throw new TypeError(`Expected ${size}-bit integer, got ${value}`);\n    }\n    return expected;\n};\nconst castInt = (value, size) => {\n    switch (size) {\n        case 32:\n            return Int32Array.of(value)[0];\n        case 16:\n            return Int16Array.of(value)[0];\n        case 8:\n            return Int8Array.of(value)[0];\n    }\n};\n/**\n * Asserts a value is not null or undefined and returns it, or throws an error.\n *\n * @param value A value that is expected to be defined\n * @param location The location where we're expecting to find a defined object (optional)\n * @returns The value if it's not undefined, otherwise throws an error\n */\nconst expectNonNull = (value, location) => {\n    if (value === null || value === undefined) {\n        if (location) {\n            throw new TypeError(`Expected a non-null value for ${location}`);\n        }\n        throw new TypeError(\"Expected a non-null value\");\n    }\n    return value;\n};\nexports.expectNonNull = expectNonNull;\n/**\n * Asserts a value is an JSON-like object and returns it. This is expected to be used\n * with values parsed from JSON (arrays, objects, numbers, strings, booleans).\n *\n * @param value A value that is expected to be an object\n * @returns The value if it's an object, undefined if it's null/undefined,\n *   otherwise an error is thrown.\n */\nconst expectObject = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value === \"object\" && !Array.isArray(value)) {\n        return value;\n    }\n    throw new TypeError(`Expected object, got ${typeof value}`);\n};\nexports.expectObject = expectObject;\n/**\n * Asserts a value is a string and returns it.\n *\n * @param value A value that is expected to be a string.\n * @returns The value if it's a string, undefined if it's null/undefined,\n *   otherwise an error is thrown.\n */\nconst expectString = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value === \"string\") {\n        return value;\n    }\n    throw new TypeError(`Expected string, got ${typeof value}`);\n};\nexports.expectString = expectString;\n/**\n * Parses a value into a double. If the value is null or undefined, undefined\n * will be returned. If the value is a string, it will be parsed by the standard\n * parseFloat with one exception: NaN may only be explicitly set as the string\n * \"NaN\", any implicit Nan values will result in an error being thrown. If any\n * other type is provided, an exception will be thrown.\n *\n * @param value A number or string representation of a double.\n * @returns The value as a number, or undefined if it's null/undefined.\n */\nconst strictParseDouble = (value) => {\n    if (typeof value == \"string\") {\n        return (0, exports.expectNumber)(parseNumber(value));\n    }\n    return (0, exports.expectNumber)(value);\n};\nexports.strictParseDouble = strictParseDouble;\n/**\n * @deprecated Use strictParseDouble\n */\nexports.strictParseFloat = exports.strictParseDouble;\n/**\n * Parses a value into a float. If the value is null or undefined, undefined\n * will be returned. If the value is a string, it will be parsed by the standard\n * parseFloat with one exception: NaN may only be explicitly set as the string\n * \"NaN\", any implicit Nan values will result in an error being thrown. If any\n * other type is provided, an exception will be thrown.\n *\n * @param value A number or string representation of a float.\n * @returns The value as a number, or undefined if it's null/undefined.\n */\nconst strictParseFloat32 = (value) => {\n    if (typeof value == \"string\") {\n        return (0, exports.expectFloat32)(parseNumber(value));\n    }\n    return (0, exports.expectFloat32)(value);\n};\nexports.strictParseFloat32 = strictParseFloat32;\n// This regex matches JSON-style numbers. In short:\n// * The integral may start with a negative sign, but not a positive one\n// * No leading 0 on the integral unless it's immediately followed by a '.'\n// * Exponent indicated by a case-insensitive 'E' optionally followed by a\n//   positive/negative sign and some number of digits.\n// It also matches both positive and negative infinity as well and explicit NaN.\nconst NUMBER_REGEX = /(-?(?:0|[1-9]\\d*)(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)|(-?Infinity)|(NaN)/g;\nconst parseNumber = (value) => {\n    const matches = value.match(NUMBER_REGEX);\n    if (matches === null || matches[0].length !== value.length) {\n        throw new TypeError(`Expected real number, got implicit NaN`);\n    }\n    return parseFloat(value);\n};\n/**\n * Asserts a value is a number and returns it. If the value is a string\n * representation of a non-numeric number type (NaN, Infinity, -Infinity),\n * the value will be parsed. Any other string value will result in an exception\n * being thrown. Null or undefined will be returned as undefined. Any other\n * type will result in an exception being thrown.\n *\n * @param value A number or string representation of a non-numeric float.\n * @returns The value as a number, or undefined if it's null/undefined.\n */\nconst limitedParseDouble = (value) => {\n    if (typeof value == \"string\") {\n        return parseFloatString(value);\n    }\n    return (0, exports.expectNumber)(value);\n};\nexports.limitedParseDouble = limitedParseDouble;\n/**\n * @deprecated Use limitedParseDouble\n */\nexports.handleFloat = exports.limitedParseDouble;\n/**\n * @deprecated Use limitedParseDouble\n */\nexports.limitedParseFloat = exports.limitedParseDouble;\n/**\n * Asserts a value is a 32-bit float and returns it. If the value is a string\n * representation of a non-numeric number type (NaN, Infinity, -Infinity),\n * the value will be parsed. Any other string value will result in an exception\n * being thrown. Null or undefined will be returned as undefined. Any other\n * type will result in an exception being thrown.\n *\n * @param value A number or string representation of a non-numeric float.\n * @returns The value as a number, or undefined if it's null/undefined.\n */\nconst limitedParseFloat32 = (value) => {\n    if (typeof value == \"string\") {\n        return parseFloatString(value);\n    }\n    return (0, exports.expectFloat32)(value);\n};\nexports.limitedParseFloat32 = limitedParseFloat32;\nconst parseFloatString = (value) => {\n    switch (value) {\n        case \"NaN\":\n            return NaN;\n        case \"Infinity\":\n            return Infinity;\n        case \"-Infinity\":\n            return -Infinity;\n        default:\n            throw new Error(`Unable to parse float value: ${value}`);\n    }\n};\n/**\n * Parses a value into an integer. If the value is null or undefined, undefined\n * will be returned. If the value is a string, it will be parsed by parseFloat\n * and the result will be asserted to be an integer. If the parsed value is not\n * an integer, or the raw value is any type other than a string or number, an\n * exception will be thrown.\n *\n * @param value A number or string representation of an integer.\n * @returns The value as a number, or undefined if it's null/undefined.\n */\nconst strictParseLong = (value) => {\n    if (typeof value === \"string\") {\n        // parseInt can't be used here, because it will silently discard any\n        // existing decimals. We want to instead throw an error if there are any.\n        return (0, exports.expectLong)(parseNumber(value));\n    }\n    return (0, exports.expectLong)(value);\n};\nexports.strictParseLong = strictParseLong;\n/**\n * @deprecated Use strictParseLong\n */\nexports.strictParseInt = exports.strictParseLong;\n/**\n * Parses a value into a 32-bit integer. If the value is null or undefined, undefined\n * will be returned. If the value is a string, it will be parsed by parseFloat\n * and the result will be asserted to be an integer. If the parsed value is not\n * an integer, or the raw value is any type other than a string or number, an\n * exception will be thrown.\n *\n * @param value A number or string representation of a 32-bit integer.\n * @returns The value as a number, or undefined if it's null/undefined.\n */\nconst strictParseInt32 = (value) => {\n    if (typeof value === \"string\") {\n        // parseInt can't be used here, because it will silently discard any\n        // existing decimals. We want to instead throw an error if there are any.\n        return (0, exports.expectInt32)(parseNumber(value));\n    }\n    return (0, exports.expectInt32)(value);\n};\nexports.strictParseInt32 = strictParseInt32;\n/**\n * Parses a value into a 16-bit integer. If the value is null or undefined, undefined\n * will be returned. If the value is a string, it will be parsed by parseFloat\n * and the result will be asserted to be an integer. If the parsed value is not\n * an integer, or the raw value is any type other than a string or number, an\n * exception will be thrown.\n *\n * @param value A number or string representation of a 16-bit integer.\n * @returns The value as a number, or undefined if it's null/undefined.\n */\nconst strictParseShort = (value) => {\n    if (typeof value === \"string\") {\n        // parseInt can't be used here, because it will silently discard any\n        // existing decimals. We want to instead throw an error if there are any.\n        return (0, exports.expectShort)(parseNumber(value));\n    }\n    return (0, exports.expectShort)(value);\n};\nexports.strictParseShort = strictParseShort;\n/**\n * Parses a value into an 8-bit integer. If the value is null or undefined, undefined\n * will be returned. If the value is a string, it will be parsed by parseFloat\n * and the result will be asserted to be an integer. If the parsed value is not\n * an integer, or the raw value is any type other than a string or number, an\n * exception will be thrown.\n *\n * @param value A number or string representation of an 8-bit integer.\n * @returns The value as a number, or undefined if it's null/undefined.\n */\nconst strictParseByte = (value) => {\n    if (typeof value === \"string\") {\n        // parseInt can't be used here, because it will silently discard any\n        // existing decimals. We want to instead throw an error if there are any.\n        return (0, exports.expectByte)(parseNumber(value));\n    }\n    return (0, exports.expectByte)(value);\n};\nexports.strictParseByte = strictParseByte;\n//# sourceMappingURL=data:application/json;base64,","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.serializeFloat = void 0;\n/**\n * Serializes a number, turning non-numeric values into strings.\n *\n * @param value The number to serialize.\n * @returns A number, or a string if the given number was non-numeric.\n */\nconst serializeFloat = (value) => {\n    // NaN is not equal to everything, including itself.\n    if (value !== value) {\n        return \"NaN\";\n    }\n    switch (value) {\n        case Infinity:\n            return \"Infinity\";\n        case -Infinity:\n            return \"-Infinity\";\n        default:\n            return value;\n    }\n};\nexports.serializeFloat = serializeFloat;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VyLXV0aWxzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3Nlci11dGlscy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQTs7Ozs7R0FLRztBQUNJLE1BQU0sY0FBYyxHQUFHLENBQUMsS0FBYSxFQUFtQixFQUFFO0lBQy9ELG9EQUFvRDtJQUNwRCxJQUFJLEtBQUssS0FBSyxLQUFLLEVBQUU7UUFDbkIsT0FBTyxLQUFLLENBQUM7S0FDZDtJQUNELFFBQVEsS0FBSyxFQUFFO1FBQ2IsS0FBSyxRQUFRO1lBQ1gsT0FBTyxVQUFVLENBQUM7UUFDcEIsS0FBSyxDQUFDLFFBQVE7WUFDWixPQUFPLFdBQVcsQ0FBQztRQUNyQjtZQUNFLE9BQU8sS0FBSyxDQUFDO0tBQ2hCO0FBQ0gsQ0FBQyxDQUFDO0FBYlcsUUFBQSxjQUFjLGtCQWF6QiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogU2VyaWFsaXplcyBhIG51bWJlciwgdHVybmluZyBub24tbnVtZXJpYyB2YWx1ZXMgaW50byBzdHJpbmdzLlxuICpcbiAqIEBwYXJhbSB2YWx1ZSBUaGUgbnVtYmVyIHRvIHNlcmlhbGl6ZS5cbiAqIEByZXR1cm5zIEEgbnVtYmVyLCBvciBhIHN0cmluZyBpZiB0aGUgZ2l2ZW4gbnVtYmVyIHdhcyBub24tbnVtZXJpYy5cbiAqL1xuZXhwb3J0IGNvbnN0IHNlcmlhbGl6ZUZsb2F0ID0gKHZhbHVlOiBudW1iZXIpOiBzdHJpbmcgfCBudW1iZXIgPT4ge1xuICAvLyBOYU4gaXMgbm90IGVxdWFsIHRvIGV2ZXJ5dGhpbmcsIGluY2x1ZGluZyBpdHNlbGYuXG4gIGlmICh2YWx1ZSAhPT0gdmFsdWUpIHtcbiAgICByZXR1cm4gXCJOYU5cIjtcbiAgfVxuICBzd2l0Y2ggKHZhbHVlKSB7XG4gICAgY2FzZSBJbmZpbml0eTpcbiAgICAgIHJldHVybiBcIkluZmluaXR5XCI7XG4gICAgY2FzZSAtSW5maW5pdHk6XG4gICAgICByZXR1cm4gXCItSW5maW5pdHlcIjtcbiAgICBkZWZhdWx0OlxuICAgICAgcmV0dXJuIHZhbHVlO1xuICB9XG59O1xuIl19","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.splitEvery = void 0;\n/**\n * Given an input string, splits based on the delimiter after a given\n * number of delimiters has been encountered.\n *\n * @param value The input string to split.\n * @param delimiter The delimiter to split on.\n * @param numDelimiters The number of delimiters to have encountered to split.\n */\nfunction splitEvery(value, delimiter, numDelimiters) {\n    // Fail if we don't have a clear number to split on.\n    if (numDelimiters <= 0 || !Number.isInteger(numDelimiters)) {\n        throw new Error(\"Invalid number of delimiters (\" + numDelimiters + \") for splitEvery.\");\n    }\n    const segments = value.split(delimiter);\n    // Short circuit extra logic for the simple case.\n    if (numDelimiters === 1) {\n        return segments;\n    }\n    const compoundSegments = [];\n    let currentSegment = \"\";\n    for (let i = 0; i < segments.length; i++) {\n        if (currentSegment === \"\") {\n            // Start a new segment.\n            currentSegment = segments[i];\n        }\n        else {\n            // Compound the current segment with the delimiter.\n            currentSegment += delimiter + segments[i];\n        }\n        if ((i + 1) % numDelimiters === 0) {\n            // We encountered the right number of delimiters, so add the entry.\n            compoundSegments.push(currentSegment);\n            // And reset the current segment.\n            currentSegment = \"\";\n        }\n    }\n    // Handle any leftover segment portion.\n    if (currentSegment !== \"\") {\n        compoundSegments.push(currentSegment);\n    }\n    return compoundSegments;\n}\nexports.splitEvery = splitEvery;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3BsaXQtZXZlcnkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvc3BsaXQtZXZlcnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUE7Ozs7Ozs7R0FPRztBQUNILFNBQWdCLFVBQVUsQ0FBQyxLQUFhLEVBQUUsU0FBaUIsRUFBRSxhQUFxQjtJQUNoRixvREFBb0Q7SUFDcEQsSUFBSSxhQUFhLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxhQUFhLENBQUMsRUFBRTtRQUMxRCxNQUFNLElBQUksS0FBSyxDQUFDLGdDQUFnQyxHQUFHLGFBQWEsR0FBRyxtQkFBbUIsQ0FBQyxDQUFDO0tBQ3pGO0lBRUQsTUFBTSxRQUFRLEdBQUcsS0FBSyxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUN4QyxpREFBaUQ7SUFDakQsSUFBSSxhQUFhLEtBQUssQ0FBQyxFQUFFO1FBQ3ZCLE9BQU8sUUFBUSxDQUFDO0tBQ2pCO0lBRUQsTUFBTSxnQkFBZ0IsR0FBa0IsRUFBRSxDQUFDO0lBQzNDLElBQUksY0FBYyxHQUFHLEVBQUUsQ0FBQztJQUN4QixLQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsUUFBUSxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtRQUN4QyxJQUFJLGNBQWMsS0FBSyxFQUFFLEVBQUU7WUFDekIsdUJBQXVCO1lBQ3ZCLGNBQWMsR0FBRyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUM7U0FDOUI7YUFBTTtZQUNMLG1EQUFtRDtZQUNuRCxjQUFjLElBQUksU0FBUyxHQUFHLFFBQVEsQ0FBQyxDQUFDLENBQUMsQ0FBQztTQUMzQztRQUVELElBQUksQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsYUFBYSxLQUFLLENBQUMsRUFBRTtZQUNqQyxtRUFBbUU7WUFDbkUsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxDQUFDO1lBQ3RDLGlDQUFpQztZQUNqQyxjQUFjLEdBQUcsRUFBRSxDQUFDO1NBQ3JCO0tBQ0Y7SUFFRCx1Q0FBdUM7SUFDdkMsSUFBSSxjQUFjLEtBQUssRUFBRSxFQUFFO1FBQ3pCLGdCQUFnQixDQUFDLElBQUksQ0FBQyxjQUFjLENBQUMsQ0FBQztLQUN2QztJQUVELE9BQU8sZ0JBQWdCLENBQUM7QUFDMUIsQ0FBQztBQXJDRCxnQ0FxQ0MiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEdpdmVuIGFuIGlucHV0IHN0cmluZywgc3BsaXRzIGJhc2VkIG9uIHRoZSBkZWxpbWl0ZXIgYWZ0ZXIgYSBnaXZlblxuICogbnVtYmVyIG9mIGRlbGltaXRlcnMgaGFzIGJlZW4gZW5jb3VudGVyZWQuXG4gKlxuICogQHBhcmFtIHZhbHVlIFRoZSBpbnB1dCBzdHJpbmcgdG8gc3BsaXQuXG4gKiBAcGFyYW0gZGVsaW1pdGVyIFRoZSBkZWxpbWl0ZXIgdG8gc3BsaXQgb24uXG4gKiBAcGFyYW0gbnVtRGVsaW1pdGVycyBUaGUgbnVtYmVyIG9mIGRlbGltaXRlcnMgdG8gaGF2ZSBlbmNvdW50ZXJlZCB0byBzcGxpdC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHNwbGl0RXZlcnkodmFsdWU6IHN0cmluZywgZGVsaW1pdGVyOiBzdHJpbmcsIG51bURlbGltaXRlcnM6IG51bWJlcik6IEFycmF5PHN0cmluZz4ge1xuICAvLyBGYWlsIGlmIHdlIGRvbid0IGhhdmUgYSBjbGVhciBudW1iZXIgdG8gc3BsaXQgb24uXG4gIGlmIChudW1EZWxpbWl0ZXJzIDw9IDAgfHwgIU51bWJlci5pc0ludGVnZXIobnVtRGVsaW1pdGVycykpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJJbnZhbGlkIG51bWJlciBvZiBkZWxpbWl0ZXJzIChcIiArIG51bURlbGltaXRlcnMgKyBcIikgZm9yIHNwbGl0RXZlcnkuXCIpO1xuICB9XG5cbiAgY29uc3Qgc2VnbWVudHMgPSB2YWx1ZS5zcGxpdChkZWxpbWl0ZXIpO1xuICAvLyBTaG9ydCBjaXJjdWl0IGV4dHJhIGxvZ2ljIGZvciB0aGUgc2ltcGxlIGNhc2UuXG4gIGlmIChudW1EZWxpbWl0ZXJzID09PSAxKSB7XG4gICAgcmV0dXJuIHNlZ21lbnRzO1xuICB9XG5cbiAgY29uc3QgY29tcG91bmRTZWdtZW50czogQXJyYXk8c3RyaW5nPiA9IFtdO1xuICBsZXQgY3VycmVudFNlZ21lbnQgPSBcIlwiO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IHNlZ21lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKGN1cnJlbnRTZWdtZW50ID09PSBcIlwiKSB7XG4gICAgICAvLyBTdGFydCBhIG5ldyBzZWdtZW50LlxuICAgICAgY3VycmVudFNlZ21lbnQgPSBzZWdtZW50c1tpXTtcbiAgICB9IGVsc2Uge1xuICAgICAgLy8gQ29tcG91bmQgdGhlIGN1cnJlbnQgc2VnbWVudCB3aXRoIHRoZSBkZWxpbWl0ZXIuXG4gICAgICBjdXJyZW50U2VnbWVudCArPSBkZWxpbWl0ZXIgKyBzZWdtZW50c1tpXTtcbiAgICB9XG5cbiAgICBpZiAoKGkgKyAxKSAlIG51bURlbGltaXRlcnMgPT09IDApIHtcbiAgICAgIC8vIFdlIGVuY291bnRlcmVkIHRoZSByaWdodCBudW1iZXIgb2YgZGVsaW1pdGVycywgc28gYWRkIHRoZSBlbnRyeS5cbiAgICAgIGNvbXBvdW5kU2VnbWVudHMucHVzaChjdXJyZW50U2VnbWVudCk7XG4gICAgICAvLyBBbmQgcmVzZXQgdGhlIGN1cnJlbnQgc2VnbWVudC5cbiAgICAgIGN1cnJlbnRTZWdtZW50ID0gXCJcIjtcbiAgICB9XG4gIH1cblxuICAvLyBIYW5kbGUgYW55IGxlZnRvdmVyIHNlZ21lbnQgcG9ydGlvbi5cbiAgaWYgKGN1cnJlbnRTZWdtZW50ICE9PSBcIlwiKSB7XG4gICAgY29tcG91bmRTZWdtZW50cy5wdXNoKGN1cnJlbnRTZWdtZW50KTtcbiAgfVxuXG4gIHJldHVybiBjb21wb3VuZFNlZ21lbnRzO1xufVxuIl19","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseUrl = void 0;\nconst querystring_parser_1 = require(\"@aws-sdk/querystring-parser\");\nconst parseUrl = (url) => {\n    const { hostname, pathname, port, protocol, search } = new URL(url);\n    let query;\n    if (search) {\n        query = (0, querystring_parser_1.parseQueryString)(search);\n    }\n    return {\n        hostname,\n        port: port ? parseInt(port) : undefined,\n        protocol,\n        path: pathname,\n        query,\n    };\n};\nexports.parseUrl = parseUrl;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsb0VBQStEO0FBR3hELE1BQU0sUUFBUSxHQUFjLENBQUMsR0FBVyxFQUFZLEVBQUU7SUFDM0QsTUFBTSxFQUFFLFFBQVEsRUFBRSxRQUFRLEVBQUUsSUFBSSxFQUFFLFFBQVEsRUFBRSxNQUFNLEVBQUUsR0FBRyxJQUFJLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUVwRSxJQUFJLEtBQW9DLENBQUM7SUFDekMsSUFBSSxNQUFNLEVBQUU7UUFDVixLQUFLLEdBQUcsSUFBQSxxQ0FBZ0IsRUFBQyxNQUFNLENBQUMsQ0FBQztLQUNsQztJQUVELE9BQU87UUFDTCxRQUFRO1FBQ1IsSUFBSSxFQUFFLElBQUksQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxTQUFTO1FBQ3ZDLFFBQVE7UUFDUixJQUFJLEVBQUUsUUFBUTtRQUNkLEtBQUs7S0FDTixDQUFDO0FBQ0osQ0FBQyxDQUFDO0FBZlcsUUFBQSxRQUFRLFlBZW5CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcGFyc2VRdWVyeVN0cmluZyB9IGZyb20gXCJAYXdzLXNkay9xdWVyeXN0cmluZy1wYXJzZXJcIjtcbmltcG9ydCB7IEVuZHBvaW50LCBRdWVyeVBhcmFtZXRlckJhZywgVXJsUGFyc2VyIH0gZnJvbSBcIkBhd3Mtc2RrL3R5cGVzXCI7XG5cbmV4cG9ydCBjb25zdCBwYXJzZVVybDogVXJsUGFyc2VyID0gKHVybDogc3RyaW5nKTogRW5kcG9pbnQgPT4ge1xuICBjb25zdCB7IGhvc3RuYW1lLCBwYXRobmFtZSwgcG9ydCwgcHJvdG9jb2wsIHNlYXJjaCB9ID0gbmV3IFVSTCh1cmwpO1xuXG4gIGxldCBxdWVyeTogUXVlcnlQYXJhbWV0ZXJCYWcgfCB1bmRlZmluZWQ7XG4gIGlmIChzZWFyY2gpIHtcbiAgICBxdWVyeSA9IHBhcnNlUXVlcnlTdHJpbmcoc2VhcmNoKTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgaG9zdG5hbWUsXG4gICAgcG9ydDogcG9ydCA/IHBhcnNlSW50KHBvcnQpIDogdW5kZWZpbmVkLFxuICAgIHByb3RvY29sLFxuICAgIHBhdGg6IHBhdGhuYW1lLFxuICAgIHF1ZXJ5LFxuICB9O1xufTtcbiJdfQ==","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toBase64 = exports.fromBase64 = void 0;\nconst util_buffer_from_1 = require(\"@aws-sdk/util-buffer-from\");\n/**\n * Converts a base-64 encoded string to a Uint8Array of bytes using Node.JS's\n * `buffer` module.\n *\n * @param input The base-64 encoded string\n */\nfunction fromBase64(input) {\n    const buffer = (0, util_buffer_from_1.fromString)(input, \"base64\");\n    return new Uint8Array(buffer.buffer, buffer.byteOffset, buffer.byteLength);\n}\nexports.fromBase64 = fromBase64;\n/**\n * Converts a Uint8Array of binary data to a base-64 encoded string using\n * Node.JS's `buffer` module.\n *\n * @param input The binary data to encode\n */\nfunction toBase64(input) {\n    return (0, util_buffer_from_1.fromArrayBuffer)(input.buffer, input.byteOffset, input.byteLength).toString(\"base64\");\n}\nexports.toBase64 = toBase64;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsZ0VBQXdFO0FBRXhFOzs7OztHQUtHO0FBQ0gsU0FBZ0IsVUFBVSxDQUFDLEtBQWE7SUFDdEMsTUFBTSxNQUFNLEdBQUcsSUFBQSw2QkFBVSxFQUFDLEtBQUssRUFBRSxRQUFRLENBQUMsQ0FBQztJQUUzQyxPQUFPLElBQUksVUFBVSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUUsTUFBTSxDQUFDLFVBQVUsRUFBRSxNQUFNLENBQUMsVUFBVSxDQUFDLENBQUM7QUFDN0UsQ0FBQztBQUpELGdDQUlDO0FBRUQ7Ozs7O0dBS0c7QUFDSCxTQUFnQixRQUFRLENBQUMsS0FBaUI7SUFDeEMsT0FBTyxJQUFBLGtDQUFlLEVBQUMsS0FBSyxDQUFDLE1BQU0sRUFBRSxLQUFLLENBQUMsVUFBVSxFQUFFLEtBQUssQ0FBQyxVQUFVLENBQUMsQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLENBQUM7QUFDOUYsQ0FBQztBQUZELDRCQUVDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZnJvbUFycmF5QnVmZmVyLCBmcm9tU3RyaW5nIH0gZnJvbSBcIkBhd3Mtc2RrL3V0aWwtYnVmZmVyLWZyb21cIjtcblxuLyoqXG4gKiBDb252ZXJ0cyBhIGJhc2UtNjQgZW5jb2RlZCBzdHJpbmcgdG8gYSBVaW50OEFycmF5IG9mIGJ5dGVzIHVzaW5nIE5vZGUuSlMnc1xuICogYGJ1ZmZlcmAgbW9kdWxlLlxuICpcbiAqIEBwYXJhbSBpbnB1dCBUaGUgYmFzZS02NCBlbmNvZGVkIHN0cmluZ1xuICovXG5leHBvcnQgZnVuY3Rpb24gZnJvbUJhc2U2NChpbnB1dDogc3RyaW5nKTogVWludDhBcnJheSB7XG4gIGNvbnN0IGJ1ZmZlciA9IGZyb21TdHJpbmcoaW5wdXQsIFwiYmFzZTY0XCIpO1xuXG4gIHJldHVybiBuZXcgVWludDhBcnJheShidWZmZXIuYnVmZmVyLCBidWZmZXIuYnl0ZU9mZnNldCwgYnVmZmVyLmJ5dGVMZW5ndGgpO1xufVxuXG4vKipcbiAqIENvbnZlcnRzIGEgVWludDhBcnJheSBvZiBiaW5hcnkgZGF0YSB0byBhIGJhc2UtNjQgZW5jb2RlZCBzdHJpbmcgdXNpbmdcbiAqIE5vZGUuSlMncyBgYnVmZmVyYCBtb2R1bGUuXG4gKlxuICogQHBhcmFtIGlucHV0IFRoZSBiaW5hcnkgZGF0YSB0byBlbmNvZGVcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHRvQmFzZTY0KGlucHV0OiBVaW50OEFycmF5KTogc3RyaW5nIHtcbiAgcmV0dXJuIGZyb21BcnJheUJ1ZmZlcihpbnB1dC5idWZmZXIsIGlucHV0LmJ5dGVPZmZzZXQsIGlucHV0LmJ5dGVMZW5ndGgpLnRvU3RyaW5nKFwiYmFzZTY0XCIpO1xufVxuIl19","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.calculateBodyLength = void 0;\nconst fs_1 = require(\"fs\");\nfunction calculateBodyLength(body) {\n    if (!body) {\n        return 0;\n    }\n    if (typeof body === \"string\") {\n        return Buffer.from(body).length;\n    }\n    else if (typeof body.byteLength === \"number\") {\n        // handles Uint8Array, ArrayBuffer, Buffer, and ArrayBufferView\n        return body.byteLength;\n    }\n    else if (typeof body.size === \"number\") {\n        return body.size;\n    }\n    else if (typeof body.path === \"string\") {\n        // handles fs readable streams\n        return (0, fs_1.lstatSync)(body.path).size;\n    }\n}\nexports.calculateBodyLength = calculateBodyLength;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsMkJBQStCO0FBRS9CLFNBQWdCLG1CQUFtQixDQUFDLElBQVM7SUFDM0MsSUFBSSxDQUFDLElBQUksRUFBRTtRQUNULE9BQU8sQ0FBQyxDQUFDO0tBQ1Y7SUFDRCxJQUFJLE9BQU8sSUFBSSxLQUFLLFFBQVEsRUFBRTtRQUM1QixPQUFPLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsTUFBTSxDQUFDO0tBQ2pDO1NBQU0sSUFBSSxPQUFPLElBQUksQ0FBQyxVQUFVLEtBQUssUUFBUSxFQUFFO1FBQzlDLCtEQUErRDtRQUMvRCxPQUFPLElBQUksQ0FBQyxVQUFVLENBQUM7S0FDeEI7U0FBTSxJQUFJLE9BQU8sSUFBSSxDQUFDLElBQUksS0FBSyxRQUFRLEVBQUU7UUFDeEMsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDO0tBQ2xCO1NBQU0sSUFBSSxPQUFPLElBQUksQ0FBQyxJQUFJLEtBQUssUUFBUSxFQUFFO1FBQ3hDLDhCQUE4QjtRQUM5QixPQUFPLElBQUEsY0FBUyxFQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxJQUFJLENBQUM7S0FDbEM7QUFDSCxDQUFDO0FBZkQsa0RBZUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBsc3RhdFN5bmMgfSBmcm9tIFwiZnNcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIGNhbGN1bGF0ZUJvZHlMZW5ndGgoYm9keTogYW55KTogbnVtYmVyIHwgdW5kZWZpbmVkIHtcbiAgaWYgKCFib2R5KSB7XG4gICAgcmV0dXJuIDA7XG4gIH1cbiAgaWYgKHR5cGVvZiBib2R5ID09PSBcInN0cmluZ1wiKSB7XG4gICAgcmV0dXJuIEJ1ZmZlci5mcm9tKGJvZHkpLmxlbmd0aDtcbiAgfSBlbHNlIGlmICh0eXBlb2YgYm9keS5ieXRlTGVuZ3RoID09PSBcIm51bWJlclwiKSB7XG4gICAgLy8gaGFuZGxlcyBVaW50OEFycmF5LCBBcnJheUJ1ZmZlciwgQnVmZmVyLCBhbmQgQXJyYXlCdWZmZXJWaWV3XG4gICAgcmV0dXJuIGJvZHkuYnl0ZUxlbmd0aDtcbiAgfSBlbHNlIGlmICh0eXBlb2YgYm9keS5zaXplID09PSBcIm51bWJlclwiKSB7XG4gICAgcmV0dXJuIGJvZHkuc2l6ZTtcbiAgfSBlbHNlIGlmICh0eXBlb2YgYm9keS5wYXRoID09PSBcInN0cmluZ1wiKSB7XG4gICAgLy8gaGFuZGxlcyBmcyByZWFkYWJsZSBzdHJlYW1zXG4gICAgcmV0dXJuIGxzdGF0U3luYyhib2R5LnBhdGgpLnNpemU7XG4gIH1cbn1cbiJdfQ==","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.fromString = exports.fromArrayBuffer = void 0;\nconst is_array_buffer_1 = require(\"@aws-sdk/is-array-buffer\");\nconst buffer_1 = require(\"buffer\");\nconst fromArrayBuffer = (input, offset = 0, length = input.byteLength - offset) => {\n    if (!(0, is_array_buffer_1.isArrayBuffer)(input)) {\n        throw new TypeError(`The \"input\" argument must be ArrayBuffer. Received type ${typeof input} (${input})`);\n    }\n    return buffer_1.Buffer.from(input, offset, length);\n};\nexports.fromArrayBuffer = fromArrayBuffer;\nconst fromString = (input, encoding) => {\n    if (typeof input !== \"string\") {\n        throw new TypeError(`The \"input\" argument must be of type string. Received type ${typeof input} (${input})`);\n    }\n    return encoding ? buffer_1.Buffer.from(input, encoding) : buffer_1.Buffer.from(input);\n};\nexports.fromString = fromString;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsOERBQXlEO0FBQ3pELG1DQUFnQztBQUV6QixNQUFNLGVBQWUsR0FBRyxDQUFDLEtBQWtCLEVBQUUsTUFBTSxHQUFHLENBQUMsRUFBRSxTQUFpQixLQUFLLENBQUMsVUFBVSxHQUFHLE1BQU0sRUFBVSxFQUFFO0lBQ3BILElBQUksQ0FBQyxJQUFBLCtCQUFhLEVBQUMsS0FBSyxDQUFDLEVBQUU7UUFDekIsTUFBTSxJQUFJLFNBQVMsQ0FBQywyREFBMkQsT0FBTyxLQUFLLEtBQUssS0FBSyxHQUFHLENBQUMsQ0FBQztLQUMzRztJQUVELE9BQU8sZUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLEVBQUUsTUFBTSxFQUFFLE1BQU0sQ0FBQyxDQUFDO0FBQzVDLENBQUMsQ0FBQztBQU5XLFFBQUEsZUFBZSxtQkFNMUI7QUFJSyxNQUFNLFVBQVUsR0FBRyxDQUFDLEtBQWEsRUFBRSxRQUF5QixFQUFVLEVBQUU7SUFDN0UsSUFBSSxPQUFPLEtBQUssS0FBSyxRQUFRLEVBQUU7UUFDN0IsTUFBTSxJQUFJLFNBQVMsQ0FBQyw4REFBOEQsT0FBTyxLQUFLLEtBQUssS0FBSyxHQUFHLENBQUMsQ0FBQztLQUM5RztJQUVELE9BQU8sUUFBUSxDQUFDLENBQUMsQ0FBQyxlQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRSxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsZUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztBQUN0RSxDQUFDLENBQUM7QUFOVyxRQUFBLFVBQVUsY0FNckIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpc0FycmF5QnVmZmVyIH0gZnJvbSBcIkBhd3Mtc2RrL2lzLWFycmF5LWJ1ZmZlclwiO1xuaW1wb3J0IHsgQnVmZmVyIH0gZnJvbSBcImJ1ZmZlclwiO1xuXG5leHBvcnQgY29uc3QgZnJvbUFycmF5QnVmZmVyID0gKGlucHV0OiBBcnJheUJ1ZmZlciwgb2Zmc2V0ID0gMCwgbGVuZ3RoOiBudW1iZXIgPSBpbnB1dC5ieXRlTGVuZ3RoIC0gb2Zmc2V0KTogQnVmZmVyID0+IHtcbiAgaWYgKCFpc0FycmF5QnVmZmVyKGlucHV0KSkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoYFRoZSBcImlucHV0XCIgYXJndW1lbnQgbXVzdCBiZSBBcnJheUJ1ZmZlci4gUmVjZWl2ZWQgdHlwZSAke3R5cGVvZiBpbnB1dH0gKCR7aW5wdXR9KWApO1xuICB9XG5cbiAgcmV0dXJuIEJ1ZmZlci5mcm9tKGlucHV0LCBvZmZzZXQsIGxlbmd0aCk7XG59O1xuXG5leHBvcnQgdHlwZSBTdHJpbmdFbmNvZGluZyA9IFwiYXNjaWlcIiB8IFwidXRmOFwiIHwgXCJ1dGYxNmxlXCIgfCBcInVjczJcIiB8IFwiYmFzZTY0XCIgfCBcImxhdGluMVwiIHwgXCJiaW5hcnlcIiB8IFwiaGV4XCI7XG5cbmV4cG9ydCBjb25zdCBmcm9tU3RyaW5nID0gKGlucHV0OiBzdHJpbmcsIGVuY29kaW5nPzogU3RyaW5nRW5jb2RpbmcpOiBCdWZmZXIgPT4ge1xuICBpZiAodHlwZW9mIGlucHV0ICE9PSBcInN0cmluZ1wiKSB7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcihgVGhlIFwiaW5wdXRcIiBhcmd1bWVudCBtdXN0IGJlIG9mIHR5cGUgc3RyaW5nLiBSZWNlaXZlZCB0eXBlICR7dHlwZW9mIGlucHV0fSAoJHtpbnB1dH0pYCk7XG4gIH1cblxuICByZXR1cm4gZW5jb2RpbmcgPyBCdWZmZXIuZnJvbShpbnB1dCwgZW5jb2RpbmcpIDogQnVmZmVyLmZyb20oaW5wdXQpO1xufTtcbiJdfQ==","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getMasterProfileName = exports.parseKnownFiles = exports.DEFAULT_PROFILE = exports.ENV_PROFILE = void 0;\nconst shared_ini_file_loader_1 = require(\"@aws-sdk/shared-ini-file-loader\");\nexports.ENV_PROFILE = \"AWS_PROFILE\";\nexports.DEFAULT_PROFILE = \"default\";\n/**\n * Load profiles from credentials and config INI files and normalize them into a\n * single profile list.\n *\n * @internal\n */\nconst parseKnownFiles = async (init) => {\n    const { loadedConfig = (0, shared_ini_file_loader_1.loadSharedConfigFiles)(init) } = init;\n    const parsedFiles = await loadedConfig;\n    return {\n        ...parsedFiles.configFile,\n        ...parsedFiles.credentialsFile,\n    };\n};\nexports.parseKnownFiles = parseKnownFiles;\n/**\n * @internal\n */\nconst getMasterProfileName = (init) => init.profile || process.env[exports.ENV_PROFILE] || exports.DEFAULT_PROFILE;\nexports.getMasterProfileName = getMasterProfileName;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsNEVBS3lDO0FBRTVCLFFBQUEsV0FBVyxHQUFHLGFBQWEsQ0FBQztBQUM1QixRQUFBLGVBQWUsR0FBRyxTQUFTLENBQUM7QUFpQnpDOzs7OztHQUtHO0FBQ0ksTUFBTSxlQUFlLEdBQUcsS0FBSyxFQUFFLElBQXVCLEVBQTBCLEVBQUU7SUFDdkYsTUFBTSxFQUFFLFlBQVksR0FBRyxJQUFBLDhDQUFxQixFQUFDLElBQUksQ0FBQyxFQUFFLEdBQUcsSUFBSSxDQUFDO0lBRTVELE1BQU0sV0FBVyxHQUFHLE1BQU0sWUFBWSxDQUFDO0lBQ3ZDLE9BQU87UUFDTCxHQUFHLFdBQVcsQ0FBQyxVQUFVO1FBQ3pCLEdBQUcsV0FBVyxDQUFDLGVBQWU7S0FDL0IsQ0FBQztBQUNKLENBQUMsQ0FBQztBQVJXLFFBQUEsZUFBZSxtQkFRMUI7QUFFRjs7R0FFRztBQUNJLE1BQU0sb0JBQW9CLEdBQUcsQ0FBQyxJQUEwQixFQUFVLEVBQUUsQ0FDekUsSUFBSSxDQUFDLE9BQU8sSUFBSSxPQUFPLENBQUMsR0FBRyxDQUFDLG1CQUFXLENBQUMsSUFBSSx1QkFBZSxDQUFDO0FBRGpELFFBQUEsb0JBQW9CLHdCQUM2QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIGxvYWRTaGFyZWRDb25maWdGaWxlcyxcbiAgUGFyc2VkSW5pRGF0YSxcbiAgU2hhcmVkQ29uZmlnRmlsZXMsXG4gIFNoYXJlZENvbmZpZ0luaXQsXG59IGZyb20gXCJAYXdzLXNkay9zaGFyZWQtaW5pLWZpbGUtbG9hZGVyXCI7XG5cbmV4cG9ydCBjb25zdCBFTlZfUFJPRklMRSA9IFwiQVdTX1BST0ZJTEVcIjtcbmV4cG9ydCBjb25zdCBERUZBVUxUX1BST0ZJTEUgPSBcImRlZmF1bHRcIjtcblxuZXhwb3J0IGludGVyZmFjZSBTb3VyY2VQcm9maWxlSW5pdCBleHRlbmRzIFNoYXJlZENvbmZpZ0luaXQge1xuICAvKipcbiAgICogVGhlIGNvbmZpZ3VyYXRpb24gcHJvZmlsZSB0byB1c2UuXG4gICAqL1xuICBwcm9maWxlPzogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBBIHByb21pc2UgdGhhdCB3aWxsIGJlIHJlc29sdmVkIHdpdGggbG9hZGVkIGFuZCBwYXJzZWQgY3JlZGVudGlhbHMgZmlsZXMuXG4gICAqIFVzZWQgdG8gYXZvaWQgbG9hZGluZyBzaGFyZWQgY29uZmlnIGZpbGVzIG11bHRpcGxlIHRpbWVzLlxuICAgKlxuICAgKiBAaW50ZXJuYWxcbiAgICovXG4gIGxvYWRlZENvbmZpZz86IFByb21pc2U8U2hhcmVkQ29uZmlnRmlsZXM+O1xufVxuXG4vKipcbiAqIExvYWQgcHJvZmlsZXMgZnJvbSBjcmVkZW50aWFscyBhbmQgY29uZmlnIElOSSBmaWxlcyBhbmQgbm9ybWFsaXplIHRoZW0gaW50byBhXG4gKiBzaW5nbGUgcHJvZmlsZSBsaXN0LlxuICpcbiAqIEBpbnRlcm5hbFxuICovXG5leHBvcnQgY29uc3QgcGFyc2VLbm93bkZpbGVzID0gYXN5bmMgKGluaXQ6IFNvdXJjZVByb2ZpbGVJbml0KTogUHJvbWlzZTxQYXJzZWRJbmlEYXRhPiA9PiB7XG4gIGNvbnN0IHsgbG9hZGVkQ29uZmlnID0gbG9hZFNoYXJlZENvbmZpZ0ZpbGVzKGluaXQpIH0gPSBpbml0O1xuXG4gIGNvbnN0IHBhcnNlZEZpbGVzID0gYXdhaXQgbG9hZGVkQ29uZmlnO1xuICByZXR1cm4ge1xuICAgIC4uLnBhcnNlZEZpbGVzLmNvbmZpZ0ZpbGUsXG4gICAgLi4ucGFyc2VkRmlsZXMuY3JlZGVudGlhbHNGaWxlLFxuICB9O1xufTtcblxuLyoqXG4gKiBAaW50ZXJuYWxcbiAqL1xuZXhwb3J0IGNvbnN0IGdldE1hc3RlclByb2ZpbGVOYW1lID0gKGluaXQ6IHsgcHJvZmlsZT86IHN0cmluZyB9KTogc3RyaW5nID0+XG4gIGluaXQucHJvZmlsZSB8fCBwcm9jZXNzLmVudltFTlZfUFJPRklMRV0gfHwgREVGQVVMVF9QUk9GSUxFO1xuIl19","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toHex = exports.fromHex = void 0;\nconst SHORT_TO_HEX = {};\nconst HEX_TO_SHORT = {};\nfor (let i = 0; i < 256; i++) {\n    let encodedByte = i.toString(16).toLowerCase();\n    if (encodedByte.length === 1) {\n        encodedByte = `0${encodedByte}`;\n    }\n    SHORT_TO_HEX[i] = encodedByte;\n    HEX_TO_SHORT[encodedByte] = i;\n}\n/**\n * Converts a hexadecimal encoded string to a Uint8Array of bytes.\n *\n * @param encoded The hexadecimal encoded string\n */\nfunction fromHex(encoded) {\n    if (encoded.length % 2 !== 0) {\n        throw new Error(\"Hex encoded strings must have an even number length\");\n    }\n    const out = new Uint8Array(encoded.length / 2);\n    for (let i = 0; i < encoded.length; i += 2) {\n        const encodedByte = encoded.substr(i, 2).toLowerCase();\n        if (encodedByte in HEX_TO_SHORT) {\n            out[i / 2] = HEX_TO_SHORT[encodedByte];\n        }\n        else {\n            throw new Error(`Cannot decode unrecognized sequence ${encodedByte} as hexadecimal`);\n        }\n    }\n    return out;\n}\nexports.fromHex = fromHex;\n/**\n * Converts a Uint8Array of binary data to a hexadecimal encoded string.\n *\n * @param bytes The binary data to encode\n */\nfunction toHex(bytes) {\n    let out = \"\";\n    for (let i = 0; i < bytes.byteLength; i++) {\n        out += SHORT_TO_HEX[bytes[i]];\n    }\n    return out;\n}\nexports.toHex = toHex;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsTUFBTSxZQUFZLEdBQThCLEVBQUUsQ0FBQztBQUNuRCxNQUFNLFlBQVksR0FBOEIsRUFBRSxDQUFDO0FBRW5ELEtBQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUU7SUFDNUIsSUFBSSxXQUFXLEdBQUcsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsQ0FBQyxXQUFXLEVBQUUsQ0FBQztJQUMvQyxJQUFJLFdBQVcsQ0FBQyxNQUFNLEtBQUssQ0FBQyxFQUFFO1FBQzVCLFdBQVcsR0FBRyxJQUFJLFdBQVcsRUFBRSxDQUFDO0tBQ2pDO0lBRUQsWUFBWSxDQUFDLENBQUMsQ0FBQyxHQUFHLFdBQVcsQ0FBQztJQUM5QixZQUFZLENBQUMsV0FBVyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0NBQy9CO0FBRUQ7Ozs7R0FJRztBQUNILFNBQWdCLE9BQU8sQ0FBQyxPQUFlO0lBQ3JDLElBQUksT0FBTyxDQUFDLE1BQU0sR0FBRyxDQUFDLEtBQUssQ0FBQyxFQUFFO1FBQzVCLE1BQU0sSUFBSSxLQUFLLENBQUMscURBQXFELENBQUMsQ0FBQztLQUN4RTtJQUVELE1BQU0sR0FBRyxHQUFHLElBQUksVUFBVSxDQUFDLE9BQU8sQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUM7SUFDL0MsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLE9BQU8sQ0FBQyxNQUFNLEVBQUUsQ0FBQyxJQUFJLENBQUMsRUFBRTtRQUMxQyxNQUFNLFdBQVcsR0FBRyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxXQUFXLEVBQUUsQ0FBQztRQUN2RCxJQUFJLFdBQVcsSUFBSSxZQUFZLEVBQUU7WUFDL0IsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxZQUFZLENBQUMsV0FBVyxDQUFDLENBQUM7U0FDeEM7YUFBTTtZQUNMLE1BQU0sSUFBSSxLQUFLLENBQUMsdUNBQXVDLFdBQVcsaUJBQWlCLENBQUMsQ0FBQztTQUN0RjtLQUNGO0lBRUQsT0FBTyxHQUFHLENBQUM7QUFDYixDQUFDO0FBaEJELDBCQWdCQztBQUVEOzs7O0dBSUc7QUFDSCxTQUFnQixLQUFLLENBQUMsS0FBaUI7SUFDckMsSUFBSSxHQUFHLEdBQUcsRUFBRSxDQUFDO0lBQ2IsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLEtBQUssQ0FBQyxVQUFVLEVBQUUsQ0FBQyxFQUFFLEVBQUU7UUFDekMsR0FBRyxJQUFJLFlBQVksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztLQUMvQjtJQUVELE9BQU8sR0FBRyxDQUFDO0FBQ2IsQ0FBQztBQVBELHNCQU9DIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgU0hPUlRfVE9fSEVYOiB7IFtrZXk6IG51bWJlcl06IHN0cmluZyB9ID0ge307XG5jb25zdCBIRVhfVE9fU0hPUlQ6IHsgW2tleTogc3RyaW5nXTogbnVtYmVyIH0gPSB7fTtcblxuZm9yIChsZXQgaSA9IDA7IGkgPCAyNTY7IGkrKykge1xuICBsZXQgZW5jb2RlZEJ5dGUgPSBpLnRvU3RyaW5nKDE2KS50b0xvd2VyQ2FzZSgpO1xuICBpZiAoZW5jb2RlZEJ5dGUubGVuZ3RoID09PSAxKSB7XG4gICAgZW5jb2RlZEJ5dGUgPSBgMCR7ZW5jb2RlZEJ5dGV9YDtcbiAgfVxuXG4gIFNIT1JUX1RPX0hFWFtpXSA9IGVuY29kZWRCeXRlO1xuICBIRVhfVE9fU0hPUlRbZW5jb2RlZEJ5dGVdID0gaTtcbn1cblxuLyoqXG4gKiBDb252ZXJ0cyBhIGhleGFkZWNpbWFsIGVuY29kZWQgc3RyaW5nIHRvIGEgVWludDhBcnJheSBvZiBieXRlcy5cbiAqXG4gKiBAcGFyYW0gZW5jb2RlZCBUaGUgaGV4YWRlY2ltYWwgZW5jb2RlZCBzdHJpbmdcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGZyb21IZXgoZW5jb2RlZDogc3RyaW5nKTogVWludDhBcnJheSB7XG4gIGlmIChlbmNvZGVkLmxlbmd0aCAlIDIgIT09IDApIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJIZXggZW5jb2RlZCBzdHJpbmdzIG11c3QgaGF2ZSBhbiBldmVuIG51bWJlciBsZW5ndGhcIik7XG4gIH1cblxuICBjb25zdCBvdXQgPSBuZXcgVWludDhBcnJheShlbmNvZGVkLmxlbmd0aCAvIDIpO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IGVuY29kZWQubGVuZ3RoOyBpICs9IDIpIHtcbiAgICBjb25zdCBlbmNvZGVkQnl0ZSA9IGVuY29kZWQuc3Vic3RyKGksIDIpLnRvTG93ZXJDYXNlKCk7XG4gICAgaWYgKGVuY29kZWRCeXRlIGluIEhFWF9UT19TSE9SVCkge1xuICAgICAgb3V0W2kgLyAyXSA9IEhFWF9UT19TSE9SVFtlbmNvZGVkQnl0ZV07XG4gICAgfSBlbHNlIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgQ2Fubm90IGRlY29kZSB1bnJlY29nbml6ZWQgc2VxdWVuY2UgJHtlbmNvZGVkQnl0ZX0gYXMgaGV4YWRlY2ltYWxgKTtcbiAgICB9XG4gIH1cblxuICByZXR1cm4gb3V0O1xufVxuXG4vKipcbiAqIENvbnZlcnRzIGEgVWludDhBcnJheSBvZiBiaW5hcnkgZGF0YSB0byBhIGhleGFkZWNpbWFsIGVuY29kZWQgc3RyaW5nLlxuICpcbiAqIEBwYXJhbSBieXRlcyBUaGUgYmluYXJ5IGRhdGEgdG8gZW5jb2RlXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB0b0hleChieXRlczogVWludDhBcnJheSk6IHN0cmluZyB7XG4gIGxldCBvdXQgPSBcIlwiO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IGJ5dGVzLmJ5dGVMZW5ndGg7IGkrKykge1xuICAgIG91dCArPSBTSE9SVF9UT19IRVhbYnl0ZXNbaV1dO1xuICB9XG5cbiAgcmV0dXJuIG91dDtcbn1cbiJdfQ==","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.escapeUriPath = void 0;\nconst escape_uri_1 = require(\"./escape-uri\");\nconst escapeUriPath = (uri) => uri.split(\"/\").map(escape_uri_1.escapeUri).join(\"/\");\nexports.escapeUriPath = escapeUriPath;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXNjYXBlLXVyaS1wYXRoLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2VzY2FwZS11cmktcGF0aC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSw2Q0FBeUM7QUFFbEMsTUFBTSxhQUFhLEdBQUcsQ0FBQyxHQUFXLEVBQVUsRUFBRSxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLHNCQUFTLENBQUMsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7QUFBakYsUUFBQSxhQUFhLGlCQUFvRSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGVzY2FwZVVyaSB9IGZyb20gXCIuL2VzY2FwZS11cmlcIjtcblxuZXhwb3J0IGNvbnN0IGVzY2FwZVVyaVBhdGggPSAodXJpOiBzdHJpbmcpOiBzdHJpbmcgPT4gdXJpLnNwbGl0KFwiL1wiKS5tYXAoZXNjYXBlVXJpKS5qb2luKFwiL1wiKTtcbiJdfQ==","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.escapeUri = void 0;\nconst escapeUri = (uri) => \n// AWS percent-encodes some extra non-standard characters in a URI\nencodeURIComponent(uri).replace(/[!'()*]/g, hexEncode);\nexports.escapeUri = escapeUri;\nconst hexEncode = (c) => `%${c.charCodeAt(0).toString(16).toUpperCase()}`;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXNjYXBlLXVyaS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9lc2NhcGUtdXJpLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFPLE1BQU0sU0FBUyxHQUFHLENBQUMsR0FBVyxFQUFVLEVBQUU7QUFDL0Msa0VBQWtFO0FBQ2xFLGtCQUFrQixDQUFDLEdBQUcsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxVQUFVLEVBQUUsU0FBUyxDQUFDLENBQUM7QUFGNUMsUUFBQSxTQUFTLGFBRW1DO0FBRXpELE1BQU0sU0FBUyxHQUFHLENBQUMsQ0FBUyxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDLFdBQVcsRUFBRSxFQUFFLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY29uc3QgZXNjYXBlVXJpID0gKHVyaTogc3RyaW5nKTogc3RyaW5nID0+XG4gIC8vIEFXUyBwZXJjZW50LWVuY29kZXMgc29tZSBleHRyYSBub24tc3RhbmRhcmQgY2hhcmFjdGVycyBpbiBhIFVSSVxuICBlbmNvZGVVUklDb21wb25lbnQodXJpKS5yZXBsYWNlKC9bIScoKSpdL2csIGhleEVuY29kZSk7XG5cbmNvbnN0IGhleEVuY29kZSA9IChjOiBzdHJpbmcpID0+IGAlJHtjLmNoYXJDb2RlQXQoMCkudG9TdHJpbmcoMTYpLnRvVXBwZXJDYXNlKCl9YDtcbiJdfQ==","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\n(0, tslib_1.__exportStar)(require(\"./escape-uri\"), exports);\n(0, tslib_1.__exportStar)(require(\"./escape-uri-path\"), exports);\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsNERBQTZCO0FBQzdCLGlFQUFrQyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gXCIuL2VzY2FwZS11cmlcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2VzY2FwZS11cmktcGF0aFwiO1xuIl19","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultUserAgent = exports.UA_APP_ID_INI_NAME = exports.UA_APP_ID_ENV_NAME = void 0;\nconst node_config_provider_1 = require(\"@aws-sdk/node-config-provider\");\nconst os_1 = require(\"os\");\nconst process_1 = require(\"process\");\nexports.UA_APP_ID_ENV_NAME = \"AWS_SDK_UA_APP_ID\";\nexports.UA_APP_ID_INI_NAME = \"sdk-ua-app-id\";\n/**\n * Collect metrics from runtime to put into user agent.\n */\nconst defaultUserAgent = ({ serviceId, clientVersion }) => {\n    const sections = [\n        // sdk-metadata\n        [\"aws-sdk-js\", clientVersion],\n        // os-metadata\n        [`os/${(0, os_1.platform)()}`, (0, os_1.release)()],\n        // language-metadata\n        // ECMAScript edition doesn't matter in JS, so no version needed.\n        [\"lang/js\"],\n        [\"md/nodejs\", `${process_1.versions.node}`],\n    ];\n    if (serviceId) {\n        // api-metadata\n        // service Id may not appear in non-AWS clients\n        sections.push([`api/${serviceId}`, clientVersion]);\n    }\n    if (process_1.env.AWS_EXECUTION_ENV) {\n        // env-metadata\n        sections.push([`exec-env/${process_1.env.AWS_EXECUTION_ENV}`]);\n    }\n    const appIdPromise = (0, node_config_provider_1.loadConfig)({\n        environmentVariableSelector: (env) => env[exports.UA_APP_ID_ENV_NAME],\n        configFileSelector: (profile) => profile[exports.UA_APP_ID_INI_NAME],\n        default: undefined,\n    })();\n    let resolvedUserAgent = undefined;\n    return async () => {\n        if (!resolvedUserAgent) {\n            const appId = await appIdPromise;\n            resolvedUserAgent = appId ? [...sections, [`app/${appId}`]] : [...sections];\n        }\n        return resolvedUserAgent;\n    };\n};\nexports.defaultUserAgent = defaultUserAgent;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsd0VBQTJEO0FBRTNELDJCQUF1QztBQUN2QyxxQ0FBd0M7QUFFM0IsUUFBQSxrQkFBa0IsR0FBRyxtQkFBbUIsQ0FBQztBQUN6QyxRQUFBLGtCQUFrQixHQUFHLGVBQWUsQ0FBQztBQU9sRDs7R0FFRztBQUNJLE1BQU0sZ0JBQWdCLEdBQUcsQ0FBQyxFQUFFLFNBQVMsRUFBRSxhQUFhLEVBQTJCLEVBQXVCLEVBQUU7SUFDN0csTUFBTSxRQUFRLEdBQWM7UUFDMUIsZUFBZTtRQUNmLENBQUMsWUFBWSxFQUFFLGFBQWEsQ0FBQztRQUM3QixjQUFjO1FBQ2QsQ0FBQyxNQUFNLElBQUEsYUFBUSxHQUFFLEVBQUUsRUFBRSxJQUFBLFlBQU8sR0FBRSxDQUFDO1FBQy9CLG9CQUFvQjtRQUNwQixpRUFBaUU7UUFDakUsQ0FBQyxTQUFTLENBQUM7UUFDWCxDQUFDLFdBQVcsRUFBRSxHQUFHLGtCQUFRLENBQUMsSUFBSSxFQUFFLENBQUM7S0FDbEMsQ0FBQztJQUVGLElBQUksU0FBUyxFQUFFO1FBQ2IsZUFBZTtRQUNmLCtDQUErQztRQUMvQyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUMsT0FBTyxTQUFTLEVBQUUsRUFBRSxhQUFhLENBQUMsQ0FBQyxDQUFDO0tBQ3BEO0lBRUQsSUFBSSxhQUFHLENBQUMsaUJBQWlCLEVBQUU7UUFDekIsZUFBZTtRQUNmLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQyxZQUFZLGFBQUcsQ0FBQyxpQkFBaUIsRUFBRSxDQUFDLENBQUMsQ0FBQztLQUN0RDtJQUVELE1BQU0sWUFBWSxHQUFHLElBQUEsaUNBQVUsRUFBcUI7UUFDbEQsMkJBQTJCLEVBQUUsQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDLEdBQUcsQ0FBQywwQkFBa0IsQ0FBQztRQUM3RCxrQkFBa0IsRUFBRSxDQUFDLE9BQU8sRUFBRSxFQUFFLENBQUMsT0FBTyxDQUFDLDBCQUFrQixDQUFDO1FBQzVELE9BQU8sRUFBRSxTQUFTO0tBQ25CLENBQUMsRUFBRSxDQUFDO0lBRUwsSUFBSSxpQkFBaUIsR0FBMEIsU0FBUyxDQUFDO0lBQ3pELE9BQU8sS0FBSyxJQUFJLEVBQUU7UUFDaEIsSUFBSSxDQUFDLGlCQUFpQixFQUFFO1lBQ3RCLE1BQU0sS0FBSyxHQUFHLE1BQU0sWUFBWSxDQUFDO1lBQ2pDLGlCQUFpQixHQUFHLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLFFBQVEsRUFBRSxDQUFDLE9BQU8sS0FBSyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsUUFBUSxDQUFDLENBQUM7U0FDN0U7UUFDRCxPQUFPLGlCQUFpQixDQUFDO0lBQzNCLENBQUMsQ0FBQztBQUNKLENBQUMsQ0FBQztBQXJDVyxRQUFBLGdCQUFnQixvQkFxQzNCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgbG9hZENvbmZpZyB9IGZyb20gXCJAYXdzLXNkay9ub2RlLWNvbmZpZy1wcm92aWRlclwiO1xuaW1wb3J0IHsgUHJvdmlkZXIsIFVzZXJBZ2VudCB9IGZyb20gXCJAYXdzLXNkay90eXBlc1wiO1xuaW1wb3J0IHsgcGxhdGZvcm0sIHJlbGVhc2UgfSBmcm9tIFwib3NcIjtcbmltcG9ydCB7IGVudiwgdmVyc2lvbnMgfSBmcm9tIFwicHJvY2Vzc1wiO1xuXG5leHBvcnQgY29uc3QgVUFfQVBQX0lEX0VOVl9OQU1FID0gXCJBV1NfU0RLX1VBX0FQUF9JRFwiO1xuZXhwb3J0IGNvbnN0IFVBX0FQUF9JRF9JTklfTkFNRSA9IFwic2RrLXVhLWFwcC1pZFwiO1xuXG5pbnRlcmZhY2UgRGVmYXVsdFVzZXJBZ2VudE9wdGlvbnMge1xuICBzZXJ2aWNlSWQ/OiBzdHJpbmc7XG4gIGNsaWVudFZlcnNpb246IHN0cmluZztcbn1cblxuLyoqXG4gKiBDb2xsZWN0IG1ldHJpY3MgZnJvbSBydW50aW1lIHRvIHB1dCBpbnRvIHVzZXIgYWdlbnQuXG4gKi9cbmV4cG9ydCBjb25zdCBkZWZhdWx0VXNlckFnZW50ID0gKHsgc2VydmljZUlkLCBjbGllbnRWZXJzaW9uIH06IERlZmF1bHRVc2VyQWdlbnRPcHRpb25zKTogUHJvdmlkZXI8VXNlckFnZW50PiA9PiB7XG4gIGNvbnN0IHNlY3Rpb25zOiBVc2VyQWdlbnQgPSBbXG4gICAgLy8gc2RrLW1ldGFkYXRhXG4gICAgW1wiYXdzLXNkay1qc1wiLCBjbGllbnRWZXJzaW9uXSxcbiAgICAvLyBvcy1tZXRhZGF0YVxuICAgIFtgb3MvJHtwbGF0Zm9ybSgpfWAsIHJlbGVhc2UoKV0sXG4gICAgLy8gbGFuZ3VhZ2UtbWV0YWRhdGFcbiAgICAvLyBFQ01BU2NyaXB0IGVkaXRpb24gZG9lc24ndCBtYXR0ZXIgaW4gSlMsIHNvIG5vIHZlcnNpb24gbmVlZGVkLlxuICAgIFtcImxhbmcvanNcIl0sXG4gICAgW1wibWQvbm9kZWpzXCIsIGAke3ZlcnNpb25zLm5vZGV9YF0sXG4gIF07XG5cbiAgaWYgKHNlcnZpY2VJZCkge1xuICAgIC8vIGFwaS1tZXRhZGF0YVxuICAgIC8vIHNlcnZpY2UgSWQgbWF5IG5vdCBhcHBlYXIgaW4gbm9uLUFXUyBjbGllbnRzXG4gICAgc2VjdGlvbnMucHVzaChbYGFwaS8ke3NlcnZpY2VJZH1gLCBjbGllbnRWZXJzaW9uXSk7XG4gIH1cblxuICBpZiAoZW52LkFXU19FWEVDVVRJT05fRU5WKSB7XG4gICAgLy8gZW52LW1ldGFkYXRhXG4gICAgc2VjdGlvbnMucHVzaChbYGV4ZWMtZW52LyR7ZW52LkFXU19FWEVDVVRJT05fRU5WfWBdKTtcbiAgfVxuXG4gIGNvbnN0IGFwcElkUHJvbWlzZSA9IGxvYWRDb25maWc8c3RyaW5nIHwgdW5kZWZpbmVkPih7XG4gICAgZW52aXJvbm1lbnRWYXJpYWJsZVNlbGVjdG9yOiAoZW52KSA9PiBlbnZbVUFfQVBQX0lEX0VOVl9OQU1FXSxcbiAgICBjb25maWdGaWxlU2VsZWN0b3I6IChwcm9maWxlKSA9PiBwcm9maWxlW1VBX0FQUF9JRF9JTklfTkFNRV0sXG4gICAgZGVmYXVsdDogdW5kZWZpbmVkLFxuICB9KSgpO1xuXG4gIGxldCByZXNvbHZlZFVzZXJBZ2VudDogVXNlckFnZW50IHwgdW5kZWZpbmVkID0gdW5kZWZpbmVkO1xuICByZXR1cm4gYXN5bmMgKCkgPT4ge1xuICAgIGlmICghcmVzb2x2ZWRVc2VyQWdlbnQpIHtcbiAgICAgIGNvbnN0IGFwcElkID0gYXdhaXQgYXBwSWRQcm9taXNlO1xuICAgICAgcmVzb2x2ZWRVc2VyQWdlbnQgPSBhcHBJZCA/IFsuLi5zZWN0aW9ucywgW2BhcHAvJHthcHBJZH1gXV0gOiBbLi4uc2VjdGlvbnNdO1xuICAgIH1cbiAgICByZXR1cm4gcmVzb2x2ZWRVc2VyQWdlbnQ7XG4gIH07XG59O1xuIl19","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toUtf8 = exports.fromUtf8 = void 0;\nconst util_buffer_from_1 = require(\"@aws-sdk/util-buffer-from\");\nconst fromUtf8 = (input) => {\n    const buf = (0, util_buffer_from_1.fromString)(input, \"utf8\");\n    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength / Uint8Array.BYTES_PER_ELEMENT);\n};\nexports.fromUtf8 = fromUtf8;\nconst toUtf8 = (input) => (0, util_buffer_from_1.fromArrayBuffer)(input.buffer, input.byteOffset, input.byteLength).toString(\"utf8\");\nexports.toUtf8 = toUtf8;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsZ0VBQXdFO0FBRWpFLE1BQU0sUUFBUSxHQUFHLENBQUMsS0FBYSxFQUFjLEVBQUU7SUFDcEQsTUFBTSxHQUFHLEdBQUcsSUFBQSw2QkFBVSxFQUFDLEtBQUssRUFBRSxNQUFNLENBQUMsQ0FBQztJQUN0QyxPQUFPLElBQUksVUFBVSxDQUFDLEdBQUcsQ0FBQyxNQUFNLEVBQUUsR0FBRyxDQUFDLFVBQVUsRUFBRSxHQUFHLENBQUMsVUFBVSxHQUFHLFVBQVUsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO0FBQ25HLENBQUMsQ0FBQztBQUhXLFFBQUEsUUFBUSxZQUduQjtBQUVLLE1BQU0sTUFBTSxHQUFHLENBQUMsS0FBaUIsRUFBVSxFQUFFLENBQ2xELElBQUEsa0NBQWUsRUFBQyxLQUFLLENBQUMsTUFBTSxFQUFFLEtBQUssQ0FBQyxVQUFVLEVBQUUsS0FBSyxDQUFDLFVBQVUsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsQ0FBQztBQUR4RSxRQUFBLE1BQU0sVUFDa0UiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBmcm9tQXJyYXlCdWZmZXIsIGZyb21TdHJpbmcgfSBmcm9tIFwiQGF3cy1zZGsvdXRpbC1idWZmZXItZnJvbVwiO1xuXG5leHBvcnQgY29uc3QgZnJvbVV0ZjggPSAoaW5wdXQ6IHN0cmluZyk6IFVpbnQ4QXJyYXkgPT4ge1xuICBjb25zdCBidWYgPSBmcm9tU3RyaW5nKGlucHV0LCBcInV0ZjhcIik7XG4gIHJldHVybiBuZXcgVWludDhBcnJheShidWYuYnVmZmVyLCBidWYuYnl0ZU9mZnNldCwgYnVmLmJ5dGVMZW5ndGggLyBVaW50OEFycmF5LkJZVEVTX1BFUl9FTEVNRU5UKTtcbn07XG5cbmV4cG9ydCBjb25zdCB0b1V0ZjggPSAoaW5wdXQ6IFVpbnQ4QXJyYXkpOiBzdHJpbmcgPT5cbiAgZnJvbUFycmF5QnVmZmVyKGlucHV0LmJ1ZmZlciwgaW5wdXQuYnl0ZU9mZnNldCwgaW5wdXQuYnl0ZUxlbmd0aCkudG9TdHJpbmcoXCJ1dGY4XCIpO1xuIl19","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createWaiter = void 0;\nconst poller_1 = require(\"./poller\");\nconst utils_1 = require(\"./utils\");\nconst waiter_1 = require(\"./waiter\");\nconst abortTimeout = async (abortSignal) => {\n    return new Promise((resolve) => {\n        abortSignal.onabort = () => resolve({ state: waiter_1.WaiterState.ABORTED });\n    });\n};\n/**\n * Create a waiter promise that only resolves when:\n * 1. Abort controller is signaled\n * 2. Max wait time is reached\n * 3. `acceptorChecks` succeeds, or fails\n * Otherwise, it invokes `acceptorChecks` with exponential-backoff delay.\n *\n * @internal\n */\nconst createWaiter = async (options, input, acceptorChecks) => {\n    const params = {\n        ...waiter_1.waiterServiceDefaults,\n        ...options,\n    };\n    (0, utils_1.validateWaiterOptions)(params);\n    const exitConditions = [(0, poller_1.runPolling)(params, input, acceptorChecks)];\n    if (options.abortController) {\n        exitConditions.push(abortTimeout(options.abortController.signal));\n    }\n    if (options.abortSignal) {\n        exitConditions.push(abortTimeout(options.abortSignal));\n    }\n    return Promise.race(exitConditions);\n};\nexports.createWaiter = createWaiter;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3JlYXRlV2FpdGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2NyZWF0ZVdhaXRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFFQSxxQ0FBc0M7QUFDdEMsbUNBQWdEO0FBQ2hELHFDQUEyRjtBQUUzRixNQUFNLFlBQVksR0FBRyxLQUFLLEVBQUUsV0FBd0IsRUFBeUIsRUFBRTtJQUM3RSxPQUFPLElBQUksT0FBTyxDQUFDLENBQUMsT0FBTyxFQUFFLEVBQUU7UUFDN0IsV0FBVyxDQUFDLE9BQU8sR0FBRyxHQUFHLEVBQUUsQ0FBQyxPQUFPLENBQUMsRUFBRSxLQUFLLEVBQUUsb0JBQVcsQ0FBQyxPQUFPLEVBQUUsQ0FBQyxDQUFDO0lBQ3RFLENBQUMsQ0FBQyxDQUFDO0FBQ0wsQ0FBQyxDQUFDO0FBRUY7Ozs7Ozs7O0dBUUc7QUFDSSxNQUFNLFlBQVksR0FBRyxLQUFLLEVBQy9CLE9BQThCLEVBQzlCLEtBQVksRUFDWixjQUF1RSxFQUNoRCxFQUFFO0lBQ3pCLE1BQU0sTUFBTSxHQUFHO1FBQ2IsR0FBRyw4QkFBcUI7UUFDeEIsR0FBRyxPQUFPO0tBQ1gsQ0FBQztJQUNGLElBQUEsNkJBQXFCLEVBQUMsTUFBTSxDQUFDLENBQUM7SUFFOUIsTUFBTSxjQUFjLEdBQUcsQ0FBQyxJQUFBLG1CQUFVLEVBQWdCLE1BQU0sRUFBRSxLQUFLLEVBQUUsY0FBYyxDQUFDLENBQUMsQ0FBQztJQUNsRixJQUFJLE9BQU8sQ0FBQyxlQUFlLEVBQUU7UUFDM0IsY0FBYyxDQUFDLElBQUksQ0FBQyxZQUFZLENBQUMsT0FBTyxDQUFDLGVBQWUsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDO0tBQ25FO0lBRUQsSUFBSSxPQUFPLENBQUMsV0FBVyxFQUFFO1FBQ3ZCLGNBQWMsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLE9BQU8sQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDO0tBQ3hEO0lBRUQsT0FBTyxPQUFPLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxDQUFDO0FBQ3RDLENBQUMsQ0FBQztBQXJCVyxRQUFBLFlBQVksZ0JBcUJ2QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFib3J0U2lnbmFsIH0gZnJvbSBcIkBhd3Mtc2RrL3R5cGVzXCI7XG5cbmltcG9ydCB7IHJ1blBvbGxpbmcgfSBmcm9tIFwiLi9wb2xsZXJcIjtcbmltcG9ydCB7IHZhbGlkYXRlV2FpdGVyT3B0aW9ucyB9IGZyb20gXCIuL3V0aWxzXCI7XG5pbXBvcnQgeyBXYWl0ZXJPcHRpb25zLCBXYWl0ZXJSZXN1bHQsIHdhaXRlclNlcnZpY2VEZWZhdWx0cywgV2FpdGVyU3RhdGUgfSBmcm9tIFwiLi93YWl0ZXJcIjtcblxuY29uc3QgYWJvcnRUaW1lb3V0ID0gYXN5bmMgKGFib3J0U2lnbmFsOiBBYm9ydFNpZ25hbCk6IFByb21pc2U8V2FpdGVyUmVzdWx0PiA9PiB7XG4gIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4ge1xuICAgIGFib3J0U2lnbmFsLm9uYWJvcnQgPSAoKSA9PiByZXNvbHZlKHsgc3RhdGU6IFdhaXRlclN0YXRlLkFCT1JURUQgfSk7XG4gIH0pO1xufTtcblxuLyoqXG4gKiBDcmVhdGUgYSB3YWl0ZXIgcHJvbWlzZSB0aGF0IG9ubHkgcmVzb2x2ZXMgd2hlbjpcbiAqIDEuIEFib3J0IGNvbnRyb2xsZXIgaXMgc2lnbmFsZWRcbiAqIDIuIE1heCB3YWl0IHRpbWUgaXMgcmVhY2hlZFxuICogMy4gYGFjY2VwdG9yQ2hlY2tzYCBzdWNjZWVkcywgb3IgZmFpbHNcbiAqIE90aGVyd2lzZSwgaXQgaW52b2tlcyBgYWNjZXB0b3JDaGVja3NgIHdpdGggZXhwb25lbnRpYWwtYmFja29mZiBkZWxheS5cbiAqXG4gKiBAaW50ZXJuYWxcbiAqL1xuZXhwb3J0IGNvbnN0IGNyZWF0ZVdhaXRlciA9IGFzeW5jIDxDbGllbnQsIElucHV0PihcbiAgb3B0aW9uczogV2FpdGVyT3B0aW9uczxDbGllbnQ+LFxuICBpbnB1dDogSW5wdXQsXG4gIGFjY2VwdG9yQ2hlY2tzOiAoY2xpZW50OiBDbGllbnQsIGlucHV0OiBJbnB1dCkgPT4gUHJvbWlzZTxXYWl0ZXJSZXN1bHQ+XG4pOiBQcm9taXNlPFdhaXRlclJlc3VsdD4gPT4ge1xuICBjb25zdCBwYXJhbXMgPSB7XG4gICAgLi4ud2FpdGVyU2VydmljZURlZmF1bHRzLFxuICAgIC4uLm9wdGlvbnMsXG4gIH07XG4gIHZhbGlkYXRlV2FpdGVyT3B0aW9ucyhwYXJhbXMpO1xuXG4gIGNvbnN0IGV4aXRDb25kaXRpb25zID0gW3J1blBvbGxpbmc8Q2xpZW50LCBJbnB1dD4ocGFyYW1zLCBpbnB1dCwgYWNjZXB0b3JDaGVja3MpXTtcbiAgaWYgKG9wdGlvbnMuYWJvcnRDb250cm9sbGVyKSB7XG4gICAgZXhpdENvbmRpdGlvbnMucHVzaChhYm9ydFRpbWVvdXQob3B0aW9ucy5hYm9ydENvbnRyb2xsZXIuc2lnbmFsKSk7XG4gIH1cblxuICBpZiAob3B0aW9ucy5hYm9ydFNpZ25hbCkge1xuICAgIGV4aXRDb25kaXRpb25zLnB1c2goYWJvcnRUaW1lb3V0KG9wdGlvbnMuYWJvcnRTaWduYWwpKTtcbiAgfVxuXG4gIHJldHVybiBQcm9taXNlLnJhY2UoZXhpdENvbmRpdGlvbnMpO1xufTtcbiJdfQ==","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\n(0, tslib_1.__exportStar)(require(\"./createWaiter\"), exports);\n(0, tslib_1.__exportStar)(require(\"./waiter\"), exports);\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsOERBQStCO0FBQy9CLHdEQUF5QiIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gXCIuL2NyZWF0ZVdhaXRlclwiO1xuZXhwb3J0ICogZnJvbSBcIi4vd2FpdGVyXCI7XG4iXX0=","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.runPolling = void 0;\nconst sleep_1 = require(\"./utils/sleep\");\nconst waiter_1 = require(\"./waiter\");\n/**\n * Reference: https://awslabs.github.io/smithy/1.0/spec/waiters.html#waiter-retries\n */\nconst exponentialBackoffWithJitter = (minDelay, maxDelay, attemptCeiling, attempt) => {\n    if (attempt > attemptCeiling)\n        return maxDelay;\n    const delay = minDelay * 2 ** (attempt - 1);\n    return randomInRange(minDelay, delay);\n};\nconst randomInRange = (min, max) => min + Math.random() * (max - min);\n/**\n * Function that runs polling as part of waiters. This will make one inital attempt and then\n * subsequent attempts with an increasing delay.\n * @param params options passed to the waiter.\n * @param client AWS SDK Client\n * @param input client input\n * @param stateChecker function that checks the acceptor states on each poll.\n */\nconst runPolling = async ({ minDelay, maxDelay, maxWaitTime, abortController, client, abortSignal }, input, acceptorChecks) => {\n    var _a;\n    const { state } = await acceptorChecks(client, input);\n    if (state !== waiter_1.WaiterState.RETRY) {\n        return { state };\n    }\n    let currentAttempt = 1;\n    const waitUntil = Date.now() + maxWaitTime * 1000;\n    // The max attempt number that the derived delay time tend to increase.\n    // Pre-compute this number to avoid Number type overflow.\n    const attemptCeiling = Math.log(maxDelay / minDelay) / Math.log(2) + 1;\n    while (true) {\n        if (((_a = abortController === null || abortController === void 0 ? void 0 : abortController.signal) === null || _a === void 0 ? void 0 : _a.aborted) || (abortSignal === null || abortSignal === void 0 ? void 0 : abortSignal.aborted)) {\n            return { state: waiter_1.WaiterState.ABORTED };\n        }\n        const delay = exponentialBackoffWithJitter(minDelay, maxDelay, attemptCeiling, currentAttempt);\n        // Resolve the promise explicitly at timeout or aborted. Otherwise this while loop will keep making API call until\n        // `acceptorCheck` returns non-retry status, even with the Promise.race() outside.\n        if (Date.now() + delay * 1000 > waitUntil) {\n            return { state: waiter_1.WaiterState.TIMEOUT };\n        }\n        await (0, sleep_1.sleep)(delay);\n        const { state } = await acceptorChecks(client, input);\n        if (state !== waiter_1.WaiterState.RETRY) {\n            return { state };\n        }\n        currentAttempt += 1;\n    }\n};\nexports.runPolling = runPolling;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9sbGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3BvbGxlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSx5Q0FBc0M7QUFDdEMscUNBQW9FO0FBRXBFOztHQUVHO0FBQ0gsTUFBTSw0QkFBNEIsR0FBRyxDQUFDLFFBQWdCLEVBQUUsUUFBZ0IsRUFBRSxjQUFzQixFQUFFLE9BQWUsRUFBRSxFQUFFO0lBQ25ILElBQUksT0FBTyxHQUFHLGNBQWM7UUFBRSxPQUFPLFFBQVEsQ0FBQztJQUM5QyxNQUFNLEtBQUssR0FBRyxRQUFRLEdBQUcsQ0FBQyxJQUFJLENBQUMsT0FBTyxHQUFHLENBQUMsQ0FBQyxDQUFDO0lBQzVDLE9BQU8sYUFBYSxDQUFDLFFBQVEsRUFBRSxLQUFLLENBQUMsQ0FBQztBQUN4QyxDQUFDLENBQUM7QUFFRixNQUFNLGFBQWEsR0FBRyxDQUFDLEdBQVcsRUFBRSxHQUFXLEVBQUUsRUFBRSxDQUFDLEdBQUcsR0FBRyxJQUFJLENBQUMsTUFBTSxFQUFFLEdBQUcsQ0FBQyxHQUFHLEdBQUcsR0FBRyxDQUFDLENBQUM7QUFFdEY7Ozs7Ozs7R0FPRztBQUNJLE1BQU0sVUFBVSxHQUFHLEtBQUssRUFDN0IsRUFBRSxRQUFRLEVBQUUsUUFBUSxFQUFFLFdBQVcsRUFBRSxlQUFlLEVBQUUsTUFBTSxFQUFFLFdBQVcsRUFBeUIsRUFDaEcsS0FBWSxFQUNaLGNBQXVFLEVBQ2hELEVBQUU7O0lBQ3pCLE1BQU0sRUFBRSxLQUFLLEVBQUUsR0FBRyxNQUFNLGNBQWMsQ0FBQyxNQUFNLEVBQUUsS0FBSyxDQUFDLENBQUM7SUFDdEQsSUFBSSxLQUFLLEtBQUssb0JBQVcsQ0FBQyxLQUFLLEVBQUU7UUFDL0IsT0FBTyxFQUFFLEtBQUssRUFBRSxDQUFDO0tBQ2xCO0lBRUQsSUFBSSxjQUFjLEdBQUcsQ0FBQyxDQUFDO0lBQ3ZCLE1BQU0sU0FBUyxHQUFHLElBQUksQ0FBQyxHQUFHLEVBQUUsR0FBRyxXQUFXLEdBQUcsSUFBSSxDQUFDO0lBQ2xELHVFQUF1RTtJQUN2RSx5REFBeUQ7SUFDekQsTUFBTSxjQUFjLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxRQUFRLEdBQUcsUUFBUSxDQUFDLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDdkUsT0FBTyxJQUFJLEVBQUU7UUFDWCxJQUFJLENBQUEsTUFBQSxlQUFlLGFBQWYsZUFBZSx1QkFBZixlQUFlLENBQUUsTUFBTSwwQ0FBRSxPQUFPLE1BQUksV0FBVyxhQUFYLFdBQVcsdUJBQVgsV0FBVyxDQUFFLE9BQU8sQ0FBQSxFQUFFO1lBQzVELE9BQU8sRUFBRSxLQUFLLEVBQUUsb0JBQVcsQ0FBQyxPQUFPLEVBQUUsQ0FBQztTQUN2QztRQUNELE1BQU0sS0FBSyxHQUFHLDRCQUE0QixDQUFDLFFBQVEsRUFBRSxRQUFRLEVBQUUsY0FBYyxFQUFFLGNBQWMsQ0FBQyxDQUFDO1FBQy9GLGtIQUFrSDtRQUNsSCxrRkFBa0Y7UUFDbEYsSUFBSSxJQUFJLENBQUMsR0FBRyxFQUFFLEdBQUcsS0FBSyxHQUFHLElBQUksR0FBRyxTQUFTLEVBQUU7WUFDekMsT0FBTyxFQUFFLEtBQUssRUFBRSxvQkFBVyxDQUFDLE9BQU8sRUFBRSxDQUFDO1NBQ3ZDO1FBQ0QsTUFBTSxJQUFBLGFBQUssRUFBQyxLQUFLLENBQUMsQ0FBQztRQUNuQixNQUFNLEVBQUUsS0FBSyxFQUFFLEdBQUcsTUFBTSxjQUFjLENBQUMsTUFBTSxFQUFFLEtBQUssQ0FBQyxDQUFDO1FBQ3RELElBQUksS0FBSyxLQUFLLG9CQUFXLENBQUMsS0FBSyxFQUFFO1lBQy9CLE9BQU8sRUFBRSxLQUFLLEVBQUUsQ0FBQztTQUNsQjtRQUVELGNBQWMsSUFBSSxDQUFDLENBQUM7S0FDckI7QUFDSCxDQUFDLENBQUM7QUFqQ1csUUFBQSxVQUFVLGNBaUNyQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHNsZWVwIH0gZnJvbSBcIi4vdXRpbHMvc2xlZXBcIjtcbmltcG9ydCB7IFdhaXRlck9wdGlvbnMsIFdhaXRlclJlc3VsdCwgV2FpdGVyU3RhdGUgfSBmcm9tIFwiLi93YWl0ZXJcIjtcblxuLyoqXG4gKiBSZWZlcmVuY2U6IGh0dHBzOi8vYXdzbGFicy5naXRodWIuaW8vc21pdGh5LzEuMC9zcGVjL3dhaXRlcnMuaHRtbCN3YWl0ZXItcmV0cmllc1xuICovXG5jb25zdCBleHBvbmVudGlhbEJhY2tvZmZXaXRoSml0dGVyID0gKG1pbkRlbGF5OiBudW1iZXIsIG1heERlbGF5OiBudW1iZXIsIGF0dGVtcHRDZWlsaW5nOiBudW1iZXIsIGF0dGVtcHQ6IG51bWJlcikgPT4ge1xuICBpZiAoYXR0ZW1wdCA+IGF0dGVtcHRDZWlsaW5nKSByZXR1cm4gbWF4RGVsYXk7XG4gIGNvbnN0IGRlbGF5ID0gbWluRGVsYXkgKiAyICoqIChhdHRlbXB0IC0gMSk7XG4gIHJldHVybiByYW5kb21JblJhbmdlKG1pbkRlbGF5LCBkZWxheSk7XG59O1xuXG5jb25zdCByYW5kb21JblJhbmdlID0gKG1pbjogbnVtYmVyLCBtYXg6IG51bWJlcikgPT4gbWluICsgTWF0aC5yYW5kb20oKSAqIChtYXggLSBtaW4pO1xuXG4vKipcbiAqIEZ1bmN0aW9uIHRoYXQgcnVucyBwb2xsaW5nIGFzIHBhcnQgb2Ygd2FpdGVycy4gVGhpcyB3aWxsIG1ha2Ugb25lIGluaXRhbCBhdHRlbXB0IGFuZCB0aGVuXG4gKiBzdWJzZXF1ZW50IGF0dGVtcHRzIHdpdGggYW4gaW5jcmVhc2luZyBkZWxheS5cbiAqIEBwYXJhbSBwYXJhbXMgb3B0aW9ucyBwYXNzZWQgdG8gdGhlIHdhaXRlci5cbiAqIEBwYXJhbSBjbGllbnQgQVdTIFNESyBDbGllbnRcbiAqIEBwYXJhbSBpbnB1dCBjbGllbnQgaW5wdXRcbiAqIEBwYXJhbSBzdGF0ZUNoZWNrZXIgZnVuY3Rpb24gdGhhdCBjaGVja3MgdGhlIGFjY2VwdG9yIHN0YXRlcyBvbiBlYWNoIHBvbGwuXG4gKi9cbmV4cG9ydCBjb25zdCBydW5Qb2xsaW5nID0gYXN5bmMgPENsaWVudCwgSW5wdXQ+KFxuICB7IG1pbkRlbGF5LCBtYXhEZWxheSwgbWF4V2FpdFRpbWUsIGFib3J0Q29udHJvbGxlciwgY2xpZW50LCBhYm9ydFNpZ25hbCB9OiBXYWl0ZXJPcHRpb25zPENsaWVudD4sXG4gIGlucHV0OiBJbnB1dCxcbiAgYWNjZXB0b3JDaGVja3M6IChjbGllbnQ6IENsaWVudCwgaW5wdXQ6IElucHV0KSA9PiBQcm9taXNlPFdhaXRlclJlc3VsdD5cbik6IFByb21pc2U8V2FpdGVyUmVzdWx0PiA9PiB7XG4gIGNvbnN0IHsgc3RhdGUgfSA9IGF3YWl0IGFjY2VwdG9yQ2hlY2tzKGNsaWVudCwgaW5wdXQpO1xuICBpZiAoc3RhdGUgIT09IFdhaXRlclN0YXRlLlJFVFJZKSB7XG4gICAgcmV0dXJuIHsgc3RhdGUgfTtcbiAgfVxuXG4gIGxldCBjdXJyZW50QXR0ZW1wdCA9IDE7XG4gIGNvbnN0IHdhaXRVbnRpbCA9IERhdGUubm93KCkgKyBtYXhXYWl0VGltZSAqIDEwMDA7XG4gIC8vIFRoZSBtYXggYXR0ZW1wdCBudW1iZXIgdGhhdCB0aGUgZGVyaXZlZCBkZWxheSB0aW1lIHRlbmQgdG8gaW5jcmVhc2UuXG4gIC8vIFByZS1jb21wdXRlIHRoaXMgbnVtYmVyIHRvIGF2b2lkIE51bWJlciB0eXBlIG92ZXJmbG93LlxuICBjb25zdCBhdHRlbXB0Q2VpbGluZyA9IE1hdGgubG9nKG1heERlbGF5IC8gbWluRGVsYXkpIC8gTWF0aC5sb2coMikgKyAxO1xuICB3aGlsZSAodHJ1ZSkge1xuICAgIGlmIChhYm9ydENvbnRyb2xsZXI/LnNpZ25hbD8uYWJvcnRlZCB8fCBhYm9ydFNpZ25hbD8uYWJvcnRlZCkge1xuICAgICAgcmV0dXJuIHsgc3RhdGU6IFdhaXRlclN0YXRlLkFCT1JURUQgfTtcbiAgICB9XG4gICAgY29uc3QgZGVsYXkgPSBleHBvbmVudGlhbEJhY2tvZmZXaXRoSml0dGVyKG1pbkRlbGF5LCBtYXhEZWxheSwgYXR0ZW1wdENlaWxpbmcsIGN1cnJlbnRBdHRlbXB0KTtcbiAgICAvLyBSZXNvbHZlIHRoZSBwcm9taXNlIGV4cGxpY2l0bHkgYXQgdGltZW91dCBvciBhYm9ydGVkLiBPdGhlcndpc2UgdGhpcyB3aGlsZSBsb29wIHdpbGwga2VlcCBtYWtpbmcgQVBJIGNhbGwgdW50aWxcbiAgICAvLyBgYWNjZXB0b3JDaGVja2AgcmV0dXJucyBub24tcmV0cnkgc3RhdHVzLCBldmVuIHdpdGggdGhlIFByb21pc2UucmFjZSgpIG91dHNpZGUuXG4gICAgaWYgKERhdGUubm93KCkgKyBkZWxheSAqIDEwMDAgPiB3YWl0VW50aWwpIHtcbiAgICAgIHJldHVybiB7IHN0YXRlOiBXYWl0ZXJTdGF0ZS5USU1FT1VUIH07XG4gICAgfVxuICAgIGF3YWl0IHNsZWVwKGRlbGF5KTtcbiAgICBjb25zdCB7IHN0YXRlIH0gPSBhd2FpdCBhY2NlcHRvckNoZWNrcyhjbGllbnQsIGlucHV0KTtcbiAgICBpZiAoc3RhdGUgIT09IFdhaXRlclN0YXRlLlJFVFJZKSB7XG4gICAgICByZXR1cm4geyBzdGF0ZSB9O1xuICAgIH1cblxuICAgIGN1cnJlbnRBdHRlbXB0ICs9IDE7XG4gIH1cbn07XG4iXX0=","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\n(0, tslib_1.__exportStar)(require(\"./sleep\"), exports);\n(0, tslib_1.__exportStar)(require(\"./validate\"), exports);\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvdXRpbHMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsdURBQXdCO0FBQ3hCLDBEQUEyQiIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gXCIuL3NsZWVwXCI7XG5leHBvcnQgKiBmcm9tIFwiLi92YWxpZGF0ZVwiO1xuIl19","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sleep = void 0;\nconst sleep = (seconds) => {\n    return new Promise((resolve) => setTimeout(resolve, seconds * 1000));\n};\nexports.sleep = sleep;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2xlZXAuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvdXRpbHMvc2xlZXAudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQU8sTUFBTSxLQUFLLEdBQUcsQ0FBQyxPQUFlLEVBQUUsRUFBRTtJQUN2QyxPQUFPLElBQUksT0FBTyxDQUFDLENBQUMsT0FBTyxFQUFFLEVBQUUsQ0FBQyxVQUFVLENBQUMsT0FBTyxFQUFFLE9BQU8sR0FBRyxJQUFJLENBQUMsQ0FBQyxDQUFDO0FBQ3ZFLENBQUMsQ0FBQztBQUZXLFFBQUEsS0FBSyxTQUVoQiIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBjb25zdCBzbGVlcCA9IChzZWNvbmRzOiBudW1iZXIpID0+IHtcbiAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiBzZXRUaW1lb3V0KHJlc29sdmUsIHNlY29uZHMgKiAxMDAwKSk7XG59O1xuIl19","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateWaiterOptions = void 0;\n/**\n * Validates that waiter options are passed correctly\n * @param options a waiter configuration object\n */\nconst validateWaiterOptions = (options) => {\n    if (options.maxWaitTime < 1) {\n        throw new Error(`WaiterConfiguration.maxWaitTime must be greater than 0`);\n    }\n    else if (options.minDelay < 1) {\n        throw new Error(`WaiterConfiguration.minDelay must be greater than 0`);\n    }\n    else if (options.maxDelay < 1) {\n        throw new Error(`WaiterConfiguration.maxDelay must be greater than 0`);\n    }\n    else if (options.maxWaitTime <= options.minDelay) {\n        throw new Error(`WaiterConfiguration.maxWaitTime [${options.maxWaitTime}] must be greater than WaiterConfiguration.minDelay [${options.minDelay}] for this waiter`);\n    }\n    else if (options.maxDelay < options.minDelay) {\n        throw new Error(`WaiterConfiguration.maxDelay [${options.maxDelay}] must be greater than WaiterConfiguration.minDelay [${options.minDelay}] for this waiter`);\n    }\n};\nexports.validateWaiterOptions = validateWaiterOptions;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmFsaWRhdGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvdXRpbHMvdmFsaWRhdGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBRUE7OztHQUdHO0FBQ0ksTUFBTSxxQkFBcUIsR0FBRyxDQUFTLE9BQThCLEVBQVEsRUFBRTtJQUNwRixJQUFJLE9BQU8sQ0FBQyxXQUFXLEdBQUcsQ0FBQyxFQUFFO1FBQzNCLE1BQU0sSUFBSSxLQUFLLENBQUMsd0RBQXdELENBQUMsQ0FBQztLQUMzRTtTQUFNLElBQUksT0FBTyxDQUFDLFFBQVEsR0FBRyxDQUFDLEVBQUU7UUFDL0IsTUFBTSxJQUFJLEtBQUssQ0FBQyxxREFBcUQsQ0FBQyxDQUFDO0tBQ3hFO1NBQU0sSUFBSSxPQUFPLENBQUMsUUFBUSxHQUFHLENBQUMsRUFBRTtRQUMvQixNQUFNLElBQUksS0FBSyxDQUFDLHFEQUFxRCxDQUFDLENBQUM7S0FDeEU7U0FBTSxJQUFJLE9BQU8sQ0FBQyxXQUFXLElBQUksT0FBTyxDQUFDLFFBQVEsRUFBRTtRQUNsRCxNQUFNLElBQUksS0FBSyxDQUNiLG9DQUFvQyxPQUFPLENBQUMsV0FBVyx3REFBd0QsT0FBTyxDQUFDLFFBQVEsbUJBQW1CLENBQ25KLENBQUM7S0FDSDtTQUFNLElBQUksT0FBTyxDQUFDLFFBQVEsR0FBRyxPQUFPLENBQUMsUUFBUSxFQUFFO1FBQzlDLE1BQU0sSUFBSSxLQUFLLENBQ2IsaUNBQWlDLE9BQU8sQ0FBQyxRQUFRLHdEQUF3RCxPQUFPLENBQUMsUUFBUSxtQkFBbUIsQ0FDN0ksQ0FBQztLQUNIO0FBQ0gsQ0FBQyxDQUFDO0FBaEJXLFFBQUEscUJBQXFCLHlCQWdCaEMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBXYWl0ZXJPcHRpb25zIH0gZnJvbSBcIi4uL3dhaXRlclwiO1xuXG4vKipcbiAqIFZhbGlkYXRlcyB0aGF0IHdhaXRlciBvcHRpb25zIGFyZSBwYXNzZWQgY29ycmVjdGx5XG4gKiBAcGFyYW0gb3B0aW9ucyBhIHdhaXRlciBjb25maWd1cmF0aW9uIG9iamVjdFxuICovXG5leHBvcnQgY29uc3QgdmFsaWRhdGVXYWl0ZXJPcHRpb25zID0gPENsaWVudD4ob3B0aW9uczogV2FpdGVyT3B0aW9uczxDbGllbnQ+KTogdm9pZCA9PiB7XG4gIGlmIChvcHRpb25zLm1heFdhaXRUaW1lIDwgMSkge1xuICAgIHRocm93IG5ldyBFcnJvcihgV2FpdGVyQ29uZmlndXJhdGlvbi5tYXhXYWl0VGltZSBtdXN0IGJlIGdyZWF0ZXIgdGhhbiAwYCk7XG4gIH0gZWxzZSBpZiAob3B0aW9ucy5taW5EZWxheSA8IDEpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYFdhaXRlckNvbmZpZ3VyYXRpb24ubWluRGVsYXkgbXVzdCBiZSBncmVhdGVyIHRoYW4gMGApO1xuICB9IGVsc2UgaWYgKG9wdGlvbnMubWF4RGVsYXkgPCAxKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKGBXYWl0ZXJDb25maWd1cmF0aW9uLm1heERlbGF5IG11c3QgYmUgZ3JlYXRlciB0aGFuIDBgKTtcbiAgfSBlbHNlIGlmIChvcHRpb25zLm1heFdhaXRUaW1lIDw9IG9wdGlvbnMubWluRGVsYXkpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICBgV2FpdGVyQ29uZmlndXJhdGlvbi5tYXhXYWl0VGltZSBbJHtvcHRpb25zLm1heFdhaXRUaW1lfV0gbXVzdCBiZSBncmVhdGVyIHRoYW4gV2FpdGVyQ29uZmlndXJhdGlvbi5taW5EZWxheSBbJHtvcHRpb25zLm1pbkRlbGF5fV0gZm9yIHRoaXMgd2FpdGVyYFxuICAgICk7XG4gIH0gZWxzZSBpZiAob3B0aW9ucy5tYXhEZWxheSA8IG9wdGlvbnMubWluRGVsYXkpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXG4gICAgICBgV2FpdGVyQ29uZmlndXJhdGlvbi5tYXhEZWxheSBbJHtvcHRpb25zLm1heERlbGF5fV0gbXVzdCBiZSBncmVhdGVyIHRoYW4gV2FpdGVyQ29uZmlndXJhdGlvbi5taW5EZWxheSBbJHtvcHRpb25zLm1pbkRlbGF5fV0gZm9yIHRoaXMgd2FpdGVyYFxuICAgICk7XG4gIH1cbn07XG4iXX0=","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkExceptions = exports.WaiterState = exports.waiterServiceDefaults = void 0;\n/**\n * @private\n */\nexports.waiterServiceDefaults = {\n    minDelay: 2,\n    maxDelay: 120,\n};\nvar WaiterState;\n(function (WaiterState) {\n    WaiterState[\"ABORTED\"] = \"ABORTED\";\n    WaiterState[\"FAILURE\"] = \"FAILURE\";\n    WaiterState[\"SUCCESS\"] = \"SUCCESS\";\n    WaiterState[\"RETRY\"] = \"RETRY\";\n    WaiterState[\"TIMEOUT\"] = \"TIMEOUT\";\n})(WaiterState = exports.WaiterState || (exports.WaiterState = {}));\n/**\n * Handles and throws exceptions resulting from the waiterResult\n * @param result WaiterResult\n */\nconst checkExceptions = (result) => {\n    if (result.state === WaiterState.ABORTED) {\n        const abortError = new Error(`${JSON.stringify({\n            ...result,\n            reason: \"Request was aborted\",\n        })}`);\n        abortError.name = \"AbortError\";\n        throw abortError;\n    }\n    else if (result.state === WaiterState.TIMEOUT) {\n        const timeoutError = new Error(`${JSON.stringify({\n            ...result,\n            reason: \"Waiter has timed out\",\n        })}`);\n        timeoutError.name = \"TimeoutError\";\n        throw timeoutError;\n    }\n    else if (result.state !== WaiterState.SUCCESS) {\n        throw new Error(`${JSON.stringify({ result })}`);\n    }\n    return result;\n};\nexports.checkExceptions = checkExceptions;\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2FpdGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3dhaXRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFJQTs7R0FFRztBQUNVLFFBQUEscUJBQXFCLEdBQUc7SUFDbkMsUUFBUSxFQUFFLENBQUM7SUFDWCxRQUFRLEVBQUUsR0FBRztDQUNkLENBQUM7QUFRRixJQUFZLFdBTVg7QUFORCxXQUFZLFdBQVc7SUFDckIsa0NBQW1CLENBQUE7SUFDbkIsa0NBQW1CLENBQUE7SUFDbkIsa0NBQW1CLENBQUE7SUFDbkIsOEJBQWUsQ0FBQTtJQUNmLGtDQUFtQixDQUFBO0FBQ3JCLENBQUMsRUFOVyxXQUFXLEdBQVgsbUJBQVcsS0FBWCxtQkFBVyxRQU10QjtBQVdEOzs7R0FHRztBQUNJLE1BQU0sZUFBZSxHQUFHLENBQUMsTUFBb0IsRUFBZ0IsRUFBRTtJQUNwRSxJQUFJLE1BQU0sQ0FBQyxLQUFLLEtBQUssV0FBVyxDQUFDLE9BQU8sRUFBRTtRQUN4QyxNQUFNLFVBQVUsR0FBRyxJQUFJLEtBQUssQ0FDMUIsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDO1lBQ2hCLEdBQUcsTUFBTTtZQUNULE1BQU0sRUFBRSxxQkFBcUI7U0FDOUIsQ0FBQyxFQUFFLENBQ0wsQ0FBQztRQUNGLFVBQVUsQ0FBQyxJQUFJLEdBQUcsWUFBWSxDQUFDO1FBQy9CLE1BQU0sVUFBVSxDQUFDO0tBQ2xCO1NBQU0sSUFBSSxNQUFNLENBQUMsS0FBSyxLQUFLLFdBQVcsQ0FBQyxPQUFPLEVBQUU7UUFDL0MsTUFBTSxZQUFZLEdBQUcsSUFBSSxLQUFLLENBQzVCLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQztZQUNoQixHQUFHLE1BQU07WUFDVCxNQUFNLEVBQUUsc0JBQXNCO1NBQy9CLENBQUMsRUFBRSxDQUNMLENBQUM7UUFDRixZQUFZLENBQUMsSUFBSSxHQUFHLGNBQWMsQ0FBQztRQUNuQyxNQUFNLFlBQVksQ0FBQztLQUNwQjtTQUFNLElBQUksTUFBTSxDQUFDLEtBQUssS0FBSyxXQUFXLENBQUMsT0FBTyxFQUFFO1FBQy9DLE1BQU0sSUFBSSxLQUFLLENBQUMsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLEVBQUUsTUFBTSxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUM7S0FDbEQ7SUFDRCxPQUFPLE1BQU0sQ0FBQztBQUNoQixDQUFDLENBQUM7QUF2QlcsUUFBQSxlQUFlLG1CQXVCMUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBXYWl0ZXJDb25maWd1cmF0aW9uIGFzIFdhaXRlckNvbmZpZ3VyYXRpb25fXyB9IGZyb20gXCJAYXdzLXNkay90eXBlc1wiO1xuXG5leHBvcnQgaW50ZXJmYWNlIFdhaXRlckNvbmZpZ3VyYXRpb248VD4gZXh0ZW5kcyBXYWl0ZXJDb25maWd1cmF0aW9uX188VD4ge31cblxuLyoqXG4gKiBAcHJpdmF0ZVxuICovXG5leHBvcnQgY29uc3Qgd2FpdGVyU2VydmljZURlZmF1bHRzID0ge1xuICBtaW5EZWxheTogMixcbiAgbWF4RGVsYXk6IDEyMCxcbn07XG5cbi8qKlxuICogQHByaXZhdGVcbiAqL1xuZXhwb3J0IHR5cGUgV2FpdGVyT3B0aW9uczxDbGllbnQ+ID0gV2FpdGVyQ29uZmlndXJhdGlvbjxDbGllbnQ+ICZcbiAgUmVxdWlyZWQ8UGljazxXYWl0ZXJDb25maWd1cmF0aW9uPENsaWVudD4sIFwibWluRGVsYXlcIiB8IFwibWF4RGVsYXlcIj4+O1xuXG5leHBvcnQgZW51bSBXYWl0ZXJTdGF0ZSB7XG4gIEFCT1JURUQgPSBcIkFCT1JURURcIixcbiAgRkFJTFVSRSA9IFwiRkFJTFVSRVwiLFxuICBTVUNDRVNTID0gXCJTVUNDRVNTXCIsXG4gIFJFVFJZID0gXCJSRVRSWVwiLFxuICBUSU1FT1VUID0gXCJUSU1FT1VUXCIsXG59XG5cbmV4cG9ydCB0eXBlIFdhaXRlclJlc3VsdCA9IHtcbiAgc3RhdGU6IFdhaXRlclN0YXRlO1xuXG4gIC8qKlxuICAgKiAob3B0aW9uYWwpIEluZGljYXRlcyBhIHJlYXNvbiBmb3Igd2h5IGEgd2FpdGVyIGhhcyByZWFjaGVkIGl0cyBzdGF0ZS5cbiAgICovXG4gIHJlYXNvbj86IGFueTtcbn07XG5cbi8qKlxuICogSGFuZGxlcyBhbmQgdGhyb3dzIGV4Y2VwdGlvbnMgcmVzdWx0aW5nIGZyb20gdGhlIHdhaXRlclJlc3VsdFxuICogQHBhcmFtIHJlc3VsdCBXYWl0ZXJSZXN1bHRcbiAqL1xuZXhwb3J0IGNvbnN0IGNoZWNrRXhjZXB0aW9ucyA9IChyZXN1bHQ6IFdhaXRlclJlc3VsdCk6IFdhaXRlclJlc3VsdCA9PiB7XG4gIGlmIChyZXN1bHQuc3RhdGUgPT09IFdhaXRlclN0YXRlLkFCT1JURUQpIHtcbiAgICBjb25zdCBhYm9ydEVycm9yID0gbmV3IEVycm9yKFxuICAgICAgYCR7SlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICAuLi5yZXN1bHQsXG4gICAgICAgIHJlYXNvbjogXCJSZXF1ZXN0IHdhcyBhYm9ydGVkXCIsXG4gICAgICB9KX1gXG4gICAgKTtcbiAgICBhYm9ydEVycm9yLm5hbWUgPSBcIkFib3J0RXJyb3JcIjtcbiAgICB0aHJvdyBhYm9ydEVycm9yO1xuICB9IGVsc2UgaWYgKHJlc3VsdC5zdGF0ZSA9PT0gV2FpdGVyU3RhdGUuVElNRU9VVCkge1xuICAgIGNvbnN0IHRpbWVvdXRFcnJvciA9IG5ldyBFcnJvcihcbiAgICAgIGAke0pTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgLi4ucmVzdWx0LFxuICAgICAgICByZWFzb246IFwiV2FpdGVyIGhhcyB0aW1lZCBvdXRcIixcbiAgICAgIH0pfWBcbiAgICApO1xuICAgIHRpbWVvdXRFcnJvci5uYW1lID0gXCJUaW1lb3V0RXJyb3JcIjtcbiAgICB0aHJvdyB0aW1lb3V0RXJyb3I7XG4gIH0gZWxzZSBpZiAocmVzdWx0LnN0YXRlICE9PSBXYWl0ZXJTdGF0ZS5TVUNDRVNTKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKGAke0pTT04uc3RyaW5naWZ5KHsgcmVzdWx0IH0pfWApO1xuICB9XG4gIHJldHVybiByZXN1bHQ7XG59O1xuIl19","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decodeHTML = exports.decodeHTMLStrict = exports.decodeXML = void 0;\nvar entities_json_1 = __importDefault(require(\"./maps/entities.json\"));\nvar legacy_json_1 = __importDefault(require(\"./maps/legacy.json\"));\nvar xml_json_1 = __importDefault(require(\"./maps/xml.json\"));\nvar decode_codepoint_1 = __importDefault(require(\"./decode_codepoint\"));\nvar strictEntityRe = /&(?:[a-zA-Z0-9]+|#[xX][\\da-fA-F]+|#\\d+);/g;\nexports.decodeXML = getStrictDecoder(xml_json_1.default);\nexports.decodeHTMLStrict = getStrictDecoder(entities_json_1.default);\nfunction getStrictDecoder(map) {\n    var replace = getReplacer(map);\n    return function (str) { return String(str).replace(strictEntityRe, replace); };\n}\nvar sorter = function (a, b) { return (a < b ? 1 : -1); };\nexports.decodeHTML = (function () {\n    var legacy = Object.keys(legacy_json_1.default).sort(sorter);\n    var keys = Object.keys(entities_json_1.default).sort(sorter);\n    for (var i = 0, j = 0; i < keys.length; i++) {\n        if (legacy[j] === keys[i]) {\n            keys[i] += \";?\";\n            j++;\n        }\n        else {\n            keys[i] += \";\";\n        }\n    }\n    var re = new RegExp(\"&(?:\" + keys.join(\"|\") + \"|#[xX][\\\\da-fA-F]+;?|#\\\\d+;?)\", \"g\");\n    var replace = getReplacer(entities_json_1.default);\n    function replacer(str) {\n        if (str.substr(-1) !== \";\")\n            str += \";\";\n        return replace(str);\n    }\n    // TODO consider creating a merged map\n    return function (str) { return String(str).replace(re, replacer); };\n})();\nfunction getReplacer(map) {\n    return function replace(str) {\n        if (str.charAt(1) === \"#\") {\n            var secondChar = str.charAt(2);\n            if (secondChar === \"X\" || secondChar === \"x\") {\n                return decode_codepoint_1.default(parseInt(str.substr(3), 16));\n            }\n            return decode_codepoint_1.default(parseInt(str.substr(2), 10));\n        }\n        // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n        return map[str.slice(1, -1)] || str;\n    };\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar decode_json_1 = __importDefault(require(\"./maps/decode.json\"));\n// Adapted from https://github.com/mathiasbynens/he/blob/master/src/he.js#L94-L119\nvar fromCodePoint = \n// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\nString.fromCodePoint ||\n    function (codePoint) {\n        var output = \"\";\n        if (codePoint > 0xffff) {\n            codePoint -= 0x10000;\n            output += String.fromCharCode(((codePoint >>> 10) & 0x3ff) | 0xd800);\n            codePoint = 0xdc00 | (codePoint & 0x3ff);\n        }\n        output += String.fromCharCode(codePoint);\n        return output;\n    };\nfunction decodeCodePoint(codePoint) {\n    if ((codePoint >= 0xd800 && codePoint <= 0xdfff) || codePoint > 0x10ffff) {\n        return \"\\uFFFD\";\n    }\n    if (codePoint in decode_json_1.default) {\n        codePoint = decode_json_1.default[codePoint];\n    }\n    return fromCodePoint(codePoint);\n}\nexports.default = decodeCodePoint;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.escapeUTF8 = exports.escape = exports.encodeNonAsciiHTML = exports.encodeHTML = exports.encodeXML = void 0;\nvar xml_json_1 = __importDefault(require(\"./maps/xml.json\"));\nvar inverseXML = getInverseObj(xml_json_1.default);\nvar xmlReplacer = getInverseReplacer(inverseXML);\n/**\n * Encodes all non-ASCII characters, as well as characters not valid in XML\n * documents using XML entities.\n *\n * If a character has no equivalent entity, a\n * numeric hexadecimal reference (eg. `&#xfc;`) will be used.\n */\nexports.encodeXML = getASCIIEncoder(inverseXML);\nvar entities_json_1 = __importDefault(require(\"./maps/entities.json\"));\nvar inverseHTML = getInverseObj(entities_json_1.default);\nvar htmlReplacer = getInverseReplacer(inverseHTML);\n/**\n * Encodes all entities and non-ASCII characters in the input.\n *\n * This includes characters that are valid ASCII characters in HTML documents.\n * For example `#` will be encoded as `&num;`. To get a more compact output,\n * consider using the `encodeNonAsciiHTML` function.\n *\n * If a character has no equivalent entity, a\n * numeric hexadecimal reference (eg. `&#xfc;`) will be used.\n */\nexports.encodeHTML = getInverse(inverseHTML, htmlReplacer);\n/**\n * Encodes all non-ASCII characters, as well as characters not valid in HTML\n * documents using HTML entities.\n *\n * If a character has no equivalent entity, a\n * numeric hexadecimal reference (eg. `&#xfc;`) will be used.\n */\nexports.encodeNonAsciiHTML = getASCIIEncoder(inverseHTML);\nfunction getInverseObj(obj) {\n    return Object.keys(obj)\n        .sort()\n        .reduce(function (inverse, name) {\n        inverse[obj[name]] = \"&\" + name + \";\";\n        return inverse;\n    }, {});\n}\nfunction getInverseReplacer(inverse) {\n    var single = [];\n    var multiple = [];\n    for (var _i = 0, _a = Object.keys(inverse); _i < _a.length; _i++) {\n        var k = _a[_i];\n        if (k.length === 1) {\n            // Add value to single array\n            single.push(\"\\\\\" + k);\n        }\n        else {\n            // Add value to multiple array\n            multiple.push(k);\n        }\n    }\n    // Add ranges to single characters.\n    single.sort();\n    for (var start = 0; start < single.length - 1; start++) {\n        // Find the end of a run of characters\n        var end = start;\n        while (end < single.length - 1 &&\n            single[end].charCodeAt(1) + 1 === single[end + 1].charCodeAt(1)) {\n            end += 1;\n        }\n        var count = 1 + end - start;\n        // We want to replace at least three characters\n        if (count < 3)\n            continue;\n        single.splice(start, count, single[start] + \"-\" + single[end]);\n    }\n    multiple.unshift(\"[\" + single.join(\"\") + \"]\");\n    return new RegExp(multiple.join(\"|\"), \"g\");\n}\n// /[^\\0-\\x7F]/gu\nvar reNonASCII = /(?:[\\x80-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])/g;\nvar getCodePoint = \n// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\nString.prototype.codePointAt != null\n    ? // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        function (str) { return str.codePointAt(0); }\n    : // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n        function (c) {\n            return (c.charCodeAt(0) - 0xd800) * 0x400 +\n                c.charCodeAt(1) -\n                0xdc00 +\n                0x10000;\n        };\nfunction singleCharReplacer(c) {\n    return \"&#x\" + (c.length > 1 ? getCodePoint(c) : c.charCodeAt(0))\n        .toString(16)\n        .toUpperCase() + \";\";\n}\nfunction getInverse(inverse, re) {\n    return function (data) {\n        return data\n            .replace(re, function (name) { return inverse[name]; })\n            .replace(reNonASCII, singleCharReplacer);\n    };\n}\nvar reEscapeChars = new RegExp(xmlReplacer.source + \"|\" + reNonASCII.source, \"g\");\n/**\n * Encodes all non-ASCII characters, as well as characters not valid in XML\n * documents using numeric hexadecimal reference (eg. `&#xfc;`).\n *\n * Have a look at `escapeUTF8` if you want a more concise output at the expense\n * of reduced transportability.\n *\n * @param data String to escape.\n */\nfunction escape(data) {\n    return data.replace(reEscapeChars, singleCharReplacer);\n}\nexports.escape = escape;\n/**\n * Encodes all characters not valid in XML documents using numeric hexadecimal\n * reference (eg. `&#xfc;`).\n *\n * Note that the output will be character-set dependent.\n *\n * @param data String to escape.\n */\nfunction escapeUTF8(data) {\n    return data.replace(xmlReplacer, singleCharReplacer);\n}\nexports.escapeUTF8 = escapeUTF8;\nfunction getASCIIEncoder(obj) {\n    return function (data) {\n        return data.replace(reEscapeChars, function (c) { return obj[c] || singleCharReplacer(c); });\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decodeXMLStrict = exports.decodeHTML5Strict = exports.decodeHTML4Strict = exports.decodeHTML5 = exports.decodeHTML4 = exports.decodeHTMLStrict = exports.decodeHTML = exports.decodeXML = exports.encodeHTML5 = exports.encodeHTML4 = exports.escapeUTF8 = exports.escape = exports.encodeNonAsciiHTML = exports.encodeHTML = exports.encodeXML = exports.encode = exports.decodeStrict = exports.decode = void 0;\nvar decode_1 = require(\"./decode\");\nvar encode_1 = require(\"./encode\");\n/**\n * Decodes a string with entities.\n *\n * @param data String to decode.\n * @param level Optional level to decode at. 0 = XML, 1 = HTML. Default is 0.\n * @deprecated Use `decodeXML` or `decodeHTML` directly.\n */\nfunction decode(data, level) {\n    return (!level || level <= 0 ? decode_1.decodeXML : decode_1.decodeHTML)(data);\n}\nexports.decode = decode;\n/**\n * Decodes a string with entities. Does not allow missing trailing semicolons for entities.\n *\n * @param data String to decode.\n * @param level Optional level to decode at. 0 = XML, 1 = HTML. Default is 0.\n * @deprecated Use `decodeHTMLStrict` or `decodeXML` directly.\n */\nfunction decodeStrict(data, level) {\n    return (!level || level <= 0 ? decode_1.decodeXML : decode_1.decodeHTMLStrict)(data);\n}\nexports.decodeStrict = decodeStrict;\n/**\n * Encodes a string with entities.\n *\n * @param data String to encode.\n * @param level Optional level to encode at. 0 = XML, 1 = HTML. Default is 0.\n * @deprecated Use `encodeHTML`, `encodeXML` or `encodeNonAsciiHTML` directly.\n */\nfunction encode(data, level) {\n    return (!level || level <= 0 ? encode_1.encodeXML : encode_1.encodeHTML)(data);\n}\nexports.encode = encode;\nvar encode_2 = require(\"./encode\");\nObject.defineProperty(exports, \"encodeXML\", { enumerable: true, get: function () { return encode_2.encodeXML; } });\nObject.defineProperty(exports, \"encodeHTML\", { enumerable: true, get: function () { return encode_2.encodeHTML; } });\nObject.defineProperty(exports, \"encodeNonAsciiHTML\", { enumerable: true, get: function () { return encode_2.encodeNonAsciiHTML; } });\nObject.defineProperty(exports, \"escape\", { enumerable: true, get: function () { return encode_2.escape; } });\nObject.defineProperty(exports, \"escapeUTF8\", { enumerable: true, get: function () { return encode_2.escapeUTF8; } });\n// Legacy aliases (deprecated)\nObject.defineProperty(exports, \"encodeHTML4\", { enumerable: true, get: function () { return encode_2.encodeHTML; } });\nObject.defineProperty(exports, \"encodeHTML5\", { enumerable: true, get: function () { return encode_2.encodeHTML; } });\nvar decode_2 = require(\"./decode\");\nObject.defineProperty(exports, \"decodeXML\", { enumerable: true, get: function () { return decode_2.decodeXML; } });\nObject.defineProperty(exports, \"decodeHTML\", { enumerable: true, get: function () { return decode_2.decodeHTML; } });\nObject.defineProperty(exports, \"decodeHTMLStrict\", { enumerable: true, get: function () { return decode_2.decodeHTMLStrict; } });\n// Legacy aliases (deprecated)\nObject.defineProperty(exports, \"decodeHTML4\", { enumerable: true, get: function () { return decode_2.decodeHTML; } });\nObject.defineProperty(exports, \"decodeHTML5\", { enumerable: true, get: function () { return decode_2.decodeHTML; } });\nObject.defineProperty(exports, \"decodeHTML4Strict\", { enumerable: true, get: function () { return decode_2.decodeHTMLStrict; } });\nObject.defineProperty(exports, \"decodeHTML5Strict\", { enumerable: true, get: function () { return decode_2.decodeHTMLStrict; } });\nObject.defineProperty(exports, \"decodeXMLStrict\", { enumerable: true, get: function () { return decode_2.decodeXML; } });\n","'use strict';\n//parse Empty Node as self closing node\nconst buildOptions = require('./util').buildOptions;\n\nconst defaultOptions = {\n  attributeNamePrefix: '@_',\n  attrNodeName: false,\n  textNodeName: '#text',\n  ignoreAttributes: true,\n  cdataTagName: false,\n  cdataPositionChar: '\\\\c',\n  format: false,\n  indentBy: '  ',\n  supressEmptyNode: false,\n  tagValueProcessor: function(a) {\n    return a;\n  },\n  attrValueProcessor: function(a) {\n    return a;\n  },\n};\n\nconst props = [\n  'attributeNamePrefix',\n  'attrNodeName',\n  'textNodeName',\n  'ignoreAttributes',\n  'cdataTagName',\n  'cdataPositionChar',\n  'format',\n  'indentBy',\n  'supressEmptyNode',\n  'tagValueProcessor',\n  'attrValueProcessor',\n];\n\nfunction Parser(options) {\n  this.options = buildOptions(options, defaultOptions, props);\n  if (this.options.ignoreAttributes || this.options.attrNodeName) {\n    this.isAttribute = function(/*a*/) {\n      return false;\n    };\n  } else {\n    this.attrPrefixLen = this.options.attributeNamePrefix.length;\n    this.isAttribute = isAttribute;\n  }\n  if (this.options.cdataTagName) {\n    this.isCDATA = isCDATA;\n  } else {\n    this.isCDATA = function(/*a*/) {\n      return false;\n    };\n  }\n  this.replaceCDATAstr = replaceCDATAstr;\n  this.replaceCDATAarr = replaceCDATAarr;\n\n  if (this.options.format) {\n    this.indentate = indentate;\n    this.tagEndChar = '>\\n';\n    this.newLine = '\\n';\n  } else {\n    this.indentate = function() {\n      return '';\n    };\n    this.tagEndChar = '>';\n    this.newLine = '';\n  }\n\n  if (this.options.supressEmptyNode) {\n    this.buildTextNode = buildEmptyTextNode;\n    this.buildObjNode = buildEmptyObjNode;\n  } else {\n    this.buildTextNode = buildTextValNode;\n    this.buildObjNode = buildObjectNode;\n  }\n\n  this.buildTextValNode = buildTextValNode;\n  this.buildObjectNode = buildObjectNode;\n}\n\nParser.prototype.parse = function(jObj) {\n  return this.j2x(jObj, 0).val;\n};\n\nParser.prototype.j2x = function(jObj, level) {\n  let attrStr = '';\n  let val = '';\n  const keys = Object.keys(jObj);\n  const len = keys.length;\n  for (let i = 0; i < len; i++) {\n    const key = keys[i];\n    if (typeof jObj[key] === 'undefined') {\n      // supress undefined node\n    } else if (jObj[key] === null) {\n      val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n    } else if (jObj[key] instanceof Date) {\n      val += this.buildTextNode(jObj[key], key, '', level);\n    } else if (typeof jObj[key] !== 'object') {\n      //premitive type\n      const attr = this.isAttribute(key);\n      if (attr) {\n        attrStr += ' ' + attr + '=\"' + this.options.attrValueProcessor('' + jObj[key]) + '\"';\n      } else if (this.isCDATA(key)) {\n        if (jObj[this.options.textNodeName]) {\n          val += this.replaceCDATAstr(jObj[this.options.textNodeName], jObj[key]);\n        } else {\n          val += this.replaceCDATAstr('', jObj[key]);\n        }\n      } else {\n        //tag value\n        if (key === this.options.textNodeName) {\n          if (jObj[this.options.cdataTagName]) {\n            //value will added while processing cdata\n          } else {\n            val += this.options.tagValueProcessor('' + jObj[key]);\n          }\n        } else {\n          val += this.buildTextNode(jObj[key], key, '', level);\n        }\n      }\n    } else if (Array.isArray(jObj[key])) {\n      //repeated nodes\n      if (this.isCDATA(key)) {\n        val += this.indentate(level);\n        if (jObj[this.options.textNodeName]) {\n          val += this.replaceCDATAarr(jObj[this.options.textNodeName], jObj[key]);\n        } else {\n          val += this.replaceCDATAarr('', jObj[key]);\n        }\n      } else {\n        //nested nodes\n        const arrLen = jObj[key].length;\n        for (let j = 0; j < arrLen; j++) {\n          const item = jObj[key][j];\n          if (typeof item === 'undefined') {\n            // supress undefined node\n          } else if (item === null) {\n            val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n          } else if (typeof item === 'object') {\n            const result = this.j2x(item, level + 1);\n            val += this.buildObjNode(result.val, key, result.attrStr, level);\n          } else {\n            val += this.buildTextNode(item, key, '', level);\n          }\n        }\n      }\n    } else {\n      //nested node\n      if (this.options.attrNodeName && key === this.options.attrNodeName) {\n        const Ks = Object.keys(jObj[key]);\n        const L = Ks.length;\n        for (let j = 0; j < L; j++) {\n          attrStr += ' ' + Ks[j] + '=\"' + this.options.attrValueProcessor('' + jObj[key][Ks[j]]) + '\"';\n        }\n      } else {\n        const result = this.j2x(jObj[key], level + 1);\n        val += this.buildObjNode(result.val, key, result.attrStr, level);\n      }\n    }\n  }\n  return {attrStr: attrStr, val: val};\n};\n\nfunction replaceCDATAstr(str, cdata) {\n  str = this.options.tagValueProcessor('' + str);\n  if (this.options.cdataPositionChar === '' || str === '') {\n    return str + '<![CDATA[' + cdata + ']]' + this.tagEndChar;\n  } else {\n    return str.replace(this.options.cdataPositionChar, '<![CDATA[' + cdata + ']]' + this.tagEndChar);\n  }\n}\n\nfunction replaceCDATAarr(str, cdata) {\n  str = this.options.tagValueProcessor('' + str);\n  if (this.options.cdataPositionChar === '' || str === '') {\n    return str + '<![CDATA[' + cdata.join(']]><![CDATA[') + ']]' + this.tagEndChar;\n  } else {\n    for (let v in cdata) {\n      str = str.replace(this.options.cdataPositionChar, '<![CDATA[' + cdata[v] + ']]>');\n    }\n    return str + this.newLine;\n  }\n}\n\nfunction buildObjectNode(val, key, attrStr, level) {\n  if (attrStr && !val.includes('<')) {\n    return (\n      this.indentate(level) +\n      '<' +\n      key +\n      attrStr +\n      '>' +\n      val +\n      //+ this.newLine\n      // + this.indentate(level)\n      '</' +\n      key +\n      this.tagEndChar\n    );\n  } else {\n    return (\n      this.indentate(level) +\n      '<' +\n      key +\n      attrStr +\n      this.tagEndChar +\n      val +\n      //+ this.newLine\n      this.indentate(level) +\n      '</' +\n      key +\n      this.tagEndChar\n    );\n  }\n}\n\nfunction buildEmptyObjNode(val, key, attrStr, level) {\n  if (val !== '') {\n    return this.buildObjectNode(val, key, attrStr, level);\n  } else {\n    return this.indentate(level) + '<' + key + attrStr + '/' + this.tagEndChar;\n    //+ this.newLine\n  }\n}\n\nfunction buildTextValNode(val, key, attrStr, level) {\n  return (\n    this.indentate(level) +\n    '<' +\n    key +\n    attrStr +\n    '>' +\n    this.options.tagValueProcessor(val) +\n    '</' +\n    key +\n    this.tagEndChar\n  );\n}\n\nfunction buildEmptyTextNode(val, key, attrStr, level) {\n  if (val !== '') {\n    return this.buildTextValNode(val, key, attrStr, level);\n  } else {\n    return this.indentate(level) + '<' + key + attrStr + '/' + this.tagEndChar;\n  }\n}\n\nfunction indentate(level) {\n  return this.options.indentBy.repeat(level);\n}\n\nfunction isAttribute(name /*, options*/) {\n  if (name.startsWith(this.options.attributeNamePrefix)) {\n    return name.substr(this.attrPrefixLen);\n  } else {\n    return false;\n  }\n}\n\nfunction isCDATA(name) {\n  return name === this.options.cdataTagName;\n}\n\n//formatting\n//indentation\n//\\n after each closing or self closing tag\n\nmodule.exports = Parser;\n","'use strict';\nconst char = function(a) {\n  return String.fromCharCode(a);\n};\n\nconst chars = {\n  nilChar: char(176),\n  missingChar: char(201),\n  nilPremitive: char(175),\n  missingPremitive: char(200),\n\n  emptyChar: char(178),\n  emptyValue: char(177), //empty Premitive\n\n  boundryChar: char(179),\n\n  objStart: char(198),\n  arrStart: char(204),\n  arrayEnd: char(185),\n};\n\nconst charsArr = [\n  chars.nilChar,\n  chars.nilPremitive,\n  chars.missingChar,\n  chars.missingPremitive,\n  chars.boundryChar,\n  chars.emptyChar,\n  chars.emptyValue,\n  chars.arrayEnd,\n  chars.objStart,\n  chars.arrStart,\n];\n\nconst _e = function(node, e_schema, options) {\n  if (typeof e_schema === 'string') {\n    //premitive\n    if (node && node[0] && node[0].val !== undefined) {\n      return getValue(node[0].val, e_schema);\n    } else {\n      return getValue(node, e_schema);\n    }\n  } else {\n    const hasValidData = hasData(node);\n    if (hasValidData === true) {\n      let str = '';\n      if (Array.isArray(e_schema)) {\n        //attributes can't be repeated. hence check in children tags only\n        str += chars.arrStart;\n        const itemSchema = e_schema[0];\n        //var itemSchemaType = itemSchema;\n        const arr_len = node.length;\n\n        if (typeof itemSchema === 'string') {\n          for (let arr_i = 0; arr_i < arr_len; arr_i++) {\n            const r = getValue(node[arr_i].val, itemSchema);\n            str = processValue(str, r);\n          }\n        } else {\n          for (let arr_i = 0; arr_i < arr_len; arr_i++) {\n            const r = _e(node[arr_i], itemSchema, options);\n            str = processValue(str, r);\n          }\n        }\n        str += chars.arrayEnd; //indicates that next item is not array item\n      } else {\n        //object\n        str += chars.objStart;\n        const keys = Object.keys(e_schema);\n        if (Array.isArray(node)) {\n          node = node[0];\n        }\n        for (let i in keys) {\n          const key = keys[i];\n          //a property defined in schema can be present either in attrsMap or children tags\n          //options.textNodeName will not present in both maps, take it's value from val\n          //options.attrNodeName will be present in attrsMap\n          let r;\n          if (!options.ignoreAttributes && node.attrsMap && node.attrsMap[key]) {\n            r = _e(node.attrsMap[key], e_schema[key], options);\n          } else if (key === options.textNodeName) {\n            r = _e(node.val, e_schema[key], options);\n          } else {\n            r = _e(node.child[key], e_schema[key], options);\n          }\n          str = processValue(str, r);\n        }\n      }\n      return str;\n    } else {\n      return hasValidData;\n    }\n  }\n};\n\nconst getValue = function(a /*, type*/) {\n  switch (a) {\n    case undefined:\n      return chars.missingPremitive;\n    case null:\n      return chars.nilPremitive;\n    case '':\n      return chars.emptyValue;\n    default:\n      return a;\n  }\n};\n\nconst processValue = function(str, r) {\n  if (!isAppChar(r[0]) && !isAppChar(str[str.length - 1])) {\n    str += chars.boundryChar;\n  }\n  return str + r;\n};\n\nconst isAppChar = function(ch) {\n  return charsArr.indexOf(ch) !== -1;\n};\n\nfunction hasData(jObj) {\n  if (jObj === undefined) {\n    return chars.missingChar;\n  } else if (jObj === null) {\n    return chars.nilChar;\n  } else if (\n    jObj.child &&\n    Object.keys(jObj.child).length === 0 &&\n    (!jObj.attrsMap || Object.keys(jObj.attrsMap).length === 0)\n  ) {\n    return chars.emptyChar;\n  } else {\n    return true;\n  }\n}\n\nconst x2j = require('./xmlstr2xmlnode');\nconst buildOptions = require('./util').buildOptions;\n\nconst convert2nimn = function(node, e_schema, options) {\n  options = buildOptions(options, x2j.defaultOptions, x2j.props);\n  return _e(node, e_schema, options);\n};\n\nexports.convert2nimn = convert2nimn;\n","'use strict';\n\nconst util = require('./util');\n\nconst convertToJson = function(node, options, parentTagName) {\n  const jObj = {};\n\n  // when no child node or attr is present\n  if ((!node.child || util.isEmptyObject(node.child)) && (!node.attrsMap || util.isEmptyObject(node.attrsMap))) {\n    return util.isExist(node.val) ? node.val : '';\n  }\n\n  // otherwise create a textnode if node has some text\n  if (util.isExist(node.val) && !(typeof node.val === 'string' && (node.val === '' || node.val === options.cdataPositionChar))) {\n    const asArray = util.isTagNameInArrayMode(node.tagname, options.arrayMode, parentTagName)\n    jObj[options.textNodeName] = asArray ? [node.val] : node.val;\n  }\n\n  util.merge(jObj, node.attrsMap, options.arrayMode);\n\n  const keys = Object.keys(node.child);\n  for (let index = 0; index < keys.length; index++) {\n    const tagName = keys[index];\n    if (node.child[tagName] && node.child[tagName].length > 1) {\n      jObj[tagName] = [];\n      for (let tag in node.child[tagName]) {\n        if (node.child[tagName].hasOwnProperty(tag)) {\n          jObj[tagName].push(convertToJson(node.child[tagName][tag], options, tagName));\n        }\n      }\n    } else {\n      const result = convertToJson(node.child[tagName][0], options, tagName);\n      const asArray = (options.arrayMode === true && typeof result === 'object') || util.isTagNameInArrayMode(tagName, options.arrayMode, parentTagName);\n      jObj[tagName] = asArray ? [result] : result;\n    }\n  }\n\n  //add value\n  return jObj;\n};\n\nexports.convertToJson = convertToJson;\n","'use strict';\n\nconst util = require('./util');\nconst buildOptions = require('./util').buildOptions;\nconst x2j = require('./xmlstr2xmlnode');\n\n//TODO: do it later\nconst convertToJsonString = function(node, options) {\n  options = buildOptions(options, x2j.defaultOptions, x2j.props);\n\n  options.indentBy = options.indentBy || '';\n  return _cToJsonStr(node, options, 0);\n};\n\nconst _cToJsonStr = function(node, options, level) {\n  let jObj = '{';\n\n  //traver through all the children\n  const keys = Object.keys(node.child);\n\n  for (let index = 0; index < keys.length; index++) {\n    var tagname = keys[index];\n    if (node.child[tagname] && node.child[tagname].length > 1) {\n      jObj += '\"' + tagname + '\" : [ ';\n      for (var tag in node.child[tagname]) {\n        jObj += _cToJsonStr(node.child[tagname][tag], options) + ' , ';\n      }\n      jObj = jObj.substr(0, jObj.length - 1) + ' ] '; //remove extra comma in last\n    } else {\n      jObj += '\"' + tagname + '\" : ' + _cToJsonStr(node.child[tagname][0], options) + ' ,';\n    }\n  }\n  util.merge(jObj, node.attrsMap);\n  //add attrsMap as new children\n  if (util.isEmptyObject(jObj)) {\n    return util.isExist(node.val) ? node.val : '';\n  } else {\n    if (util.isExist(node.val)) {\n      if (!(typeof node.val === 'string' && (node.val === '' || node.val === options.cdataPositionChar))) {\n        jObj += '\"' + options.textNodeName + '\" : ' + stringval(node.val);\n      }\n    }\n  }\n  //add value\n  if (jObj[jObj.length - 1] === ',') {\n    jObj = jObj.substr(0, jObj.length - 2);\n  }\n  return jObj + '}';\n};\n\nfunction stringval(v) {\n  if (v === true || v === false || !isNaN(v)) {\n    return v;\n  } else {\n    return '\"' + v + '\"';\n  }\n}\n\nfunction indentate(options, level) {\n  return options.indentBy.repeat(level);\n}\n\nexports.convertToJsonString = convertToJsonString;\n","'use strict';\n\nconst nodeToJson = require('./node2json');\nconst xmlToNodeobj = require('./xmlstr2xmlnode');\nconst x2xmlnode = require('./xmlstr2xmlnode');\nconst buildOptions = require('./util').buildOptions;\nconst validator = require('./validator');\n\nexports.parse = function(xmlData, options, validationOption) {\n  if( validationOption){\n    if(validationOption === true) validationOption = {}\n    \n    const result = validator.validate(xmlData, validationOption);\n    if (result !== true) {\n      throw Error( result.err.msg)\n    }\n  }\n  options = buildOptions(options, x2xmlnode.defaultOptions, x2xmlnode.props);\n  const traversableObj = xmlToNodeobj.getTraversalObj(xmlData, options)\n  //print(traversableObj, \"  \");\n  return nodeToJson.convertToJson(traversableObj, options);\n};\nexports.convertTonimn = require('./nimndata').convert2nimn;\nexports.getTraversalObj = xmlToNodeobj.getTraversalObj;\nexports.convertToJson = nodeToJson.convertToJson;\nexports.convertToJsonString = require('./node2json_str').convertToJsonString;\nexports.validate = validator.validate;\nexports.j2xParser = require('./json2xml');\nexports.parseToNimn = function(xmlData, schema, options) {\n  return exports.convertTonimn(exports.getTraversalObj(xmlData, options), schema, options);\n};\n\n\nfunction print(xmlNode, indentation){\n  if(xmlNode){\n    console.log(indentation + \"{\")\n    console.log(indentation + \"  \\\"tagName\\\": \\\"\" + xmlNode.tagname + \"\\\", \");\n    if(xmlNode.parent){\n      console.log(indentation + \"  \\\"parent\\\": \\\"\" + xmlNode.parent.tagname  + \"\\\", \");\n    }\n    console.log(indentation + \"  \\\"val\\\": \\\"\" + xmlNode.val  + \"\\\", \");\n    console.log(indentation + \"  \\\"attrs\\\": \" + JSON.stringify(xmlNode.attrsMap,null,4)  + \", \");\n\n    if(xmlNode.child){\n      console.log(indentation + \"\\\"child\\\": {\")\n      const indentation2 = indentation + indentation;\n      Object.keys(xmlNode.child).forEach( function(key) {\n        const node = xmlNode.child[key];\n\n        if(Array.isArray(node)){\n          console.log(indentation +  \"\\\"\"+key+\"\\\" :[\")\n          node.forEach( function(item,index) {\n            //console.log(indentation + \" \\\"\"+index+\"\\\" : [\")\n            print(item, indentation2);\n          })\n          console.log(indentation + \"],\")  \n        }else{\n          console.log(indentation + \" \\\"\"+key+\"\\\" : {\")\n          print(node, indentation2);\n          console.log(indentation + \"},\")  \n        }\n      });\n      console.log(indentation + \"},\")\n    }\n    console.log(indentation + \"},\")\n  }\n}\n","'use strict';\n\nconst nameStartChar = ':A-Za-z_\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD';\nconst nameChar = nameStartChar + '\\\\-.\\\\d\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040';\nconst nameRegexp = '[' + nameStartChar + '][' + nameChar + ']*'\nconst regexName = new RegExp('^' + nameRegexp + '$');\n\nconst getAllMatches = function(string, regex) {\n  const matches = [];\n  let match = regex.exec(string);\n  while (match) {\n    const allmatches = [];\n    const len = match.length;\n    for (let index = 0; index < len; index++) {\n      allmatches.push(match[index]);\n    }\n    matches.push(allmatches);\n    match = regex.exec(string);\n  }\n  return matches;\n};\n\nconst isName = function(string) {\n  const match = regexName.exec(string);\n  return !(match === null || typeof match === 'undefined');\n};\n\nexports.isExist = function(v) {\n  return typeof v !== 'undefined';\n};\n\nexports.isEmptyObject = function(obj) {\n  return Object.keys(obj).length === 0;\n};\n\n/**\n * Copy all the properties of a into b.\n * @param {*} target\n * @param {*} a\n */\nexports.merge = function(target, a, arrayMode) {\n  if (a) {\n    const keys = Object.keys(a); // will return an array of own properties\n    const len = keys.length; //don't make it inline\n    for (let i = 0; i < len; i++) {\n      if (arrayMode === 'strict') {\n        target[keys[i]] = [ a[keys[i]] ];\n      } else {\n        target[keys[i]] = a[keys[i]];\n      }\n    }\n  }\n};\n/* exports.merge =function (b,a){\n  return Object.assign(b,a);\n} */\n\nexports.getValue = function(v) {\n  if (exports.isExist(v)) {\n    return v;\n  } else {\n    return '';\n  }\n};\n\n// const fakeCall = function(a) {return a;};\n// const fakeCallNoReturn = function() {};\n\nexports.buildOptions = function(options, defaultOptions, props) {\n  var newOptions = {};\n  if (!options) {\n    return defaultOptions; //if there are not options\n  }\n\n  for (let i = 0; i < props.length; i++) {\n    if (options[props[i]] !== undefined) {\n      newOptions[props[i]] = options[props[i]];\n    } else {\n      newOptions[props[i]] = defaultOptions[props[i]];\n    }\n  }\n  return newOptions;\n};\n\n/**\n * Check if a tag name should be treated as array\n *\n * @param tagName the node tagname\n * @param arrayMode the array mode option\n * @param parentTagName the parent tag name\n * @returns {boolean} true if node should be parsed as array\n */\nexports.isTagNameInArrayMode = function (tagName, arrayMode, parentTagName) {\n  if (arrayMode === false) {\n    return false;\n  } else if (arrayMode instanceof RegExp) {\n    return arrayMode.test(tagName);\n  } else if (typeof arrayMode === 'function') {\n    return !!arrayMode(tagName, parentTagName);\n  }\n\n  return arrayMode === \"strict\";\n}\n\nexports.isName = isName;\nexports.getAllMatches = getAllMatches;\nexports.nameRegexp = nameRegexp;\n","'use strict';\n\nconst util = require('./util');\n\nconst defaultOptions = {\n  allowBooleanAttributes: false, //A tag can have attributes without any value\n};\n\nconst props = ['allowBooleanAttributes'];\n\n//const tagsPattern = new RegExp(\"<\\\\/?([\\\\w:\\\\-_\\.]+)\\\\s*\\/?>\",\"g\");\nexports.validate = function (xmlData, options) {\n  options = util.buildOptions(options, defaultOptions, props);\n\n  //xmlData = xmlData.replace(/(\\r\\n|\\n|\\r)/gm,\"\");//make it single line\n  //xmlData = xmlData.replace(/(^\\s*<\\?xml.*?\\?>)/g,\"\");//Remove XML starting tag\n  //xmlData = xmlData.replace(/(<!DOCTYPE[\\s\\w\\\"\\.\\/\\-\\:]+(\\[.*\\])*\\s*>)/g,\"\");//Remove DOCTYPE\n  const tags = [];\n  let tagFound = false;\n\n  //indicates that the root tag has been closed (aka. depth 0 has been reached)\n  let reachedRoot = false;\n\n  if (xmlData[0] === '\\ufeff') {\n    // check for byte order mark (BOM)\n    xmlData = xmlData.substr(1);\n  }\n\n  for (let i = 0; i < xmlData.length; i++) {\n\n    if (xmlData[i] === '<' && xmlData[i+1] === '?') {\n      i+=2;\n      i = readPI(xmlData,i);\n      if (i.err) return i;\n    }else if (xmlData[i] === '<') {\n      //starting of tag\n      //read until you reach to '>' avoiding any '>' in attribute value\n\n      i++;\n      \n      if (xmlData[i] === '!') {\n        i = readCommentAndCDATA(xmlData, i);\n        continue;\n      } else {\n        let closingTag = false;\n        if (xmlData[i] === '/') {\n          //closing tag\n          closingTag = true;\n          i++;\n        }\n        //read tagname\n        let tagName = '';\n        for (; i < xmlData.length &&\n          xmlData[i] !== '>' &&\n          xmlData[i] !== ' ' &&\n          xmlData[i] !== '\\t' &&\n          xmlData[i] !== '\\n' &&\n          xmlData[i] !== '\\r'; i++\n        ) {\n          tagName += xmlData[i];\n        }\n        tagName = tagName.trim();\n        //console.log(tagName);\n\n        if (tagName[tagName.length - 1] === '/') {\n          //self closing tag without attributes\n          tagName = tagName.substring(0, tagName.length - 1);\n          //continue;\n          i--;\n        }\n        if (!validateTagName(tagName)) {\n          let msg;\n          if (tagName.trim().length === 0) {\n            msg = \"There is an unnecessary space between tag name and backward slash '</ ..'.\";\n          } else {\n            msg = \"Tag '\"+tagName+\"' is an invalid name.\";\n          }\n          return getErrorObject('InvalidTag', msg, getLineNumberForPosition(xmlData, i));\n        }\n\n        const result = readAttributeStr(xmlData, i);\n        if (result === false) {\n          return getErrorObject('InvalidAttr', \"Attributes for '\"+tagName+\"' have open quote.\", getLineNumberForPosition(xmlData, i));\n        }\n        let attrStr = result.value;\n        i = result.index;\n\n        if (attrStr[attrStr.length - 1] === '/') {\n          //self closing tag\n          attrStr = attrStr.substring(0, attrStr.length - 1);\n          const isValid = validateAttributeString(attrStr, options);\n          if (isValid === true) {\n            tagFound = true;\n            //continue; //text may presents after self closing tag\n          } else {\n            //the result from the nested function returns the position of the error within the attribute\n            //in order to get the 'true' error line, we need to calculate the position where the attribute begins (i - attrStr.length) and then add the position within the attribute\n            //this gives us the absolute index in the entire xml, which we can use to find the line at last\n            return getErrorObject(isValid.err.code, isValid.err.msg, getLineNumberForPosition(xmlData, i - attrStr.length + isValid.err.line));\n          }\n        } else if (closingTag) {\n          if (!result.tagClosed) {\n            return getErrorObject('InvalidTag', \"Closing tag '\"+tagName+\"' doesn't have proper closing.\", getLineNumberForPosition(xmlData, i));\n          } else if (attrStr.trim().length > 0) {\n            return getErrorObject('InvalidTag', \"Closing tag '\"+tagName+\"' can't have attributes or invalid starting.\", getLineNumberForPosition(xmlData, i));\n          } else {\n            const otg = tags.pop();\n            if (tagName !== otg) {\n              return getErrorObject('InvalidTag', \"Closing tag '\"+otg+\"' is expected inplace of '\"+tagName+\"'.\", getLineNumberForPosition(xmlData, i));\n            }\n\n            //when there are no more tags, we reached the root level.\n            if (tags.length == 0) {\n              reachedRoot = true;\n            }\n          }\n        } else {\n          const isValid = validateAttributeString(attrStr, options);\n          if (isValid !== true) {\n            //the result from the nested function returns the position of the error within the attribute\n            //in order to get the 'true' error line, we need to calculate the position where the attribute begins (i - attrStr.length) and then add the position within the attribute\n            //this gives us the absolute index in the entire xml, which we can use to find the line at last\n            return getErrorObject(isValid.err.code, isValid.err.msg, getLineNumberForPosition(xmlData, i - attrStr.length + isValid.err.line));\n          }\n\n          //if the root level has been reached before ...\n          if (reachedRoot === true) {\n            return getErrorObject('InvalidXml', 'Multiple possible root nodes found.', getLineNumberForPosition(xmlData, i));\n          } else {\n            tags.push(tagName);\n          }\n          tagFound = true;\n        }\n\n        //skip tag text value\n        //It may include comments and CDATA value\n        for (i++; i < xmlData.length; i++) {\n          if (xmlData[i] === '<') {\n            if (xmlData[i + 1] === '!') {\n              //comment or CADATA\n              i++;\n              i = readCommentAndCDATA(xmlData, i);\n              continue;\n            } else if (xmlData[i+1] === '?') {\n              i = readPI(xmlData, ++i);\n              if (i.err) return i;\n            } else{\n              break;\n            }\n          } else if (xmlData[i] === '&') {\n            const afterAmp = validateAmpersand(xmlData, i);\n            if (afterAmp == -1)\n              return getErrorObject('InvalidChar', \"char '&' is not expected.\", getLineNumberForPosition(xmlData, i));\n            i = afterAmp;\n          }\n        } //end of reading tag text value\n        if (xmlData[i] === '<') {\n          i--;\n        }\n      }\n    } else {\n      if (xmlData[i] === ' ' || xmlData[i] === '\\t' || xmlData[i] === '\\n' || xmlData[i] === '\\r') {\n        continue;\n      }\n      return getErrorObject('InvalidChar', \"char '\"+xmlData[i]+\"' is not expected.\", getLineNumberForPosition(xmlData, i));\n    }\n  }\n\n  if (!tagFound) {\n    return getErrorObject('InvalidXml', 'Start tag expected.', 1);\n  } else if (tags.length > 0) {\n    return getErrorObject('InvalidXml', \"Invalid '\"+JSON.stringify(tags, null, 4).replace(/\\r?\\n/g, '')+\"' found.\", 1);\n  }\n\n  return true;\n};\n\n/**\n * Read Processing insstructions and skip\n * @param {*} xmlData\n * @param {*} i\n */\nfunction readPI(xmlData, i) {\n  var start = i;\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] == '?' || xmlData[i] == ' ') {\n      //tagname\n      var tagname = xmlData.substr(start, i - start);\n      if (i > 5 && tagname === 'xml') {\n        return getErrorObject('InvalidXml', 'XML declaration allowed only at the start of the document.', getLineNumberForPosition(xmlData, i));\n      } else if (xmlData[i] == '?' && xmlData[i + 1] == '>') {\n        //check if valid attribut string\n        i++;\n        break;\n      } else {\n        continue;\n      }\n    }\n  }\n  return i;\n}\n\nfunction readCommentAndCDATA(xmlData, i) {\n  if (xmlData.length > i + 5 && xmlData[i + 1] === '-' && xmlData[i + 2] === '-') {\n    //comment\n    for (i += 3; i < xmlData.length; i++) {\n      if (xmlData[i] === '-' && xmlData[i + 1] === '-' && xmlData[i + 2] === '>') {\n        i += 2;\n        break;\n      }\n    }\n  } else if (\n    xmlData.length > i + 8 &&\n    xmlData[i + 1] === 'D' &&\n    xmlData[i + 2] === 'O' &&\n    xmlData[i + 3] === 'C' &&\n    xmlData[i + 4] === 'T' &&\n    xmlData[i + 5] === 'Y' &&\n    xmlData[i + 6] === 'P' &&\n    xmlData[i + 7] === 'E'\n  ) {\n    let angleBracketsCount = 1;\n    for (i += 8; i < xmlData.length; i++) {\n      if (xmlData[i] === '<') {\n        angleBracketsCount++;\n      } else if (xmlData[i] === '>') {\n        angleBracketsCount--;\n        if (angleBracketsCount === 0) {\n          break;\n        }\n      }\n    }\n  } else if (\n    xmlData.length > i + 9 &&\n    xmlData[i + 1] === '[' &&\n    xmlData[i + 2] === 'C' &&\n    xmlData[i + 3] === 'D' &&\n    xmlData[i + 4] === 'A' &&\n    xmlData[i + 5] === 'T' &&\n    xmlData[i + 6] === 'A' &&\n    xmlData[i + 7] === '['\n  ) {\n    for (i += 8; i < xmlData.length; i++) {\n      if (xmlData[i] === ']' && xmlData[i + 1] === ']' && xmlData[i + 2] === '>') {\n        i += 2;\n        break;\n      }\n    }\n  }\n\n  return i;\n}\n\nvar doubleQuote = '\"';\nvar singleQuote = \"'\";\n\n/**\n * Keep reading xmlData until '<' is found outside the attribute value.\n * @param {string} xmlData\n * @param {number} i\n */\nfunction readAttributeStr(xmlData, i) {\n  let attrStr = '';\n  let startChar = '';\n  let tagClosed = false;\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] === doubleQuote || xmlData[i] === singleQuote) {\n      if (startChar === '') {\n        startChar = xmlData[i];\n      } else if (startChar !== xmlData[i]) {\n        //if vaue is enclosed with double quote then single quotes are allowed inside the value and vice versa\n        continue;\n      } else {\n        startChar = '';\n      }\n    } else if (xmlData[i] === '>') {\n      if (startChar === '') {\n        tagClosed = true;\n        break;\n      }\n    }\n    attrStr += xmlData[i];\n  }\n  if (startChar !== '') {\n    return false;\n  }\n\n  return {\n    value: attrStr,\n    index: i,\n    tagClosed: tagClosed\n  };\n}\n\n/**\n * Select all the attributes whether valid or invalid.\n */\nconst validAttrStrRegxp = new RegExp('(\\\\s*)([^\\\\s=]+)(\\\\s*=)?(\\\\s*([\\'\"])(([\\\\s\\\\S])*?)\\\\5)?', 'g');\n\n//attr, =\"sd\", a=\"amit's\", a=\"sd\"b=\"saf\", ab  cd=\"\"\n\nfunction validateAttributeString(attrStr, options) {\n  //console.log(\"start:\"+attrStr+\":end\");\n\n  //if(attrStr.trim().length === 0) return true; //empty string\n\n  const matches = util.getAllMatches(attrStr, validAttrStrRegxp);\n  const attrNames = {};\n\n  for (let i = 0; i < matches.length; i++) {\n    if (matches[i][1].length === 0) {\n      //nospace before attribute name: a=\"sd\"b=\"saf\"\n      return getErrorObject('InvalidAttr', \"Attribute '\"+matches[i][2]+\"' has no space in starting.\", getPositionFromMatch(attrStr, matches[i][0]))\n    } else if (matches[i][3] === undefined && !options.allowBooleanAttributes) {\n      //independent attribute: ab\n      return getErrorObject('InvalidAttr', \"boolean attribute '\"+matches[i][2]+\"' is not allowed.\", getPositionFromMatch(attrStr, matches[i][0]));\n    }\n    /* else if(matches[i][6] === undefined){//attribute without value: ab=\n                    return { err: { code:\"InvalidAttr\",msg:\"attribute \" + matches[i][2] + \" has no value assigned.\"}};\n                } */\n    const attrName = matches[i][2];\n    if (!validateAttrName(attrName)) {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+attrName+\"' is an invalid name.\", getPositionFromMatch(attrStr, matches[i][0]));\n    }\n    if (!attrNames.hasOwnProperty(attrName)) {\n      //check for duplicate attribute.\n      attrNames[attrName] = 1;\n    } else {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+attrName+\"' is repeated.\", getPositionFromMatch(attrStr, matches[i][0]));\n    }\n  }\n\n  return true;\n}\n\nfunction validateNumberAmpersand(xmlData, i) {\n  let re = /\\d/;\n  if (xmlData[i] === 'x') {\n    i++;\n    re = /[\\da-fA-F]/;\n  }\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] === ';')\n      return i;\n    if (!xmlData[i].match(re))\n      break;\n  }\n  return -1;\n}\n\nfunction validateAmpersand(xmlData, i) {\n  // https://www.w3.org/TR/xml/#dt-charref\n  i++;\n  if (xmlData[i] === ';')\n    return -1;\n  if (xmlData[i] === '#') {\n    i++;\n    return validateNumberAmpersand(xmlData, i);\n  }\n  let count = 0;\n  for (; i < xmlData.length; i++, count++) {\n    if (xmlData[i].match(/\\w/) && count < 20)\n      continue;\n    if (xmlData[i] === ';')\n      break;\n    return -1;\n  }\n  return i;\n}\n\nfunction getErrorObject(code, message, lineNumber) {\n  return {\n    err: {\n      code: code,\n      msg: message,\n      line: lineNumber,\n    },\n  };\n}\n\nfunction validateAttrName(attrName) {\n  return util.isName(attrName);\n}\n\n// const startsWithXML = /^xml/i;\n\nfunction validateTagName(tagname) {\n  return util.isName(tagname) /* && !tagname.match(startsWithXML) */;\n}\n\n//this function returns the line number for the character at the given index\nfunction getLineNumberForPosition(xmlData, index) {\n  var lines = xmlData.substring(0, index).split(/\\r?\\n/);\n  return lines.length;\n}\n\n//this function returns the position of the last character of match within attrStr\nfunction getPositionFromMatch(attrStr, match) {\n  return attrStr.indexOf(match) + match.length;\n}\n","'use strict';\n\nmodule.exports = function(tagname, parent, val) {\n  this.tagname = tagname;\n  this.parent = parent;\n  this.child = {}; //child tags\n  this.attrsMap = {}; //attributes map\n  this.val = val; //text only\n  this.addChild = function(child) {\n    if (Array.isArray(this.child[child.tagname])) {\n      //already presents\n      this.child[child.tagname].push(child);\n    } else {\n      this.child[child.tagname] = [child];\n    }\n  };\n};\n","'use strict';\n\nconst util = require('./util');\nconst buildOptions = require('./util').buildOptions;\nconst xmlNode = require('./xmlNode');\nconst regx =\n  '<((!\\\\[CDATA\\\\[([\\\\s\\\\S]*?)(]]>))|((NAME:)?(NAME))([^>]*)>|((\\\\/)(NAME)\\\\s*>))([^<]*)'\n  .replace(/NAME/g, util.nameRegexp);\n\n//const tagsRegx = new RegExp(\"<(\\\\/?[\\\\w:\\\\-\\._]+)([^>]*)>(\\\\s*\"+cdataRegx+\")*([^<]+)?\",\"g\");\n//const tagsRegx = new RegExp(\"<(\\\\/?)((\\\\w*:)?([\\\\w:\\\\-\\._]+))([^>]*)>([^<]*)(\"+cdataRegx+\"([^<]*))*([^<]+)?\",\"g\");\n\n//polyfill\nif (!Number.parseInt && window.parseInt) {\n  Number.parseInt = window.parseInt;\n}\nif (!Number.parseFloat && window.parseFloat) {\n  Number.parseFloat = window.parseFloat;\n}\n\nconst defaultOptions = {\n  attributeNamePrefix: '@_',\n  attrNodeName: false,\n  textNodeName: '#text',\n  ignoreAttributes: true,\n  ignoreNameSpace: false,\n  allowBooleanAttributes: false, //a tag can have attributes without any value\n  //ignoreRootElement : false,\n  parseNodeValue: true,\n  parseAttributeValue: false,\n  arrayMode: false,\n  trimValues: true, //Trim string values of tag and attributes\n  cdataTagName: false,\n  cdataPositionChar: '\\\\c',\n  tagValueProcessor: function(a, tagName) {\n    return a;\n  },\n  attrValueProcessor: function(a, attrName) {\n    return a;\n  },\n  stopNodes: []\n  //decodeStrict: false,\n};\n\nexports.defaultOptions = defaultOptions;\n\nconst props = [\n  'attributeNamePrefix',\n  'attrNodeName',\n  'textNodeName',\n  'ignoreAttributes',\n  'ignoreNameSpace',\n  'allowBooleanAttributes',\n  'parseNodeValue',\n  'parseAttributeValue',\n  'arrayMode',\n  'trimValues',\n  'cdataTagName',\n  'cdataPositionChar',\n  'tagValueProcessor',\n  'attrValueProcessor',\n  'parseTrueNumberOnly',\n  'stopNodes'\n];\nexports.props = props;\n\n/**\n * Trim -> valueProcessor -> parse value\n * @param {string} tagName\n * @param {string} val\n * @param {object} options\n */\nfunction processTagValue(tagName, val, options) {\n  if (val) {\n    if (options.trimValues) {\n      val = val.trim();\n    }\n    val = options.tagValueProcessor(val, tagName);\n    val = parseValue(val, options.parseNodeValue, options.parseTrueNumberOnly);\n  }\n\n  return val;\n}\n\nfunction resolveNameSpace(tagname, options) {\n  if (options.ignoreNameSpace) {\n    const tags = tagname.split(':');\n    const prefix = tagname.charAt(0) === '/' ? '/' : '';\n    if (tags[0] === 'xmlns') {\n      return '';\n    }\n    if (tags.length === 2) {\n      tagname = prefix + tags[1];\n    }\n  }\n  return tagname;\n}\n\nfunction parseValue(val, shouldParse, parseTrueNumberOnly) {\n  if (shouldParse && typeof val === 'string') {\n    let parsed;\n    if (val.trim() === '' || isNaN(val)) {\n      parsed = val === 'true' ? true : val === 'false' ? false : val;\n    } else {\n      if (val.indexOf('0x') !== -1) {\n        //support hexa decimal\n        parsed = Number.parseInt(val, 16);\n      } else if (val.indexOf('.') !== -1) {\n        parsed = Number.parseFloat(val);\n        val = val.replace(/\\.?0+$/, \"\");\n      } else {\n        parsed = Number.parseInt(val, 10);\n      }\n      if (parseTrueNumberOnly) {\n        parsed = String(parsed) === val ? parsed : val;\n      }\n    }\n    return parsed;\n  } else {\n    if (util.isExist(val)) {\n      return val;\n    } else {\n      return '';\n    }\n  }\n}\n\n//TODO: change regex to capture NS\n//const attrsRegx = new RegExp(\"([\\\\w\\\\-\\\\.\\\\:]+)\\\\s*=\\\\s*(['\\\"])((.|\\n)*?)\\\\2\",\"gm\");\nconst attrsRegx = new RegExp('([^\\\\s=]+)\\\\s*(=\\\\s*([\\'\"])(.*?)\\\\3)?', 'g');\n\nfunction buildAttributesMap(attrStr, options) {\n  if (!options.ignoreAttributes && typeof attrStr === 'string') {\n    attrStr = attrStr.replace(/\\r?\\n/g, ' ');\n    //attrStr = attrStr || attrStr.trim();\n\n    const matches = util.getAllMatches(attrStr, attrsRegx);\n    const len = matches.length; //don't make it inline\n    const attrs = {};\n    for (let i = 0; i < len; i++) {\n      const attrName = resolveNameSpace(matches[i][1], options);\n      if (attrName.length) {\n        if (matches[i][4] !== undefined) {\n          if (options.trimValues) {\n            matches[i][4] = matches[i][4].trim();\n          }\n          matches[i][4] = options.attrValueProcessor(matches[i][4], attrName);\n          attrs[options.attributeNamePrefix + attrName] = parseValue(\n            matches[i][4],\n            options.parseAttributeValue,\n            options.parseTrueNumberOnly\n          );\n        } else if (options.allowBooleanAttributes) {\n          attrs[options.attributeNamePrefix + attrName] = true;\n        }\n      }\n    }\n    if (!Object.keys(attrs).length) {\n      return;\n    }\n    if (options.attrNodeName) {\n      const attrCollection = {};\n      attrCollection[options.attrNodeName] = attrs;\n      return attrCollection;\n    }\n    return attrs;\n  }\n}\n\nconst getTraversalObj = function(xmlData, options) {\n  xmlData = xmlData.replace(/\\r\\n?/g, \"\\n\");\n  options = buildOptions(options, defaultOptions, props);\n  const xmlObj = new xmlNode('!xml');\n  let currentNode = xmlObj;\n  let textData = \"\";\n\n//function match(xmlData){\n  for(let i=0; i< xmlData.length; i++){\n    const ch = xmlData[i];\n    if(ch === '<'){\n      if( xmlData[i+1] === '/') {//Closing Tag\n        const closeIndex = findClosingIndex(xmlData, \">\", i, \"Closing Tag is not closed.\")\n        let tagName = xmlData.substring(i+2,closeIndex).trim();\n\n        if(options.ignoreNameSpace){\n          const colonIndex = tagName.indexOf(\":\");\n          if(colonIndex !== -1){\n            tagName = tagName.substr(colonIndex+1);\n          }\n        }\n\n        /* if (currentNode.parent) {\n          currentNode.parent.val = util.getValue(currentNode.parent.val) + '' + processTagValue2(tagName, textData , options);\n        } */\n        if(currentNode){\n          if(currentNode.val){\n            currentNode.val = util.getValue(currentNode.val) + '' + processTagValue(tagName, textData , options);\n          }else{\n            currentNode.val = processTagValue(tagName, textData , options);\n          }\n        }\n\n        if (options.stopNodes.length && options.stopNodes.includes(currentNode.tagname)) {\n          currentNode.child = []\n          if (currentNode.attrsMap == undefined) { currentNode.attrsMap = {}}\n          currentNode.val = xmlData.substr(currentNode.startIndex + 1, i - currentNode.startIndex - 1)\n        }\n        currentNode = currentNode.parent;\n        textData = \"\";\n        i = closeIndex;\n      } else if( xmlData[i+1] === '?') {\n        i = findClosingIndex(xmlData, \"?>\", i, \"Pi Tag is not closed.\")\n      } else if(xmlData.substr(i + 1, 3) === '!--') {\n        i = findClosingIndex(xmlData, \"-->\", i, \"Comment is not closed.\")\n      } else if( xmlData.substr(i + 1, 2) === '!D') {\n        const closeIndex = findClosingIndex(xmlData, \">\", i, \"DOCTYPE is not closed.\")\n        const tagExp = xmlData.substring(i, closeIndex);\n        if(tagExp.indexOf(\"[\") >= 0){\n          i = xmlData.indexOf(\"]>\", i) + 1;\n        }else{\n          i = closeIndex;\n        }\n      }else if(xmlData.substr(i + 1, 2) === '![') {\n        const closeIndex = findClosingIndex(xmlData, \"]]>\", i, \"CDATA is not closed.\") - 2\n        const tagExp = xmlData.substring(i + 9,closeIndex);\n\n        //considerations\n        //1. CDATA will always have parent node\n        //2. A tag with CDATA is not a leaf node so it's value would be string type.\n        if(textData){\n          currentNode.val = util.getValue(currentNode.val) + '' + processTagValue(currentNode.tagname, textData , options);\n          textData = \"\";\n        }\n\n        if (options.cdataTagName) {\n          //add cdata node\n          const childNode = new xmlNode(options.cdataTagName, currentNode, tagExp);\n          currentNode.addChild(childNode);\n          //for backtracking\n          currentNode.val = util.getValue(currentNode.val) + options.cdataPositionChar;\n          //add rest value to parent node\n          if (tagExp) {\n            childNode.val = tagExp;\n          }\n        } else {\n          currentNode.val = (currentNode.val || '') + (tagExp || '');\n        }\n\n        i = closeIndex + 2;\n      }else {//Opening tag\n        const result = closingIndexForOpeningTag(xmlData, i+1)\n        let tagExp = result.data;\n        const closeIndex = result.index;\n        const separatorIndex = tagExp.indexOf(\" \");\n        let tagName = tagExp;\n        let shouldBuildAttributesMap = true;\n        if(separatorIndex !== -1){\n          tagName = tagExp.substr(0, separatorIndex).replace(/\\s\\s*$/, '');\n          tagExp = tagExp.substr(separatorIndex + 1);\n        }\n\n        if(options.ignoreNameSpace){\n          const colonIndex = tagName.indexOf(\":\");\n          if(colonIndex !== -1){\n            tagName = tagName.substr(colonIndex+1);\n            shouldBuildAttributesMap = tagName !== result.data.substr(colonIndex + 1);\n          }\n        }\n\n        //save text to parent node\n        if (currentNode && textData) {\n          if(currentNode.tagname !== '!xml'){\n            currentNode.val = util.getValue(currentNode.val) + '' + processTagValue( currentNode.tagname, textData, options);\n          }\n        }\n\n        if(tagExp.length > 0 && tagExp.lastIndexOf(\"/\") === tagExp.length - 1){//selfClosing tag\n\n          if(tagName[tagName.length - 1] === \"/\"){ //remove trailing '/'\n            tagName = tagName.substr(0, tagName.length - 1);\n            tagExp = tagName;\n          }else{\n            tagExp = tagExp.substr(0, tagExp.length - 1);\n          }\n\n          const childNode = new xmlNode(tagName, currentNode, '');\n          if(tagName !== tagExp){\n            childNode.attrsMap = buildAttributesMap(tagExp, options);\n          }\n          currentNode.addChild(childNode);\n        }else{//opening tag\n\n          const childNode = new xmlNode( tagName, currentNode );\n          if (options.stopNodes.length && options.stopNodes.includes(childNode.tagname)) {\n            childNode.startIndex=closeIndex;\n          }\n          if(tagName !== tagExp && shouldBuildAttributesMap){\n            childNode.attrsMap = buildAttributesMap(tagExp, options);\n          }\n          currentNode.addChild(childNode);\n          currentNode = childNode;\n        }\n        textData = \"\";\n        i = closeIndex;\n      }\n    }else{\n      textData += xmlData[i];\n    }\n  }\n  return xmlObj;\n}\n\nfunction closingIndexForOpeningTag(data, i){\n  let attrBoundary;\n  let tagExp = \"\";\n  for (let index = i; index < data.length; index++) {\n    let ch = data[index];\n    if (attrBoundary) {\n        if (ch === attrBoundary) attrBoundary = \"\";//reset\n    } else if (ch === '\"' || ch === \"'\") {\n        attrBoundary = ch;\n    } else if (ch === '>') {\n        return {\n          data: tagExp,\n          index: index\n        }\n    } else if (ch === '\\t') {\n      ch = \" \"\n    }\n    tagExp += ch;\n  }\n}\n\nfunction findClosingIndex(xmlData, str, i, errMsg){\n  const closingIndex = xmlData.indexOf(str, i);\n  if(closingIndex === -1){\n    throw new Error(errMsg)\n  }else{\n    return closingIndex + str.length - 1;\n  }\n}\n\nexports.getTraversalObj = getTraversalObj;\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global global, define, System, Reflect, Promise */\r\nvar __extends;\r\nvar __assign;\r\nvar __rest;\r\nvar __decorate;\r\nvar __param;\r\nvar __metadata;\r\nvar __awaiter;\r\nvar __generator;\r\nvar __exportStar;\r\nvar __values;\r\nvar __read;\r\nvar __spread;\r\nvar __spreadArrays;\r\nvar __spreadArray;\r\nvar __await;\r\nvar __asyncGenerator;\r\nvar __asyncDelegator;\r\nvar __asyncValues;\r\nvar __makeTemplateObject;\r\nvar __importStar;\r\nvar __importDefault;\r\nvar __classPrivateFieldGet;\r\nvar __classPrivateFieldSet;\r\nvar __createBinding;\r\n(function (factory) {\r\n    var root = typeof global === \"object\" ? global : typeof self === \"object\" ? self : typeof this === \"object\" ? this : {};\r\n    if (typeof define === \"function\" && define.amd) {\r\n        define(\"tslib\", [\"exports\"], function (exports) { factory(createExporter(root, createExporter(exports))); });\r\n    }\r\n    else if (typeof module === \"object\" && typeof module.exports === \"object\") {\r\n        factory(createExporter(root, createExporter(module.exports)));\r\n    }\r\n    else {\r\n        factory(createExporter(root));\r\n    }\r\n    function createExporter(exports, previous) {\r\n        if (exports !== root) {\r\n            if (typeof Object.create === \"function\") {\r\n                Object.defineProperty(exports, \"__esModule\", { value: true });\r\n            }\r\n            else {\r\n                exports.__esModule = true;\r\n            }\r\n        }\r\n        return function (id, v) { return exports[id] = previous ? previous(id, v) : v; };\r\n    }\r\n})\r\n(function (exporter) {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n\r\n    __extends = function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n\r\n    __assign = Object.assign || function (t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n\r\n    __rest = function (s, e) {\r\n        var t = {};\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n            t[p] = s[p];\r\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                    t[p[i]] = s[p[i]];\r\n            }\r\n        return t;\r\n    };\r\n\r\n    __decorate = function (decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    };\r\n\r\n    __param = function (paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    };\r\n\r\n    __metadata = function (metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    };\r\n\r\n    __awaiter = function (thisArg, _arguments, P, generator) {\r\n        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    };\r\n\r\n    __generator = function (thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (_) try {\r\n                if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [op[0] & 2, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    };\r\n\r\n    __exportStar = function(m, o) {\r\n        for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n    };\r\n\r\n    __createBinding = Object.create ? (function(o, m, k, k2) {\r\n        if (k2 === undefined) k2 = k;\r\n        Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n    }) : (function(o, m, k, k2) {\r\n        if (k2 === undefined) k2 = k;\r\n        o[k2] = m[k];\r\n    });\r\n\r\n    __values = function (o) {\r\n        var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n        if (m) return m.call(o);\r\n        if (o && typeof o.length === \"number\") return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n        throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n    };\r\n\r\n    __read = function (o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    };\r\n\r\n    /** @deprecated */\r\n    __spread = function () {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    };\r\n\r\n    /** @deprecated */\r\n    __spreadArrays = function () {\r\n        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n        for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n                r[k] = a[j];\r\n        return r;\r\n    };\r\n\r\n    __spreadArray = function (to, from, pack) {\r\n        if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n            if (ar || !(i in from)) {\r\n                if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n                ar[i] = from[i];\r\n            }\r\n        }\r\n        return to.concat(ar || Array.prototype.slice.call(from));\r\n    };\r\n\r\n    __await = function (v) {\r\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n    };\r\n\r\n    __asyncGenerator = function (thisArg, _arguments, generator) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n        function fulfill(value) { resume(\"next\", value); }\r\n        function reject(value) { resume(\"throw\", value); }\r\n        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n    };\r\n\r\n    __asyncDelegator = function (o) {\r\n        var i, p;\r\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n    };\r\n\r\n    __asyncValues = function (o) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var m = o[Symbol.asyncIterator], i;\r\n        return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n    };\r\n\r\n    __makeTemplateObject = function (cooked, raw) {\r\n        if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n        return cooked;\r\n    };\r\n\r\n    var __setModuleDefault = Object.create ? (function(o, v) {\r\n        Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n    }) : function(o, v) {\r\n        o[\"default\"] = v;\r\n    };\r\n\r\n    __importStar = function (mod) {\r\n        if (mod && mod.__esModule) return mod;\r\n        var result = {};\r\n        if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n        __setModuleDefault(result, mod);\r\n        return result;\r\n    };\r\n\r\n    __importDefault = function (mod) {\r\n        return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n    };\r\n\r\n    __classPrivateFieldGet = function (receiver, state, kind, f) {\r\n        if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n        if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n        return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n    };\r\n\r\n    __classPrivateFieldSet = function (receiver, state, value, kind, f) {\r\n        if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n        if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n        if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n        return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n    };\r\n\r\n    exporter(\"__extends\", __extends);\r\n    exporter(\"__assign\", __assign);\r\n    exporter(\"__rest\", __rest);\r\n    exporter(\"__decorate\", __decorate);\r\n    exporter(\"__param\", __param);\r\n    exporter(\"__metadata\", __metadata);\r\n    exporter(\"__awaiter\", __awaiter);\r\n    exporter(\"__generator\", __generator);\r\n    exporter(\"__exportStar\", __exportStar);\r\n    exporter(\"__createBinding\", __createBinding);\r\n    exporter(\"__values\", __values);\r\n    exporter(\"__read\", __read);\r\n    exporter(\"__spread\", __spread);\r\n    exporter(\"__spreadArrays\", __spreadArrays);\r\n    exporter(\"__spreadArray\", __spreadArray);\r\n    exporter(\"__await\", __await);\r\n    exporter(\"__asyncGenerator\", __asyncGenerator);\r\n    exporter(\"__asyncDelegator\", __asyncDelegator);\r\n    exporter(\"__asyncValues\", __asyncValues);\r\n    exporter(\"__makeTemplateObject\", __makeTemplateObject);\r\n    exporter(\"__importStar\", __importStar);\r\n    exporter(\"__importDefault\", __importDefault);\r\n    exporter(\"__classPrivateFieldGet\", __classPrivateFieldGet);\r\n    exporter(\"__classPrivateFieldSet\", __classPrivateFieldSet);\r\n});\r\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"v1\", {\n  enumerable: true,\n  get: function () {\n    return _v.default;\n  }\n});\nObject.defineProperty(exports, \"v3\", {\n  enumerable: true,\n  get: function () {\n    return _v2.default;\n  }\n});\nObject.defineProperty(exports, \"v4\", {\n  enumerable: true,\n  get: function () {\n    return _v3.default;\n  }\n});\nObject.defineProperty(exports, \"v5\", {\n  enumerable: true,\n  get: function () {\n    return _v4.default;\n  }\n});\nObject.defineProperty(exports, \"NIL\", {\n  enumerable: true,\n  get: function () {\n    return _nil.default;\n  }\n});\nObject.defineProperty(exports, \"version\", {\n  enumerable: true,\n  get: function () {\n    return _version.default;\n  }\n});\nObject.defineProperty(exports, \"validate\", {\n  enumerable: true,\n  get: function () {\n    return _validate.default;\n  }\n});\nObject.defineProperty(exports, \"stringify\", {\n  enumerable: true,\n  get: function () {\n    return _stringify.default;\n  }\n});\nObject.defineProperty(exports, \"parse\", {\n  enumerable: true,\n  get: function () {\n    return _parse.default;\n  }\n});\n\nvar _v = _interopRequireDefault(require(\"./v1.js\"));\n\nvar _v2 = _interopRequireDefault(require(\"./v3.js\"));\n\nvar _v3 = _interopRequireDefault(require(\"./v4.js\"));\n\nvar _v4 = _interopRequireDefault(require(\"./v5.js\"));\n\nvar _nil = _interopRequireDefault(require(\"./nil.js\"));\n\nvar _version = _interopRequireDefault(require(\"./version.js\"));\n\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\n\nvar _stringify = _interopRequireDefault(require(\"./stringify.js\"));\n\nvar _parse = _interopRequireDefault(require(\"./parse.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _crypto = _interopRequireDefault(require(\"crypto\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction md5(bytes) {\n  if (Array.isArray(bytes)) {\n    bytes = Buffer.from(bytes);\n  } else if (typeof bytes === 'string') {\n    bytes = Buffer.from(bytes, 'utf8');\n  }\n\n  return _crypto.default.createHash('md5').update(bytes).digest();\n}\n\nvar _default = md5;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = '00000000-0000-0000-0000-000000000000';\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction parse(uuid) {\n  if (!(0, _validate.default)(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  let v;\n  const arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nvar _default = parse;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _default = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = rng;\n\nvar _crypto = _interopRequireDefault(require(\"crypto\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst rnds8Pool = new Uint8Array(256); // # of random values to pre-allocate\n\nlet poolPtr = rnds8Pool.length;\n\nfunction rng() {\n  if (poolPtr > rnds8Pool.length - 16) {\n    _crypto.default.randomFillSync(rnds8Pool);\n\n    poolPtr = 0;\n  }\n\n  return rnds8Pool.slice(poolPtr, poolPtr += 16);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _crypto = _interopRequireDefault(require(\"crypto\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction sha1(bytes) {\n  if (Array.isArray(bytes)) {\n    bytes = Buffer.from(bytes);\n  } else if (typeof bytes === 'string') {\n    bytes = Buffer.from(bytes, 'utf8');\n  }\n\n  return _crypto.default.createHash('sha1').update(bytes).digest();\n}\n\nvar _default = sha1;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  const uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!(0, _validate.default)(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nvar _default = stringify;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _rng = _interopRequireDefault(require(\"./rng.js\"));\n\nvar _stringify = _interopRequireDefault(require(\"./stringify.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\nlet _nodeId;\n\nlet _clockseq; // Previous uuid creation time\n\n\nlet _lastMSecs = 0;\nlet _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  let i = buf && offset || 0;\n  const b = buf || new Array(16);\n  options = options || {};\n  let node = options.node || _nodeId;\n  let clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    const seedBytes = options.random || (options.rng || _rng.default)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  let msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  let nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  const dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  const tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  const tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (let n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || (0, _stringify.default)(b);\n}\n\nvar _default = v1;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _v = _interopRequireDefault(require(\"./v35.js\"));\n\nvar _md = _interopRequireDefault(require(\"./md5.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst v3 = (0, _v.default)('v3', 0x30, _md.default);\nvar _default = v3;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\nexports.URL = exports.DNS = void 0;\n\nvar _stringify = _interopRequireDefault(require(\"./stringify.js\"));\n\nvar _parse = _interopRequireDefault(require(\"./parse.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  const bytes = [];\n\n  for (let i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nconst DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexports.DNS = DNS;\nconst URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexports.URL = URL;\n\nfunction _default(name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = (0, _parse.default)(namespace);\n    }\n\n    if (namespace.length !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    let bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (let i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return (0, _stringify.default)(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _rng = _interopRequireDefault(require(\"./rng.js\"));\n\nvar _stringify = _interopRequireDefault(require(\"./stringify.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n\n  const rnds = options.random || (options.rng || _rng.default)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return (0, _stringify.default)(rnds);\n}\n\nvar _default = v4;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _v = _interopRequireDefault(require(\"./v35.js\"));\n\nvar _sha = _interopRequireDefault(require(\"./sha1.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst v5 = (0, _v.default)('v5', 0x50, _sha.default);\nvar _default = v5;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _regex = _interopRequireDefault(require(\"./regex.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && _regex.default.test(uuid);\n}\n\nvar _default = validate;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _validate = _interopRequireDefault(require(\"./validate.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction version(uuid) {\n  if (!(0, _validate.default)(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  return parseInt(uuid.substr(14, 1), 16);\n}\n\nvar _default = version;\nexports.default = _default;","module.exports = require(\"buffer\");","module.exports = require(\"child_process\");","module.exports = require(\"crypto\");","module.exports = require(\"fs\");","module.exports = require(\"http\");","module.exports = require(\"http2\");","module.exports = require(\"https\");","module.exports = require(\"os\");","module.exports = require(\"path\");","module.exports = require(\"process\");","module.exports = require(\"stream\");","module.exports = require(\"url\");","module.exports = require(\"util\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\tvar threw = true;\n\ttry {\n\t\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t\tthrew = false;\n\t} finally {\n\t\tif(threw) delete __webpack_module_cache__[moduleId];\n\t}\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","\nif (typeof __webpack_require__ !== 'undefined') __webpack_require__.ab = __dirname + \"/\";","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst path_1 = require(\"path\");\r\nconst fs_1 = require(\"fs\");\r\nconst util_1 = require(\"util\");\r\nconst client_lambda_1 = require(\"@aws-sdk/client-lambda\");\r\nconst core_1 = require(\"@actions/core\");\r\nconst action_1 = require(\"./action\");\r\nconst getValue = (key) => ((0, core_1.getInput)(key) || process.env[key]);\r\nconst zipFileLocation = (0, core_1.getInput)('zip-file', { required: true });\r\nconst lambdaName = (0, core_1.getInput)('lambda-name') || (0, path_1.basename)(zipFileLocation, '.zip');\r\nconst publish = ((0, core_1.getInput)('publish') || '').toLowerCase() === 'true';\r\nconst awsRegion = getValue('AWS_REGION');\r\nconst awsAccessKeyId = getValue('AWS_ACCESS_KEY_ID');\r\nconst awsSecretAccessKey = getValue('AWS_SECRET_ACCESS_KEY');\r\nconst lambda = new client_lambda_1.LambdaClient({\r\n    region: awsRegion,\r\n    credentials: {\r\n        accessKeyId: awsAccessKeyId,\r\n        secretAccessKey: awsSecretAccessKey\r\n    }\r\n});\r\n(async () => {\r\n    try {\r\n        await new action_1.Action((0, util_1.promisify)(fs_1.readFile), async (args) => {\r\n            await lambda.send(args);\r\n        }, core_1.info).run({\r\n            zipFileLocation,\r\n            lambdaName,\r\n            publish\r\n        });\r\n    }\r\n    catch (error) {\r\n        (0, core_1.setFailed)(error);\r\n    }\r\n})();\r\n"],"mappings":";;;;;;;A;;A;;;;;;A;;A;;;;;;A;;A;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACthTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACzCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACtt3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACjEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACvEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACjEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC9DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC5HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACxGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC5DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC9DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC5DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACjjEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACtFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC9DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACppEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACtEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC5DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC9DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC5DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC5DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC5DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACnFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC1EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACrpjvrSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC/DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACxrFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACvbzIA;AACA;AACA;;A;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC9gBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACptIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACjnMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACjGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC/EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACvxjHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AChGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC1FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACfxnuCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACLA;AACA;AACA;AACA;AACA;;A;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC1EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AClGA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACxlIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC5EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACjzGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACvCA;AACA;AACA;AACA;AACA;;A;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACzzFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACrEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACvBA;AACA;AACA;;A;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC7FA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACnhFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACPA;AACA;AACA;AACA;AACA;;A;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACnzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AClDA;AACA;AACA;;A;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC1FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACvJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACpxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACVA;AACA;AACA;AACA;AACA;;A;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AClvZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACpCA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACrDA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACzpDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACvIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;ACxzlEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC1GA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AC/YA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;;;AChtjTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC9EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACtfpCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;A;;;;;;A;;A;;;;;;A;;A;;;;;;A;;A;;;;;;A;;A;;;;;;ACpBA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;;;ACAA;;A;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC7BA;AACA;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;A","sourceRoot":""}